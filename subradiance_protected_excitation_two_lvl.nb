(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1595545,      30429]
NotebookOptionsPosition[   1585010,      30094]
NotebookOutlinePosition[   1585530,      30113]
CellTagsIndexPosition[   1585487,      30110]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Subradiance-protected excitation spreading for \
collimated photon emission", "Title"]], "Chapter",
 CellChangeTimes->{{3.804795257142758*^9, 3.8047952870781355`*^9}}],

Cell["\<\
P. Huft
See paper by K. Ballantine, J. Ruostekoski\
\>", "Text",
 CellChangeTimes->{{3.8047952896493063`*^9, 3.804795315348673*^9}, {
  3.8069647340862026`*^9, 3.80696474134041*^9}}],

Cell[CellGroupData[{

Cell["personal notes", "Section",
 CellChangeTimes->{{3.805668161042568*^9, 3.8056681662163057`*^9}}],

Cell[CellGroupData[{

Cell["Questions", "Subsection",
 CellChangeTimes->{{3.805668173776622*^9, 3.8056681752571135`*^9}}],

Cell[TextData[{
 "Why can a system which is excited with a single photon be adequately \
described by classical E&M?\n\nThe collective mode which is predominantly \
coupled by the initial excitation (after rotating the polarization to be \
normal to the atom grid plane) decays slowly, i.e. is subradiant, while other \
modes decay superradiantly. Why do these other modes see an a higher rate of \
decay than independent decay? Does it just \[OpenCurlyDoubleQuote]come out of \
the math\[CloseCurlyDoubleQuote] as with the ",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]]],
 " enhancement of ensemble Rabi flopping?\n\nHow does my ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "eff"], TraditionalForm]]],
 " \[OpenCurlyDoubleQuote]know\[CloseCurlyDoubleQuote] that atomic \
transitions with circular light are possible? there is no defined \
quantization axis... maybe there should be? but then there would be zeeman \
splitting, which i don\[CloseCurlyQuote]t want. As it stands, all of the \
symmetric basis states for my diagonalized ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "eff"], TraditionalForm]]],
 " have equal occupation in all m=0 sub-states. "
}], "Text",
 CellChangeTimes->{{3.805668178473505*^9, 3.8056683966718793`*^9}, {
   3.808681468062796*^9, 3.808681624587453*^9}, 3.808681678962863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Todo", "Subsection",
 CellChangeTimes->{{3.809016293718589*^9, 3.809016295903796*^9}}],

Cell["\<\
- add code for saving the solutions to a text file; i do not want to have to \
reproduce these when some take several hours to evaluate.
-  Check: does the ferromagnetic eigenmode not fully overlap a true \
ferromagnetic mode? In other words, does it have polarizations near zero that \
would allow out-of-plane emission? The in-plane mode is never very subradiant \
for this reason. It may be that there is an eigenmode that is very nearly a \
perfect ferromagnetic configuration. 
- What mechanism is behind the superradiant spike around d = \[Lambda]?\
\>", "Text",
 CellChangeTimes->{{3.8089201000159044`*^9, 3.8089201010651293`*^9}, {
  3.8089209320397234`*^9, 3.808921073334525*^9}, {3.8089516515033255`*^9, 
  3.808951651693852*^9}, {3.808951701117739*^9, 3.808951817687162*^9}, {
  3.809016299282811*^9, 3.809016300645117*^9}}],

Cell[TextData[{
 "Restricting this problem to the single-excitation subspace, the Hamiltonian \
matrix elements are: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "j"}], "-", "1", "+", "\[Nu]"}], ",", 
      RowBox[{
       RowBox[{"3", "k"}], "-", "1", "+", "\[Nu]"}]}]], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["H", "\[Nu]\[Mu]"], 
      RowBox[{"(", "jk", ")"}]], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "\[Mu]"], 
       SubscriptBox["\[Delta]", "jk"], 
       SubscriptBox["\[Delta]", "\[Mu]\[Nu]"]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[CapitalOmega]", "\[Mu]\[Nu]"], 
        RowBox[{"(", "jk", ")"}]], "(", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Delta]", "jk"]}], ")"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox[
        SubscriptBox["\[Gamma]", "\[Mu]\[Nu]"], 
        RowBox[{"(", "jk", ")"}]]}]}]}]}], TraditionalForm]]],
 ", \[HBar]=1, where \[Mu],\[Nu] specify polarization in a spherical basis \
and j,k are the atom indices in the 2D grid. The dynamics in this subspace \
are coherent, but H is non-Hermitian, so there is dissipation as the \
excitation diffuses into the collective ground state. "
}], "Text",
 CellChangeTimes->{{3.804795955202659*^9, 3.804796203497088*^9}, {
  3.8051540631375103`*^9, 3.8051541172328863`*^9}, {3.8060047095110035`*^9, 
  3.8060047102689743`*^9}, {3.8066050132591124`*^9, 3.8066050897983627`*^9}, {
  3.806708395044424*^9, 3.806708426075447*^9}, {3.8086762139235163`*^9, 
  3.808676221044484*^9}, {3.808681458085475*^9, 3.80868146251762*^9}}],

Cell["\<\
- \[CapitalDelta],\[Gamma] values used are arbitrary with the given choice of \
plot units. \
\>", "Text",
 CellChangeTimes->{{3.804797675818221*^9, 3.804797723814588*^9}, {
   3.8060077992621117`*^9, 3.8060078474172754`*^9}, {3.806527383456627*^9, 
   3.8065274289762917`*^9}, {3.8069659357565007`*^9, 3.8069660075004425`*^9}, 
   3.8087507235797634`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["general setup - run first", "Section",
 CellChangeTimes->{
  3.804795272338377*^9, {3.8047953612651463`*^9, 3.8047953705323234`*^9}, {
   3.8094683321662207`*^9, 3.809468337342882*^9}}],

Cell["\<\
System description: atomnum two-level atoms arranged in a 2D square grid with \
equal periodicity in x and y. The lower level is has only one angular \
momentum state (J=0) while the upper state has three Zeeman sublevels (J=1). \
\>", "Text",
 CellChangeTimes->{{3.8065110621169147`*^9, 3.806511163740156*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"PHYSICAL", " ", "CONSTANTS"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[HBar]", " ", "=", " ", 
     RowBox[{"6.62607015*^-34", "/", 
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", " ", "=", 
     RowBox[{"4", "\[Pi]", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", " ", "=", " ", "299792458"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]0", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["c", "2"], " ", "\[Mu]0"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ee", " ", "=", " ", "1.602*^-19"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"electron", " ", "charge"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a0", " ", "=", " ", "5.27*^-11"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Bohr", " ", "radius"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"PARAMETERS", " ", "and", " ", "other", " ", "DEFINITIONS"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", "=", " ", 
     RowBox[{"7.8", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"matelem", " ", "=", " ", 
     RowBox[{"ee", " ", "a0"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "just", " ", "assume", " ", "a", " ", "general", " ", "matrix", " ", 
     "element", " ", "is", " ", "of", " ", "this", " ", "order", " ", "for", 
     " ", 
     RowBox[{"now", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]", " ", "=", " ", 
     RowBox[{
      SuperscriptBox["matelem", "2"], 
      RowBox[{
       SuperscriptBox["k", "3"], "/", 
       RowBox[{"(", 
        RowBox[{"6", " ", "\[Pi]", " ", "\[Epsilon]0"}], ")"}]}]}]}], ";"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"single", " ", "two"}], "-", 
      RowBox[{"level", " ", "atom", " ", "linewidth"}]}], ",", " ", 
     RowBox[{"\[HBar]", "=", "1"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pol", " ", "=", " ", 
     RowBox[{"Range", "[", "3", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"pol", "[", 
       RowBox[{"[", "\[Mu]", "]"}], "]"}], "/.", 
      RowBox[{"u", "->", "1"}]}], ",", "2", ",", 
     RowBox[{
      RowBox[{"3", " ", "for", " ", "polarization", " ", "\[Sigma]"}], "=", 
      RowBox[{"-", "1"}]}], ",", "0", ",", 
     RowBox[{"+", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atomnum", " ", "=", " ", "atomnum"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Hamiltonian", " ", "shape", " ", "is", " ", "atomnum", " ", "x", " ", 
      "atomnum"}], ",", " ", 
     RowBox[{
      RowBox[{"with", " ", "state", " ", "vector"}], " ", "=", " ", 
      "atomnum"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StepsTable", "[", 
      RowBox[{"stepList_", ",", "list_"}], "]"}], ":=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"stepList", ",", "list"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"unit", "[", "v_", "]"}], ":=", 
     FractionBox["v", 
      SqrtBox[
       RowBox[{"v", ".", "v"}]]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GdotP", "[", 
      RowBox[{"r_", ",", "p_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", 
         SqrtBox[
          RowBox[{"r", ".", "r"}]]}]], 
       RowBox[{"4", " ", "\[Pi]", " ", 
        SqrtBox[
         RowBox[{"r", ".", "r"}]]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}], ",", 
          RowBox[{"unit", "[", "r", "]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["k", "2"], 
             RowBox[{"r", ".", "r"}]}]], "-", 
           FractionBox["\[ImaginaryI]", 
            RowBox[{"k", " ", 
             SqrtBox[
              RowBox[{"r", ".", "r"}]]}]]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", 
            RowBox[{"unit", "[", "r", "]"}], " ", 
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}]}], "-", 
           "p"}], ")"}]}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "r", " ", "is", " ", "the", " ", "positional", " ", "unit", " ", 
      "vector"}], ",", " ", 
     RowBox[{
     "p", " ", "is", " ", "an", " ", "atomic", " ", "dipole", " ", 
      "moment"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["e", "\[Mu]_"], " ", ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "[", 
      RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"generic", " ", "basis", " ", "vector", " ", "set"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["ecart", "\[Mu]_"], ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"-", "\[ImaginaryI]"}], 
          SqrtBox["2"]], 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", "0"}], "}"}]}], "}"}], "[", 
      RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"linewidthplot", "[", 
     RowBox[{
     "sln_", ",", "polmodes_", ",", "gridshape_", ",", " ", "numx_", ",", 
      "numy_", ",", "plttitle_", ",", "saveplot_", ",", "savesoln_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plots", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"lastmode", "=", "0"}], ",", "modelist", ",", "plt", ",", 
        "fname", ",", "title"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"polmode", "=", "1"}], ",", 
         RowBox[{"polmode", "<", 
          RowBox[{
           RowBox[{"Length", "[", "polmodes", "]"}], "+", "1"}]}], ",", 
         RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"modelist", "=", 
           RowBox[{"polmodes", "[", 
            RowBox[{"[", 
             RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "<", 
             RowBox[{
              RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"plots", ",", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"sln", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "lastmode"}], "]"}], "]"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "5"}], ",", "3"}], "}"}]}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"modelist", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", " ", 
                  RowBox[{"{", 
                   RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "}"}]}]}], "]"}]}],
               "]"}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastmode", "=", 
           RowBox[{"i", "-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"gridshape", "\[Equal]", "\"\<square\>\""}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plots", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Log10", "[", 
              FractionBox["3", 
               RowBox[{"4", "\[Pi]", " ", 
                SuperscriptBox["d", "2"]}]], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"d", ",", "0.02", ",", "1.21"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Red", ",", "Dashed"}], "]"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"{", "\"\<N\[Rule]\[Infinity], In-Plane\>\"", "}"}]}]}],
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fname", " ", "=", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<plot_linewidth_v_period_````x``.png\>\"", ",", "gridshape", 
           ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"saveplot", ",", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", "plt"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fname", " ", "=", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<soln_linewidth_v_period_````x``.txt\>\"", ",", "gridshape", 
           ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"savesoln", ",", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", 
           RowBox[{"ToString", "[", "sln", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"title", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"plttitle", "\[Equal]", "\"\<\>\""}], ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Collective linewidths for ``x`` `` grid\>\"", ",", "numx", 
             ",", "numy", ",", "gridshape"}], "]"}], "]"}], ",", "plttitle"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"plt", " ", "=", " ", 
        RowBox[{"Show", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{"title", ",", 
             RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"Frame", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"True", ",", "True", ",", "False", ",", "False"}], 
            "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Lattice period d [\[Lambda]]\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(Log\), \
\(10\)]\)(\!\(\*SubscriptBox[\(v\), \(n\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
          RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}]}], " ", 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
    RowBox[{"(*", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"z", " ", "in", " ", "spherical", " ", "basis"}]}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.804795372139743*^9, 3.8047954565762587`*^9}, {
   3.804795557477767*^9, 3.804795646192586*^9}, {3.805670829592176*^9, 
   3.8056708978355913`*^9}, {3.8059959856055202`*^9, 3.805995986254162*^9}, {
   3.8059985871648145`*^9, 3.8059986288484855`*^9}, {3.8059997358360014`*^9, 
   3.805999788758046*^9}, {3.8059999118297677`*^9, 3.8059999521643977`*^9}, {
   3.805999992044653*^9, 3.8060000636137767`*^9}, {3.8060001456463013`*^9, 
   3.8060001964015045`*^9}, {3.8060002660690813`*^9, 3.8060002884442167`*^9}, 
   3.806000626716222*^9, 3.806001860902274*^9, 3.8060020439721518`*^9, {
   3.8060026207721825`*^9, 3.80600266366413*^9}, {3.8060026966204414`*^9, 
   3.8060027062593665`*^9}, {3.8060060864367876`*^9, 3.806006284666767*^9}, {
   3.80600633970216*^9, 3.806006436560063*^9}, {3.8060064977258167`*^9, 
   3.8060065810076523`*^9}, {3.8065097730595045`*^9, 3.806509811016704*^9}, {
   3.8065108020023785`*^9, 3.8065108352304597`*^9}, {3.806511491827402*^9, 
   3.806511491880254*^9}, {3.8065116937092276`*^9, 3.8065117567284775`*^9}, 
   3.806512394112631*^9, {3.806512596967489*^9, 3.806512597549224*^9}, {
   3.806512635854741*^9, 3.806512639698132*^9}, 3.8065184714886026`*^9, {
   3.806518807617782*^9, 3.806518818536937*^9}, {3.8065188588224583`*^9, 
   3.8065188745589724`*^9}, {3.806522742274407*^9, 3.8065227992408857`*^9}, {
   3.80652624964219*^9, 3.8065263011476345`*^9}, {3.806526338176937*^9, 
   3.806526338878935*^9}, {3.806527870071875*^9, 3.806527886706303*^9}, {
   3.8065280491641827`*^9, 3.8065280499206524`*^9}, {3.8065288434330974`*^9, 
   3.8065288441316767`*^9}, {3.80652935916156*^9, 3.806529360595722*^9}, 
   3.8065909213975697`*^9, {3.8065945956794834`*^9, 3.8065946197902155`*^9}, {
   3.806595111718749*^9, 3.80659511816251*^9}, {3.8066044544589233`*^9, 
   3.8066044646028137`*^9}, {3.80696565986509*^9, 3.8069656634134607`*^9}, {
   3.8069656979471774`*^9, 3.8069657129861*^9}, {3.806965905008503*^9, 
   3.806965917930096*^9}, {3.806969203048703*^9, 3.806969247088546*^9}, {
   3.806969399593093*^9, 3.806969426621357*^9}, {3.8069694691605425`*^9, 
   3.8069695583291035`*^9}, {3.8069696687010384`*^9, 
   3.8069697479909005`*^9}, {3.8069708799936037`*^9, 3.806970937308947*^9}, {
   3.8071341724945297`*^9, 3.8071342023307457`*^9}, {3.807134239967105*^9, 
   3.807134245276909*^9}, {3.8071343282560205`*^9, 3.8071343467146626`*^9}, {
   3.8071344033173037`*^9, 3.8071345328828435`*^9}, {3.8071353004034786`*^9, 
   3.8071353048336315`*^9}, {3.807135353381813*^9, 3.807135371458476*^9}, {
   3.807136104073449*^9, 3.807136128133113*^9}, {3.807136286895579*^9, 
   3.8071363155599303`*^9}, {3.807182165268559*^9, 3.8071821736182346`*^9}, {
   3.807184444104906*^9, 3.8071845076699314`*^9}, {3.8071864003406534`*^9, 
   3.8071864384617157`*^9}, {3.807186480235013*^9, 3.807186493333987*^9}, {
   3.8071866070229807`*^9, 3.807186607130693*^9}, {3.8071868135856285`*^9, 
   3.8071868476256046`*^9}, 3.807203261610388*^9, {3.8072038692517233`*^9, 
   3.8072038740319357`*^9}, {3.807213911849493*^9, 3.8072139140357633`*^9}, {
   3.8072140018354006`*^9, 3.8072140100513997`*^9}, {3.8072173311304865`*^9, 
   3.807217345535433*^9}, {3.807221360734707*^9, 3.8072213636309876`*^9}, {
   3.8079821163915453`*^9, 3.8079821587163076`*^9}, {3.807986244761863*^9, 
   3.807986305420913*^9}, {3.807987427293959*^9, 3.807987461143407*^9}, {
   3.808064660727276*^9, 3.8080646710536537`*^9}, {3.808064978922209*^9, 
   3.8080649889520206`*^9}, {3.808065133138933*^9, 3.808065137247834*^9}, {
   3.8080656978757963`*^9, 3.8080657129905295`*^9}, {3.808068297769658*^9, 
   3.8080682988068843`*^9}, {3.8080683318016787`*^9, 3.808068333322548*^9}, {
   3.8080687285840673`*^9, 3.808068729604082*^9}, {3.808068793234928*^9, 
   3.8080687946362305`*^9}, {3.808071621206293*^9, 3.8080716723275375`*^9}, {
   3.8080729540168924`*^9, 3.8080729609414005`*^9}, 3.8081740669737325`*^9, {
   3.8081741515898724`*^9, 3.808174154407746*^9}, 3.8081757347113743`*^9, {
   3.80850296857384*^9, 3.8085030083264093`*^9}, {3.808503067468046*^9, 
   3.8085031670005584`*^9}, {3.8085034258887215`*^9, 3.808503429488124*^9}, {
   3.808503479673551*^9, 3.8085034823204985`*^9}, {3.8085035467900696`*^9, 
   3.808503594831055*^9}, {3.808503764886863*^9, 3.8085038227088747`*^9}, {
   3.8085062266270256`*^9, 3.8085062282964144`*^9}, 3.8085063375988884`*^9, {
   3.8085064788703156`*^9, 3.808506480017167*^9}, {3.80850652972351*^9, 
   3.8085065309142447`*^9}, {3.8085067139700546`*^9, 3.808506715888835*^9}, {
   3.808563738055747*^9, 3.808563804867737*^9}, {3.808573814421254*^9, 
   3.808573815415248*^9}, 3.808651641220073*^9, {3.8086518769444513`*^9, 
   3.808651893549247*^9}, 3.8086558780542803`*^9, {3.808656024934702*^9, 
   3.8086560272983837`*^9}, {3.808662363748914*^9, 3.808662408664112*^9}, {
   3.808664687414502*^9, 3.808664689986473*^9}, {3.8086682528166385`*^9, 
   3.8086682545748963`*^9}, {3.808676180008201*^9, 3.808676184370633*^9}, {
   3.808676232267743*^9, 3.8086762327931757`*^9}, {3.8086762661744785`*^9, 
   3.8086763102835283`*^9}, {3.8086806992151303`*^9, 3.808680700237514*^9}, {
   3.8087546100096054`*^9, 3.8087546122137136`*^9}, {3.8087547536620526`*^9, 
   3.8087547547062635`*^9}, {3.8087627100920486`*^9, 3.808762730682022*^9}, {
   3.808763339511509*^9, 3.8087633428755393`*^9}, 3.8087635580466175`*^9, {
   3.808864426190888*^9, 3.8088644468569455`*^9}, {3.8088648394815702`*^9, 
   3.8088648396005*^9}, {3.8088651910855045`*^9, 3.8088651922784843`*^9}, {
   3.809015895544302*^9, 3.80901589577279*^9}, {3.8090170885137053`*^9, 
   3.80901708984947*^9}, {3.809018596529349*^9, 3.8090185976979575`*^9}, {
   3.8090273113330765`*^9, 3.8090273114447775`*^9}, {3.8090284653517256`*^9, 
   3.8090286292701964`*^9}, {3.809028853843644*^9, 3.809028859165645*^9}, {
   3.809469660849782*^9, 3.809469660868692*^9}, {3.80953004055865*^9, 
   3.809530047376833*^9}, {3.8095411065943613`*^9, 3.80954110705513*^9}, {
   3.8096006063652363`*^9, 3.809600607036578*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["linewidths vs lattice spacing", "Section",
 CellChangeTimes->{{3.8060017187482805`*^9, 3.806001720111932*^9}, {
  3.807219143212973*^9, 3.8072191566618133`*^9}, {3.8087775624633417`*^9, 
  3.8087775635834894`*^9}, {3.8090163404212494`*^9, 3.809016340797243*^9}}],

Cell["\<\
Set atomnums, run one of the grid geometry cells below, then run the \
\[OpenCurlyDoubleQuote]run\[CloseCurlyDoubleQuote] cell. \
\>", "Text",
 CellChangeTimes->{{3.8090169793060865`*^9, 3.80901704709494*^9}, {
  3.809019674019689*^9, 3.809019689982016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"atomnumx", " ", "=", " ", "12"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "only", " ", "x", " ", "value", " ", "will", " ", "be", " ", "used", " ", 
    "to", " ", "build", " ", "square", " ", "grid"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomnumy", " ", "=", " ", 
    RowBox[{"Floor", "[", 
     RowBox[{
      FractionBox["2", 
       SqrtBox["3"]], "atomnumx"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"used", " ", "for", " ", "hex", " ", "lattices"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"atomnumx", ",", "atomnumy"}], "}"}]}], "Input",
 CellChangeTimes->{{3.809018686810726*^9, 3.8090186888103704`*^9}, {
   3.809018759945447*^9, 3.809018821077754*^9}, {3.8090188783247404`*^9, 
   3.809018914808607*^9}, {3.809018946610208*^9, 3.8090189836036034`*^9}, {
   3.8090196598430157`*^9, 3.809019665008836*^9}, {3.8090197081858063`*^9, 
   3.809019710750782*^9}, {3.8090230477493725`*^9, 3.80902304851731*^9}, 
   3.8090231091711864`*^9, {3.809023314803544*^9, 3.809023314881336*^9}, {
   3.809023506975886*^9, 3.809023513547315*^9}, {3.809023575210723*^9, 
   3.8090235839184003`*^9}, {3.8090236582547035`*^9, 
   3.8090236862319236`*^9}, {3.809023727606332*^9, 3.8090237457608447`*^9}, {
   3.80902381673116*^9, 3.8090238167839675`*^9}, {3.8090244286419945`*^9, 
   3.8090244446063175`*^9}, {3.8090251819225273`*^9, 3.809025182823117*^9}, {
   3.80902990374408*^9, 3.809029918557509*^9}, 3.809032843797409*^9, {
   3.809542114064296*^9, 3.809542217285282*^9}, {3.8095422602493224`*^9, 
   3.809542269455696*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8090237477674437`*^9, 3.809023817820197*^9, 3.80902410662554*^9, {
   3.809024429508671*^9, 3.809024445203719*^9}, 3.809025183052512*^9, 
   3.8090273445502877`*^9, {3.809029905040451*^9, 3.8090299196206665`*^9}, 
   3.8090312697983327`*^9, 3.8090328453672094`*^9, 3.8095300962765064`*^9, 
   3.809540898684434*^9, 3.809540993503817*^9, 3.8095411356935263`*^9, {
   3.809542194457293*^9, 3.8095422179956355`*^9}, {3.8095422631046815`*^9, 
   3.8095422702306185`*^9}, 3.809605200302825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["square lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
  3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
  3.809023200615773*^9}, {3.8094683197593937`*^9, 3.8094683204016514`*^9}, {
  3.8095300977777147`*^9, 3.809530098439992*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnumy", "=", "atomnumx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", "*", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idx", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
     "Simplify"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D", 
    " ", "coordinate", " ", "indices"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
     RowBox[{"n", "\[Rule]", 
      SqrtBox["atomnum"]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
  3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
  3.8090191237504044`*^9}, {3.8090194326770754`*^9, 3.8090194334092865`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["hexagonal lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090168466120195`*^9, 3.8090168526145716`*^9}, {
  3.8090168863400745`*^9, 3.8090168935046854`*^9}, {3.8090238204661245`*^9, 
  3.8090238210405893`*^9}, {3.809468324648697*^9, 3.8094683254928503`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumy", " ", "=", " ", "atomnumx"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridname", " ", "=", " ", "\"\<hex\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", " ", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", 
       RowBox[{"atomnumx", " ", "atomnumy"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afrowsmode", " ", "=", " ", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"1", "&"}], ",", "atomnumx"}], "]"}]}], "&"}], ",", 
       "atomnumy"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afcolsmode", " ", "=", " ", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "#"], 
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{"1", "&"}], ",", "atomnumy"}], "]"}]}], "&"}], ",", 
        "atomnumx"}], " ", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
        ")"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809017140657352*^9, 3.809017154350025*^9}, {
   3.8090188539498825`*^9, 3.809018860509693*^9}, {3.809019129436096*^9, 
   3.8090191345158234`*^9}, {3.8090230603207874`*^9, 3.8090230777661314`*^9}, 
   3.8090231362179184`*^9, {3.8090236883512573`*^9, 3.8090236901055713`*^9}, {
   3.809024859356752*^9, 3.8090249368256736`*^9}, 3.8090251639675293`*^9, {
   3.8090274533055954`*^9, 3.809027453373412*^9}, {3.809090300086687*^9, 
   3.8090903159707894`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["run", "Subsubsection",
 CellChangeTimes->{{3.8090169056528196`*^9, 3.8090169355856133`*^9}}],

Cell["\<\
find the lattice period dependent transition linewidth for modes defined \
above.\
\>", "Text",
 CellChangeTimes->{{3.809016939710581*^9, 3.809016974719592*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "}"}], "&"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"polarizationmodes", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "polarizationmodes", "]"}]}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastmode", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runtime", " ", "=", " ", 
   RowBox[{
    RowBox[{"Timing", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"polmode", "=", "1"}], ",", 
        RowBox[{"polmode", "<", 
         RowBox[{
          RowBox[{"Length", "[", "polarizationmodes", "]"}], "+", "1"}]}], 
        ",", 
        RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"e", "[", "\[Nu]_", "]"}], "=", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"modelist", " ", "=", " ", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"d", "=", "0.01"}], ",", 
           RowBox[{"d", "<", "1.26"}], ",", 
           RowBox[{"d", "=", 
            RowBox[{"d", "+", "0.05"}]}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "loop", " ", "over", " ", "fractional", " ", "lattice", " ", 
             "period"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"build", " ", "the", " ", "Hamiltonian"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Hfull", " ", "=", " ", 
             RowBox[{"Array", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["H", "##"], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{"atomnum", "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "<", 
                  RowBox[{"atomnum", "+", "1"}]}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"u", "=", 
                   RowBox[{"d", " ", "\[Lambda]", " ", 
                    SubscriptBox["r", 
                    RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[CapitalOmega]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[Gamma]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Hfull", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
                   RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]ij", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}], ")"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "find", " ", "the", " ", "eigenmode", " ", "overlap", " ", 
              "with", " ", "modes", " ", "of", " ", "interest"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
             RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"mode", "=", "1"}], ",", 
              RowBox[{"mode", "<", 
               RowBox[{
                RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
              RowBox[{"mode", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"overlap", " ", "=", " ", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"mode", ",", "1"}], "]"}], "]"}], ".", 
                    RowBox[{"evecs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], 
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"maxIdx", "=", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"v", "=", " ", 
                RowBox[{"Im", "[", 
                 RowBox[{"evals", "[", 
                  RowBox[{"[", "maxIdx", "]"}], "]"}], "]"}]}], ";", 
               RowBox[{"(*", 
                RowBox[{"mode", " ", "linewidth"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"soln", "[", 
                  RowBox[{"[", 
                   RowBox[{"mode", "+", "lastmode"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"Log10", "[", 
                    RowBox[{"v", "/", "\[Gamma]"}], "]"}]}], "}"}]}], "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          RowBox[{"(*", 
           RowBox[{"end", " ", "mode", " ", "loop"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", 
          RowBox[{"end", " ", "d", " ", "loop"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"lastmode", "=", 
          RowBox[{"mode", "-", "1"}]}], ";"}]}], 
       RowBox[{"(*", 
        RowBox[{
        "since", " ", "mode", " ", "will", " ", "increment", " ", "just", " ",
          "before", " ", "the", " ", "loop", " ", "exits"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";"}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "pol", " ", "loop"}], "*)"}], "\[IndentingNewLine]",
      "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<Simulation took `` minutes\>\"", ",", 
   RowBox[{
    RowBox[{"runtime", "/", "60"}], "//", "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8088321953972454`*^9, 3.80883252033072*^9}, {
   3.808832551461509*^9, 3.8088327182497296`*^9}, {3.8088328170416355`*^9, 
   3.8088328489214215`*^9}, 3.808832881153268*^9, {3.808832912325945*^9, 
   3.808832937556507*^9}, 3.8088330655145044`*^9, {3.8088332017258544`*^9, 
   3.8088332024449263`*^9}, 3.808833266958461*^9, 3.808833298854204*^9, {
   3.8088333464898767`*^9, 3.8088335531086016`*^9}, {3.8088415808641357`*^9, 
   3.808841585619443*^9}, {3.8088644621911683`*^9, 3.8088645395140877`*^9}, {
   3.808864605851305*^9, 3.808864606220704*^9}, {3.809100435742504*^9, 
   3.8091004362461615`*^9}, {3.809536097821503*^9, 3.8095361061602135`*^9}, {
   3.8095362995998125`*^9, 3.8095363025239925`*^9}, {3.8095369682059484`*^9, 
   3.8095369750588193`*^9}, 3.8095411199735737`*^9, {3.809546448642682*^9, 
   3.8095464701696715`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Simulation took \
\\!\\(\\*RowBox[{\\\"0.17291666666666666`\\\"}]\\) minutes\"\>",
  StringForm["Simulation took `` minutes", 0.17291666666666666`],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8090274743134413`*^9, 3.809028325932001*^9, 3.8090301705121117`*^9, 
   3.8090316085760727`*^9, 3.809032865222105*^9, 3.8090903551240854`*^9, 
   3.8095301185594454`*^9, 3.8095369804563236`*^9, 3.8095409208641243`*^9, 
   3.8095410100186434`*^9, {3.809541125603516*^9, 3.809541153103958*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["soln analysis", "Subsubsection",
 CellChangeTimes->{{3.8090194737115297`*^9, 3.8090194849383807`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"saveplt", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savesln", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"linewidthplot", "[", 
  RowBox[{
  "soln", ",", "polarizationmodes", ",", "gridname", ",", "atomnumx", ",", 
   "atomnumy", ",", "\"\<\>\"", ",", "saveplt", ",", "savesln"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809028634816141*^9, 3.8090286356109934`*^9}, {
  3.809028868797657*^9, 3.8090288734162717`*^9}, {3.809029951123826*^9, 
  3.809029989347587*^9}, {3.8095301158736453`*^9, 3.809530123227334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt95C9hxclrvtrvlGt9Hbhjnb2W4LWW
gyVf7LVi+g991dhjH+/0vHKC40f7GrD6I/Z8nE9KGcqf2z+qAgmcshfMlnBk
Z7tmv6TAluv64gv2l02rLV6kdu+/vhgkcNmepXzagbbUK/u5IAL2qpxT31ms
frTfFixwy15lr+Q8PdtX+8HaC+7aH54cfK22/sP+oB0gBz2wDwt4L1zf/Hn/
m0CQwEN7A285+TeK3/a3vQYJPLb/X9RXmCf0Y78CyPlyT+3XVQdPYBf6uX8X
2D/P7E8eWnBqj/2P/SFg817YL2eZFRV98cv+d2DzXtrz/3X4+fnt2/0dYPNe
2y8O5vzJavhgvxLYvLf27yvW+P/YsX//HrB57+wvTOrafiTokL02OHw+2Asp
Fr9rFLpk/0MDJPDBfsKlEmvh0sv2R7+CBD7aR01LeJG9+az9pEMggU/2xTyT
lVzu77KPB2mP+Ww/nynKxuj53P0A3a3RDw==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9pdiiJXs4uA/slGt9Hbhjnf2Nqifq
E9P5D2jF9B/6qrHHfkXwwWVNvQIHasDqj9jf6NX2+B/De+BRFUjglL2k1iGf
3CjuA0sKbLmuL75g77C10DP1NeuB64tBApftm+JTJ79o5jzABRGwD+Nb/lU2
juWALVjglr2T3Bf1+N5/+8HaC+7a/6ryv73f7uv+oB0gBz2wv/TdbfPz+Jf7
3wSCBB7aT6s3UpGXvrK/7TVI4LH9Eb6VBU3rNtkrgJwv99Q+ikv7vcvzq/a7
wP55Zi+v/31z7o979iFg817Yv99+ZL3Qv/v278DmvbTn3fVq9uOUW/YdYPNe
2y/LeBNcGXrRXgls3lv75T+nWh/4vc9+D9i8d/YHr+j+M1g8eb82OHw+2Ker
CbwtCT20/4cGSOCDPaP/uXuKthf2H/0KEvhof9jV9LTB+mv7Jx0CCXyy3yNg
UhI15c7+eJD2mM/2ln+UnT0+PtgPADeW01w=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv97fVnD3ef+2S/U671deCOdfbfPzIf
jqv6bK8V03/oq8Yee6MfYuafP320rwGrP2L/RO/lmqD1b+0fVYEETtk3LDwa
s8L9uf2SAluu64sv2BsXLzn5dcZD++uLQQKX7f3aHFn1Wm7ac0EE7NWb17+5
b3jR3hYscMve+8vve3ZXD9uDtRfctT85faEb05XV9kE7QA56YJ8kd2+6bPSi
/W8CQQIP7efWLQxuZNu3v+01SOCx/VvZ7GMG2Sf2K4CcL/fUPvSv/tGFuRf2
7wL755k978mb+XXSV/aHgM17YV8RF/4i4fW1/e/A5r20DxZrn/lg5fX9HWDz
Xtsnzrl9eNfOy/uVwOa9tf+V//gbi9yR/XvA5r2z944Icp+cNcNeGxw+H+wv
fVrw4330AfsfGiCBD/aukgpqQolH7I9+BQl8tC/d/2bXG+H99pMOgQQ+2b++
8uFQtPNq+3iQ9pjP9v4zuniXfirfDwAardmH
          "]]}}}, {}, {}, {{}, {}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
iZ2OBFjc1bAL1+KhfwHlfOfU
          "]]}}}, {}, {}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 5x5 square grid\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Ferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Antiferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N\[Rule]\[Infinity], In-Plane\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095409473462753`*^9, 3.809540965067875*^9}, 
   3.809541012193862*^9, 3.809541166767414*^9}]
}, Open  ]],

Cell["compare square and hex grids", "Text",
 CellChangeTimes->{{3.8090276994174333`*^9, 3.8090277274066734`*^9}, {
  3.809027768558586*^9, 3.809027778439172*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x6.txt\>\"", "]"}], 
      "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sqsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_square5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8090279428347816`*^9, 3.809028088801463*^9}, {
   3.8090281461860676`*^9, 3.8090281468632965`*^9}, 3.8090282090850344`*^9, {
   3.809028245391554*^9, 3.8090282515640545`*^9}, {3.80903265241492*^9, 
   3.8090327021270423`*^9}, {3.8090327992749586`*^9, 
   3.8090328163762355`*^9}, {3.8090904155601416`*^9, 3.809090415623972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sln", " ", "=", " ", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sqsoln", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "hexsoln"}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. Ferro.\>\"", ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. A.F.\>\"", ",", "Purple"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. In-plane\>\"", ",", "Orange"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. Ferro.\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. A.F. rows\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Purple", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", " ", "\"\<In-plane\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Orange", ",", "Dashed"}], "]"}]}], "}"}]}], "}"}]}], 
     "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"linewidthplot", "[", 
   RowBox[{
   "sln", ",", "modes", ",", "\"\<\>\"", ",", "atomnumx", ",", "atomnumy", 
    ",", "\"\<Collective linewidths for 30-atom grids\>\"", ",", "False", ",",
     "False"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8090291825424013`*^9, 3.809029251828573*^9}, {
   3.809029289352435*^9, 3.8090295265953355`*^9}, {3.809029679199459*^9, 
   3.809029681999523*^9}, {3.809029712415219*^9, 3.8090297411436815`*^9}, {
   3.8090297905716853`*^9, 3.809029816927494*^9}, {3.809032708095091*^9, 
   3.8090327131437397`*^9}, {3.8090328845574236`*^9, 3.8090328847628765`*^9}, 
   3.809032921837782*^9, 3.809090409557664*^9, {3.809090451062523*^9, 
   3.8090904569985943`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9/eNDjRPWfLXfIdf6OnDHOvvbP+uy
9pR8sdeM6T/0VWOPvVT3ss2THT/aQ9QfsS8T2xvMWP7c/mEVSOCUfeLBvw3s
bNfslxTYcl1ffMHeXvLx4Tep3fuvLwYJXLb/EyIq1ZF6ZT8XRMB+bcu7SRar
H+23BQvcsq+pvr5A3/bV/kKwwF37Naf2aTfVf9gfBHbQA/uDlspe1c2f978J
BAk8tD8SP9n0leK3/SDXyrU+tr/v3zs9T+jHfnmwwFP7vMWMe1iFfu6H+OeZ
vSzzpuu77X9AzXthL/VLfUfExS9Q817a+zUk/vz89i3UvNf2kyZ3RrMaPoCa
99Z+WW1x/dcd+6HmvbPvf7hx/tGgQ9Dw+WB/+IbThGahS/bfNEACH+ynsQrX
i5Retj/8FSTw0X7mx22XsjeftQepjun/ZH+LRWKa/f1d9mDtMZ/tY8zu65o+
n7sfAAxK13g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9lSubtu7j4D6wQ671deCOdfb8ro12
E9P5D2jG9B/6qrHHvqzz1drGXoEDEPVH7Mu92F//j+E98LAKJHDKvubThoDs
KO4DSwpsua4vvmA/jWXFytTXrAeuLwYJXLbP9riT/LKZ8wAXRMB+XcpxN4U4
lgO2YIFb9mc0pkVH9f7bXwgWuGtfMkNf/4Dd1/1BYAc9sP/qfST6efzL/W8C
QQIP7Tn/bZ8kK31lP8i1cq2P7ZULX8U1rdtkLw8WeGr/InvaabfnV+0h/nlm
//qvm3Xej3v2EPNe2HP+LhMS/HffHmLeS3u+b2ptT1Ju2UPMe23/oE1ifWXo
Rah5b+3/SN5bc/D3Pqh57+zj9gVIGyyevB8SPh/sN82Lqi0NPbT/mwZI4IP9
3XP7PinYXth/+CtI4KP94c9BGw3XX9sPUh3T/8l+f4J5TvSUO/vB2mM+28fN
+ZHl/vHBfgBI4tYW
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9BteXTpuTX+13yLW+Dtyxzn57Uv1N
259f7DVj+g991dhjn7rUU/NF2Sd7iPoj9pNeWe/XcHxn/7AKJHDK3pTLM+1r
33P7JQW2XNcXX7A/+m9T9acND+2vLwYJXLYvOb/L7XTjTXsuiID9ndn3DS4q
XLS3BQvcstfv7jx7fOth+0KwwF37hhM5t64lrLYPAjvogf3vgM2Bz2cv2v8m
ECTw0P743p+8wrz79oNcK9f62L5BY4Yha/aJ/fJggaf2/OoGc6/lXtgP8c8z
+2+b3m4xVbqyH2LeC3sGxuyr6zivQ817ab/CsnIi54/rUPNe25cdUZT2EL8C
Ne+tPQ9rDrvyt8NQ897Zsz//wbsjeDo0fD7YH3Z99/JV30H7bxoggQ/2yxJ/
dMwQOmp/+CtI4KP9PbvVZ6Zc228PUh3T/8n+xWZfa7fDq+3B2mM+2zOs2lHY
/bNxPwCIztWR
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9/MKHDh7TvtrvkGt9Hbhjnf3349VX
T7V8sdeM6T/0VWOP/atNM27U3PloD1F/xD5R3JW/hueV/cMqkMAp++MLhJ3Y
Y+/aLymw5bq++II9t9aquqWf99pfXwwSuGyvsf1t9ZX44/u5IAL2Lr/evj5g
eWe/LVjglr3Nt80RXSlP9xeCBe7aCxlNSJ/+/vX+ILCDHtifZFIreP3uw/43
gSCBh/ZH4iebvlr4eT/ItXKtj+3nOTr/ZxH/tl8eLPDUPqzp6MMz+j/2Q/zz
zD67acVvhiU/oea9sGc+v7fdm+8X1LyX9jYirL9c5H5CzXttbzn90apN+TDz
3tqrH2pbHn7qI9S8d/YT/GJ/6vg/3w8Jnw/2N88naU5af2X/Nw2QwAd7vRnr
xPquTbc//BUk8NGeRb5ZdHnURXuQ6pj+T/a5sjJvfHlu2YO1x3y2b63sN/a9
cdseAMwC10g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt9+KZkZYH1n/fvkGt9Hbhjnb2r0N6e
pJ3f9mvG9B/6qrHHXmLqFc4Mpb/7IeqP2AsytgcsTfu6/2EVSOCUfd2xVmZF
SbYDSwpsua4vvmA/54jChqIX3/dfXwwSuGyf+/z3yo+XPuznggjYr73DfYbr
6LP9tmCBW/YGXzouFnPf2F8IFrhrf5+VoVZQedP+ILCDHtjrJN1I9Pl12P5N
IEjgob1rSsRR6ZmX7EGulWt9bM/tumt+8ISr9vJggaf2njqa5fMfX7KH+OeZ
/eZzP/btCDluDzHvhX3yybSIa+4Loea9tNc+vEPaJXvnfoh5r+2DJ5Va7PI6
vB9i3lt71uw5vu4Mm6Hh887+vEutedPPNfaQ8Plgf65bOP6txiH7bxoggQ/2
m1UcfHWjD9of/goS+Gi/ZEp2quzL1fYg1TH9n+xDftxgem64cT9Ye8xn++vC
seJ1BSf2AwCD987+
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9wW51fu6tX+13yLW+Dtyxzl7veVBM
6Lcv9pox/Ye+auyx/7XDLKTn8yd7iPoj9mLtxvtnMX+wf1gFEjhlP3nN4Yuh
u17aLymw5bq++IL9yt8MS8w+Pra/vhgkcNnevKfpwce3d+25IAL22ZdyO2MK
rtrbggVu2bvV/RWQ1jljXwgWuGv/pdPGc1faPvsgsIMe2NtZuDQ+vj7H/k0g
SOChvX5s+crjOav3g1wr1/rY/loPT5F44oH98mCBp/ab324xVZI4uR/in2f2
NuncHGvbL+yHmPfC3vuFXudmpSv7Iea9tL+i9cvZ2P861LzX9jJvdzwsv3wT
at5b+7WLV3EuencLat47+/XnDBWq997YDwmfD/YL8hYcsP55Yf83DZDAB3u+
pYF3fB5s3n/4K0jgo71uTFii8YGd9iDVMf2f7A2nh+SaHzxtD9Ye89n+w59F
LH9bL9gDAMGK1Hc=
          "]]}}}, {}, {}, {{}, {}}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 30-atom grids\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.21}, {-5, 3}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.21}, {-5, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Sq. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. A.F.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. A.F. rows\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.80903290188512*^9, 3.8090329239521236`*^9}, 
   3.8090904209128623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<linewidth_v_period_exactly30atoms_sq_hex.png\>\"", ",", "plt"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.809029852486635*^9, 3.8090298783693295`*^9}, {
  3.8090327726437063`*^9, 3.8090327842656107`*^9}, {3.8090329307718973`*^9, 
  3.8090329339145007`*^9}, {3.8090904638911943`*^9, 3.8090904669679937`*^9}}],

Cell[BoxData["\<\"linewidth_v_period_exactly30atoms_sq_hex.png\"\>"], "Output",
 CellChangeTimes->{3.80902988513923*^9, 3.8090327790156612`*^9, 
  3.8090329347761917`*^9, 3.809090474114911*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
      "}"}]}], "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"polarizationmodes", "=", " ", 
   RowBox[{"{", 
    RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8090277860448437`*^9, 3.809027788215191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"evecs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "evecs", "]"}], "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, Typeset`size$$ = {
    414., {118., 124.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$13122$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13122$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Re[
         Part[$CellContext`evecs, $CellContext`i$$]], 
        PlotStyle -> {{0, 25}, {-0.5, 0.5}}], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {174., 181.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.809032890399807*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,123,19,30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.80946966129014*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,20,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696614386873`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,21,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696615473967`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["time evolution", "Section",
 CellChangeTimes->{{3.8094676677317724`*^9, 3.8094676720642166`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", 
   SuperscriptBox["9", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "1"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "easier", " ", "to", " ", "solve", " ", "system", " ", "if", " ", 
    "everything", " ", "is", " ", "a", " ", "few", " ", "orders", " ", "of", 
    " ", "magnitude", " ", "from", " ", "1"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809468691632693*^9, 3.8094686964952307`*^9}, 
   3.809471193092425*^9, {3.8095346504945126`*^9, 3.8095346505533533`*^9}, {
   3.809535226269971*^9, 3.8095352433869815`*^9}, 3.809535319848155*^9, 
   3.8095399729422846`*^9, {3.8095452597710123`*^9, 3.809545262825846*^9}, {
   3.809559875541829*^9, 3.809559918667977*^9}, {3.8095990098106685`*^9, 
   3.809599010592574*^9}, {3.8096052143423004`*^9, 3.8096052144869137`*^9}, {
   3.8096056859687347`*^9, 3.8096056860634813`*^9}, {3.8096409192750893`*^9, 
   3.809640919753411*^9}, {3.809684767494185*^9, 3.8096847675969095`*^9}, {
   3.8096857967111936`*^9, 3.8096857973983636`*^9}, {3.8102290544678364`*^9, 
   3.8102290645222178`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["square lattice setup", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
   3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
   3.809023200615773*^9}, {3.809468314558218*^9, 3.8094683163169413`*^9}, {
   3.809728415834035*^9, 3.8097284219337177`*^9}, 3.8102290586432962`*^9, {
   3.810229484207923*^9, 3.810229486146435*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idx", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
     "Simplify"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D", 
    " ", "coordinate", " ", "indices"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
     RowBox[{"n", "\[Rule]", 
      SqrtBox["atomnum"]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"centerIdx", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{
        SqrtBox["atomnum"], "/", "2"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["atomnum"], "+", "1"}], ")"}]}], "+", "1"}]}], " ", ";"}], 
  " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"idx", " ", "of", " ", "the", " ", "central", " ", "atom"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perimeterIdcs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       SqrtBox["atomnum"]}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"atomnum", "-", 
        SqrtBox["atomnum"], "+", "1"}], ",", "atomnum"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"n", " ", 
         SqrtBox["atomnum"]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox["atomnum"], "-", "1"}]}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}], " ", 
        SqrtBox["atomnum"]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox["atomnum"], "-", "1"}]}], "]"}]}], "}"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"centerRowIdcs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"centerIdx", "+", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            SqrtBox["atomnum"]}], "+", "1"}], "2"], ",", 
         FractionBox[
          RowBox[{
           SqrtBox["atomnum"], "-", "1"}], "2"]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
   3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
   3.8090191237504044`*^9}, {3.8090194326770754`*^9, 
   3.8090194334092865`*^9}, {3.8094677627939987`*^9, 3.809467768263092*^9}, {
   3.8094683836403894`*^9, 3.809468384246768*^9}, {3.8094686733752575`*^9, 
   3.8094686739143047`*^9}, {3.8096440700083637`*^9, 
   3.8096440713278327`*^9}, {3.809644560302745*^9, 3.8096446249268913`*^9}, {
   3.8096446970449677`*^9, 3.809644704890011*^9}, {3.809644734985485*^9, 
   3.8096447447966223`*^9}, 3.810230797772606*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["fmode", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.8097284733860984`*^9, 3.809728477211938*^9}, {
  3.8102294768750916`*^9, 3.8102294792679677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", " ", "=", "0.75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"modename", " ", "=", "  ", 
  "\"\<ferromagnetic\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", " ", "=", " ", "fmode"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initExcitation", "[", "numExcited_", "]"}], " ", ":=", " ", 
   RowBox[{"1", "/", 
    SqrtBox["numExcited"]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"excitation", " ", "per", " ", "atom"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8097285078150425`*^9, 3.809728511867614*^9}, {
  3.8097285575783463`*^9, 3.8097286664144945`*^9}, {3.8097288518546934`*^9, 
  3.809728916251459*^9}, {3.810229147721987*^9, 3.8102291492345023`*^9}}],

Cell[BoxData["\<\"ferromagnetic\"\>"], "Output",
 CellChangeTimes->{3.809731004191583*^9, 3.8097738832773547`*^9, 
  3.810229074015092*^9, 3.8102291048193336`*^9, 3.81022918715853*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["afmode", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.8097284559746675`*^9, 3.809728472123473*^9}, 
   3.809728924490383*^9, 3.8097289584564543`*^9, {3.8102294687348204`*^9, 
   3.8102294732146916`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", " ", "=", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modename", "=", "\"\<antiferromagnetic\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
    "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"mode", " ", "=", " ", "afmode"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initExcitation", "[", "numExcited_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        SqrtBox["numExcited"]}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"#", "+", "1"}]]}], "&"}], ",", "numExcited"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8097284896227016`*^9, 3.8097284925249767`*^9}, {
  3.8097285554021664`*^9, 3.8097285899535537`*^9}, {3.809728643937166*^9, 
  3.8097286950768185`*^9}, {3.8097287355025253`*^9, 3.8097287376607127`*^9}, {
  3.8097288674928355`*^9, 3.8097288936059933`*^9}, {3.8097706615409517`*^9, 
  3.8097706624433947`*^9}, {3.8102291643964148`*^9, 3.8102291694308825`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["run", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.809467855845191*^9, 3.809467856083066*^9}, {
  3.810229458362745*^9, 3.810229462432009*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", 
    FractionBox["800", "\[Gamma]"]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Build", " ", "the", " ", "Hamiltonian"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e", "[", "i_", "]"}], ":=", 
   SubscriptBox["e", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hfull", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["H", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", 
      RowBox[{"atomnum", "+", "1"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{"atomnum", "+", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "=", 
          RowBox[{"d", " ", "\[Lambda]", " ", 
           SubscriptBox["r", 
            RowBox[{"j", ",", "i"}]]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[CapitalOmega]ij", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
             RowBox[{"Re", "[", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], ".", 
               RowBox[{"GdotP", "[", 
                RowBox[{"u", ",", 
                 RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Gamma]ij", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
             RowBox[{"Im", "[", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], ".", 
               RowBox[{"GdotP", "[", 
                RowBox[{"u", ",", 
                 RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hfull", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
          RowBox[{"\[CapitalOmega]ij", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", "atomnum"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]0", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "atomnum"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"excitedIdcs", " ", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"centerIdx", "+", "i", "+", "j"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["atomnum"]}], ",", "0", ",", 
          SqrtBox["atomnum"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]0", "[", 
    RowBox[{"[", "excitedIdcs", "]"}], "]"}], "=", 
   RowBox[{"initExcitation", "[", 
    RowBox[{"Length", "[", "excitedIdcs", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ics", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"atomnum", "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"eqs", ",", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Hfull", ".", "\[Psi]"}], ")"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"ics", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/.", 
          RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
        RowBox[{"\[Psi]0", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqSys", " ", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8094684708348923`*^9, 3.809468482996542*^9}, {
   3.8094685547854023`*^9, 3.809468567211235*^9}, {3.809468611041896*^9, 
   3.8094686423715134`*^9}, {3.80946873561755*^9, 3.8094687637140055`*^9}, 
   3.809469288495412*^9, {3.8094693543126073`*^9, 3.8094693547495594`*^9}, {
   3.8094710366744146`*^9, 3.8094710527571635`*^9}, {3.809471101897688*^9, 
   3.809471102626219*^9}, {3.809471348031168*^9, 3.809471349794034*^9}, {
   3.809471909554092*^9, 3.8094720214892673`*^9}, {3.809472098848244*^9, 
   3.809472101474615*^9}, {3.8094721687655363`*^9, 3.8094722035766816`*^9}, {
   3.8094724104114714`*^9, 3.809472455021535*^9}, {3.8094729250397015`*^9, 
   3.809472945780697*^9}, {3.8095299900209365`*^9, 3.8095299917707295`*^9}, {
   3.8095302986149917`*^9, 3.809530315896492*^9}, {3.8095329511933146`*^9, 
   3.8095329542995653`*^9}, {3.809534663256405*^9, 3.809534706991399*^9}, {
   3.80953478345522*^9, 3.8095348145540705`*^9}, 3.8095352489630218`*^9, {
   3.8095371078228397`*^9, 3.809537115681732*^9}, {3.8095373906493454`*^9, 
   3.8095373933390503`*^9}, 3.809538423601192*^9, {3.8095406174266243`*^9, 
   3.8095406277060966`*^9}, 3.809541287294038*^9, {3.809542298257657*^9, 
   3.8095422987683363`*^9}, {3.8095446029345074`*^9, 3.809544604602*^9}, 
   3.809544946420149*^9, {3.8095452709261785`*^9, 3.8095452732838745`*^9}, {
   3.8095596789327555`*^9, 3.809559685425457*^9}, {3.8096052448178453`*^9, 
   3.809605256107673*^9}, {3.8096057520241814`*^9, 3.8096057637997084`*^9}, {
   3.8096409817109747`*^9, 3.8096409865537214`*^9}, {3.8096411549346576`*^9, 
   3.809641169700226*^9}, {3.809648370324535*^9, 3.809648398360179*^9}, {
   3.8096848007489824`*^9, 3.80968480142877*^9}, {3.8096850657415743`*^9, 
   3.809685134886038*^9}, {3.809685422012596*^9, 3.8096854270513897`*^9}, {
   3.809685507414732*^9, 3.809685510966921*^9}, {3.809685771394848*^9, 
   3.809685792596719*^9}, {3.8097289354810224`*^9, 3.8097289460426817`*^9}, {
   3.8097291979113007`*^9, 3.809729201084811*^9}, {3.8097295257535086`*^9, 
   3.809729527086974*^9}, {3.8097310076433587`*^9, 3.809731038857202*^9}, {
   3.809770610955254*^9, 3.809770618121476*^9}, 3.8097738874526615`*^9, {
   3.809774089933311*^9, 3.8097740931161323`*^9}, {3.810229140398752*^9, 
   3.810229141255616*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"solve", " ", "the", " ", "system"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"eqSys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
         RowBox[{"Method", "\[Rule]", " ", "\"\<ExplicitRungeKutta\>\""}]}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8094684708348923`*^9, 3.809468482996542*^9}, {
   3.8094685547854023`*^9, 3.809468567211235*^9}, {3.809468611041896*^9, 
   3.8094686423715134`*^9}, {3.80946873561755*^9, 3.8094687637140055`*^9}, 
   3.809469288495412*^9, {3.8094693543126073`*^9, 3.8094693547495594`*^9}, {
   3.8094710366744146`*^9, 3.8094710527571635`*^9}, {3.809471101897688*^9, 
   3.809471102626219*^9}, {3.809471348031168*^9, 3.809471349794034*^9}, {
   3.809471909554092*^9, 3.8094720214892673`*^9}, {3.809472098848244*^9, 
   3.809472101474615*^9}, {3.8094721687655363`*^9, 3.8094722035766816`*^9}, {
   3.8094724104114714`*^9, 3.809472455021535*^9}, {3.8094729250397015`*^9, 
   3.809472945780697*^9}, {3.8095299900209365`*^9, 3.8095299917707295`*^9}, {
   3.8095302986149917`*^9, 3.809530315896492*^9}, {3.8095329511933146`*^9, 
   3.8095329542995653`*^9}, {3.809534663256405*^9, 3.809534706991399*^9}, {
   3.80953478345522*^9, 3.8095348145540705`*^9}, 3.8095352489630218`*^9, {
   3.8095371078228397`*^9, 3.809537115681732*^9}, {3.8095373906493454`*^9, 
   3.8095373933390503`*^9}, 3.809538423601192*^9, {3.8095406174266243`*^9, 
   3.8095406277060966`*^9}, 3.809541287294038*^9, {3.809542298257657*^9, 
   3.8095422987683363`*^9}, {3.8095446029345074`*^9, 3.809544604602*^9}, 
   3.809544946420149*^9, {3.8095452709261785`*^9, 3.8095452732838745`*^9}, {
   3.8095596789327555`*^9, 3.809559685425457*^9}, {3.8096052448178453`*^9, 
   3.809605256107673*^9}, {3.8096057520241814`*^9, 3.8096057637997084`*^9}, {
   3.8096409817109747`*^9, 3.8096409865537214`*^9}, {3.8096411549346576`*^9, 
   3.809641169700226*^9}, {3.809648370324535*^9, 3.809648398360179*^9}, {
   3.8096848007489824`*^9, 3.80968480142877*^9}, {3.8096850657415743`*^9, 
   3.809685134886038*^9}, {3.809685422012596*^9, 3.809685438629361*^9}, {
   3.809685469226745*^9, 3.809685479069775*^9}, {3.8096858186530886`*^9, 
   3.8096858270851116`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.809686026556696*^9, 3.809722986099189*^9, 
  3.8097290258952646`*^9, 3.809729214470006*^9, 3.809729809672757*^9, 
  3.8097310205573196`*^9, 3.8097707900546865`*^9, 3.8097739093033295`*^9, 
  3.809774103574546*^9, 3.810229121310795*^9, 3.810229195379002*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ArrayReshape", "[", " ", 
    RowBox[{"\[Psi]0", ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"]}], "}"}]}], "]"}], "//", "MatrixForm"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809534819918322*^9, 3.8095348218450623`*^9}, {
  3.80953536074685*^9, 3.8095353920123634`*^9}, {3.809541406021474*^9, 
  3.809541432147591*^9}, {3.809605724459856*^9, 3.8096057281699376`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ArrayReshape", "[", " ", 
    RowBox[{"ics", ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"]}], "}"}]}], "]"}], "//", "MatrixForm"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809534896378516*^9, 3.809534896546095*^9}, {
   3.8095356284171934`*^9, 3.8095356325325375`*^9}, 3.809541444155511*^9, {
   3.809559646638919*^9, 3.8095596520806475`*^9}, 3.8096057222477684`*^9}],

Cell[TextData[StyleBox["", "Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.809559863627812*^9, 3.809559866184225*^9}, {
  3.810229436107975*^9, 3.810229446920925*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["soln analysis", "Subsection"]], "Subsection",
 CellChangeTimes->{3.810229448943488*^9}],

Cell[CellGroupData[{

Cell["ring down", "Subsubsection",
 CellChangeTimes->{{3.8102293937140617`*^9, 3.8102293968211813`*^9}}],

Cell["\<\
Plot the excitation in t\[LineSeparator]he x polarization state for the \
initially excited atoms\
\>", "Text",
 CellChangeTimes->{{3.80964157433803*^9, 3.8096416122752094`*^9}, 
   3.809774105823183*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "excitedIdcs"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "800"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", " ", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Decay of localized excitation, ``x`` ``, d=``\[Lambda]\>\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8095401462024803`*^9, 3.80954020351366*^9}, {
  3.8095415236013713`*^9, 3.8095415299533806`*^9}, {3.8095451517330256`*^9, 
  3.809545185116693*^9}, {3.8095453811296387`*^9, 3.809545398520114*^9}, {
  3.8095454586393156`*^9, 3.809545659971798*^9}, {3.809559699479993*^9, 
  3.809559710631551*^9}, {3.809599030044757*^9, 3.809599081442619*^9}, {
  3.8095991126624804`*^9, 3.8095991135519257`*^9}, {3.8096052835702677`*^9, 
  3.80960528398516*^9}, {3.8096415548512354`*^9, 3.8096415687667065`*^9}, {
  3.8097292692983923`*^9, 3.809729285191844*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
8LZR+ihfegJeWXzAOZ237f/7RW9KRSRmi5xmUSt3AqGC8pay0XAsfeobY9tt
J9DKkP0UsBSKo0y4tlK7nWDV/GouJ18APvaINKf+xgmKvoo6m6U5YXmHmOn2
RSc4l5ia9ifBCjvtLJjg/eYEL5lTJ/T26eBm6aGHO3c6wwLTvWMVI1eRxq0T
tzq4naH4XML7A9fIiKAiUcYn4Ax9+W49cSzeKPOden6muDOYJLinivf7obmj
XkkkJWfILOdHDGshyDdhmMzv6AxO8rn6PyKiUQHfnFu2pzN4uUcq+dHGov7+
X/b0Ps5Q+bHI9BE5Dn2y2mdJCdnO5ySuwzcejw78PW08F+MMNIdkP0wdv4Eu
5kjqaKc4w9+7Ob7nTBLRdQkt9e4cZ2iPkPSKCElCle6+srk1zpDW1zq/71Ey
Gt6TJMHQ5Awu8kzkUpSCvpeXCXp1OkNynypNV00K4pDvODt/3xnUtZaazjKm
osuzT07qDjtDRbvX21arVGTn956zZ2JbL+NjrHArFcWx/2ERnHGGXWl/zrR8
SkX1jQeY8t47wy0VzvC142nouRYv3d5lZzjxo5V3WSUNbXyS2fL+uc3X7BGc
br99/0Xr/Hq/5Qz13M56n73TkDK341e93S5gN8MasBqUhtxwwMfe/S6QLCL3
sskvDaWapc4JcbjAg2P6U9Kuaaj9V+V0/kkX2P+K5U6ZdhqaTbs3wXjOBUrG
Hw4znU9Du4SfjfiKuAC+MO2evJGK+IYXH36QcoFoyTIbM5yKtJy2sIG8C/xW
fxde5JuKKLRsd++ru4AoW1tL6rlUlFt0rlFEzwWmxR8WOT5JQT2y6FahmQtU
pCrvtXVNQQtT+mX77FxA5JqUwMjfZCRyMCTzI8UFLgw0qLLsTkYdDJN8AwEu
4OSxpr+8PwnJ0wh2lkW4QE+xfdrlXYlIf2X6tWX6dj7xiTf9PfHIa+TSuf+a
XOCj8hMLn+oo9K8/sbOpcztfuDTjGbVIFNP1/mrKfRdoOyHrWvs6HOXcSiNp
PnMB/cu7QGU1BHXFrnT2fXeB09Y7VnAJFSmFKmsVbbjAVOQu7Uk/Ehr1yX8T
uNMVRtLPhxjneqDXjhp0UiyuwKjA78U2ao12Kldq3RFxhZ5ms5bTnNdwvNzW
mwQpV1jdGTmQJXQds0kYkF2uuEJDXfwOMTM7fIZnV/YZHVf4arlJbTYgYNWd
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
+X3u0MCxD403KiIacFoLtTokqOOz9UTNA0Y0OD961DG1SQ23X2sKFTWhwWLb
q+uJf1TxrpOqvTstaGCSNsdV4KuCm7zET/22p0F7Tcjdk2fk8ISdX9uCI9M/
by6zWNTIYG6j4sVpZ+b9efMPUvcPYP8DO11H3Gngp9FyKateAm9aYt390I8G
H0lmJtM3+fFy7dmTE/40sPp4qy9l2048G63EzhHEzPff9fnnfVvwyymfeftQ
GrB1E8acQxZai4fvPR6JpYGCyv19NXlc6PhZez2WBBpIHKpp3P94J8p2+1wr
kUSDI4uxau+VBVDwi50XIlJpMPQ6MC7gqQhSfBSdsEyiwcQL99Pw5QASJbF/
2UOlgY/45nC1dhnEa3DeF9GZeovO5Z45KoeWG7otGf8x/ZmE2D99VEQziYda
rx+jwZiKQDBFWxmNKv9Se3aCBiJU2v61JWXUXiUhsiufBt3s22vqbFVRfWhT
oVYhU08Fix6jKVV0TdJpi/cZGoy6t0m8TVZDxeNT2cSzNCBsOG6uzPw/Ol5K
/HmpmMkP52rnrhh1RPTmi3x8gQZv/ks3snynjuIFq8e+lDL151w+WKSmgYLf
GLtzXaLBSIzQg3GKBnLPH3yidJkGsUlfP3A+1kCWDnFGLldp8OgcN+n7Hw2k
x7X5Xso1GsSXtUYeFdNEij0l8sXXaXDaLUq1T08TiTLUy1tu0MDcq6C0y1IT
7TR5IjBew9zPTw+LZa43sgSeYK+lwW6h+IFBXU203LzMJn2HWZ+Zgbv3i2qi
mbRTqTb1NGj+kXo/dlkDjWhKzcU00EA7cSxy6JEGevGjOSi/kQaCH10Ciph4
22tdBu820aBzW4XduLoGqo+esR9spkEH26/v35n9uEKW3LHWSoOvnj0rW5LV
0bkpAV3Rh8x4zqGaaRvU0fErN2+ZPKLBrr9C+/MZaogYYLY/9DGz/v1VravW
VVHcvpHio13M/lU1zi8cpYqChhN23OyhwQHzH4GOL1SQpVvZ6tIzph6Tl5Oq
U5WR7k6teMGXNHh2cLAmKFsJKbx4NqnXT4Mn0R0biGsKaKfVah/lLQ3IY4de
P+uSReyb8i0qBmhQcef3IqegDPrdLt3SM8Tcj3S+Ge19AI3ou1fu+ECDkIN7
PnC0SaBryreJpVM0IEpOFd8GQRTDt/jn3jQNph5cVJQ6vAuprygn980y+wG6
RmBQdqC2R7WR7As00GqwdhAJZEUD7rUeEcs0qKRm/2d1arW1VG/hFXWF6f/p
qo0uCRtxsKiyQ8kasx/xrZRc3syNF6Zvmb1koUNY3IraiQU+zJF1S1WTkw5s
x7wOF/4Ww88D5mscttLhQ//mV+vFErjQXEkmnJsOCVwae4xU9mPRHbdELvDQ
4bZHnOKIqjSeXJorvstLh337VccrLsjg6kFF/hd8dDC7wLJj3y9ZrH35Jheb
EB3yW8YidJIV8HrOXM4eYTr8cHnJcuUccx5FKW7Q2MfcPz4TonpDCR91iiHa
i9Lh8DP+H9ddlbGj5s0/oeJ0GG5rJPf0KGP+PXNJZEkmnpXQsQ51FTzyT2Gh
WIoOxz6+kwo/rYLLJ6Ij66XpEJvD/5o+q4LDemomn8nS4dbblbk/mqpY8ea3
gCl5Onw7e/V6FUEVL+UrjLIo0WH9qJJuVo0qbiJEewip0CHkj0ah14AqJvnU
vFJTY77/nZNTf1kVmxt9s7fToIP5heIgEW41zCWl0BuiRQfjE32xbAJquH9L
tBlJhw46dzpsv/Cp4bPz1W3n9OiAXxltmuBUw36vv+rVGdCB9yS1dOsPVSx5
X/7eU0QHVgYWT+5TxTMlUaqTRnS44RRLMbiqimsp1TX/TJh4X3uw58ao4pTQ
r9K7zelwd2So8ZyCKta3lb+iakkH62qWdzkfVTCbSpSIrTUdxMgdNadOqOBu
vuriw7Z0yJFjz/quqIJPrszyZdvTIXsHKfV7pzJ2/SCXd9aRDj8XH8n2uynj
scobOU9c6XCZzSXw2R1FXHFilu2zOx12+lMU/ytRwFEJcsR1DzooJJ6vLEqV
x8t6N5JUfOnwsOKs5zU2WdwqOjtvfYgOqyLH+rXrpDFto1xkcAAdzl+pblQ9
eADveFEVUHSYDvrB53b1ZEpimcAq+7/RdCgqC1JIuSmMu0t0a7/H0qGxyy9v
y63dOGSwl+dLPB3c1bIM91fw4yuOs6/7k+mgVjD2WYG4A4siee/KLDokbTo+
f37jQitOb24uyaZDZkAR9wv0tNWvwXZfAZkOHPe9Lbe+Gjc8rxA9nkWnw0J1
k+bLLhbEL3wz1OUEHdYma2h6jrvQ3YOGPZanmPwVnvJKUxBArgXPZQ3z6FA8
cPXz6upulLdl/pv0aTpULf2NTwsVQcrm2Q77iuigmKVgs8Iihp6Tt9/mPUcH
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
dyRpGbqoov8DZzsTQA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
SbSABvw7bvwd/yCAZA0zrfjO0/X271wp0RdET0h7mvZdoPOpM5/dc1EIsf2S
id+8RAPFBmfuIpFjqFax9+X3Uhq8IEXSZNxEkGm0tcqnchp09505NkwSRcfn
on+/uEKDiST1AI4qcXRMiNH9YRUN/syvrTyqkED3PPO6e6ppYM/fxl6bK4mY
RpuI1+tosPSEWquoLY0us+t+KG2g85XO8lrprzQCi+d65xppEMHtWLFWK4Mm
T/hePdlMg0dm9r37j8qijHvftmW20uChyHbfh2GyiJeBEhzfToNXuswZW2pk
UafGvsGQm/T44L7K+neyyCWpUsKrkwY3xq4VNLPJofVmhWz7Lno/f/USmOXk
0Pnlu8smPTQoXKq2LzOXQ8ri9taol57v96f1TC85NBIw06TYR58nGUxylSFy
KO5y/D7xezSw/SduwhomhzgmmBP4H9DAQ86/9j79e7qRu2B0/wD9Pu5yOThl
J4es7I+q7hykwbbb7A7hGnJo+UzbhX+PaBCZs783hUcOZT8yoM9vGvBc5dgn
8lUWSW4fdV94SoOKqF6Nc1gWDeoG9rx7RoNez+ciUzRZFEJY43/5ggZl7yam
ZfRlEUtnFmnwJQ2y5/8uuPyQQVU/DkzjVzRgES+V3msngwzkrum3vab7q/7H
9g+XpdFMuEpVzRsaDGa28sl9kEKU6v7t5RM06CopoETvl0KCM04hBe/o8bI7
Ug6pSSJvt2RJ4jQN+LCmQYWbOPpXyJKT8JHe/x/eRoqrGCp9XvQldI4GUsmB
c9MWouiNya1mh0UaSP88Ix62/xjStbrinLBEA+VR1wt7nwqjGvszm+e+0GCg
XsZzb6YQSvUKMB35ToPY/LcCgX0CiCeB/YPtBg2OFu3hbn3LiZzLQ9itd2WB
f8bqpb67H3t6r9p3RO3Jgp27d+uNc//sEa1FHmfYsyAqiKf++QVGvN7Gef0J
ZxYUfJVJ80zfhb1vM1gtc2UBcxb7Q5+r7Higd3F1F08WnEvabnKfsB+ff3QH
LPiywERcnrOKkQdvDtfNhgtkAXlQqJqrmhcHjp4/fVowC2LcC1ML1fmx8lTE
2KNjWcAtZNjIsEcQl846ExZFs4CED1qJKQvhbZ/1hFklskAt35raZC2MR9cO
RpvKZIEU78M76R7HsPYG84FQuSwAqgJnu6UIrmJcuX1SIQv6Hz6xFJMTxbu3
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
At+xmRkCEWEK7UXCi9D/ANnPOiY=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
pt/IVIja99vJGahbA+1tkoTS9vz7bPXQiV/XGg6cvj//5Egh4mhgT/xnYg3L
iuSd2iyFSGEPoXHUxhpSzx3jebuzEBFMBiZLXaxhp1fBpehPBSj37qmd10nW
EJ0numnbV4D6afz5rvlZww/9K0eScgvQqu4LTZ5Qa2C5Jit/zrkAnSgTpK7H
WMOz4p9dmv8VII2NqJtPkq3hdPY4x/lP+cjn6rvO29nWkCjzouNzbj4qzpda
IBdYA/fE+IV2lXw08iOVSaXCGiy0ch4WvrqNNpWWxLlqrSGnusupjfk24stR
Mv3Wso0X06eHZPOQ3tLtkJ4Oa7g5cs+tzPgWupuqM+w2Yg1fdYrnjrrcRK/n
76zChDXstxwLlLfMQXRSu4+yvbUGk63Rvd4q2cjibbPjw2VriL2ubG74OwMx
/ce9g+mADThr7Hv/cT4ZSQV7nZ1ltwFjs/8u/r6RhByeP73adMwGQt2uTeaa
JaB239AcC0EbMFsVuCzWFo08ez+K3btqA6/pnS2yBLb/D6hyFTCwgcG202Gp
XWR0sI1QVGFhA/K7zDjcKlxQzb3fzMWeNgD+W8xXTx9H37MYvmcl24BUp1SU
9EMfLMcyco49xwY6rFFO13QgTr2RZp1aaANGKYyITArF4qHcz27U20DMqYPf
izSisZerUE3oCxvgJ9S6yiUl494PPz5uTdtAr9zU5u/hFHzYquV4wLwNvFQT
fyG+Iw236F1J9F63ARNLfqls2QxM/3R33+qWDfw1N864pZSJjVQf/yPS24L5
U3PLfsjCv2V1Pdw4bcEeao5F0uVgtZbDpZ9O2gJdSn8hPMvBOaJT0w78tpAX
+5LNOO4mXqzKZ5sTtQWre07PPcRzsdRZ+6vW0rbAbL+aLz2Yi2MLzkW8kbeF
9I297UE6t/Dk0a8PTDVs4dEbZcqf3ltYIKNudULPFqIqgdvvXB72P+gtYGBu
C1/j52Xf+ebhwVhpu+f2tpDGFcNzpCUPc++mydXysIVMpyk7prk87BHU83zI
yxb2r0eLN//Nw+2/oxnUg2zhXkcw+5ndtzET5ap8f5QtbPV0e7ls5GHLr4eu
KybZgvuD1JKc6Txc4/SyrivLFuqP1ehOVedhmvc5i6jAFlqH3FecPPKwlrnl
qYcVtnDri3i9H1ceLhjnMZGqswUpzcGWq/e3+7X2QnJzqy3oim2UiSnewnKD
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
3U2CK6wulbczHvDHz343kn19XCHevde+4kUgNllhpDMMdoWOC9nPJ3qCsevb
Vn7mpO14zXtSwkzC8Or4oYfLma6wfm099EtaOPZ/6nRt6LYr5PFdnrjdHYET
2tkp0fdcQTxRaGb4TxQ+3ORO59DsCt+47ngCbQzOv9uTJY9dYbP1fdavfzGY
r+To+ZN9rsBNwxOY+DkW1+aSHv4bdgVev13RtwbisFTawLWpl67QX2vZ2ZYV
j7viTszef+MKf5LjulOMbmD1MG9K5rwr7NOvlJqkT8BjfsN01K/b+f2Xk6hZ
kYDNSWeydX66AhN9gWvppUQ87+x/XvifK7x3aO+tuJ+IPayfP9xP5wYFhi/y
slmT8LoRv9bn/W6Qo3Ir+IBCEg7WCpntZ3MDCc6I8tOuSZheZYJSyu0G0HjK
YjAmCScjoT3hZ9xgurv/F21+Ej5yMTLb+j83WAjZe3n4bhIuEpw+jyTcYMj1
8Y+z9UlYgFe8nUvWDexnzvuz1SThBu44rQ0FN/gd4lNfUpyEZdlmZ8c13ED6
H8uDT0lJuJfxErVRzw3e/7Nu+U5Jwpq0SXtSzdwgSciIbUwrCY//mc8m2LnB
tUNxglWnk7DVD1kBTTc3eK0sInvpXSLez0wzMkZxg4CFqQfDFom4VbiLbBrg
Bqf+MG/4Pk7AjtfCD89GbOMdGb5efToBs3ootTkluMHehCiRBfcbuDOe3nI5
ww32pZAZi0rjscedxzu9brtBpbWJjM3TONy/oKkWVuMGa8LJ+w1/xGDqnkNf
9953g6PPv7X1LUfjU7zPk5M63SBP3p6h5U0U9rc1fHVr1A02p5Jl1jMisPAb
S6eWVTdYylDJ7YkIxtObJxnRXzdgv3Yp+rhBII49Onfv0W53CM2vSWRNuY7n
jJzWR9ndYb/i/Lffc1Sc9ZwQuSTpDtkxJMYKTTtMMxBSfCrAHZgJuIx6zwXd
/SivUhHhDhrXiY6KvARkQkf3RSjBHTbMj59c+EhCDfKxYrK33aFS9HXNpcs+
yNpGY7y7zB16mw1ip5/6IaYQputqNe7gt2tV6aZmAHJqT+ky7HQHzRt3eb/S
hSC2aT2HNwPuUGb5weTNmVDU9Yd9n/2oO+RKP+folgxDnkde3f382h0+t+xZ
pUPhiOvSTW3S++14D15fOiwZgQYMzdd+fXYHsUH5fCpPJPLyOp4dtOoO+ePX
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
+XkaVHpT1fScldD/AeJyEdQ=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
FRQFjM3MEDgXqdRRIroI/R8d7jIZ
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
oK35OYnXdmM4HCs6fGaBgA5Y/sk7vwdDlu66Lx/nCOivotD7TLC4dl4tZ/iK
TztnFcRm7sWg3hDhOzeDT4tdv/qIQjE4DkzuMXXl05RMM5v2cAyKwUvTHk0Z
0PChkLljERj6kxrtZ100oM7Cv3uVD2LIkYpc4WxkQBfGfSlecBgDDa8733dH
n8q1L0h0PIohYKxRfr5An/YLgvx2HsPwW7Vvrut5Hq3cn7s0OhrDKa30q58n
uDTz8UfV9JMYYu+YvHV04dJtXrtLW7CYp+1Pnef2s6ntnZzkodMYLmfO1vc2
YNN5P/r3yMdheLA/8uCZe7q0OdlPyz4BwytT/723tujQv3tvDnqdFfPGU2ar
p2jROIu+ysNJGAaX2rU2VmvSVQ07Qv+5gEEqix96X0aNPpL2reVexTBaqh8Q
v1yW3gj3ODqjAENRRPx06Zch4YnyS5vm38Pw1fmnVenYhNBbqcNoyQMMY9wO
961hEkg7d0vr3mIMVyR6PPdZyaLxyQu5cY8wRK04WWk8LYdaVrWdyBZhMPd/
udPyb0X059s/FnWVY9iyK2FDxi5VFGieLD1VIc7vjifC69rqaPWxFx2a1Rgu
OoqGQ0o10EwdV7KhVuyPX2NS/yst1OV/zjOwHoPHOZ/C7k06SPSg2RI3ivX3
qF3jVsRCkS7O3aLnGKJjAoxfOeohtysJhe0vMDiteiP/1JaNLL40xo+9xGD5
aFNOUhUbKdkp7lBpx5BqPfBYbjUHfT7tZLuwU3xf0vY9/iTioKcv45XWvMbw
K8g3Z8qYi7IN6vt2dmGYNTJnQDGOi06FyZdE92A4eu5O21Q3F/mWrT2X3ouh
VrpRKtWUh5BibMC/fRjGZUQ+TwJ5iLXtKXrRj4ETdV//QAYPTd6arfF1AEO4
QVBscjUPtU6s/iT/GUPX4/JQzV4e+seBlBsOYgguK4gdH+WhhKTqC/ZfMeRy
ryfDdx4K7pkV4j2CwSStrHZqhIfWmjmsPPINw/Y9ldese3hI4sWLGeHjGO5X
W/T+T9z/wcGdosBJ8X1SXFaWnclDe3S/Hdr+A8Pz5WVTK8J5iPs4xtp9GoP7
yqLvq+x4qM1PbdTlF4ZdD0+s6PzORX/KX89fM4PA2ibVaLN8LrK/uzho+UwC
EWlbUsI9uOi722MjW2kCe/nud9p+cVD+d5c+cxkCbrXeN5JSxf+BjJ5Mo9kE
VG1j9D6YclBz/wyWlgIBlqSGrPcSNiLxiW1KigQiY03WqPnrIaEF57ysMoEG
WryoxkkX3ToMcyfUCMysKw96PqyDvNlNTwc1CFi4NuQH39VGGpVe+P08AjOu
3/SQ3qGFTsw9JvGSReC/SxbxM7I10NarJcP39Qk4h0ymSJQqodnVti/DLAkM
jNZkHlMeFIoCn54LtCJgKHenM/1DtzBcaevG7TYEvNNSpe/Pfyzs2nKwxsVO
3M+44a/Hzu9ERZ8KH5rbEygv31ebLytJgxNXRRo5EIiSlBDYaktTfauXlpzV
BG79Jvf7vfmyNOHY2B2ldQSUQ1Ytbh5VoP4qv10Z3EQgoVRz/WVPNapbWOHx
3o1A6itompmmTlvcXbXebCZwVzT8kVevQeFG2NkGdwKxpSU10bJadMxx5oaq
bQQc7bnpImVtmvvlrJzIS6yfwra8u/I6dJ5NQcyd7QQqK309dVtZtKFz2bIb
OwnYdhXUtF6bT2Oin02n+RFI9xdtf+SjS235PsVJAQSeLLWoilHUo0NPhyLi
AglITK8s/JqrR2+GHF8cE0TAtDfnXA+LTT3UlIYOh4j9ruDId29lU5V/M3LD
9on3y2KpeyWwafW2RQGBYQQSp8jODSXi9+3+D9P3E1icnqa/4R2bevpfVWg6
QOA3iYx/YyQ59FZQu5fkIQI/F/3y/KTGoWOhqgWWRwj0Nt7uiGNx6PLIdVJ+
UQQCy1KFQVocGn/01B8XjxPQUbh0NEWOQ9tOiLJrTxD4cfxChsEIm+qT8e/T
MQT6tz0xt25i073xZuvNMIErUr41HzPZ9OHZgAzf0wRenE/0DAhk01kXMr8m
xRLwStt+tNeITV3SO1ZUxxOwUxzYIyjRo5cz1ZIn/yLQrSyY5aGqRz9kre83
OUugNa49tP8PXWp5h7H1TBLzdEPymC+ZT48X0LiEZAJ69790eGezaF3hxOvy
CwQ0XphZHC3UoZol5ubfUsX+Lo154PdAm+ZVX3uxJYNACcMoJTLz6Pe6TkHc
VQIL37KWr92iSR2a1Q+JrhHgfijZ8UpXg77qxLq8bALyHbLr3p9SpYY9pXvd
bhEYKp29T9NIhYa/nyzHuQT+VMt1vFSuROWHA/0+5RPQ9wjozCySo7YyG/Pv
/0tALs1NekLtl4iRPy3Z/5AAkXmCrrVOiJ4pl7tqi8R5GenceSphWOTPspyM
KieQlxO1xGbkpSjFfN7y1bUEmiXG7XLbh4U9Vs5Jh+oJ1HUlr979YUK40O5M
X24jgaJD9ZMy3T+FVQ5TZ5RbCNhfO/OGL5RGo+5dz9s7Cdy2kCkfkFBC4KPF
V3hDQEWm2lkoVEaxu1wiUTeBUtX1LdYhKoi7r4J1/R0B3tV3dn45aig4Yjq4
9T2B4UUCWZ+76qj4sFWZ7ACBjIuFVRG3NJAzk70z6Is4j3/Y5PUHzUNpsd2F
GUMEBDNSkJu1FupP0J7TPEygvkpo/G1QC1kmb/KQ+kbgxosF/+1N0UbHL8Xl
WY0TYNv+J4hcoIPqrlRKBEwSeKBZkvzwrg7SvPnT5dIPsZ7pXiXTPBbyvW19
o36awJu+jPXqMSyUl793/NcvAq7xHdLtz1jo/1TuJoc=
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
inD4YnQk7x0zMGnVGUgRLcZsb1oLvj8wgwPTwYiaU4wrBxfa2obNAMV2vKlY
LcYy99hfhr01g7BCkTP7FEvwcIXKssY3M7CnDbxLjS7Bllnee9l2mINjzSfe
p7gE/4iq4Hr7nznk1qiWMnwuweFe47IVp83hu0fBi9P7SjGbwx4joqg5lF4Y
CmI8VoorDCRIUgrmYDPr3TjIVYqllRzjd+mbwwHZ/RSX46V4WDyrbMjOHPiT
nQ1o95diyzMDneme5sCX/UWhfHkbj/X3G/MoczjR3CdK6tvGo+VdPZtlDgKu
9neTkksw24rhge8V5uA08plDULsEV3yIOtd2zxy+fPjo70tXgqVetMiHPTKH
0fYde6privGT7o9mGhPmINTVm7P7ajG2rD/sfeiLOXxI4SE+f7fNZ6FyyvSG
OTSD3pSmcxFmCynvIxy3gAnrkJh6i0JcQRh7JyloAY1G3N7qQwVY2nL3351g
Aek09KJrggXYEjkIpltZwNxE9pzq/Vv4h0CmqjnJAop5Pres62zn/3i/zdkw
C+B74JLHPZGDK//xZN0rsQDFp1E6uT2ZWGbJoD60yQIS24NvDJ/Zrq/JyCH1
PgsoZLjvdSUgDf9on6eZ/mgB2XHnQn4fSMbHZV+IhRyyhIQvtxN39oRhh78p
t0qNLKG+JWCJzpuM0jS/9PhYWsKzO5pBlwV9UWeh4uJVR0uwnS48uu4YjNhV
fl/85WUJHFTFG/nzkUjhprbZoyBLuL8vwaXvQCwifK0Ky4uyhKWr6kQ33hto
IM3smVKmJQjpVHApJiejlY/Nv47kW8KsyFP3DJpUdFL64LHlMktoFt1nM2ab
hrzfdztlNltCrXpyRu3eTFQixpnk0mEJskuNj5lVs9CzKGoz6rOEv5mlsr99
s9E5Ad5dCy8twTv3RI9i401kEBJy7v6UJbwL07vf2JaLQkffXEuaswQG8eJD
tXW3UM1ZMU/bJUuo/EpUH8nKQ298b+RKrG7rs6UMdXrkI/rh+W7Gf5bwYq9y
0sGjBUjkFHx6R2sFcclqu59QC5A5JftAE6MVDJOiPv3oL0Cx/T/EY1it4FqW
OK3Df4Wo+YjGdTNOKzj9/qcxk04hmnErDRXmtoLLX2KEh2MKEVPXZgUdvxU8
aDzImdZaiKRYjZ6+FrWC42WrFobThcjeoW71jrQV/On5/ezA30KU0raPM1Te
CiyVn+s3MRWhjv22cgbqVrAznySutD3/Pls+cOTTtQIm7nvzj48UIfZGtsRN
Eyv4qkjeqc1ShBR2E5pGrK0g5dxxrnc7ixDBZHCizHlb37NQMvpTIcq9c3qn
H8kKovNENmz6C9EAjT/vNV8r+Kl/5UhSbiFa0X2pyRVqBSzXZOXPORWik+UC
1LUYK3he8qtb80Ih0liPuvk42Qq4s8fYz38qQN5X33flZ1tBoszLzs+5Baik
QGqBXGgFx8bHLnaoFKBnP1OZVCqtwEwr50HR63y0obQkxllnBTk13Y7tzPmI
N0fJ9FvrNl5Mvx6SzUN6S/khvZ1WkPvsrmu58S10J1Vn2PWZFSzrlMwedb6J
3szfXoFxK2C0GA2Ut8hB9FJ0Rw+9swLjrZG9XirZyPxdi8ODZSuI8VM2M/yT
gZguHNvBdMAaHDX2ffg4n4ykgj3PzrBZg9H1C5f+3EhC9i+eXm0+bg1Brtcm
cq8noA6f0BxzAWswWeG/LNoejTz6PorevWoNr/c4mWfxb/8PqHbhN7CGp+3c
YandZHSwnVBcaW4NGruus7tWOqPau3+YSzysAQK2mK9yn0A/shh+ZCVbg1iX
VJT0A28sx/LsHFuONbRZoZzuqUCceiPNKrXIGgxSGBGZFIrFQo89v9FgDTGn
D/4o1ojGni6CtaEvrYGPUOcil5SM++Z+ftyasoZ+ucmNP8Mp+LBl64mAeWt4
pSb2UmxHGm7Vu5LotWYNxhZ8UtmyGXjPU7r+lS1r+GdmnHFLKRMbqT7aJO6x
AbOnZhYDkIX/yOq6u3LYgB3UHo+kz8FqrYfLPp2yAfqUgSJ4noNzRCan7Pls
IC/21SHjuJt4sbrg0KyIDVjedXzhLpaLpc7aXbWStgFmu5UC6aFcHFt4LmJa
3gbS1vd2BOncwhNHv9431bCB3mllyt++W5g/o35lXM8GIqvgmO+5POx/0Ivf
wMwGluLnZd/75OGhWGnbF3Y2kMoZw3WkNQ8fo6PJ1XK3gQzHSVum2TzsHtT7
4omnDexfixZr+ZeHO/5EM6gH2cDdzmC2M3T5mIlyVX4gygZoHvZ4Oq/nYYuv
//kpJtmA+/3U0pypPFzr+Kq+O8sGGo7X6k7W5GGaDzmLqNAG2p64fXd0z8Na
ZhanH1TaQO4XsQZfzjxcOMZlIlVvA5KaQ61X7233a+2F5JY2G9ARXS8XVbyF
5YaqB8V6bKAxwKAgrjMXpygRd9Q/toFPYeWrjedz8UynuKTgqA2EL9JrM0fd
xCLS64TqSRsY2ik7cvRFDg5r6qg4N2cDb2NX9+gczMGjgmHvypZs4FepaIw4
ysbcVcrs3L9sIPYD36S6ZRbuzXsWdXy3LRBHgqy8/DIwK0c6vnnAFmjwS0qf
Zzq2SzVeY2e3Bc8HD2k67NMwffSMPcs5W9AZkl12P5uCDXaW5yUJ20KErEFY
4p8kXO7v8mq/lC1c4EiwMIxMxCrEFcU96rag7J4hNRAUi2NN6M/8c7WFVo/A
lZOjQfiyEOOvTxRbeCxoHDKMffF3Oub+V/62EML4ZeVGMRUb1R1zqo23BR6R
x8qF7fb4zB7xOzbVttBvXxCwT8QajU9JBWo12gI3/xZvupIrim+Aa7L3bWFf
9rEdt0+S0Q9zje9sQ7bAVLv84teiP+psshF/9NkWvhhPdxg9iEKUOCf6lp+2
QNdNORy+FIPOWnmMFf+1BcZivqt/98ejBEY/nwAGO+g5grV/7k9CV2aC1ZxZ
7KDijGdoy67tedQSedTwqB0o5NcONC8nI1OblAdC5+0gIqc3eqAiFTFJZiUc
E7UD5uM9u5mpaaibKc9in7Qd+PKFknddTEfU2WKhNTk7SKlRv6f+OR3xtlXu
mFWz2/5/Sj35aRloMvHuyDMdOzi0QAxoFM5EiXZNxQ9M7MA0emIZujORnHQ7
pcraDt4hBpH9Slno18EuxUxnO9Djm8j5dD8LVc33sYWT7CCgqjmhjCcbmd0f
+kjwtYODx3MmD4Vlo4MpI61moXYQLhnUwTGSjXodxmPUYu1gcbhpK48lB3nJ
TptcSrGDdTGdrBTlHMTHMnueO8cOCqyfG8245aDphU8bB4vsQHry2UxsZA5K
7lh+8q/SDth4VbzTk3OQQtpq3mLdNn+H47sZEnPQb6e/HmP37OCrDuvkWmAO
uo12XOntsoMHuUsUglUOMj+0m7lu0A4K32PtnIs5iPkz44dbz+3A0p1nNWcz
Gz3sZG6MfW0H/XPr/2Xdy0beGewRXu/toL7C6XqXQzbidz1uYPvJDppfCSjp
781G765wn9X+bgddNPLuqXlZKPUw32/ZP9v5azsS2n42CyktCQ7y7bCH7MTY
RNbSTLTeLZ5zeK89MJBVmFfYMlFNlrQL7X/2EPm78EJdQAaycr8i853dHvS4
V+iLX6ejAY6r04947SHI9uD9IlIa8l/WudsitG0vNpY/ojYVCT40Ci6RsIeo
tQvuEnMpKINgezpQxR40K2xoX4klI5t+P3thR3sIVMQHJ1dika0Mj+YvD3sY
1XaSUdkZg+zrnom3e9nDyGP7P9l0Ucjx5hk6xSh7eKfGrvDneyhy93habFRm
DylBh7o+/KMgwqxP3LEae6hXCG47UUdARGNu8kyTPSTptHCNdjkiiryPnOtD
e6A983jOc/Uq8j3M9T5o1h6e62kFKZc4Y//4JwMKX+zhS35Xa3AQEQfs8K7d
u2IPNS9WPzbnU3Hw56Gg1F0OsM7UJfywNgCHWno5GDE4QPDflN654WAc9vLU
tWMsDnA4gwXtbg/FkdjzePlpB+DjLf4SRYjE0WKn6F35HEByUfndeYloHFP5
eElIxAHymsMf0fyIwfGpJx+0XXGAla8vzhySvIET9jwuCVJ1gASWi/dHehNw
YgA1XkHbAbxvqL6fP5GEUxwemQ5bOgDXgV2PCMHJOG2SIp/q6ACC2rfPTp9O
wenaJ84bERzgW69MV0t7Cs7oG2Q+5u0AHdYiwR1qqThLmrL+PsgBTk/e1mp4
mopzao/PlEVt4/+qSbquloZvnhkcdEl0AAYl+pmEtjScm0OuE8p0AOq7e6Kn
TqbjvAPHs1fzHEBq6jll0TcdF4QPBLeVOYDP7K/F3kfpuPAPyTGoZvv9ytSZ
nAMZuMj9mJZCswM816xmNVLNwCUf+i/t7diW+3PLvnhl4DIj0onhh/+P502M
8s0MXP6Ec3fqEweYTGnptW/IwBVy/V8NXzpASkKtw7XODFzVQnzFOeUAfSa1
ifTdGbian7Pj/awD+JYoHk5pzcB3CvtKy744gNnih/5dJRm4ho14w2XFAZqK
Yxm9wjNwbdxRqtCGAwTE2mfsNsnA9TR911d3OYJcaN2159wZuIFKUGhjcIT+
g/uWf8+m48bFI/xBLI7AlXmquCYnHTdbPGRROOoIPtI7LbiU0nHrqMffPVyO
YPRE/lj0xzR8T/XIhyd8jvDkqJEnS1AabuvofZQi4gjD1bkH9+xPw/dFPeoN
pRyh81TVsarkVPyggiOHU84RJDg5nsruT8Udx3pD3qs6wkOJCft9wSm4azeH
touxI6RSj3LlaCTj+WIBtddWjhDBJEDKyUrCjKAgr+zsCDveDKbea0nERt4e
4lx+jjBTL3WUNy0eLy885JjIdYT0P6+7kssiMGvEBLNqqSMI5ZU2lQyHYalT
3xla7jiCZrrMov9SCI405txM6XCEFbOrORy8/vjYI9KM2jtHKPom4mSa6ojl
7KMnWhccgS8hJfVvvCV23Jk3yvPdESaZUkZ192vjRqnBvp07neAd44NjZU+u
IvXbJ263cTlB3rn4uYPXyIigLF7Cy+8EnbdcO2OZvVDGB7VbGWJOYBjvliLW
64tmjnomkhSdIKOUD+1ZDUY+8UNkPgcncJDL0fsZHoXyeGdcszycgOIWoehL
G4N6e9fs6L2doOxTgckjcixatNxvQQl2ggJHMW3ekTh08N9po5loJ9hilfk4
fvwGupgtoa2V7AQb97J9zhknoOvimmod2U7QEi7hGR6ciMrdfGRyqpwgtbt5
dv+jJDS0N1F8T4MTOMsxkotRMvpRWiLg2e4ESd0qNPerkhG7XNvZ2R4nUNNc
ajjLkIIuTz89qTO07U+r5/tmyxRk6zvH0Tm6fS/tbSR/OwXFsv1lFphygl2p
f880Laag2vqDjLlzTnBbmSNs9XgqeqnJQ7fvqxOc+NnM81U5Fa0vSm96/XKC
nukjOM1ue/+L0l6b23SCOi4n3c9eqUiJy+Gb7m5nsJti8V8JTEWu2P9T1wFn
SBaWfdPgm4pSTFNmBNmdoe+Y3riUSypqXSufuHXSGQ5OMt8t0UpF06kPRhnO
OUPxSN8Q4/lUtEvoxRMfYWfovDDhlrSegniHFvo+SjpDtESJtSlOQZqOm1hf
zhnW1T6EFfikIAot670eNWcQZW1pSjmXgnIKztUL6zrDhFhfgcPTZNQpg27n
mzpDWYrSPhuXZDQ/rley39YZhK9J8j/5l4SE/wvO+ERxBoH+OhXm3Umobc8Y
b7+/Mzi7r+p9PZCI5GgE2kvCnaGn0C718q4EpLc88dYizRlExEbf9XbGIc8n
l869anCGT0pPzb0rI9FWb0J7Q/s2XpgUwxnVCBR9f+5qco8ztJyQcal+G4ay
b6eSNF44g97lXaC8Eozuxyy3d/9whlNWO5ZxERUphihpFqw7w6uIXVpjviQ0
7H3rXcBOF3iUdj7YKMcdvXVQp5NkdoG98nyerMNWaKdSueZdYRcYaDRtOs1x
DcfJbr6Ll3SB3zsj+jMFr2NWcX2y8xUXqKuJ2yFqaovPcO/KOqPtAssWG9RG
fQJW2Wnx/ibBBX4uVXQwHvDHz/80kX28XeCGW59d5ctAbPKdkd4w2AU6L2a/
GO8Nxi7v2viYk1yguWV3SphJGF4Z++/BcuY23rW10C9p4dj/qeO1J/kukMd7
eTy/JwIndLBRou+6gFii4Nvhv1H4cLMbvX2LC3zjvO0BtDG44E5vljx2gY22
D1m/N2Mwb+nR86f6XYCThisw8XMsrsslPdgcdgEe313RtwbjsFTa4LXJV9vx
1ll0tWfF4+64kzP3prf1k+N6UoxuYPUwL0rmvAsw6ldJTexJwKO+w/TUry6w
fiEnUbMyAZuRzmTr/HKBg3sKXcokE/G8k/95oU0XmLXv6Ku8l4jdrV482E/v
CgWGL/OyWZPwmhGf1uf9rpCtciv4gEISDtYKmRk45ApiHBEV3C5JeI/KOKXs
mCtA02nzoZgknIwEd4efcYXpnoHftAVJ+MilyGyrC67wKWTv5eE7SbhYYOo8
EneFYZdHP882JGF+HrEOTllXsH973v9QbRJuPBanta7gCn9CvBtKS5Kw7KGZ
mTENV5DZZLn/KSkJ9zFKUpv0XGF206r1ByUJa9Im7U697grJgkaHRrWS8Njf
+WyCrStc+y9OoJo7CVv+lOXXdHWFN8rCspLvE/F+ZppnoxRXCFiYvD9snojb
hLrJpgGucPov87rPowTscC388EzENt6RYb8a7gTM6q7U7pjgCvsSooQX3G7g
rvg9FssZrsCQQmYsLovH7rcf7fTMd4UqKxMZ66dxeGBBUy2s1hV+CSXvN/wZ
g6m7//u6954rHH3xrb1/ORqf5nmRnNTlCnnydgyt01HY38bw9a0RV/g7mSyz
lhGBhaYtHFtXXOFLhkpub0Qwnto4xYj+uQLbNcnoEwaBOPbo7N2HdG4QWlCb
yJrih2eNHNdG2NyASXH+259ZKs56QYhcknCDmzEkxkpNW0wzGFJyOsANWAi4
nHrXGd35KK9SGeEG6n5EB0UeAjKhp/8imOAGa2YnTi18JKFG+VhR2Xw3qBJ5
Uyt52RtZWWuM9ZS7QV+LQezUU1/EFMLkp1brBt67VpRuagYgx46UbsMuN9C8
cYfnK30IOjSlZz896AZlFnMm02dCUfdftn12I9v+SL9g75EIQx5HXt/5/MYN
Flt3r9CjcMQpeVOb9MENfO6/kTwsEYEGDc1Wf392A5Eh+QIqVyTy9DyRHbTi
Bvlj1xjv0EShZw3F7+Lp3CHb6oPFeEI0ChixC2dhcodBnTh1OhSD+L6f5c1h
cwfewZCRgLcxaOzA4uOTJ9yh63N+3jePWBQuUO1RftYdMjWy9Ni+xSLhq+4s
AkLucNl/pQtbxKFpF6GWRgl3eGZ2WLWrIw7Fxf4wkb7iDuJnbDKXGeORRGXj
ZpeqO4QxPpIVUItHc/2eRSo67rCRf4Di6RmPUuYllJ6auMOB0yE8PcnxCNH9
/aRv4w6ma3sUDubGoy9cD25MurjDjJfUN9f0eJQtFyRsQ3GHrMrbwX8C4pGS
1ZWXn/zdIUFGaf6VfjxaCdrlQ4hwh+TPuva8x+JRYd5DzrUb7pCiqXPy7Ggc
yr3OP6af4Q66RIbwKf84lHUkNbkxzx1Ez8cmX2eLQ6njf9RZyt2Bm6cLfSqI
RQkZlvSku+5wfHWIdYozFsXo9Xc+a3GHt1qHd2bHxqBwZgE/wU53kDS8+Ddg
MRr5Jvxd/vLMHaZndqu4hEYhqoZ1lfprd+h2Jos4tkciwr5B26r37tv5LBy1
XYhA9pEZrx1+uENPH3WOfDIcWSn8S+1bdweRsyyMt/nD0PWdtppndnlAXNsJ
KU7BUKQTKNwzw+IBzLfSNTg5gtFVmayAK5weYHHupv2nXYFIZX3zUgG3B7ze
wRtzvN8PXfYcqjYT94AIRfVE6lkvdN7dIWPcwAP6qFWD7kvOiNb8ltNwtgc4
zC6+Ex80xltHabkvFHmAkh+xbrXTCq+/dp6Oq/KAVzyhBLcb9vibvoSuarsH
FBU+ZZL84oE/s+Tvr+jxAF6hoyMtMiQ8/5xugH7IA1S5VFelPSl48uoLmd5J
D1gkFhmpP/DGYwxSa6fnPGDhKagkDPjikcGCupAlD2gsvBt5utsfDyi686BN
DyDfV9I5cTkYz4Q4f9PcRYD6wFF1l2Mh+O27W1cDdxOAQ9Wi9ev3EPwmj3bP
1AEChPYeHqHzCcPj/y7ZMbISQLj6xOmXfOH45XWXbml2AkhpzojrPwvHI+15
J1w4CSDS/+u0rFMEfnZkxD/nJAHuCFJMlFcj8LAP3ZtBbgKUb4heF6BE4sfj
Epf+8BJgZRAeNs1F4oFLrmm8FwhwMf3mmUbVKNyXkf/dUJgAQntUnXYWROHe
1RHNKHECyCxN1PgsROEuPfrqZkkCXHtb1Lh5Ohp3NEjunZclgJuFP2f0tWh8
n9nN/pAcAeQyHZiY3KNxG7GgR0GJACTLE+djAqNx67MXJylqBKD0DX7aCo7G
zYK7A4s1CeD8wNA/mhqNGxKkJkZ0CPDF6/FXyevR2PomE12bAQEOR1DmpLf3
N+aKGYFCEwKcyL0u67gnGnc1NhtFmxNAkfMyfBqKwoSu2FAPawKEPT6S+yki
Cp8YNq82sN/W19khlCYahYffiLySdSZAdoJXNeerSBzwkZ7mjDsBvu/yo+lx
i8T8K2/OMZIIAFn2NAPrEXiC5q7uTyoB1GwHolwDInDs/rCANz4EGBsSP7W2
Go4XeM4/rwghAOetBE+GR2E4U3RrPTGCABqLAnsu84RhJXjB7RVDgC2mmO+V
PqG4xNjPWzGZAC/n3dTadodgXftrRfzp2/LwDzte+WC8k8w1xJJNgJmRqI+9
XwOxZfzjEzMFBLjfGs35PdMPc+Kj/YG123hv8uSJthScxn3/UOtTAhh06DN9
/qKD5YWTUP4LAhRl750LGlfEP2RtnSLHCLAgzZCk5H0WaxkyPtB7SwDNRAGF
hBlVxBh73fb7VwLoX7j//tNXO9SeIZQw/oMADw/yCHvddkLOxbSt+BcBoupe
tYkYuqGB+9UMCZvbfCu2xqVLkVD48kY9HxMRPJSOlD4Z9kaiG88m/2Mmgoxs
W3e1zvY+saeU/s8hIrRH/pid2v6/cPqqSf8xIpBedsaGhwWiZYFT4TWniDC5
cuH74EAQypNevZN+hggFBrQCvoHBaEPv1g7bC0RgjlLiXcgMQbetiOfVhYng
aPRv6TFbKDJxV9QXESfCTs7FfWLxoWivH0cQhyQRFN8Ndi2thaLWqKUKGlki
fPkkb/bIOAw5pHWNfAQiOO3j5qmsC0NshekbwwpEELu83811Kww9vOPE06xC
hL6QotBfcuGI0iardUuDCNhYSJTfPxw1mfTvfK1FBPouuUj/mnD0a12riVWf
CH88/Snxo+FI4uYbBy1jIiQWetzX/hqOfKRtj8SbEeHQ/SGzvr/hqG1iaajf
iggWp4VLfm2Eow0/r6Bd9kQwdRt9+PN7OJLl3CGCnInw6UDL3+E34Sjwfuys
rzsRCHf/LOS3hCN8nTWzmUSE2dUSo8TocETz75bqD08ijPqvLQ5cDUdXbp3d
uOC3ze/YTlPv3eEoVLauximICIzeV6aeN4Whnikpq9IwImwIOXKzb/NBG9jL
8j6KCJpijzUSv4cipeOafZzxRCAzHH3sFxSKojrGvI2SiIDiMlbO7wpFA+ZW
59PSiODOm3T8j38I2re1OPU0iwgHrVoFZZeCUTzalFMu3OaX5qeqrF0QevI2
ajW0lAh1rcbvOf4LREzB/1V0VBJh+vOtryx3/FFSJ/f+i/VEMG47ajnd6oOe
W9ZgYjMRMv/NOyTzeSPmHRKkO21EODn1e401yROlX1Ef4+4hgnrhWkSAFBnl
dBMLWUaJcHQz+kOzriOasP6re218O5+dPzj879gizl0R9HGT2/qf2kZztixR
nnyWy845IlQ5PogQPa+Lins7xL+vEiGPVLZTa1EBz9qqLPCvEyH0rKTQrW5t
zEM3kuO4uc3f8/6jqxtGuEJxbustPQmYJq5v/U61wdV9DI+GD5OA8Z6JtrIv
AS/Zp/vv4ySBerOE93MGEhbYfUJQ6SQJVHgpmatJZFynLJL2gJcEDlpyrmMk
T/zjY7vSH34SsJzmIzMMe2GxaMU/YsIk8LZ8QsUcPrh5wMi8WpIERSYx9/8L
9sNrjjMHF2RJ8PBTCJGU7Y8l9rr2cMmR4G7cHamxggDsU7lKtVAiQY0n5f7D
9EDcphrEe1ONBFvjbU8GvYLw3097Jl5pkmDtMuftS1zBWCY25QazLgnMdYJu
lwcH40A+TtA0JEGTQMPAgdFgjB+V/ogxJcHZGw6PNbbnVT37M2KABQmmLX7+
um4Ugkvs178RbEjQ1VkqZBYbgjMbuQm2DiQwkYnfL98QgmN3Xls2dCHBgavt
XHQvQrC/lo+7ugcJKixED+Z8CsEeecVLl8kkGHlp8+nfrxBs/eWJq4gXCSLJ
7RMSf0OwntTvz2f8SHCKT6hOb/teOfq0C0fQNl/3+cVMF0Kw1CuNRcYwEjw+
qH/S5HkI5uf2cqKJIsEJ1RYXl7oQfIJUuPAzlgQr5m6Ot6NDMHPnY4ePCSRQ
0kh2vGgYgmmZfs2/SSGBTM+Gyfnt+NZMT9oPZ5DgmWBwdeObYLxYqTbXlUMC
00seX7cSg/HkGsW2KY8E1579Vy8lG4yfKuZ/qCgiQUG+kTLvwyDcnTponVtG
grg5mIylCcKN73++T6wiwaKMN8vhC4G4XPC4VVgNCfL5o98pqQfgnACVd571
JJAPeLE7w9QfB3HcmjZrI0Fbh9X6oJ4vJjn0m2l3kICHiX7j1WUfbNv0fVKh
mwRLMcVkjWPeWE1baeL8o22+m6IlNu5RMWvM8tif19v1eKtB578IAqYf4zBc
miKBB0fg6HNVd/yHW+HVu/ckcOVS5pMKcMHTnVmj/Z9IYOFNvnzioR2u/H3l
efofEnwLUWvNp9fDuUquWjH/SJDqoSjbzKeBE9IynvrvIIOBt95ncWXAFKHP
T2z2kgHe9hIEqy6gy45pj4Q5yHC1eKrg3icTJNzcoXrmGBm433clfVW0RNy0
nwbYT5Hhty93fQ6DDdpbINu/xUuG7gXyJQ0PR7Sx5KD0k58MZqk0v/E+F/RV
OuXhvBAZIsdJ1hnpbmh0bL7niQQZbAU2Jy9LEVHfmf/ku2TIIMBIfshjQ0L3
yNLdjUCGyvA79aQQMso7kNR5U4UMt1e+pbPlUlGyWRtK1CBDsh4wB2Z6ovDb
sx2hWmTYrr4x00gv5KQs+cDJiAxvmryfdsr4oK+8HA/rrpPBUs4kNIbFF5H2
/Rn6Y0mG/vRv/5689kVrn8dHr9iRYeCa5i2uRD/k/6R1MsaJDGIvLctERf3R
jrtZs8/dyHDC0o657aE/ikzy/sJBIgNnpWsqWSkAMZCMVqw8ybBLgyH8RFMA
StKV2Kj0JcO+KAf7jO1+eUicnfZH4DYfmXpZHaaBKIftN4NUGBni5PNyA1MD
0fHfYyyhUWTgcuqO6m4NRMWvW44+iiPDL+eXPCmPAxFveyYXcxIZ1BBx5t+2
XJ3rdd4kjQyEq2Vn2doCkXCgoWhR1jb/ERc5V9MDUbPFJenFXDKUPR+/9tQi
EElfOSwvUkiGXAuj7qnDgajz9JqabykZJoV5a407ApAC7ZhOdyUZAv/+oMbq
BqDBuWaTfTVk4Bi+I/JkzB9p9mdY69STYczbczpY3R+NVHg65zSTYeLEjB7d
XT9kGGtAmmkjA0XcuuLxTj806XLRlw+TYfizhKOesi+yusoWSuohg+SPuzUn
A3zQvMCvmLZ+MiycFspuKPFGy9+bstWekeGzrXZh7GNPRHmRXpgySoaU4u96
DENU9LuRWvlmnAzPJl3WH3ZS0E5v8XvO78lQVyGyoyGGhKKMD3XVz5FhNtnx
o5YFETFKrw6sf9quZ4+X37bOE9Chzcbx2B9kUGrcR75m6oJ4w8V+V+2igGHe
7z+SzyzRHTtWmp+7KVBe7G/CKHwdiSiv7JZmpIA9DyXHs8UAyexrPPyYlQJH
YMph1U4ZXUsSvfT5DAWMKOxTZwMV8CiRBYnyUSDcTj2zQfkaNtL9qeQnQIGd
S/p2D3/rYWu2BgOGSxR4oh+4/7G9Bf64lmKuK02BxTvHTn6Uscaur0n2NxEF
bhtaCfq32mLPXBHP8yoU6O6K/qcW7IT/BjAHkjUokEyo7esbdMHBFj8i2rUo
8Eoi0mFtyw3HnK5PVzfe9j8y2/kJGxEz0abcSjWjAJPVreem/5FwyhyxdMKK
AgEm5Rr/tkg4t0K4ycWZArc03t32a6Hggdc2A/nuFIhTkZr96EfFK/syJl6Q
KMCTX5ZxVNQTn5QZ+LrbiwL/lAR72yc9sbrb+g4ZPwr4z4oMe3h7Yc88/kOE
IAq0nOVj/knnjYuemvOWhFEgYd34074IbzxMkyw9HkUB6awG7L/qjdeFezQZ
4ynwt/AwHbOhD+axWbWCJApw8TzUr6r0wTppZ6mUNArs82BZ5F/ywYEPjaMr
siiQspdzI/iUL676FXdzMpcC+m+X36Yq+eJXZztqDhZSwNmDLs3pui/eafyt
S6GUAiumI8YMNr5YIPb0S+9KCuRd3uUdauKLjdv1FqrvUIB3d3/ROzlfHP4l
8u+7um3+Xs7PaXD64tpj95gONVOgJ5qu4Pu8D57U/HxKtY0CDnbJmn+KfPCe
4GPiAR0UeP+iaSNLyweL1V1TqeumgOL9YXn2b97YcibEdK6PAkEOlbc6Q7xx
PEujO8djCpB6j09MbPPTqjAfcvXptn1/lWfY3wvPUtnTQ15QQIQ9+szzeU98
sFytomlsW//yFReqgid22Ht3+Ng7CjzMG5TgnKTgFKn377VnKcB27s8E02EK
7nBhWY1YoMBgik6sozIZsw17Hf36jQI3rM7vMYolYrmtSoHTqxQIHBSP2JtH
wO5Ck1cM/lDgOjWj+6aOB+5LAceOHVS4bdfl1a/tgqmGe5sSmKlQOryvyaDd
Go++y9EUFKNC7Zp/3sLd3ZiG+YmVjQQVvjVdEc1aFUD88luUTBkq2MfGbZjO
Awortbm5pUCFd0nRgSW+2kjEmX/hqT4V8h4cLJ0wt0LmN83/7jKhwkpzswut
iw2KHUpikjCnwpeay8vpTnZoRmBVrMCeChmpY3Z1kk6IyfKsyqgzFZ43nJi/
tNcFSSUbm+7xoMJGrloLU78rSv75IITgRYWg13QKB+gIyH0kyeq637Y8H+p7
ro2ANOpsrqgEUYFNREXymD0RnUu6eEosjArLTCdkCvaQEL3H3h0no6jg0Tfg
Qygkodmrk+8Y4qhQ5Np9WEOIjLr473auJVDBcYG/5Hvj9jxiCC34kEIFIzci
J58gBfkv6gU/zaBC7M3xkME8CjIePGvZnkOFT1/pr5fsoqKLFeuoPI8Kh0up
holmVMQa9eREahEVdqmOP3GopqLvdgVbgWVUGLMxSmL/RkXDCuS3zlXb8Sft
z77B64mquZSwQQ0VLqhRF+r1PVHMTo58uXoqPJlGa75ensj+/edAgebtfCgY
any84YkUOjvMj7RRoausLvlvlic6lZ98mb6DCvuytInt2/JmgO3xH11UOPiv
YEFg+/3k9UubUw+3+eTeZ+zm6YnuSe+bHhykwq/S5YRkPU+UcWTqQdMTKrCz
NRo0n93uz3/u3ip8ToXN1KeH/ixTkfZ4aMCNl1T4bn81POIOFQm06Jv5vKaC
3xu9y/GWVMSYwStrN0UFHbr1d7J7qegT5S+n9nsqMI54EofKKahPd3hDZo4K
VYRLJzxlKKhEpHCS9xMVZjcK1IL6ySjkP8p91iUqxCnut+RXJSOZpxz+X1ao
MFFb8SVRmIQ4ar6Yjv/ezufZ3eqLWUT0Kx5L925s23ei5Tv7m4Dq1Oz+3qT1
BJM0higN5IF4+mp91Vk9wUXL2m1IygnRloaZXGL3hIvfjp4IyHVA78MMpLg4
PeH3VxMe0RU7lHtl4886lyeMscXRccdYo/8eKPtUiXrCglSKRV6vAfp684hx
xiVPiHsbeE/+iC4a8l2SCJX2hLADt4XnRzVRpETqb2N5T1jWfBMzsAvQRsO0
115dT7hsRK76H8PVHY/1F4WRitJQGUmZyd573WPvPUL23pvX9m79WmSkhKSS
RCmSJFeS1VSRERERCkklpN/75/3cc+957vM855zvd9+6Jh7MvXP0p3MiFNYe
tnZuM8QNMVS1cbdEsJL/wqm+bIFj5CR/N/omggvpobkLuxOeqkpIDI5NBOW/
Nbv+qfpg54Mbo5WJibCq4B/L9c0XP82mm8ykJEL9GbmFTef88dX4Qt5QSiIs
qSrOdDUH4X3TAqSqrESwNrAwGlMPwRTXypnZk4x8k9cJAVdDsa/ug6aw/ETY
wv1Rpd44Ar+p1ROpPp8Ihq8/+3KlRWI9kZ6TX4sTIfPMyWTR0ihcW2C/LH2Z
kb+HyC7mHI0F2YbdI64x1spG5n/fROOcFL+nNTcSgZ8+YOlpFIP/fZ2Tma9J
hICOf2e5a2JwpFf8Odm7iTDqefXaD/ZYPNq7vhHZkAh+F0ufdByLxdaGtKDb
TYmgvl7AF1seix817Hi90JIITPrODR9GYrG0xDl1+SeJcODcwWvfdsTh4ouH
Lkd3JsI5Jx6BXMU4zLHzOvudZ4mgN52l2mURh1OJcrHfXyVCrLLJQI5rHJ5d
uj+k8C4Rnqor7Pp2LA67BYBB7EAisOpod0/Zx+Ge9103735IhNtlctPndOOw
hrndvh9jiZAge6KRRyAOVzYPpil9TgTNoYh1ynIs5pXz/Rw3kwiKBr3lzDgW
Z12etar/lgim9SnxbRmx+NfeuIbl74nA6+n0bEUpFgfS1w6p/EqEnKfX2AdG
Y3DfCiUrYTURDrpc2lmWGYMNwzgW720kgtR7lT/nGfO9fiTf5RcLAT7s2rJj
+9VoLGJ78LHqVgKYBDpGg3g0zm27JkHYToDqHRnqAiZRmEVFNvf+LgJM+nSM
XJeOxDHXG1Z/7yWAe+Ots73MEdj2VOezJH4CPCW+7d+ZEYpbN2yUHwgSoOXs
skCPWAiWixko/iNKgDduDh+824LwTueZiBQZAnz1Plx/tc8fPxfYvjtNlwBc
D5/RzHd4YO3cvKRmfQL06Tg+39Xqim+y8o+vGxPgBMdh1rtBzvjEjPTddBsG
PseqLmMtG2xaZ+2Y6U0A6V7H33pvDuLGw++bsT8BTuY6sZzYsh8dOe91mCmE
AG4TkeyFE0poS3r0L2IMAR6XawQ3Mr7H2o1zz5PJBIhTYHVULnBBnwMfvkih
E2BrlX6zb8wxtCVrkiXuBAEccpueG2t7ItNO1Qi/XAI0yfx1SHnug0KmvcqP
nSMAIT2ukWsfYx5t/e+9QxEBMj/815Bk64+emwzrGZYTYPDijlW3a4HoWxAr
QbuCAC/VsfvT5iC087hMtXIVAY55dgz0dAQjuUrncelbBDjvFuXwuy0E2XZl
ch++SwC91xydo7WhKOZLpcXBBgIcTONR5soJQ7lsb4hcTQTwvF76Tt47HN0V
X7u3o4UAP+uOqnwQjEBvTUXnNrcRoCLW9tHz3gi0HGwluPGUAD1jFt/ux0ai
ff8lOv3qJgApbbrfcVMUUrlx6cT8CwJ0/raKjqREIefuLjzVS4D73HnuI0tR
iDDzfXm0jwDsNc16j8Sj0Xn2A5LvBwkADZyT2TbR6IGEoderEQLcWbS7/SEi
Gg2ZReR3jhOgUTJ18DIlGq2FnOvGnwkQUmQyNpITjfhP4I37MwToqkujZxdE
I52qL0q13xjr/QfIj85GI88ezpDK7wTQvPa+kECLRpmzmqVlPwlQHBq67WV0
NCrb5v/2/B8C2Hl80ep1iEaPJU+znf1LANUFNfbzstHok3mDzn/MSRAzmDKk
zxyNNoV9jCVtToK3zIINnwujkOhJtspk9iSQ/fqQnHswChndVBiJ2ZEEsYbN
iQN5kSjwmdueUM4kEMpd7uBei0BZcxQTX64kYFk623LLIQJVbq9Jc9ufBC3M
azXMpeFo1uLflLlQEngO6C2dZHxvbA8X5zc4nATm7iUXH0iFIulTdnZaEkkw
z+NNT9cLQZHPrzyUUkgCuyx//Q9mQWjJ0jSHQy8JFLnjPrKP+qK9ETFPWY2S
4Ey31vD1ah+kfLpodd00CQo66ZS8OG+U+OKr/zfbJPDKGl36PHgMrVqd1Xjp
nQQz945+ZNa3Q8w2Q5+yiYzz7Xr45FVF3NXiJBJPTQJbpYHGOG0dnCPb6+dy
PAl8MvQfSo4YYMGdXZOCOUlQazT74r2ENYYX96buXEqCYbbkG8EjLphNR+HI
uSuM93GJNqrLHMOvq6uDUq4nAX/d9FXRCA/sferKF/3bSSA+9vnS6Q/eWHz9
kMSRuiRYXBRCheM+eDGsKGT7/STI/hAQ/OCDLyZanJ1925IEe1go4pl1/tj0
IYdUY1sSuPxpu2lzJgDvljoeVtyRBDsrts2d9wjEA0Wbqok9ScDWXnubSSgI
l23L/Or/MglO3lI4ITMQhINTVqXN3iTBDQr78FtyMJafTYiQ6U8C33Cr/jrB
ELzi+r2GcygJbE5KcZ65E4Jbu8Pnf44w9HdtCRBRCcXHNb7IDo0ngaoxkxzc
DMW2N/yiWj4nAc7Tc27dG4Z593+8XT6TBP+ZsH4kRobhseNui/RvScA5t/He
82EYrlzpkw/7zog/E3QHrYbh6GC7GJufDL6KLgsdkArH6gPP7yj9YdzvSjaZ
swrHTKamSzx/k4D+eFKvyjccd91/orjOlAw+XTFBR0PCcc4RFDfGmgyKzo80
NjP2XQqb6trZkuHimW1lPZbhWHCr6nIlRzLoFBSTWiTC8ZfEO8qndydDI9nh
wupKGK6dkk6I2ZcM2Zv1gqqawnCSc+U9J95kiHI5bMEUFYahQ+SXBn8yGKgF
Vspyh2E21UuqhwST4Vhpg1xIbSh+fY2PwCKaDC1/nuks6YTi81zn7k8dSYZv
H1r8uHAI9qZxrvRIJcMDLlXnQ8ohWPznKfXbcskgaDYLriXBeNGfLTlPiYFX
8w3nwbUgTDT89+eYVjII370JHQWBmDHXNAElQ+uDwDdRbxl6i/5KETVIBtVK
dSmFrQG4bNO3ta/myVDwdsT3mb0fbm0b+pvulgzFtlHVIzu98HFFZ11fz2QQ
qrm0+9tmD2xb3pth7JsMP9TZO74vuuExUte/naHJ8OKja5nmdWfMpNfAXJac
DEV/N68WBllgN8PpnoH0ZHj4N/+GVpQxrjfhzeckJ0NiLzmsP0oPB1uniFFO
JENW7t+4nFIZ3HtM1yLwYjLkb3mirreqjqS9ovZdupQMWw0cuM+56yG6b9nI
+yvJYGqT81NY2hhphrBEm1Uz+C7axvkhxwaVJ3bkSz9Kht+au+1N813QevJv
j4DHybAivJxqXeaGnNPFj5Q+TYanHx7axRa5o23UEw92vWTc33Bckyzpjfyz
HpJN3ySDe8e07wN2H9Ry4qsFqT8ZtGdHtmwZ9UFxZ61Hl0aToVnwoJeBvx96
mZ95XWoiGYynS84Hc/kj8fO10f7TyRAUbfuGp8kfkS+Oa5TMJcMn1VyrrfYB
6EPpnk39C8nQw8rHO/8hAKmWGzzfuZwMj29y+lLdAlHOtfgCk5VkkPhWxJ3X
E4hmK695EteTwSmP6+OCdBAyrO4/8oApBWonSxuiSUGo9PbW799ZU8C1vOLT
t84gtHJXvUmSPQWYK57IOjAFI/uGEIrfjhR4n3nQ9JxkMKp+UGRZzJkCvB6p
C9XGwWjLo2dcfVwpsClKrC/HMRh5t66P7uBLgTsCMjG2jHXTE5lK40MpIJhA
383MiOfq9IzJFE4Bv+BQ5kaJYBTdk63ZKJYCt9vlT+f8C0I9L1o3fZdMgbXB
Fq4mBh7R3u/PJeRSYFuzhmIwOQhlvBM+56uUAuurRtSXckFo4L2D10W1FPD9
cbNN/HUgUhymir/TSgHRK7dRu18gOjV67zsHpIBGwebixdkANDU+1WRkmAKX
I5au/w0IQPCZh5phmgLOx03eG/b5o6Ivplb3LVMgZuXZeRkNf2S9UPVR3CkF
pC3DnOljvqhyabjSxzUFbD/qJ70R9UUsvzhiizxSoO7LpmmSlw+6vx7JyhGY
AuYWkyUs8V5oD1PZC8PQFEj41FN9654HCt/Uey49MgU0s/GAwZdjSHCbksRC
YgqENNf7FYm6oOM8v63eZKXA4b7IK+V8tii/q2ui7WQKZPxXXPjAxhJdSi5K
rstOgbD2S9pG3qaoYVjnWn5hCkh9ck1tCgP0+RJ13fl6CoDJzbl4/RndRVvn
XJObKXB++mTVwH1+vM4sLq5+OwVarnpSWZRk8T7/Zw7776eAl9Pjg24PdbG+
+J6bwx0pIHK8trvCyxpbD07A854U0A3RYt+5aotdT9zrb36ZArODkSqPHtjj
6K8uLKX9KXCAW3xOjNsZp5VInj8zxOCLbDQPd47i49brMpmjKTAsIUu8rOuK
L9VecvWeSoECtfE5dxl3XOUTs2A7mwJbS8Ov2p/2wA17DGh68ymg/SvV6sMH
T9z2ZN8BxaUU8PxjU1m3wxu/jJ+qFf6VAspX6k/KX/XGQ4cbjfeupoC92Ayh
VMEHf+7/78OmjRQQm+sNar/HmGdZx2KXmVNhYO40V4S8L15Xl2H7vDkVft8E
Lb/LvphtdqOkjz0VCuiDl+PY/PDei6+VOnakAv5T8iopwA8fsizvbuBMhRTr
CzP2jX5Y8m+c13WuVNAP4Nr/ickfq94y+lm4PxW+Kom93Yr8sb4Xz8njB1Oh
KU3x+t1Yf2y9e0YwWSgViON0PHDRH7s+bmoIOZwK74/6eEY3+WP/2FOWbhKp
4OXzMD36pT+OFvH8ZC6TChodSveH3/vjtHdySVoKqbCr/djuln5/fJzGvFNa
JRXWFNXeiTzzx/mqb6/wa6TCohnP5f33/PGl6asaO3RSQUG5qfhevj+uOp/4
6i+kgg7vxkPeUH/cYGYaMG+YCvUvXx33V/HHbav710ZNU+GSe39l0y8//OLm
XM4ry1ToHRr4anDLDw+4PxJrtU2FCitcqOzuhyd3ZDfXOqaCbJXk98dMfnix
xdv+sksq/ITfRkLFDH6jFL+cdU+FBgOxd6dkffHeN3174/xTYTR/peCShg8+
RLl+wy84FQ7b7s96d9cbSyonI8fwVMjy29KtKOqN9c/xh6nEp4Je5Bgkj3vg
aDe/tt8URr63zVSVBBe889LsmPbxVHB54pKYOOKMqydi/pFOpUKsX88ir6YT
ng4nanMUpMLtj74ZNe/ssGdmSYNgRSoofu6vvOFqhNefiPYFVKWC0R4O4u2b
eriIrfpH1S3GPkGEErSghfvONsmr3E+F1q9vt/jwSWLLq++rzLpSwfyfwkoP
VR7NfvHsPvM8FVpWT9OCn6qh4zJT029fpwLrL76wIwu66EnDsqjnYCo8VPlw
6FOiMfJeSzW4MpIK45YVZw1GzNAG2uT7ZTwVJPxShNXkrZBmN+el2NlUiH/E
90G7xw4N7Ljw6P58KgQTNtVz2jmgRHvBD+tLqdDM+y34Uo8jujMsuz9rLRXu
1KWMNOYeRdaCDWrP/6VCms7W2YaPLuirv44zJ2samDtIlofxuyHxeYu8ixxp
MBSsLBzo6446FN/eGdudBpfvaD+LCfVA/gS314e50mBx6wnRQS9PxNI8Ph+6
Pw2UWs1PCet7oUtMITtqD6bBj2zajVA2b6RttCj1UygNeL6ZEzoDvNHQfwRz
TbE08JG2zmd+4I2SXm4EZ0qmwb8kA78fzD6Iey89q102DXa0sZcyvmJR/dEd
FexKafAslOlgarwPsi/Ob7dWS4N318pkvpX4oMWxAxN5WmlgH3dN83GzDzp9
+ArzIEoDA+ow8etrHyQZKil4yDANOof3bYof8kFdt+7o+pmmQa8HM/Id9EGB
P9Q9Ki3TIBbL1z9+4YNY1VtTv9mmwaoOPL183weVp5kUKTox3qPRryVU6IPg
8ctGgmsalHyKm/YJ90Gjm53fN3sw9u/fv0FT80Gp5iM/mX3T4Kc/8dS9FW/E
m+2/zyQwDVBlw8Mjtd6o4e2c4qnQNCj8ONa919MbOfLG2fVGMvA+nL14h8Ub
LbmvRnHHpUHArAUrVdsL5VwmnTlGSIO8oAIJAV9PJDvFVlOWmgZ/rru+60n0
QKFRPLOS1DRYG+189TTqGGKrL2WLPp4G8u/FdQlObqhi5fCRe6fSIPvpcPas
tCsaJyn7o4I0UCRSQjnrnZEY984z0RfSwKP/6eT5MCcUWjV9/3IJQ18DD9so
Xke0/KZoO2tFGgRZ3bqj42SH2ESZ67oa0iCR2cFCfsoYyXa8YLYfYMS7ZMed
9duF49yuS1E+pMFGvM5mPi1R3DhPdKofS4O2e40HqHryWI9H+Qb3TBoQjymA
raM2dgwush3+kwYHl6eDE6+a4QvrcSkcG2kgJuEYucvNEo/mWF3VYUkH6zDd
Uzrr1jjoAdPKpW3pcOfbpxfBTPa42mpIqHdnOphbG9Mt5B3w4nidBcvedFD1
u+H20sERp2wLuuR/IB1a7l1oDI9zxrgUugsE0sHQ1ssxIfIoZlXi+9Ehkg7K
6V0si24u2LTzB//KkXQQiFtQCld3xaePvTCWkE6HGsk7eyhb3PCbhYpoN/l0
8FJ6/+5FuxvmphKLTiqnwx/a75LZ2GP4GK9be7N6Ohy/sWabs9sdl1UrzX/T
Tod9csKn00vc8WfYwSuglw7tV4KXovd7YMm+KT1bo3RIED6XJU/1wFEhrWEk
s3RYUtqkVjzigev/Xii4a5UOeYM9uRcOe+I/Z+PwhF06yDBrKO9098S6YlYz
+5zTYWdX+MAM0ROTm8T2GrulQ+iPeE+VfE/cac2kQ/Bk8JX8PelvgSfmmBgM
rPRNh76NmQ1ruie2JdTlDAamw39mP3IMAjxxwfbTTdvCGO8v8z++XckTD10K
nNSKSofOx375gwseWEAZdkbEpQOr8pHOsYse2L9rv3opIR1SbLV2+Kl54Bvu
P3xepTL4Ojoefa/NHc8vPj/JREyHDC8jHVldd6xEq7inQE2HY5z3KaJVx3DS
fuJH3+PpoFnfAf+2HMPNNa7s+afSQZA91kTZyQ0z6yspPc1Jh9a65D8aBa7Y
uJ/D41d+OujJxq9ldbrgE6FT9CMX0oGzY8vFa1+P4n15F4b+u5wO19ldF85x
OuNtfXt7Y6+lQ3k2uZRT1Akz8ZzpPHYjHbry97Luk3HE34rI9TJ30oHZ0vxy
r6g97igPO9Pbmg7bOXw2bU+wwEl3dfT3j6UD9/p8jReHPI5cvq/OMpkOuyu+
EXbwiGF/VUW5uel0kLTKaWeW4sV2TWL8jxbSgTpr87c8YBeSbNv1y/tfOuwn
WUxMRaohQdYTX802ZUCuwnWTRUltxGPMOqG4NQPCPh92GA4BxNqz8op1VwbU
tHeZun03RCO94zcqD2XAHmXuhTYPK/Rur3vZWeEMiM9XOKxpZ4N6nPrPpYhl
AN+oh3XaBVvUMNhDsZTNAJUl5dBlT3tUfcAoRUUxAyrtD/R1KjqgK4wReUg1
Axx7pWaOrDugnPE6j0WdDFANL+mUiXRCdBFZx0G9DJiytA7X5nZGaQGV5m1G
GTA3/wKK7jqj2OvCejfNMuC/c65ezAZHUchMsVq+VQbYN/Rx6XQeRd5SPLLp
dhmQOPL2IT9yQc4RZ0UDnTJA4eLnyqgqF2R5e/sBG9cMsITlfWzsrkj/O41T
3SMDeNXYmrrdXJG6EhObkE8GMIj6UnrJFckmpGywB2TAjvXX32PeuyLR+8vL
S8GM9+xLeijL4oYO/ImcGw7PgIXzdqhXwA3t0ZoZb4/OALeqmVlPeTfElu43
UBOfAeYNN8xHlNzQRsvIy3NJDL5ZokvsJd3QMpPL08y0DCjyTKS+2euGZvXf
PAwmZsCjbkJN2qIrGqNa3rWjZsCBD/uUY1pdUX9HR6XmcQb/J15GvKa4ohds
epdETjHeax/V2K7pitrNHxZw5GTAyj8lefpnF9R0SuXUz7wMiJgJnbeiuqDa
l7fJo4UZcK9+iNuJxwVV7JZM7ryYAb6/i84Olx5l9HfXFdYyBv/aPCPZu46i
+w//I+hfZfB/0SwtI84ZdQXOJDyqzgA5iZacKm4nZKu9/+dqbQZ4lY+0v3V2
RIOcZvHq9xj3i2TEbj3lgGabK2PrHmVAWktrad57OxSbO/B98TGDP6oW+9YF
W7QWxBYj25EB93Uc0/zWbBDH3uCoGy8zoLA2xY5tiyWSCTkSfuljBozOPtrm
nWGAGnSPzn2YyAB6YoO9nYEe0t2XFcr3haFfK0dJM7MussZTwQWLGbB24G5N
QL8yiuaqCDjJnAm2R1X2y8qzoJXZvsmuzZlQM3hfqLuXBZNaN/tv2ZYJtZ6p
FJGXB3BuWIAvaU8meA1ybH68RR7XPxb1IohkQvi5P5MbdYC1Cx1H649kwrmt
5Q+i2vXx03Cqx5JUJti7T3+O6DTE/TyTxyKUMwFulV++U2aKPb/tHa5SzwT/
ZlPPyXhzPNVm4PZFOxMCbF+fjFCzxL8jrrj4GWXCl15p0hDFBhMN3r4vM8uE
Ky0zD1notpht/6ajo1aZYDTXdZ2C7HDOvGL/AftM6Pp2e+e+eTvM2+7r5Oqc
Cf3n1EO9ztrjsgu57865ZYLYqwkdTgkHLBHV5vDOMxOm2f4KDdY74LuGS284
/TIhUGCfRbKyI9bkE7a3CcqEpn1UtQfXHXHbgl3vqbBMqPfbFuy90wlbPCXZ
9kRlgnWCqqFOsBN+V3Tn1db4TMhK+eyucM8Ju0ePWxslZULC4OIZoZ9OeNKI
8yU5jYEn7Frf0hFnHHFAz6qVmAkGF3Ks8q2c8a/F6Od/qZnAmcv0bEugM87o
KLPQ+o9xXqpuzjLGGW8pft2TdDoT3kvUt4ZEOePsGCbzhrOZwMtLjonwdsa8
JvLdPwoyIckrbynR0BmX8XubKhQx9Nv1cFPFAWcsvpTdGVmaCekzw8kHppxw
bSc2ri7PBJu8XtOtV52wesnC05mKTLjwAFKvOjnhx7ECRkduZsLXq+XusmuO
ePXnQg7/7Uxo/LV+n6PYESsnt37grMuEMs343wOKjjhyPUd86/1M4Ptdc/c9
dsCVmT7x602Z8FNf86SVgQP+xKLY+r0lE0gHH29kPrLH/HQWjum2TNBUm2hu
kbXHOaeuXOntyYRghQrbpt+2uGdX/ELHy0xYdaE5idraYtY8Q63mN5nQrPDk
24qeDU668PlNxVAmMGfsjNx3zBJ7VxxhSZtlxHu9fzGxaoSLJFasYuYzQfzq
gwgXM0P8rrrrQuBSJrgzcVd5Zetj07oQBbvVTAiV69to2K6Lecec5PduJkJj
4GPHliFZ/O9rodeXfUQ4ruzaF7dbGhXLEjdPcBOhdKvdwxeFCkg9OvjmCC8R
ap0TMkP4VFDsD/Xfb/iJUPT0pd2371pol4pQyYtDRJATr3pONkCoOpHdoEuQ
CBV+U3saQQ9N/Rk880iUCNkjgil8noaIotWm3ChGhAJXA8Wdw0ZIML1q6K44
EaLVPIOVLUyQG1OqWKU0EeLnfqQksJij33p+z8tlifDQ7TSXk6kFyqdYxJbI
E+Hi3bqaTxmW6OUW/pZcZSKoaIX4fXpojcJMWf1PqxIhlxLC5fXYBrGd+Mp+
XJ0IFHqUXIebLbr27N1tsibjvpl/m/49s0X6Ox45pWsTYSnCCMkp26GP1tfW
CLpEeC1yVUwmzw6l5Zy+HAtE+EN9sOXVFzu0/02CSYQ+Eex0xFcXle1Rw17P
b0GGRBjsbP+RSrBHDk7Geb7GRGh531zqVmuPFs/JaniYEmFn6mwF4aM9Oj3A
/fGoORGacvyV21gdkCTfP6q9JRH8LPIOqAk6oM5j05JW1kSQV07t7lNwQP4l
r16b2BLB6J3gzRINB8T88X6ivj0Rdivd9jyr5oBKBcv4dRyJ4CXVyftYygHt
PKHQJeNMhHmTvE/t3A4o80db3CEXIqT2Oc+cXGHgcXcU2OXGOD9CypXstUfe
HZ97/h0jQhXL6HxrmT16LUdIXPQgQuuzorG4IHukd4FNeNyLCD22V6yCD9uj
uyxFL3p9iPDAMbj/yZAdEg6XSm7zI0KUcD/hXpYdyu1rFq0LIEKd09/yWGk7
tAlZv74SRIRg7bkv8t22aJIz5ggtjAgRt1U4D763QY6pLG8TIojw/dsJbvcJ
a/R0Mi8jMIoIu7q5jp8dt0IV9xv6TOKIsHhXRpG9wQJxC5mS1BMY/msvaUg5
bY6yTgxKSxCI0G3G0qbpaoaCPdYp21KJwO/vLSb92hhJbtJXfEEmguHfN7uG
rfXQLesXZ+xziRBkvm3bjk5RdKjRU9Mgnwj1DqnRM3sOomyhxc9K54gwpKlo
qlm4G0Uv79HhKiJCko5CUFouE1Yscpl7f5kIxewd39Up0rh80+y5ritEeH66
yMpVTQHvjUjVf3CNCCZ3CXGhQsp4GZVeKLpBBKUV4hL/Cw3c8HnCxOMOw6++
PU075PSxmE3CD6s6Ijg62kQvBhvgwsYtl3TvEYFp+KzFaqEhTjop8UvgARHC
JJ7+TX5rjL8sN13e/ZAIAv+F9s+NmmBXT0sr5kdEmAhZncoaMcWaClFXP7US
gXlqjeXKXXNcVcRk+7aNCAHXxD84HbfAB1hz1560M+qV8hHKbSzxqQiR6/Ud
RFDd5uCny2aF1/vr7a91EWFB5gnnxB0rHA7GGwU9DP8eiuQzs7TGH268v0F/
zsB7sOmv7HtrbLk3xInwkghcL9I4Q+xt8KO0Vabg10R49Uf18+tHNvjX7alF
8hsi/JX5+ld0ty2Wn3gzVvKOodfzB5cm1WxxKDd+3djP6DdxFuUCzrb4qtnN
1rcDROhM4Hz3JtQWj6YV1s4PMfS0l2JdS7DFPLWUMvYRhp9OsohfINhi24mo
HNGPjH7CTlJojrLFDBcR0TgR9oq1bUr0tMXtZqbRbhNEOM2ddnzAwBb/TVP2
TvhMhM9S+x3XBGyxaq2gbc40EZ5dyXPdPGWDoyc44OYMERIsd4pIpNjgKu4/
ch1zjHx5jugW4/9vwuyzwPg3IszeT3gyH2GN+dN7d60vECGEeXrS9aUVdq59
9I97idHPPouXeB+ywjkTNxYUlonwrk41Pd7TEndzn/to+YvRX9rMrLmzLbB2
eiQmrxIBV1nWm7Sb4cRat9sl6wz/fKuOXes2xbcnjC81bjDqba7jXl6bCRY2
F8icZyHBtzjFPpFsI+yevj2KfTMJmtpDLiX6G+KC2t+eoltJ4LYTyqLlDDAb
z2tdt+0kCLX+4ut9A/DCBHHj6V4SeJL+HHlHU8XiPBHzY1wkoH8nbfFsUMK+
5q6jazwk+BybWjc7Ko/7axVaFPhJYMn/uCZTRww3p39KLxElQdmC//GM2RHd
X7UvIxrFSJDGkk0fa92G5CabPN6KkwBFbt/6+jkvKjfP02GXIcFwMW35ybUj
6DiP4d94FRI079pWm3BKFbWZy3/LViOBVWn2QT1uDbSWzj9SpUGCudeXLYrO
aKHIyeXmMR0G/tkJjhfCgCp5xqvXEOP805833jPmy7j5i2JufRKwG+64WO6g
jxzvXEuzNCaBzmneMSUnQ3Rm8mx4kCkJKo9GN87pG6FOngx3sjkDr2zBRxsR
Y8RkEWpZYkmC3/HCj7/+NEaaGc7ajdYkiL3Oz27fZILi7+hLv7UlwbOjrfOi
0abo1qQs/7w9CUZMNAL28pihLzwHONidSKDu9i7g2S0zJGSxdV3kKAm8bYOC
mNTMkXKfwRs+VxLMTJrJzF43R8ZexErOYyTIFdp89t82C+Qy05zB5kGCvaf5
v/N5W6DQuD+O/zxJUDyx2Y7vugVK+6si9cubBB7D7PoLHy1QdlYs8zdfEnw1
kx45u80SlXPefj/hT4KDMcXaq2KWqP7iXM1QIEO/y+3XhFUsUcdhcWpvMAlo
7m3HeRjrgdv+bl2hJHjwMcd/nhE/q3FZHoeTgPmsaHcz476/T0a2NESSYOmf
YOCFMQu025pvpDqaob+4eWxVpQUSHnCuuxJLgnfS2+OE/CyQsm/ef0XxJOBO
nJeV322BjL++8jqbSIKrP89Os9WaI5dEDtXjSSSwGFXdMatvjkKZzDgyU0ig
zbm3/1C3GUo7QfuUkEYCslgw5w99M5S9r60xPIMEurISDXdrTVF56cYZPyIJ
nhw0Sbm7xxTVi2sFuJFJwCEdJeYYYoIGtOs5TekMP9fzFLL9MkKzHYvTusdJ
cOkA85MpaSO0bivTonKCoX/uTCO7myESCqgIFTnD8Jf+esmv8/oo9PT5JxsF
JDjwF39kj9RBaTx9F34WkkD49I9OmWNa6MxlzuivF0hQUqBTMaetgeruneAf
KmHET7+Kv/NJGa2PpCXcu0aC4EK6R9ytI2hn8AOL6uuM939l2/+XUwQJLf0U
unKDBA1eAs/UPvEj4y1RL3NqGP44bnWrroYVZcv6HAm/RwI+O7JHqgcfLm8s
+et7n1FftamnW2uEcL3+0FvXBySwb5b/MHpIDA84OxBNHpEgvM6t+vtLWTw7
lu2si0mQ5Bj0rZ+qgP+GPpdWeUyCw8BD31GohIUzjQaFn5Lgp/PHzbLn1LAy
O/n2/k4S6N0u+6hI0sDGeS203d0kOMSUk2zsoYXDrqspbjxn+P9A4mbjz7o4
QyGe7edLEiT6tZV3mwDOeVg7OveaBK9yu3v69+rh+lcSJwffkaCf7ZuJMeN7
M0fk8bXVfsZ9zx2CNS0NcBjBpfXAIAkESoglM+sG2PjZwpD2MAlO6BdrbJQZ
YmGBrJ8eI4x6frC0LKVuhP/GHtqd+ZEER8bIxWJtRnig455k2TgJVI/qS1bo
GuN6PiujxxOM80RKCKHGGGdHTnp9+kwCbKlYErHTBIe2paZs+kKCwEXSNncf
E2zMvbdAdJbhj9N5VgcrTLBQaNVto68kWPZv0rn8wQSvP9LrCZxn9L9xU8ow
qyke4ByczFokwQ2q8xd8yBTXBUT/q1wiQXnjU20rSVN85sFWvp5lElSc8Uwq
OGKKQ3dcUp77RQKFbqv0am5TbOyjasPxhwRv+jobK34z8t17ESKzRoKdYlHT
FT2MfGwBVOu/JFgx6hb7mG2CB9zXS6P+kaDTdI8z2cQE19XmPchhJoPToe9V
7d+N8RlWqXd3NpFBdq771uwZYxzq0jb/ZjMZHk6O9RgIGGOjalf25a1k4Dqs
WiRwxQgLMn0X4dpGBrNrZeqv+YzwusNxXVUOMlAFOlQb6Yb47lpDXNJuMnRd
sfrxRtsAn7GxPnNhDxmKv5ZPDmfp45Arnyub9pGhTYSH7X2XHha02De6zksG
+2HCaqks4PXSmysHD5AhlKXh0YdKXfx+SX8vOkiG/q3UjMxJbXymKMaUJESG
su+5e2zkNfDazMu7myXJsP7yKfdHTQXcf/y/rJ1aZBDMVH83e7er5e4HwXI5
HTIkPbvIunLon+5p+cZmW0SGl2lsg0rGu5HhwNT3XAMyVNbbRrmTBNGdI4bu
PJZkeC5mWGulI49OpQ4nqluTwbO9Qj1JSBEFv4o962pLhsKqeJm7K0roEOFy
x0VHMhi+rf8ul6aGVnvUx5udyTDFf+z0STEN1Hfo9dqIC4MvNuMnfK2a6FTH
hrygBxkKbr6NtH2kgyBmSuGgFxlEqZsE89gQWj7wUpHPhwzpA9NTmkKMedRx
T4nHjwwTp6eb5O8Bco8pUd4XQIZDO5/lzSA9tJufpsIZRIYc1T9hMo/1UHtH
uOrOEDKwqklfbFfXR0kxjmrbw8jgsVvyKaFCH8nwa6uzRZAhUSCSd/82A/Sp
Q0RjcxTjPbqneOh+BuhczHZNlhgy2H3w+FZ81wCZ8//Q/BdLhi0Vel+1fhug
jY4hrfV4MuzmUpk3UzBEd2PatP8kMvZtq0uavA1RIH+Vzq8kMpg+jagj0wwR
X+dZ3R8pZHDuK185d8kQvYxJRotpZBiW6w79ccsQkfl94FsGGfY0TD68XGeI
VDtN9WaJDP39Z8RqagzRbIy8/jSZDDyl5DnBEkNUys9rMEklA/2Rxc6dZENk
3/nPYJzOWFtxJ+e5G6ItsdOGo8fJEJZ6VeiNtCFq4n9lNHyCwXe87MbskgGK
6mwwHjjF0LOOfnTTbQMkGltq0neGDCTxw31WPgZogJ9u+iaHDDei/9z6x26A
TnVGmL3KJYOM+A9+6xv6CGKdzJ/nk4H3crNrDNJHy/w6Ft3nyBBfuvKw5rke
quwUtew4z/BDcXWxuR1Dn4PLVq3FZNAt8lB4qgeovXPY+lEpGYbMQ0Iz3RFK
in1i01RGhsM7/5ndFNNFY525dvVXyWDbS93tfVYL3YlVcKqsJsMs8evD3+9U
UODB/c7XbpHhuMb34O2Wyoivi+loeS2Dz/bfKLpJEZEPvnYprieDVTzTKx5m
OWTfFeme00yGXWNO38/lC6Etcc4ep1sYfMqN1fLb8qOmg7qeJ1rJYE7cJKsZ
zYWE43Z4U9vJsHJ3fcdC5Ybu0sFqv6TnjPqrZqcsFO7FFV15/gkvGfwGVXAM
GPJht7jUgNjXDH+PmHP5RAriti7zoPB3ZGA/yk3VGxPDeXEzod4fyJB7zKbt
Y6YC5jNOiXEYZfhD3EuJeVIRl/NuTzIeIwNL7ZCMiY4yvvtImiY9yfBri1D9
u+eqWDPn0UmBKUY991zmnWFWx499rXP3fGHgtbpq+lJCA7/eGn1pZY4M+r/j
fnDaamGXIaaKuW9k2E6uvZBgpY3Hqs9Wjy4w1rkhmp1aOjg4U7iu9zsZLl1W
G6zk08ULdnUP2n+Q4YQ0S0XzjC5OFDVsvf+TDDa5LeeuVSK88etdR9VvMjhs
4nxzUgowvTvgRckfRr8zqKsKSwG8s/jX25w1MowWOCy+awV8LjJriPKXDIHb
Px6r2gB8UI93PPEfg/8y8ag+JT18de+N6RBmCtDvGe8299bD0lMa8+6bKJBk
GbblL4Ux7xp7lm02U0AGp/NPlOph7ZPH1vS3UmCXT+Pnn7V6uN3jK7MqOwW2
DB26pNmkhy3k09kktlMgTUnVsJGxfsOycxf/DgqMJVJeJ9zVw259pVy7dlFA
bPA/pfTLevjTdTl+Fk4K/CYpC05m6eHQlFbhn3soYDD6VeVJgB5esrST+LKP
AhI5B/YpaenhZIFPcsPcFEAi9stWbHqYaSlW9SUvBbKUdt5UfwH4ePsmncd8
FLCzWTvKfwLw7sJ8g3p+Cog8untQGAEuDDlsfv0QBcy4Uu5NDyB8SLvBtkiQ
AmdXxJazRBGu2Gly9LQwIz76+ON8H10sO/7egyhKger7n/Zm5Ojghrpg/zgx
CiQoh4bV39HGT11OxLhKUkCt5j/S1hea2FLqQJKlNCP+7ABNtUsDv/t7MwPJ
UoBbOVri2X11PFn+4uRhRQoM8SLZxERVzPJtd8V3DQqkd59QEqco4BP4cvWk
FgUacnLMyhTlMWeuYt17HQo0bX97if++DBZUc2x9pEeBJRnNdh4NcYxIhUP/
mVEgpZQjPfPhfpzGdWiXsCsF1kzWb/NL70Mv7rC7oWMMfcbVMjRU+NAh659X
3T0oYOgW/uDnXkGE6c81C30oYDHzaMVk9DDaLdJIq/dj6Hdml8yOanHkja+8
7g2gQGyJXZR4sBRiWUkJ5AilwLbe5xtX7eWRfX7gHYlwCrwliO15fFYBXZG3
XzeOpMBW9XQh2aeKyDBEIpcUS4HB/Fl/ry0qqGAz10hpPAWA83Dj2h5VNHWZ
Sbw5kQLy2rP5WZxqKGvo/aNfKRT4YF132vWTOhpIfMK2L50CHLmaVq11Gkh8
720HhUwKsBZf9NBL0ETJt4tKrUkMvq/1ThDEtFCPBX0mjEKBQrnXbrydWojv
S4zyfzQKfK5RKh5x1kZhVI/MiiwK/PiXkEXu00bNgmY9T/6jQK69wtozfR3E
8UiZa/wkBYzSY8LOl+ogD1dB743TFJj8MOLY80UH3fq5/eaBHArUFV70NxTS
RRtnf/9Uz6XA9U10298mushGdgKc8ymgyYHRnLsuKut5eTLuHAV2R9flSXrr
osXApv6c8ww932y1abXTRXqbKoRuFVFgpuMuV7eCLsq9dDb8WTED7/vIAwlM
umhCK/3+l1IGHh678z8Z81l5IJhly2UK7E+/LpUeqoOo8Y5WIlcocPRYZoj9
Fh3UtxvOwzVGPnJ6fc9ZbSRWIzXhcZ1RTz6Hu7R2aKNEMx7Z1BsM/+8jD/9N
0kKdn1mSz9+kwPY22oX0Pk3ES55/cq+GAj+jFKoVRDRRyKGhnW9vU+Cp3fcX
Ob4aqKnpqeviHQqoLAgncuWro2M/ihckGyhwM7o6vueVKqrOPq5p2kiBSn+O
/ULDKmhdKp4W0MTwY9f5tS9DyqjU3+JAWQtDz/HUonDGfFhgUgt81EoBp3+G
N9MuKiAoEb4z1EaBxl/n3G7EyaPxvj/GXJ0UsDLIDaPwSiNRk8rYE68oQKAe
8HWdEkI3JDb3xI8x6kFf/v7v2rWWN/x6axGfKKDbL8Pl2bAVr+9Klw6apMDC
secPLrTsxta/ls+4fmHk8380YeHKh5fbJh10Fxn8eHdUO1uL4UMNgjS1JQr4
zxSE7CaIY5Mb7g3yy4x+Iq90fC1HEhdlv+MVWaFA+bP4yFP5sridvNucf5UC
4lJW5SK68vhbgmUq1zoFMrmtX98TV8Dg3j6ylYkKm/Xk3T3HFHGoDdMuZhYq
QL2l341qJZynrw2rm6jwTFVMlDdSGTerJMX82EyFMkudv26iKnhKvL7861Yq
GAyz+Ii+UsG7+Rfffmanwk07szaxSFWssUt688ftVHgUHc3Cx6yGfVmCVQd2
UOEE00ZgZ5YaPvXzSlDvLir83hxdvcaYVw1fPp7v4aRCOM0wmxKljj8OH+h5
spcKTjF3nsi9Vsdsr46uNXNRYWM212RCRAMrtuVJN/BQQa9UwJ0eqoHd773y
uL2fCjV5N/WZr2pgWuX27MoDVEhpcP6i+1oD37po0nr5IBXEbRq3ay9o4IEz
lO9FAlRQYPl2b51JE7OQsXC+EBUUJat+UjdrYqmENYfTIoz3tnJmDK1rYMdg
NRr9MCM/3wmVvdMaOONYXEPmESqILFtoWrdr4Err29NJElSIS3z8tCpfA/fq
zfHGSlEh+WrdT1MXDbyqfMQ8TIYKpcWSV5x3aWBRcb9UfzkqGO3p9udoUsfW
By5VeyhQgfXi9P4rLuqYsHN4xFmJCspuT7Y5zqnhMmaeXbYqVHhzftTcL1YN
9yzbg5kaFd6dt08UnFfFP6bPxOhrUMGw58z9YU9VzD/cU66lRQVLyVbPz+0q
OOqx/mZZRAU2c74Wm1hlfL4+Q/WIHhWKRk7YJjUp4bbrTUGCBlRYbH17I+6P
It53RrFnjwlD3+R5jjwPBdzkJpz925oKbTWB986ck8KTVp6ti7YMvH1XmExq
JPAOvaLvM/aM8wvGH8UeHMHeR/Y4fnCmwjGVR5fT60XwlmXm/Y89qTBKNDKY
ucWNV2rPn5n0ZuD9dLs3cecePBchx8rmRwWpfzcWXvZuw6+n3Resgxj3dxHG
7AMXW4qG7z/9EEUFCYUHh2rOcqBT5621mGKpIOhV03j46R6U6fS5ViSeCrTv
UUqj8jzI/9We4tAkKgy88432eS6AZJ9ExK4QqfD5lXMBfDmCBImsXw5QqOAh
vDVEqU0C7dW56IFoVCgXnM85d0IKrTR0mdL/Y/gzHrFOfJJFs3FeLTdOUmFM
gcefrC6PRuR/Kb04TQUBCvXw+rI8aqsSEdiXS4Uu1l01dZaKqD6oKV8tn4Ff
xqRbb1oRXRe123bsHBVGnFtF+hOUUNH4dGbGeSokbTplLM/4PzpVmvHzchEV
JtjXOvZFKqOMY1xhT4up0Pdfip7pe2UUw1s99qWUoT/7ytFCJRXk36fvzHGZ
cV8k38Nxsgpyzh18JneFCjHxXz+yP1VBpjbReg7XqNB+YQdx6Y8K0uLYej/x
OmO/rCXshJAqku0ukS66QYUCp3DFXi1VJEhXLn90kwrGbnmlnaaqaI/BM57x
GsZ+bkpwFGO9mcn3NGstFfj4YgYGNVXRSvMKi/hdRn2m+e4/LKiKZpOzkyzq
qdD8I+lB1IoK+qAqNh/ZQAX1uLGwoScq6NWPZr/cRirwfnLwKWTgbat1GLzX
RIWnOyusxpVVUH3ErPVgMxWesPxaWmL04wpJUvt6CxW+unavbktQRhemeTQF
HzPy2QepJm9SRqeu3rpt8IQKXH/5DufSlVCGj9HhoKdUuOWtaF61oYiiD30o
OtFJhRdV49z84YrIbzh2961uRv0b//C1faWATJ3K1pZfMPw4dSW+Okkeae5R
i+F9zYg/OljjlymHZF69mNJ6Q4WeiPZNGesyaI/ZWi+5nwqZY17vXnRKItYt
uSYVA1SouPv7OzuvBPrdJv6oe4gKpDD7WxHHjqAP2s6Vuz9SIfDogY9srSLo
uvydjNJpKhBFp4vuAC+K5Pr+5/4MFb48vCQrFrAPKa/KJ/TOMfhH1wl08m7U
+qQ2jHWRCpoN5jYCvsxowLnWJXSFkY+S+Z9Z9lpLqdbiW8oqFYRnqjY7xG7G
/oLyNiXrjH7EtVpyZesOvDhz2+g1Ew2Co1eVTi9yYbb024qq7DRgOekWkP9b
CL/0Waix2U6DkTdb324UieB8YzmJkB00iOZQOaCncBgL7r4tUMxJg1qXaNkP
iuJ4anm+6N5eGhw8rDheUSyBqwdluV9x0Rj/b0y7D/2SxOpXbnGw8NEg99FY
qEaCDN7Ims86wE+DZYfXTFcvMOZRuOwmlUM0yDs1G6h4Uw6fsIvMsBakQcAL
7h83HOWxreqtP0HCNBhubSR1d8tj7gPz8SRRGsSuBo21KyvgD/9kFovEaHDy
03uxkAIFXD4ZEVYvToOoLO53tDkFHNxdM/VCkga3+1fn/6gqYtlb33ympWnw
9fy1G1UERbycKzPCJEeDvyfkNNNrFHETIcKFT4EGgX9U8t0GFDHRveatkhIN
Tiyxs2uvKGJjvW/WVio0MC4u8hPYoYQ5xGR6AtVooH+6N4qFRwm/2RZhRNSg
gfrddssvXEr4/EJ16wUtGrS81dsyya6EPd991arTocGeM5TS7T8UsegD6fvP
EQ2Y6Fg4oVcRz5aEK07p0aDKLoqsc00R15Kra/4Z0ODbOxfWnEhFnBj0VXy/
MQ3ufRhqvCCjiLUtpa8qmtLAvJrpfdYnBcyiEC5gaU4DIVJ7TfZpBdzFVV0U
YEmDLCnW9CVZBXxmdY4r05oGmbuJSUsd8tjxo9TZ87Y0+Pn9ieQbJ3k8Vnkz
65kjDa6yOPi+uCuLK07PsXx2ZuD1Jsv+VyKDw2OlMjZcaCATd7GyMEkar2jd
jFfwoEFbxXnX6yySuEVwbsHciwbrAiffqNeJY+pmqTB/HxoUX61uVDx6BO9+
VeVTGEADXf8L+7rTRLGEb5X13wgaXCjzk0m8xY+7SjRrl6Jo8KDT8+y22/tx
4GAP55cYGjgrpeseruDGV23n3r1JoIFi3thnmYzdWBBJH6tMp0HKllMLFzcv
tuCU5uaSTAbfPoU7XqHnLZ4NlofySDRYbDxmuv3tuO5FmYjxdBqDz+om1ded
TIib/1aQw2karE3VULVs96F7R3W7TbNpIJif7ZYsw4Mc815K6p6lwfmBa5/X
1vajs9sWvokX0KBy+W9McpAAkjfOtDlUyOAjXcZilUkIvSTturP3Ag34uviz
rAyFEccfufiNYhq83xEzMFAlim4qt/b9KKWBQp5f9b/nh5F5tK3aTBkN7rZ9
Oco+IYaypqNX316lAfPMpfiuL+JITITZvbuCBku/wjzL30ugds+zj1oqabDS
Yfa+oFESsfTfId6oZvjzt2i4po00usyp/6n0Fg2wufgLc1YZBFZvDPJraXDt
yw8BoSoZNHrc99p/d2kwqH6/Lg5kUXr70pbMehqU3+Q8y94pi/iZKMHxDTRw
8eD+26gjh5q09vaENNJgRp33mctVOeRKuCLl1USDZI2Lwq2rcmjlrtJpx2Ya
FLzjYg0VlEeF80/mzVpo8Ng2ap+xljxSlXS0Ra2M8ysijxet5NG7gMk7ym00
CN9vlBvoIo/iLsfvlWynwZQERe2GmzzaM8KaINBBg12HR9+0O8qjWt6C/n1d
NJAozu/uMJZHNo6H1bf1MM4LaZOa5eXRfPa9C/+e0cD1wr7Ohj3y6PQzI0b/
poGP8vzh8kE5JL213332FQ2uPDUft8uQQz36gS0fe2kQ5t/2/v5eORSS8Uug
7y0NCJ4HDu0tkkVsTXRSTx8NCrsUSA2csqjiJ/cEfk8DdhnrwdUUGWSkcN3w
3iAN9vOMbaj3S6PJcLWKqmHGvtyj4Wci0ohS2bm1bITR34TpbYf8pZDw5NGQ
go80CNnv9PhqoSTyPpYkTZyggR+qdeQZEkf/zrGdSfjM8Kd8kdbKzBFU+ub8
Qug0DdpdS8nr82Jo2OzBXac5GnC16JbmDYkifZurLgnfaGAT/bNGvUoEVTlm
b+Qv0KBhKlK6J0oYpXgFmL/7QYMhu+uNx7EA4kvg/GS/zuhXDUe6t7zdh1zK
Qjhtd9Dh1CGeXVN/x1tarznej9pFh6GdsrvFkpdbxG8ij2xOOlRt9L4+N/iv
ZeUe142XXHRovcX2N27/duz9kMlmnocOxEfD99tNduOu1rnlHXx0sLz8bJ75
1x5c+OwxWB2ig5HWJY71w7x443X1VLggHaSzzEhDV/lwYH/hqVPCdODRbZUS
4TyIVccjBp6J0YH7yA6Ccb8gLp1yyZgTp0NaCxCKvwrhLV8NRLdL0SGgMZP3
yG9h3P9rf7S5HB2uGf1IPD8linXXWblDFehwbrRwldJzGFcwLz78T4kOn832
FBSXieGdW4d9bqjQwYt/ejIi+AhO5OjY2q1Gh8CpCaMLQuJ4lPNOzRcNOqz1
WMl1PxPHxjzFDmzadMh+sFOwMlAC3+LP+nNElw6dZxrzp75LYC7h2EsmQIf5
Oxe1rCIkcdoRD6MgfTokUUkfqgYk8aS06RzdkA6imc3GL5WksKWi0tkKYzrs
LXbam5MhhevVDql1mDL4T55vG2uUwvw67COfzelg960vtP6TFKbqL5M3W9Eh
WFPY/d+aFP5q8lH8sA0dDLav3n7CKo0drXpeGtrR4ercqUbev1K42f5evL8D
HTxaDhTyfJbCoi5lfFQnOjx17pMdapbCpzxOtl45ysBX/ol0kiqFl30TA5+4
0sGK9XFmkLYUdg/24Zg4Rodyxy+vqiYlcXuE5V0WTzpEBBR05aVLYuk4NRdh
b4a+d+ra47ZK4rwk4Q09Xzo8aWvhqSRL4NX0HVd9/OmQBYKGZxbEsS9lxYwU
SAdkE/yYbi2Oe45PLJQF0yF0RmOUtewIVjzzsqA1lA5iRse1KJNiuCjvgdZY
OIOPy0XpafximOXC1fF/kXTYEhZXH2V6GL+5wii6ODoI5F/MoGWI4D1MDQ80
Exj5ym+aexQJYwf370aqBDpMqb4+UVcjhN/tC/aUSaWDpL9lwZdkAUbpOmUf
oDD4FKpgytvPgz8EyX//nUsHl0D60Yunf7Twt4el/8ing7Xtn/94aJMtHoLX
2RfO0QEslKfbz91uGR04KDxVRP+/ojKPp0Lbo3jmDJnn+XA4SVcZQvLsX10h
lUqKEFJCEhdFVEo6e5t6kmgmTWRImqQ6O3MZS8JFCCFlqESmvPP+35/P2nut
9V0bujr1Hp85+N2qZ4Po9uYsNlyq2CxscVkEad6x6W68xQZ3p/srg4fF0R7e
mIDaO2xobczgXXReCvWW/D5ddo8NK8t5bkflyqHP+gOPCovY8OBQ5DK5VWpI
lzDW5j1iQ/GK9EvOY+pof797/d0n/+dh7ODoRk00dPX95+slbAivsoItbQy0
dFo85PILNny77BlP/6uF/HfY/7nAYYPZqH7XoKU2Gl5SKp9UxgaRN0HL9cOZ
aNmBuSxSwYa9Vkixik8HBVSZrYit4vISTJyEz+igPK3Q59Gv2SBW/06nZEYH
fTtRYBtVwwavE0JnC/bpouUdX94fqWPD2RsD20vLdFGgmY5XSAOXz3orq3pZ
Fio47/Ut8C0balokqu67stDo2JUI/yZuXiftVzqnspDBplZ+n2YufzIVpsWl
LBSULX3Oq4UNZbM0rbqXhQr5HdTc29jwYkyzJ2qKhca94nKc29lguiU9smOB
hQxfVqza3smGyXHHnxOzLBSitKjMoYu7H0q3hlq+slDR4TUO9j1s8Pb1VDrX
yEI/3x1pX9/LBvGPnjvW3mUhE4Oi/Wv72aBdODUpHspCYfEjPywHuP6PZ7IZ
xiz0eGBptPkQGwzoeoMbg7poct0+UZNh7nvKcz6WJusi04yM9BXf2JCqWDRY
aqCLwmfbtfVHufnEXJruLtVBxc7yhbrjbMj4N0DCzV4H/X64zVLrB5d322Tv
qNdMJGZu2iAzwQays4X3IGIizRfKXgKTbHhkaC0vlK+N7Cr6Tg9Nc/c2POHG
sUAt5G73Wq59lg3/1L0+LVzKQMF1eXdr59mQW32uOlOMgS41H64t4MHQmHik
r11ZAxW4uO7O5MNwOMXdoJuthso6rcbOCWC4lMSbwhpQQcP9QjKHhTFcHD5g
PnhKEVn8uuS6RgrD8YNxCnq2Usjh6Ilvy2UwFEfwTinUiSPvee8T6nIYHq8Q
ahj8I4LiBZZn8Shh8PO942a/kQ91yHG+VGtimBDz2tty96PVMdPeCKeVGKq3
uPr+ihOhySVVIjZGGHhFsmVfKYjTW1a5V81MMFjmyjQGvpGkdTZhr5TNMVy7
+vjPNh1Z2lPj4ihmgeG8U7mbVJkcnXD4T//8Ggy66xy+uDoqUDVnwcWfEIaF
DX9ca+2VqVHH8KWmtRjuWBZFpzxQoTaejfoVf2M4EiKTayysRg/5Xtxy1xbD
skCN6CqiQWO+Hvt0cQOGs2Z/XOqdNWla0J7Q+I0YHBLfayT1alJO+LL0wC0Y
bvWVfzP7yKBNs+J6ntswiJXE5D3bpEUHon+WbN2OYU6nTbusSIvO8LVtWrcD
g13lsyQDCW0qTl50GTtjeGBUfrhrjzbVErsRrLMLw+TiZN8H97SpafIZXgU3
DJusA6rivmhTe9kDqYt3Y9h5X7fRWZ1JPS466M54YO7/eHlCYgOThqgaF3/1
wtDv3JVzx59J2ZkK9h+9MYzEJXdKnWTSy8y5joZ9GC5cjbV3SmTSguyewFf7
MQh2r7YOP8ukZcsrFx74YZBa6GfFspm0pTDn3M0D3Pxnx8Zjw5h02OSs9oWD
GF7viNI868KkC8Uhj9mHMKQZbxB7acSknYJFCVnBGJKPrbd5+Eebljh938MJ
wbB75tDjXVSbpmetNG8P4/Yh9/We3jBtGjYeJD55hKvX+7k0XkObbrO63y91
FMPJ7KuVyVSLGiSOlvwVheH7+yvuxju0qGj7X+c2HMfg49Dz8mUPgw6xAn19
ojGEdWtvPe3NoJWH8/5z6hS3D87SGa3tmjSr/KvMtdPcvOb56iXsNeluzwOv
mjGG0HlzFz81dWqRn5M2HodhsO1OctsbVao4O3RQLBFDPT1lbeGrQpvSfJWs
kzHc0y/Z4huhSO/33xnzTMEwviprq8CoPE00GqiMSuX6bd7zZrWLHLVt2Bfy
8CK331+P7d8lLk1fCHjXat3AoLDE5C/WGkF6O8z9OE8RBg9nfbfD4cNWMWVX
tqs9wtASuqQ10mnCykuyQ2/1EwyG11tXz7nMWinn7WoJLsGQnp6d/yGeH01N
X8xLfIGhrGJ9unCfEGq2bYvJ5mB4In4lLVhPFJ3t27mip4x7X5PKmE8vJFGA
YZrAXAWGvi+lebIgjeyiP3QoVGOIK63vGH0ig/hUnMiWWgyMw7eKzhyTRz1+
5z0C6jHUXMmV4LxRQJwnTSa4EcOix+W5eUJKKMJx2yfOewzyPXWP9LaroB2Z
yU/bP2BgOWq5R3uqIqPRxqTJVgwVPyJiTFzVkKSlxD7pdgxfJ6cWv1unjkbi
HCwMOjFs41k91KmogWpakyTtuzDwSHgFj3RooGyd+gGfHgxq+bqJ/67XRGdC
xV6e6sUwHaL+bvy8JvIu3Xj+Wj/Xn2yBa/JtmghJJPg/G8Dg6vK3noE0A6nu
rkEfhjBUMq2tWOsYaPqesPz3YQz+/kNJP3wZqOW33TexEQxCgqI7T51moIc2
pGzpGIaPN7u036YyUHJq9UXr7xieGmxZNnCFgQ71CgZ5/cQwhDYL1l5koI0r
bdYf+8Xdy9roIJzAQIs+fOAJm+LyqsRxkDzCQE+O+nACpjG4PAqq/urMQAfV
f0XuneXyWmembmTIQFrlsWZu89y+iP7RneNhoDZf2QnHBQzePGcKA2o00Vmx
W4X2PATcVg3SnHhNZP3AOHAdH4EEwcGk7nWaaGZHuZ6FAAHPu+ZqgQMaqHDG
ccBQiECTyQSTY6aB9mf0ZukJExCO7vbUilRHTUM8qkpLCBwt7Dk/9F4VkaRz
bZISBEQZHrtMv6kgKyPGhcVSBNYXz/CfmFJG96JA/LcsgYdzdvxLvygiL823
NWPyBPQmpOvvvFVA8pWeeFCRQETZrTKffHkUIx69qFWVgAH+ztbZIItcb7z8
8ZhJwDxFvbrGTBwJV1u0hpoQ0LJzFirdOWrFCag5H2BKANKiZZ687LUKk3Td
utecgOS0bXFDZp1Vz66jbxwtCfBP+aVsLOvmFH97+tzQmkDzAn9J6f4/nEPn
bCP0bAj8CNr7nQ7zUKZpqwnDjsBvN2NriTR+mhw9mS+5iUCWrMnqo+XC1E96
VebYdgJnRyYm7uZKUfWnFe6DOwj0VZboK1dJ02Y3J6VuZwKjrWIPOz7IULgd
mtLgRkBWuXwm5L0cndzAt6VqN4HzDl5/vF/J07zRFFGOJ4EJ+z05zZkKVNG8
KDZ/L4GVfTmxNRZKtKFz7drbPgQ6yO+azJ9KNPbUu/mrvgRUlX3E0q8rUwvd
PSWp/lz91KON/mtU6HjN+JHEAAL+pwS29LxRoXeCThrHBhJwvy3xtXSDKnWX
lRyPCiIwln/1Z0uJKpV+lpEX+g83b9dhxd+qarR69wr/gFACX7YbTYkGq1Hp
vX7Prx0mkD+6VruvRI16+N1Y8jacgCKrw6f4hxq9F9juyRtJ4PnOV24xCup0
MkSmyOQYgc1zJmvt9dTpuohN/L4nCKSgxU1KS9Vp0vEzOy+dJKCW/GloQUad
tsVwsmtjCCQ1dFWyRtQok0zNzMcS4DuSE1z1UI0GJ63cvBITuKm5ZEHST40+
T/HP8I4jkFGd+t5WRI0KXsz6nppAYK/IVt3Ky6rU8VrH39VJBGwOXKoYUFKl
17Nk06b/S2BGX2SVKFGhX+5uHtJPIcAOaT6R9VmZmuSzLTxSCew7np5oYKxM
TxbRxOQ0bp8DLsgZ/aNE657+7iq7SGCNX1ioUaYiVXhpaPjrMgFBcXHZN68U
aEH1zQ+7MggwXbR8//5Xjs7UdbISbxDwwAH8IU2y1KZJLpJzk4CtYk7VRypD
P3Zide1s7nmVok8ekVJ0ae+r4B33uPqDxm9/2UnSsMHpMpxH4HTfGqECNXEq
9iPA91shATFrS8kgIWFqIbS18PEzAi8kr4X13J7jsMXieIeeExBwDt8gypri
vJMqc1LmcPUl3EySMr9z/FRNpk+UESiS/Hex47J2Trqh4jq7WgINwcv60l+P
WvWabkuNrCfAq3TZI4hOWBlYxg/kNRIw43BERwRnrKps5uKlmgmIeDs8EWTx
ogm3nvftnQTCE1XFdB6JItijpLukm5tn9Hyr+9ASlLDfMQJ9IqBxLiE8gU8S
af1ToXrrM9fPcMu06wtS6NCR+UMtgwRmA31WWXyVRiVRpqWLhwnYB5qQpjcy
aBs72ydwlEAQU6aJ4SGHriZ8epoxTiB+dLkTj4w8GkpWFmn6QUDJQNlD95k8
Mknb7s7/i8C6kfjItVsV0MkriQWmUwQ06wc5wm0KqC6zcpH/NIF7ArvemW5V
RAp3/jhemSXQL/QaJRcrIu9cs9v189y+jxy3H5NUQgWFwVMLCwSUe9PUDXYp
of8B5bETdw==
      "]]}, 
    {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
Ocb+jLjpoLl43FzsuCZ/PhWom6sfiKYkYDGOV94xl1Jh29c28+UfCbggM+ju
1SupYLt2uupEQiL+93FJYeVqKuS+Hbn35E0ijvVLLlFsTQV+ys0uIiThN082
/sZ2pMKVl0ORISVJ2NaYHtbUlQrG93+Mhb5Lwj0d20Y+9abCy+42hQiRZCwv
U6KtfDsVlqgcVY72jPPtrMj5+IFUsCovWd2Rmoy5tl/e0vIgFVKrrJ5VnkjG
WSSlxM+PU6Er7+gW1vJkvPilc0LlWSpIy7fHGlQkY88QOJQ4zsAvsc/d82Qy
HnoxWN/6muGPt4bMSYRkfNDSYffXd6lQJ+Asd8kjGdd2vySozaaC5PfY7dvl
kjG/UuBs0odU6PXjuT+2moQPn1+0ubacCoV6/+3UqE/C67uSOtY+p8Lj84rq
fp5JODT3t4jGeio8Dfc7d/xvIn7+g3o45VcqVJ/7s8ZcmoiNo7hW2/+mwsT5
D3VcUon42uQp93WWNDjR99jhV30CLuq/JJPGmQZN2pPP7pfGYxYNxaLOHWkQ
dFxVPpI5Hidc7vj1fVca3LeS7+zqj8X2xwcepAulAddEE72dOxr3/bVTvyGW
BnQu4uf86kislDB+7qdkGlg82t5H3h+Bt7t+iMlUSIMv1ze2pLCF4oeinDsJ
Bmmw94GYyGKRL9YrOpnebZQGbxYsVs22eeF6VqGpDdM0ELdd49tEcMPHPsi3
ZtulwbRbcYMSssfmbbbOOf5pcGTtfYJKgQC+vv9FNw5OAz615cLbEWJIqtRv
P1NEGti/T5b17NRE7Nnx66SENPivfmrlQb0FumNaVEqhpMGwi1ZF5BFPNBt6
czgzN41x/+6xMCnyQeyHZ1iSjqVBHszG3DX2R+YDmjFBRWnQ7kF6HywchCLm
/aq9StJgayQTM2sG4/zZfPSFU1ka8Ixn6pcPhqCHZq8MjasZ8Q55tAQYhqPl
MNY0vZo0eOnJdTUsIgJtP6LQoF6XBlu+moQIUiORUq3rlHxjGvyLlhT+lxeF
7Adz9uxvTYPsE8+vXzgajRIWaq2EO9Lgnh63RElKDCrieEri7UqDknizy6EO
sahV+nf7tt40+L3cb3RTKA6NmksusfWnQfOKaa7Jizi0Fm4j9vduGujc/ZHv
BfFo99FUl/X7aaAUsNAccDweaVypPLYynAZGD6LjzzyOR673B/HckzRg74/x
XdmSgNI+fF5785yRb7e3srVuAirdslf2xcs0uBV+Y19lUAK6IWPs93gyDa67
sSpPUhLQhEXMqYGpNFAs3P+b9UwC+h1Rch/PpsHSLZs43poEJHQM/+38kAay
jqb92+oSkH7dglrzchoUPM6q+nYxAfkOcUfUfk6DxVV+jzclCShnUaei6lsa
bCIr3XqZk4CqtgaPlv5Mg9IY3cc//RLQLdk8jsI/aTDZJOTrppWA3lt26B9l
ToeQbHIML3sC2hT1NpHMlg4oy/eh28N4JPkfR23GlnTgFAp3MToWj0zqVSYT
tqWDfkKh7F8Uj0IfePJEcqfDLgOXN4RXcejwEtUskDcdJmi1t2Ol4lAt51WC
p0A6rBl8OqwTHIsWrf7NWe5LB+ed+wdVW6MRZ7S00KH96bC1mSIadicKyR93
cNCVSQfVAwtVifcjUezDCzflVNLhd2LPFfPGcPTF2ryAyzAd+mx/zu1bC0K7
YhLuspqkgwzLR+PZq4FIPa/s14Z5OmR0VGsd8wtAqcMfg5ft0+F92P6IY4z3
9S+bwoOP/NPBUiNq7sM2R8RsN/H+BCkdhPCp4VlZDTzY6yKRTEuHXKl0JQNt
wAWKT4Lcj6RD+qNy18mHJlhs++CMWEE69AivZwX522MYbp9rqUyHbW8K2vFd
T8yhryJVciEd7CvVbdR0fPBIQ0NY5uV0eB0+cq603A/7H7+wYNSUDgJVkl/8
9wRi6Q0RGam2dDiw/9dWbbkgvBpVFsHZmQ71rkyhyRrBmGRVuDjamw7Eg2N1
B6VDsflNLrnr/emQ128oN70jDO+UOxJ17l46uNuVTB1cCsPjZZsaSEPp8OfN
ePqbG+G4amvOx+BH6fD2NXtCYlYEDs/8JW/xNB0CLee21ChFYuXFlBiFsXSY
5E7fpzkWiX94fL7KPZEOgn8U/ryNjcJ996NXvk0y+AuWkA/4GYWPHFxQnJhK
h7JcZio1JRrbXwmK651Nh7jI8qh909GYX+BtU/WHdHActSXsMYrB7454ruYu
p8Pingg3g6IYXPvjuXLU53ToaJXIzx6NwfHhDgl239LhoMlR6YdssVh7/GGL
2s902GPS2CspE4uZzM2/8P1Jh0arqwtk/Vg82HlbdYMpAwxM/IenjWJxgRRK
eseaAQN35n/6HozF7qe72u5wZIAnb1It175YLLZZc62WKwO2UlR2sf+KwQup
Lep5OzNAsCo+NexODG6ek09J2J0BdlKca36kGJzuWtvuwp8BvZH03/sVYzDc
k1g/KJQBJ0f1mFaHozGHZqWmiFgG+ClxjH/zi8YjlwTTWCQzgG+b7CfiTBQu
5S3pnJPKAF6zvWmvvaKwP537x5BcBmRQ1u753YvE0t+OazcpZcBvAb9rnpKR
eDWYI+OkWgYcCuYhyaZGYJLxv59euhngH3M1bmk9DJtfy9QBlAG7hEPvNB5g
6C25nil5KAOYov5ofLEKxVWbln9/tMwAUo7C2If0YNzXP/En2zMDwhuo4ycj
/fERVVeDQN8M6F8zDMS1vti++gnRNDADTnud8L8U543fkQf/bY9k1HP17Cn2
126YybCDuSojA+RTMtv9qqyxp/H80Hh2BoQxfUhQczbD18z4T3FTMqBl1lD8
DZMRDrfNPEA9lgFe5n4fO4wV8BMvA6vQsxmwWcWXerZTF8n7xe2urMyAvwk/
DV4w3iu5gVWTLy5kgG9FjV2ltDnSiWCJt2jIgCu+kx3HeRxQdeq9U/I9DD30
mN2yIz3RRsZ3n5BbGZD513h7fYk3cs2Wlqq4mwF90syDDU2+aCvt2I0djzLA
1alm6pNDAAo+fJNi/jQDfglWm2UYBKLeYx+tyGMZwO5c5ugiGoSSCm3ffHmT
ARtMvt4O3cHo0amcy3LTGSDpJXaoLC0ESZc2xwfPZ0ChsfDUyf2hiHJ26mD5
UgYYXTydt3o3FL2u4Nk09ikDIq1rMoLcw5Bm9aGH29cyoPrSEa7zr8NQwaXk
YrMfGVDeKZ8b5xiOFmsv+ZI2MqA0lqm7+kY4Mm4Yk7rBlAllI0kT23kiUEXT
5s+fWTMh6aZuzjGvCPSjVbtLdksmRNjO8TKXRCDHjghq0LZMeHPq/InwWxGo
4UaZ9TnuTPCUSv7SMRmB2Hse8D7nzQSm8fMpc4sRyL9v4802wUyQ2KUat/lD
BOq6rVBrKpIJ5wopGSrjEYh3wDchRzwTZIuNlQnXI1D80Amd6wcy4apm5nG2
YxFoaLhv02fZTMirL55lsolAkk8+P5RRyoQVrtOcNcwRiPhMvCRQLRNu7Wh6
KV8bjsZfOPmd1coE8dLo/ucQjlRf0aSf6WbCsEnH0tcHYej4m/bPXJAJaq+m
l19bhKG5qbkuE+NMsOifPjnXFYpglo9GNGfwoSE0Ey8aisoWzG06rTOhwbn8
+iJDD9tPdW+lXTJB2J8jPIY9GNV+eVUb4JEJjZvytwbqByGWda7EMp9MOLmQ
2y0VGYg6N2JZuUIz4UZEzzt02R/xMFUNG0cy+FLas+yc4IeiNz0pyY7NhAXl
vAotmg8S26om8yk1Ew4eKOmcJnqgI3zfbZ4ezgQvHwGLtkV7dGpwcLr/P0a+
HbbZRVdtUGVGWUbbiUygpBkS47IsUMcr/UunTmfCiP365GsmQzRbSdtwvczQ
I/WIROjLvt5Ve9cis/pMOPKioqtIZx/eYJaW1m5i8NPwvJGXUwXvDn7gJNCZ
CZFMmjdNxwAbMV5Vr+5lwpROa7V3iD22fTkND4cywdCH6b6KtSP2ONY+1v0o
E/rzb1q1SDnj+I/uLBVjmbDn8tA/6RtumFAuW5o/kcl4H2irh8V44CO2Gwo5
bzJB2m+r9iqPF65srvTwn8sEn57GtklFX1wXkPDJfjET6qbfDwxc8MMdPIfo
hiuZwDnIWVxA9cf9t3fvVf2SCU5KQ1FS8gH4UfJcs/h6JrxLGZnzfBCAJ/Zf
N931KxOY9T/WvfMPxLNjR19v+psJx6S+nyZ8DMSrh70S15izoGdwR956TBDe
0FbgmGXLAgOiR8Se2SDMsfi3/PmWLIg8EmlQ4xCMd50dUbu3LQvaXXvvEtuC
sYh19f0O7izIdHXqIG4NwbJ/kvwu82aB1sMrD2iuIViz0eTbaYEsENuuKJFw
OgQb+fH9d0Q4C3g5BJ6oDIdg250fxDL2ZcF9a65NPd9DsMetro6I/VlwzG8v
0xa+UByceNzaUyYLtgyqjHLJheJ4Cd/3lgpZ8O317fkHaqGY8EwpXVclC146
PmtyUgnFR+jM2+U1suDQG6X5FolQfEpz9ILQwSxYTAuoXtsaiivnLx7cpp8F
k9sdBdTnQ3BdaerjP5AF+YXPmU9dD8EdFuYhK8ZZwFnD1qydE4L7fwn8fmOe
BZu7qcWmuiF4uH6p4LF1FhjF1fV/+BiMx717DvTZZ4GP7584z1PBeGbbie5m
5yx4bXBy8YlKMF7t9Xc8754F8IqXfvQug9841YVC7yzwe3H9CbYLwruePt+V
FJwFRf2fTo+aB2IR6uUrQeFZ8F1l+p/59QAsq56BnKOzQJGvqyFWNAAblQhF
aSQz4l14fjaswQ/Hewb1f6cy8NddSLv/1gNvr1x8p3ckC2SepdD2ybvjhumE
f+TjjPrI+hWa0a54Ppqkx1WcBdKXG89sfeiIfXPKO8RqsuDjebMTcs6meOO2
5POQuiwIvRsnuCPcCJdxNHyta2TgbyM3nlnSw88Lu5Q1OrNAtcy+XH6fLLa+
+KLOYjALcn4G8T2IUEWLC7738x9mgf/tu0XfxXTQEYW5+dGRLHgwwi5c+xbQ
7Y41Sd+XWZDnoj4obG+O/H9nHbowmQXdb8cP8y9bob9oU+DCVBYc9RF5KJti
h3Tuc1cmLmaBUPTPE0GiTmh825mezpUseJgea3Sw1xmlOoq93vjC4I/HpfWp
rStqeaUocPh3Fugtv6Z8NfRAtmIdWg//ZUGGcHnM82pP9DFY35WblQAbCSbC
Vl+8kPSK1cmzXARYdra9o+3pi+6pjra820kATtmAqmDGPApO8xzZz0uAqHYe
spOOP2LpnlqJFCBAIV56gVv8USVTxLZmYQLUObrc6BQJQHomq3Lf9hFgLP2c
52ZyAJo4mmapc4AA90ryxnPHA1D6o7/hObIE+PeYeWz7/kC0Z1fu4TuKBAj4
by4oIzQQXXPbVrNFjQBiIzWVTecCkeO5U3dstQgQ3fSi9sJAIFp9t3f6pC4B
gvxkes3mA1He/gvMLxEB+n0vixb+DkSykbJiIsYE6NXqGaezBqHBxhaDIHMC
5D9Mva/CEoRCv2r71FoTgI9jcrRqLRCxavdlLdsTYI2Jvm3mVSCqJpiVqboQ
QI6zb1noeiCCW4+up3kw6n1mJh5/NBC9YXN90e1DAGWCeDSLfSDKspz8xhxI
gF+bDaWZuAIR/4ng3WahBKi8qnj5Qk8A6hhdUj0eSYDEUo4O6ZAA5Myf5PAk
lgA9RUcyHrAEoC/ev+L2JBGg3nos/0mJPyo4T873SiOA5mOzr8f2+SPFOY6r
VVkEGFbMcCow9UORcXyLsjQCZOZ92Ksr6IM4rlVwxB8hgGzYZ+Lckheq+bFf
qv04Aei9LMVZjZ5oiqwejIoJIGMzGla0xR0d2LM9P/4MAUQUtj5KqHNFkXXz
nefLCaC4vPsgG7igtadlnKw1BMgQGi24Zu2IOCSZ2wY7CFD6b4yFg9McKd4b
ZnYcJ4A/sj+mfWIXTvK8LEd9TYBcYdPb1d8O4OsrJJdr7whg/brYJn6TKjbk
U7+y5wMBbPcQupcmDHBu/bZRs2UC437UJuFZaISH0PxG+mcCJKnfvjxfY4Kd
w8vsX/0kwJ3lf/FWVVb4zEZSJtdfAjyS7tZeItniNwU2F/VZsuHTNIuER409
DrvB9KNyazZYCsyHfrRzwg02E/uebM+GUeWHNVpFznh1qs2KZVc2MNewfjQa
cMGZW8Mqg/dmwxC9/4LSZneMK+B+sWg2EGYoSis7PTCrmuDXexLZ4N/+SkOE
0xObD3wV+iGVDfskdr8x/+aJ87yGTWXks8Fnb18L82Mv/PRTTbyncjY8vc9j
+vq0N95DI5X9p54NfrankxLsfLAXv+edbu1s+Nz5OCP5mw+ualBbWdbLhvVr
Hi+qjvriWdjGL2qYDQ8NKzhbOf2w7PM5Q3uTbNjZNp4ZleWH4yL6osgW2fBr
3UesYdwPX/tzprjVJhvCey4QG7j98c/CJDztkA3uJ5Xy6hX8scEBmw+7XbOh
rf7nASvwx5SuA7tMPRn1Be0uLbDwxwO2TPppvtmQzl+uQWWsuaZfhtYGZkOT
kWC4LGO/fVpbwcvQbOBK5Qo9xYhXzJnXtTUqG+pq5bNeMfJNVIbO6MZlw9zp
qgDNCT8sqg7bY5KyYVMKz7E3RD8cPCigXZHG+P5Dp2Od2w9f8f4a8DgrG3aU
0rMmTvrildWH/zGRskFb5+3tOVZfrEavaVehZUP/vbdWGSE+OF2A9DbwCIOP
mdROpg5v3H3VY8up49ngyBEU/nvdCzMbqandLWDo7XnEbUHaC5uOcfmsn8qG
jKX8Z2bWnvhY5Fyu1JlsWAt6fL8uwAPvPnlm4uj5bGjlNjVdCnbDW5/vepJ4
KRs+lF/P6wl1xUx8+QNeV7KBnO09cNTXBS+XUa4ptDDwa8qKuak64XvVUflP
+rLh9N9QL+t1a5zeqm8k8C4bdP9lX3+XqYxj1zq1WWaywVk2sPiH9QEcrKmq
tDSfDazaOrwLFnzYoeuAUM+nbPhbHjx2WGoXku3fse7/Lxt4tLZ+gv8OIjHW
Yx8tNhGh8OyvsD8nDRCfKeu06mYiRDbyp36/bYhYh348Zt1BhE0mbuM7Tpmi
ySdTV2pFiOAUqPOuiG6Hnu3yrioUJ8J9QZu+6w/s0ZDLWEnmASLMvm3Ukn3g
gDpeDlGtFYlw4M/76sF6J9Sw1yRTQ5UIrmEZpyWPO6MLPjheRJMIjQUPnzgF
uKCCqTafVX0i3Jtib+hccEW5EorOLw2J0CTjede6zA0RQmot+02I0DaybSoE
uaPEy+KG9RZE6P7pbHXjhTuK+HBO65QNEbLauup2BHkgfzk+xWwHIpydvfZV
Y8oDucYUSoa6EOFp2g3Bnw6eyLqJc6+dBxG2ir3YL9PuiYw+07m1fYjQeern
ndqtXkhbjYljXwARbjrfqQ9w9EKKKZl/t4QQQWB+R6H+cS8k2bm29iWcCNuC
nF5IXfdCe3/GLr2KJoL795BNwmNeiEf3w9SdeCI8Qn9qJea8EEd20PjVZCLQ
jpYQjBa80N/eyUcl6URYMX68SnrthdaY3O/mEIjQt6m2Y63fCy0aPb0ZTiKC
2OUIu76zXugdzbrVgUaESvrOFvYwLzR2716tzhEi6NXr7ViS9ELDHIaVEseJ
YNqVYX72uSe6Y3mzmKuACO3Mjc+dMjxR13GN499OEoFTy0rPcacnan7URHlz
mgjjeJHrWZkHqtkpmzFwlgiqKRQOEQEPxvz3+MFaRYTgOL17bDnuqPPm0TSj
i0R4udfllO8LNzQY+iGlp4EIB7/Lpu4LcEX2egLffjUT4ejuZp4jJ13QS26L
ZO12ItT0XWRz6HJGi921iW09RDhRGlylNu+IEovGP6/eIoJ81sv+rBUH9DuM
I0HxHhGYaG3nMz7aI65d4XFXHhFh/YBvlEKFDVKIkIqufEuEnMm8DBWqMeow
cFt6PU0EKTk92CpuhAx2H44UXCBC/u2H/C6JCNniufDiVSLsyXmHORo0UDxv
Tch/zDnw7kLKPJPXX4Mfi89nBtly4OdHXSMzbQ5M7mMLZt+aA8+GnIvMmkVx
UVRIIJknB2Kvt+0cPqmCr92S9EuTyIGBx/V359iNsN5p5zfXpHLg/e2Fcitt
Y3w3mubzRS4H9HzPf9DzMsVjfDNeMeo50HVtpEk0wRL7Lu96VaedAynz2xXf
BFjjuf5Dngt6OeBk6l3fzKj2e8wF9yCTHBgnbWpxf2uPSYdGX1RZ5IBgWUcq
e5MD5hDY5PbGJgcKkkyEgpMcccGK6thexxzgGxlI2SnvhPnvBLp4uObA5i9c
Zq3jTrjqTNGzEs8c2GkZ67ua7oxl4vqdnvnmQNaC7FwKlwtuNf7ylDuIgWc/
dYb5pAvWERR3tAvLAVturU0eXK64/5PDk+NROVB6o3gFpbtiq7tk+6E4xvpZ
QRNlzBU/K2t5vDk5Bwg2DTeZpdywd/yUrUk6I96EJ+f5CDc8Y8L9iELIgSN3
CjuNK9xwzF5Dmz5SDrSuuF98dccNr6/GP/xDy4F6B/+TYZNumHivykr3KINP
MVaFj/NumP3cyFB6Xg581SGdiplxwycSmCw7CnPgeLj8qz9P3TC/mfL9r8U5
YLx4eaS3zQ1XCfmbq5TlQPP7i0KjuW5Y+suJgdiKHFAit+T5Wrvh5gFs2lCd
A8MXediLWd2wdvmnux9qcoDbV1q5o8kV30oUNZGqzwGSE89vZltX/OvbpwKh
Jka+hbULifMuWD2j7zV3Ww68ZnKbVk51wbEbBdKbO3Pg1s0b7rm/nHFtTkDy
RhcDz+ruxu5kZ/yeRbXvc28OHDaTSBOZdcJCuSxc8/05sEL+wsds7YQLjl+4
8GQoB0af0whdfx3w0I7kT/ce5YBqoWmdpZUDZj1prNv9lKG/0EjY2Al7nH5m
9mnNRA5kZ3P+FmGzxf41UiyExRx487ZTzVLDDJfJ/LBJWMkBnrr1xfhQE/ys
YfBM6JccSOZ/xtyVfwibt0WoOPzKga1fn/TZFSLM/85FeRcbCWaOfe6y/66E
/3087bewmwTXuW7WFPUronOKJLbpPSQoe+w3dktWDWnHh9dP8pNAkunOe7U5
TZT4Vfv7UyESSGs0ZDyUM0A7NPaVD4uQoLyvY0jjJaCG1C2HBsVIoLdwY2St
0AjN/XyZ3yNJgts3j12gvDNBVN1+9esHSMDDP3aqP9kMiWXXTbRKk8BJ4aqS
5W9z5MmUdaBWngSEpWKHkNdW6Lth0MNqRRJIlHOw1GvYoFNUq8RyZRL0pF2+
kUe0RY/YhXqL1ElAcuQ+lxhrj6LMWYPzNEngNS4ZXP/DHnEc+7jliDYJKgVX
T1zKcECXHjxrougw6rM4vV36swMy2tbjkq1HAgp1zwybnyN6a3vpd5oBCZL6
b6nvuu2ICAV55xOBBFwJV+QlhZ2QwNMUsxgjEijfEZLZFeOEOnb5LocZk2DK
JFt7sNUJObmYngw0JUGNp7yBwooTWi1RPOhjTgLLXGMReVFnlDe+562bJQmM
BDtobSbOSFbwH83RmgRZHmFX+wKc0YDXvKyNLQnGTXNPOyU5o+DyxyNm9iTQ
mQWj6ExnxPy2M9XIkQT49QbP9jRnVCFWJaTvzMC7Vj9jGeGMth9TGVRwJUH8
sozwAwdnlPO1P0nEnQRb8jrD0pSd0aq3s+gOTxK8qtnDGcrmjPzvzQ798yJB
SJZ+x40RJzSilJa66kOCQxdDNMuKnJDhGQ7xKT8SDL6+4a1k5YRaWcqGnwSQ
YHd3b9/5X45IPFouoz+IBLXKp5ckzjuioufdkm0hJJBtxeiTgSPahGxHLoSR
oFAp31D/mQOa4U6QokeRgH9zorPdnD1yzmIZTYkhQcPM85vnguzR3ZmTxNA4
Ejy982Hoc6sdqunseG6WRIIn7gmXOf1t0J595mTtFAaez2GVLeLW6PCxl/Iy
aSSwqt/H933cEoX7bFC3ZpGAnsZ/l0fCHMluMlIdppCg0Vdc762hEWq0Hc53
LCLB4oLeDR7v/Ujkuq/OoVMkaB7eUpweLYxO7FudVSshwXESSzT7vp0ofo1H
n7eMBEzdZonJHaxYtcx96cV5EuzzHZAT36uEqzctlgxeIEHy9VYjizZVvCsm
y+jGJRLYGX4wDnuogddQxZmyKyR4tDR0hHtUF3fMTpv5tDD0Uzc5c4Z+CB+w
S/lq00aCvSkhKhVPjfHp6+yVBu0k0N58cGHTblOc/p/MuugNRj1LJb5DCeZ4
Ya3r/M6bJBBa+dzDl2eBPXytbZh7SGD+30/b+jJLrKMSd/F9HwmGWBI2fzlm
jevKmOxH+0lg/GgubjjaBu9lLfp9+w4JPhrCAzPG+XM8RuLytXskOKm2J3YX
ix3eGLvmeGmQ0a/BRimz1+xwNJj+LR4iwXTyI+INOXv8+sqLK7kPSdCyn/3c
zWR7bL0rwiXtESO+/GHbwHZ73EP4xRQ+QoL0ceGzZ5bt8XrT3CrlKQnmdO+T
vos5YOXpp+/Kn5GgTTO8TdvSAUfuwSPXx0hQkmZW4RLhgC9a1PeNjjP62yc9
y4rogN8QTjevTJAgiOsene+oA+ZrplZtmWT4i2wcdJOxtp+OK5B8y/BnXcA5
M5IDPrbHm4SmSFAQT5h4HO2A71iYx3tOk0Cl4N9wmJ0D/kNQ90+ZJQFKrlKU
kXbAms1i9gXzJNhceVdV97s9jp/mgvoPJADBvzP3uu1x3Z6fSveWGP48rxj/
Ld0eT1vMik4tk0DTMd7rO4MPoewnOzY+keC/0f1DOxvssGtzz789X0hgu086
dWjFFhdMX/mkssaYn2ffdxaL2eL7e0reWq+TgNr4p3XD0AbrZcdiyi8SfJcd
3s3paoVTmz2byjdIoDFZEbNkYYmbpk0rr/8lwcHH17MXlCywuKVozgoLGf6p
kYoFn5ti72zOuC1sZLj637lj/cUmuLj5u6/kZjJoZwpUZ1oZYw6+EQNPTjJs
nLwx7HLGEH+aJv29u4sM2evTzM/qtbA0X8zKO14ySEtRN9Ea1HGgpceb33xk
+M/K2/L9RRU81qzSqyJEBm+7sNWyzVK4O/t9drkkGZjsIsRrExcN1psfxVw/
QAZ73ugn1/buQEozXT6j0mR4cvJI5rP2vaja8qT+FgUyfNrxnTrxRAYd4TP+
k6xBhtOWr3LM7LRRv6Xy8gktMpgJPP2UzqyLfmcLTdYdJANB90bpcpU+ip1Z
636nT4afbGIZP+wNUS3fVMNvRAYnw8uKQSQjNGU5fG6PERnaN3aO3bpwCDm3
XCJYm5LBYfDL2JfbJih/pjA6zJwMXCdTxmuwKRrgI3pTLMnwgHm0du9VM8Rk
FWldbk0GBZ0bIi/+M0c6RFe967ZkqN2adCzQywIltxjJj9qToaSpUM93ryVq
nFEUWnEkA5vS5FjSA0u0wLeXa4sLGV55n2e2ibJC+6w2b0i4kUErVNPwzC8r
pP780FNBDzIU3ekcUEywRqZ+pFpuLwYfu2/eZ31pjdw/dBM5fMhg92ty55qK
DYpM+un8z5cMpSJUi5dZNojwR0Nu3Z8Mi0lu3y512KAThxOZlwPJQFO6e9Tx
vQ2q5m56MR3M0Gt7UvaLvzbo2tmlqxOhDD/4FJcocdmie/ulaU/CyeDPq/Al
fKstGm8K9hyMJMP7ss92Z3/aoMWD55VxNBkmvpeR37y0QX9uT7J3xJJhvE7u
P6t6G7TTVnCyIZ4MyZz1a5yxNkh83LXtQiIZDlbXWLqI2yD1wJNHy5LJ8HQe
+/oMMvB9fOxXmMrwx1A+3dOfgS+VS/NIOhkuUK6yFSxaoUgmC66cTDL0hle0
24ZZIcIx+vsUAhksLwttXxizRCd291+PJpLhyH7h1qsHLVF1xd/8IBJDD+2g
vF8nLNA1ad0QTwoZJAe6wrUmzNG43jVu81wyGOmvYGlrM7R4b3Xe4AgZRjsT
93Ymm6INe4VejWNkyNy39vdbkQnaF1ITKZFPBq8rGQPE1kMoMq/09t9iMuxk
f7t0hB8hAt/zM99OM/zYoldVM6WH8s9zx388Q4b8q3l9/RU6qK39mNBEORmu
ReTw4J8aaGOSkNJ+iQxBfGlViVek0fbwG1YNl8mwnHH9ajyWQPu+fNt34QoZ
eF+pt7JXCyNT9rhHBVcZfviw/Zfz7U3ohGKAVHQ7Az+7FR9ZSRhXXy//E9hJ
hkGmz7EH/CXwNaOJUY8bZHBW4n2aJSCNx12dSGY9ZAjRuZ7xo04ZL7474WqA
GfruCQ+yXFTFfyIfymvcIgNxmJt4VlgDi+eYvBS/S4bt61NY2vsgVt9CaRIY
IENNf7VoYIguNj3ZS995n9FfDcPUYl99HHVZS/XvQ8b6XNC1lnzARJVkjm+P
GH7aM6p/Id4QF9xsfrM0Qoby3492jJsb4WuPZf57+Yzhv7XSV6UTh3CBxK1L
v8bIcFhvsY9YbYyj0tz79r4kw0u58OvmPibY9MGnCb1XZNjx2DHw3FZTLC56
+JvPJBmsQo1CZepM8Z9EkZ05b8lAIbwgV+qa4fF77bJVU2TQlbsx39prhq8J
2pjcmibDN/fjfxXUzPGJ2Bm/97Nk4DSM4H5fao4j+7MyNy0w+mnHeEzVJ3Ns
umdXseQiGapxvrqRlgXeF1nXZPKR4Q+RB5KdcRZ4o8dwKHSFDF+s57d9LbXA
49wvZw6vMuqvNJn+0GqB20Li/9V+IcP51z4uZ3sscP6NzYJDaww/3OxK23vD
Akduq1RfWidDFq9fGOmSBTYN0LTj+kmGbpaA5+8ojHztwxEKvxn+pe5oCHRg
5OMIodn+IcN+Eq+SHjcjn/dGRdw/MvyYGo672G+O25pP3ihgpkBD3ODSaIg5
zmeVe9ayiQK1dKbM3b/NcKR7/8pTNgqcSrXMvkkxwyYNHlvWNlNgWVA6T+SP
KRZj+izBu5UC61+ffSiONMUbTkcMNLkoEGDIa/nfAxPc+rsjKX0nBf5zZ5lp
jTDG+Xa2+Wd4KLDz09ULQ5cP4YgLs7VduylwpsGiS+eVERaz2v1mg58ClhnD
NkaShnijov6H8F4KiOXddVjRAfzii9EuJEwBs+/5szZFBji/LMGcvI8CIW3s
J8zLdfDvD49a2WQpIK00Y1AuoorHjhw9vF2XAkx7a8Su+lUbtL4Wq1bSp0DH
rQOd6UQWlKd8vdseUeCd1EV+JwseZDw+97noEAVmE/ZEnecURy1Sxt581hSo
E3Ex1aSqoONZr1K1bSnApaU/SaKrofDHiYUe9hR4fpBfZzZDA4mknb931pkC
T6TkJ4rVD6JfQ9pT3a4UuHvkacTrHzroucjI70l3CiS30/j31+uh4/f+Kov5
UIDH+0n9pjGEIGFORdiPAnBSmCu4DNDa3keqggEUcE/YXUkAxnl0r12NL4gC
bHdN2n+/NkTeCeXqu0MoEF2VqHAuzgjtFKJrcIdR4NzVwd/iP4zQnXvRmtsj
KMDLtpzmknoIpSc4a3FGUaCv86Hlzw+HkIKQnjZHDAU88iet3jgao/f3JA6y
xVFA124m9F2zMSpJ4NRhSaCA7ehbndebTJCl0Fedf4kUWCGwFjZamaC/9yZ0
N5Ip4BUfaql/xAS1JvTr/UylwDbK65WsGyYoVKhOfz2dgdfj636/tyZIcKDQ
4GsmBdpkOmpf/TRBjxIy0CqBoV9jzetlDlNEEQqAZSIFihR7e6q4TJHmgLnh
Ionxv9PYByY2U7SYoGw0T6FAHt/TTXu/mKAKIf5DMzQKNB4Nesr8zAQ5Dvw7
NJVLAf1m0emxOhPEnjhv/OYIBdTLLFd7Uk1Ql9Bjk1fHKMCXX3NtQssExQ10
mI4fp8DV++VUlxVjJJlYYfY8nwJPF0ZngsuM0bhQrvnTAgrYK9TyG+kZo+MD
MRaPiyhwcjzD78CzQwgSXSwfnqLAl6P+8raBh9CakL7V/RIKiB/e95Bl3gjV
Dkha3ytl8PWDtbsgkKGP8JpN3zkKVOecPxmNDNGdgVe2PRUUsLvVGx14HlB6
4m27ripGPxmeb2b7jtC7gSKHaxcpMDXu/CFOTR+1JKq41DZQALd5E7bxaKFQ
YQHXS40UOP9APywxVgMJDjK5VTcz6kvPKWi5pYYowiPu565RQKG38Y2rvTJy
HIz1LuimQE1ZwGU1e3HEnuTqk9fL4JOmJiTlLIy6hA18j/VR4KPWyAg38x4k
nrTNn3aHAs9cBs/ouv4x+CLcEJT+kAKn7WMt717lxTWDJ4NTHjH60TCKq2JA
CHsmZYUkjjD8K7jrh8fsPtw/aBkW/YwCJk8clF2xND6Z9CHS/zUFqC/P/2Ab
UcWCppkJTm8Y88HkciunpTqu5udMN33HqH9TlWjMdQ3c2iNPl59h7A8WGWyJ
08Y6BT3/ic4x+it+S4Jd50F8K9C2iGeBAjevqlCfrOrgkc3xlT+WKMDe8etw
tJY+dp9gqllapoDU8JQ44ZABftdQ2PDmE+P7q4+lCQjh8BzxtiefKfD6k+N8
Mi/gTw5tN+58pUBwzfQSgwacKmnc1/mNAuUhE8NR84D/rj+7V/edArvOZ56y
OWSIc++HDJf/pABBfFLQrMQQbz+3PlrwmwIV/gfPHHxniEtiD09Q/1BAh9gc
xr7PCAsb8k+l/qOAQJKxYIm7Eb6468p8BDMVFisc3F7nGmH5uYMr3puosHRv
5NpwPeO8uz60ZsdGhe+zLQ99B4yw3n9ev402M/aX6DgcfWmE7/h8ZNbcQoU/
TiZ+Tu+NsJVyNocMJxWEP5Sv3Jkywk9Ztu8Q2kYFXfGd32dfGGHP5xW8O3ZQ
wSFVsfjWHSP8/rKSEAs3Fc6I3w2PqzXCkZl94t94qNAQLaqwlWqEv1g7yCzs
poJd9+HyBmcjnCH6XunVHioUjxfKJAkbYaYviZqP+KmQIiuWS580xEfubNK/
JUiFZV/V7zuKDfHO06cOXRNi4Kl6c9vA2BCfjthveVmECv66f34ZLAEW0euw
LxOjQqX3WK/pMcA1283c8sSp4Pi4n6loH2DFqRc+JEkqaLO9K7oRiHBHW3hw
0gEqjJMqnt9LMsB33Y8leMhSoefPNbboaD1sLbc33VqeCjf3zsTLuOjiZ3/q
iUiRCs1vk6fPqejgmerh//arUmGLgvtt0UEtzLK8s+bzQQZfKt59AkRVfAyf
b5jRpcL+syw5j/eoYO4i1bYX+lT4qvsgy8xBCYtpOff1GFKhmvx9Sj5FBiPy
6YmjFlRgz0m9KdgmiAm8IjvEPahw9of7u5vye9BwyxZP5EWFtgJLskCpEBKx
/XbR24cK9runDMtS9iGc+1DndAAVJs5v995fLoV2SlynXwuiQn6mw/LN07LI
H18YeRJCheP2GrddchQQy4/MUK5IKpymsvHkH1ZBjqdCW2SiqfBN2YwgNaGK
Lig7bpjG/p+/je16YurIOEKmiJxIhR/1hFc8NE1UzMY7WZFMhbzKvS/PVmmh
ufNM0t2pVPj9+WWpYKM2Ojzxomc9k+Enmwa/e2d00HjqbY7d2VSgb0m5sDlN
F0nvanJSyaFCoNW8gN0hPZTRVFZhS6ZCodbbONW/emjIKvdDFJWBd3DdI/Cy
PhJcSFA/SqfCipqkW4mBAYqi+eTUHKYCS1jNR/ptA9QtZjF0+ygV/L58M/+q
gRBXjzrv1H9U+Bvj/OZmMUI+HmL+f/OoUB9zIfLWe4Qav3HW7y2ggtHN/k+J
2wH9Lfz+TbuICtvZvu/cJg7ITnEaXE9R4cCJFTZ1eUBVQ4/+Syph7Iefi8uM
9Wpo11hBKRV871ioGkoCMtxUs6+xjMGf8OkmfR5ARZWF0Q/OUeEe9zed38sI
Tetmdy5UUGGTeQNZ6xJC6uPhLOznqRAs4qobZokQLdnZRuICFQwot2vGJg3Q
851QCpeoEFno3TPlZ4AOXJWb9rlMhX0Ct8ZmRvRRqgWfYtYVKkzqbCwbqOij
gVmWjNJ6KliPaLUHk/UQP2XldvtVKowW7Mh4fksXRYhMbB9tooKzc+LpnV91
UFfXXY/VFiroLM6HnOHVQV5fz32S7aDCoGgp/buyNmo4cUTH/DoVgmbmRjfL
aaENuWR6SBcVtkU+ezXBr4kqgq32VvVSwe1FeMzpp2roE5NWaE8fFeLOEKs/
VqoiKBdvmeings3duYE3QSpo6vlPU94BKpDH48MjLykgSbPaxGOPGf0620Y7
c0ccXZFhG0p+x5hHuhzVw3P/ep8KGf6Oec/Q49MyQNJWvLEjWz5shgqpI6FB
v6J5sO36Wr7HAhXMVcz2D18Qwmv9M04Gq4x+Ct9TL88ujUU6xOhaX6jgQSov
lHKQxWZXvDuU16hA3fknSv+4PC478Yxf4gcVrvz8HusYpozvUHZaCv2iguix
0x/WI1Twcop1Fu8G4/+2gd7LgaoYvO9MbmaiwT76LVeCujqOtGPawcxCg1eu
P14Ncmngk0Z68GsTjdGv2hYZLzVwt0Z6wlc2GowuHf3vYJkmnpO+Vv1xMw0q
eogDnbZaeKfQ6ujsFhrQwnjFq9e18MEd8mxvOWmgVmOR11CojQNZwjXHt9Hg
vzuHjpaLHsTHv10Ie7KDBjPi7Wao6iDuWHhbOsRNg+377H557dLBb1/tHbq9
iwaKP/2396frYI7Hbr+7eWlQptoV5zSig1X7T8p38NFgS6n5pe8Cuti7/bFP
kwAN7ozza5Yw5hu9lvNE7V4afHHjpQhQdXHjWbO+88I0KCoMnCZW6+LxfOrn
MlEasPFfSn3QpotZKFj81D4afN0W78vaqYvlUn475UnQwCxLNFu5QRc7h2vR
c/fTgEjy+xJ2UhcTvZI6cqRo4P4E6h9G6+Ja26b5dBkaVB1uaCFp6+Inhkv8
iXI0cM05y3J5XQf/UpeyjFJgxK9IVE+4rIMlpYOygpVoEOZ7w1TISgfb7q1s
8FGhAefzHbmzUwdx2vZXk65qNLgifaVxa/RBXMXMt8Negwaa1ncYLwptPLTm
CBZaNGC/vHL3jJc2/jqfn2B0kAai8ZnyTbe0sNCroWpdXRpEGr1yjRLSwnG3
jNgUEQ1yX/Qs+LRo4NJrRE0pQxq87FE1ifyojvsvd4WJHaJBn8tp2x5hdbw7
X3WIx4wGp7fummULUcVdnuInvtvSgCCz+0udlAKesfHtW7WnwcmDH/kOCMvh
bYZlnz840mDxGNOG2mYZ7C/F4/zalQatB0nCcT2SmH2NWeCWL0OfrvtOpRf5
8I/m0vwZfxp8vKrfYtXBg5dilFg5ghh8dBrU3qBz4pF570+2YTRwlqXMV99e
6S171Xn3dRwNHHZFHONJ2IGOl9rqMiUy/HSp6/hc9m6U4zLbLJFMA44DDf22
KgIo+DHPuch0GhQQ+QtvyO1DirdjEn+QaCDubzww3iCDxEisC3upNDiwz/JB
7wU5tEv/rA+i08DjZFjn6GEF9KNj0Dz3KA1CnXwm+o8qo8Ukv94r/zH40fpy
sMpbBU0qr6sN59HA89zrWFlJVdRfJyG6u4gGYnWa1Bsn1NC1sK5TWqdoIPAk
YoZVTR1dlnTY6lVCgzpV99Lc++qobGo+h1jK4GPf4ye/HDXQ8Qrit/NlNOB9
T5CUeKyBiF68UXfPMfZrXpW7pa+JEvgb3i1UMPi/LsxdWaGJgp8buXKdZ+A9
99H27GdN5Fr08oHSBRqYF3c7nNbUQuZ28YZOl2jAVOT7ODlGC+lybe5MvUyD
6/FTvuIlWkjxfrl82RWGfx2do6uatZBYrnp1Tz0NjnN8bV3t1kI8hx7wTV2l
QQPZdon3phZiYwrMY22mgeNPd1+Jei30o/sHi3QrDb5lXNyik6eFFjNOpFtd
o0GXsIJzVoAWeq15YCW2gwZO3oLLW6W10OOv3UFF12lwzoZLSHRKE/U3O71s
76LB8K9Gte/HNdG1mEXbl900WIEnxU/lNFGNLPnORi8NzmeGDK31aKAz83w6
YrdoIMv0qKDtEIOvi41Nh27TwKjAtDKiRx0RA0z2h92lQbC0fXOCnDqKF3ld
dmyABuEXA+/L56uhoFeJOxvv02C2K1Cdc04VmbtU/V4bZvhr2NZkI1UF6fBo
JfCP0MB6vF1so1kZKTwentN9SoOonQdvctxRQjwWv59QxmiQeDTrYp6rPGJl
LzKrGafBw5ZOI/mjsuh7v3TP/QmG38fTvHQbpdFrPdfanW9p8N6UzdTpmSS6
rNxCrJinQf/H35ZXggVQLO/nn50fGPzXTpS/M+NF6r+UU54sMeYFyZH4WIIb
9d1ujmJdpcG/eDjxroIZjbs2u0f+oMHFSnNOEeF/vRW6q6PUX4x4IWILzzs2
42AxZbvyDRqkEov43wzswKsfmkxGmOggW377EPt9PsyR3aSquYUOjuKWli1O
EvhRwKerdpx02Ellpa7v3I9PmSrJRGyjw9dT27eI9h3AYjubRM9x0+HfA3Fa
0qoMnltbKWvfRYdGkmbtzzg53PBScc9jXjogz3n1zW/ksfaFRi4WQTpwzqo5
t1OU8N/DK4f3CtHB0t1Ak82bcR5FK27SEKHDudA04rmPyviYQyzRVowOJlQS
37NEFWyv2fgzTJwOfqUBorErKnjP3pVksiQdLib/W1f3U8Wv/ymslh2gw10B
L76vd1Rx9UxM1DVpOlSfPXAsRVQNh9+/OjcsS4dt7PELZ2LVsGLjcsC8PB3W
07h8jVvV8FqRwiSTEh0eF2ze67GohrvSYtwFVejwYVDQum+POiZ5Xx1VU6PD
u62jx5O01LGp4bKtjQYdrEWl9RKs1THXAYWhUC06fB4R7up0UcdPt8aYkA7S
odzThsfKSR2XfmroO6NLh/pTvkZgoo59n33UbdOnw3Xz0NgmOXUseUO+8yGi
w+4VxXvN7Op4sTxadc6QDq5VAg+DxtRwM6Xh6r9DdNBWYTH8XqaGU8M+SguY
0uFvVNeDs85qWM9a/qKqOR2qOAz0KJvUMItKtKi1JR3GfrNvTF9WxYO8DWUh
1nSIFF3ft9lIFef/WuLNsaXDGxplQPWpCnZ+K1dYak+HDL2AwEZ3Ffyutv7w
A2c6JM9bDk9ZKOOavCWWWVc61MwYhZZHKuHoRDniX3c6SDd8Dn2prIh/6NYn
q/jQoV+saOZyvhzuFVv6ZOlHB7tlZbs5KVlMY5OLCg6gw8I8U9homzTe+bgu
4HQIHYxEZV19L+/HMoF1tn9i6CDYq1yrqySCB8t1mr/E0SG8PoDr9IYgDn05
xL2QwMB7ZsOLs48PX7RfevY0hQ7Dpuv2C0rcWAzJe9Vm08H5r9ioP/enXpzZ
3V2eQ4cZj0sSlW9v9fp2WIucJDP47roK6uxzBmcVYqay6XQAnoDR7ZUsaI9Q
Y5hTHh1Otf75lPSHF7W7Gdw3P0GHlAH2Z50cAsj55CNZg0I6jIfmZYqxCqHC
rZ+WpYvpILyl6c/EezGkbJpjJ3KaDmeDu1bLjcXRI/KOll1n6JBmuJDXe1YC
cf1USv57jg6qje78pVIHUL163/OvFXQYIcfSlbykkGW8vdaHKjrc7D9xYIQs
jQ7Px/8avUiHyTSdEJ4aWXRAgtn7fg0dNhbWVx9Uy6E7voU9vbV0cBFt564v
kEcsYy2kKw10WH5Eq1c3UETnuY3eVzTS4TeB46XGH0UENk8PnWqmQzS/a/V6
vRJ6cyTw0tFWOgxZOfft3q+Msu98Yc+5Rof7UpsD70cpIyEmanhyBx1eGLFm
b6pTRl26u4YirtPhQXj/hatvlZFH2gU5vy46NI1fLm7lUkE/WtXynLsZ/P85
lMKqooJOr9xeseilQ/FyrXOltQrSlHW2R30MP/768CPHTwU9C5lpUe+nw5ds
FpULESoo6XzyLtk7dHD4J2vBGaWCeCZZU0Tv0cFHJbj+LuM+3cxfPLZ7kNGP
2zwEppxUkJ3zfu2tQ3Rgv8ntEq2rglZOtJ/594AOsfm7+zIEVVDeAxPG/Gb4
6RLPLqnPykh+85j34mPGPIjr0z2FldGQUWjv2yd06PN9KjVFV0YRxHXR56N0
qHw7Oa1krIw4unLJQ8/pkL/wZ9HjmxKq+bZnGr+gA4dsheJOJyVkonLZuP0l
HYquftv8/rwimonWqql7xeAz55qIynsFRK0d2Fw1SYfu8mJq/G4FJD7jFlH8
lg4nlbdk7D0oj/y90uVJ03QQxXom1V6y6F8JR37KLB3ifgs1Uz1lUMXT0k+R
83RQTA+dn7aRRq8sbrS6LNFB6fsJ2ajdB5CR3UX3lGU6aI15ntn5WBLVOZ/4
e+oTQ7+rSr47cyRQpl+I5bOvdEgqei0W2i+GBFO43ztu0OFA6Q7+a695kXtV
BLf9tlwwz1471397trfvknNn3I5c+Ldt+6EJ/u+90vXI5wR3LkSGCV59eoYZ
/2jnvfKINxcKPitl+RK2Yf+bTHYrfLnAnMt9P+ASNx7sW1rbJpgLhWmbLe4S
d+PTD26BjUgumMmq8tYwC+K/Iw1z0WK5QB6SqOWrFcKhY6ePHxfPhQTvkswS
HVGsORUz/uBALvBJmDYz7RDHFXPuxCXpXCBhATsZTQnM/vGQJKdcLmgX2dNa
7CXx2LpAvKVSLigI3b9F8DmADTZY90Sq5ALQ1Hg7bKVwDfPqzaNquTBw/5Gt
jIo03r75VcAVjVxoVJVI8GKVwalc9zbf18qFiYg31xYGZPAb7parCwdzYWrH
ny1pWbLYlO+cE4deLphanQtvEJHDjUKHf0oZ5EKUb5OCRosc5hVPrDSDXOCR
taW+UJXHBCkfkzCjXIgrJu/yvyCPZ+TNl3KNc8H+R2DBWRYFbK2qVlhjmgve
LDJ7A+wV8DUtEa175oz6vAWtzx9XwEL6WyZnLXMh/ZbJf/adCphmtEZhs2Hw
V04gBY0o4I9mb6X32+WClGUKafKFAna2GXpk7JALiu2VKePDCrjbsT052CkX
9F7f1oxvVcCS7lWCNJdckJ9UiLhFV8DHff7ru+CWC9FymQu/zBTwWmBq6G2P
XDi21pzv81Mee4cHcE175ULYXdmfsmXy+E6MdSuLby60lwSdqJGVx/JJWu7i
/rkQu7CwLFUvh0+mi/81DMyF8efPQncJyeFf2dsuBgTngqT1l+zhbFkcSP1h
QQ7NBTkdw1c9IzJ46Mj0p6rwXEjhjJT055XBqvmPivsic6EWXbmlZS2Ny07e
0H0XnQu5WztEBlOkMMuZi1P/YnPBppLqdqboAH56IVMBJTH8INssFl4riXmY
Om7opDD86TvL6XpNAjt5fzbRTMsFpScX1Yw7xfGz/1VYpvFUb28bJ6UIiczT
ttmyU0p26tDZ604lTUT5azClQsmQoUTRdH5rSWSMkkgTMqVUyF4l5ZwMFYkQ
QkhCOpkdz35erhdr3ev6fq7r+tyLPJyWhQj16ZXlOd1mCaNrd1ntPAOhn/KX
LLZXpi3uK36OxjLwICppY/bDXwL1cs/Tv+IZqNpdelb5eqfAkXVPYvAKAyK8
WB8t32P81kYNdvc1BoY/SUlIZP3it2+ev/NDOgMHD1WOO7VIIdZdi7a3t4U8
zFeFyRTJov2zznlW3mWg/IJ1efWYHOooHjtflsXA9ST97TG2SuirQfej/AIG
NmooKp+w1UJ6RHtd9iMGFFce2/84joXcuhyq7z0W8guWiC0I0Ea91+u+3ihm
IEJqj/llZR2kPy7jd+0ZA7z6/+qfNOmgw3Zb/ksQMDA+v9q3M0YX9Um/UIws
Y+CEkfjnqc8ctOTIVDopF/JedvXpAT895Pl69fILr4X+Whw8J29CD2Wz/UvC
/mbgRlzFYNrxxag/NHdTyBsGJjbbh0p3L0ZLm7/VHa9ioHOWZHW1pT7yWs1x
8athYMVA3WjxDX2UG+fS7/WOgc3WpRP5PfpoYDA56HCtkD/ufpKiw0WG2xpm
H/ogzPey0z8DbbnIJ0MuxuUjA3p/23gZBnBR/mwrDYdGBkqMfTpKCRcNuYRn
2jcxYJ6s0G0QzUVGpeWrdrYwMC/Q+Sm5yEV+KiJlVq0MpLjF3e86wUUFgWZW
W9oZcL62dKPNbi769f5408YOBhIYK9FBAy7iGRa4reti4Kqz75neYX0UcPHH
8NpuBhqiZ+I8cvRRYbd+2JpeBt7dW150bZ8+GjE/OJ/Xx4CdKxp6PL0YmaSm
Ji7vF/KsMFonEr8YnZhs0jEYYODZ5n/kizUXo6f2ivl6Qwz0tSXq6N/QQ2MP
bdayh4X5+e04mSinh6TWmNTI/yvsA73gEZ8wDmI9U3WZM8LA+/Nzs1w6dJFl
eef53nEGOHJSqzojdJCD5d8KTZMM9P4VNpdXx0a+Vdn3KqcZmPvc2k5Rjo2u
fgiszBXFkHLqsiQ3iIVyd+91TBPDEB9+IMYDtFBZC38wZg6GvE0RpyXOa6C+
rrnygRIYYtYZrCOdKsj099W9ZgsxIB2Z6uVL5ZDVydD+pfIYbpQ2Ns0ykEWu
066hmgoYPqccsTWzlEIX5yxNF1XBsHfDjvhgudmoWUHwrYKFwcNMuc2rtJl/
yqQjaNcKDOkWQTizUIpGF7+WtFiJYfqlz2s+X5be5t+/vpqHoUc191iykhyt
sgh4rroGw4XmA+3/ZCjQ9je7baVMMYxXFF/+7qRE/7X6s2vaDIOjedCL/Lkq
VMNefN4XJNRDExabGqrTlc19V2vXYQhA3jg8S4NaOL81KF+PIdfmmP4tRS26
t/NhaeFG4X/uv48dXcOi3u5J1vc2YVCtf7r6+2cWPff91JekzRgS6dGFX05q
0ys++/0vbsXg4Jx5O16KTQUnliR6WWMQdHhG71TQobWTMlxnGyGv9m8Dgxd1
aHfYr+IdOzG83azc6zOiQyfEGreZ22GYlZInk2evS2XIs1ZjewxT8WNHI3J1
KVvqpi9nD4aOfjPpzgldahL91yylfRjOh7aKJq7l0C2LjsTPc8SwYW2GVqI/
hzolWelNOGE4Wm/9pCGVQ/3UjZ9+d8HAL6pR2f6CQ5k0pS2fXTEMHGQMfjRw
6DXdqeaagxhM/bICSzo5NDej3eu5G4a0d+1hZV0cWrb01cwDDwxy3vvapZo5
9GN+ZsytIxhMlpR+uPOaQ/t4UToJRzHYR92uuiXcx2ee+hUy3hj2/NZP1gvl
0Bbxgoh0XwzcAvtKr40cWrzr536BH4Yds7ZO5ohwaGL6ijVNARiuN3gYaOTr
0oAhH5mR4xgSrgeemd6pS234eV0LT2Koe1adGtOvQw0vDRQvCxHylS7kawTr
0PlNy2I2nxbOi9+u9nOKTXsXe7kfCsOQOXU43S2QTV8FZv959iwGPal+94ZO
bZr+8rt8ynkM7X2b8m5YalNH5yPPP2AM+3IORWX+0KKmOZlXhsIxHDJ/EW52
TpMqT/YelbqEQbmmaKRFXIPWXnFX2RCN4WB1rwm7S4Xmdd0ddI4V6hHLiH/K
V6aXVna/ConHcMbcmrU+UpFuqjno9zAJQ/1WxWFPSXn6bI5rJfsmBrVKgaS6
xVx6J8DhtGgBBnDoNa5++4N/rix5p8YjDMMpChFtASN8F9lm7h+PMWzp2jRe
932ar5q956NvMQafwi+BUevF0eh4UvalZxhC0nJXJ76XQB82NZ7LEAj9oCs6
GrBNGkV1/m95exkG4+8ctwQROeRpdGXOVDmGh23m2reS5ZFlWH2zUgUGK92k
e35cBSSmtotYV2JQCd24VEFVGbV7xDl5VmOwlObFbAtRQYLHtTz8FsODGQNx
/SpVFGRr80VQh8FMdUkr21QD2aVFP2mqx3Du5uojo3aaaOXA28iRBmEerff+
HnHSQrJrFxyUa8KQEQruNktY6Ee4lalhCwaj4mZDfjILvWmIlN3SiiE63++2
xCxtlMGp7j7UjuGPsVaFi07a6C9/qdKzHRh4W51iE/O1keuLrXEpXRiWXI3f
LzmmjdCCiMNF3RiSZo6Fl/PYSN3xDarvxcAsCjxW6MZG41kSij/7MDjNST1Z
HclGH8cs+6V+YKgKWZ44nclGDy1Imf4ghm4eq9K8hI2i4yuSNvzE4Np43/PO
Czby7hD3cfmF4WtJGTIsZaOtKyw2nvqNYZvtQbOeHDYSqa8XDRjFULZ74eh4
Ahs9PnlI4DmOofVrvOf7ADY6qvk7+MCkUL/VixG8hY3YLy+s3jeN4ZF8W9Qa
JTZqdF/0r+0MBtbHvsK5zdooSup2/hZRAvM6RRK1r2ijDQ+MvczFCDzNmokr
sNRGE3YvuaZzCJS4f9neM8xC+RO23UZzCTzmVOX+ihfuA6kd6VwJAtexYbv8
chaq7RVVV5EmkF3jtmf2VU1EImMaZRcQMNwXtCclTQPxV2onzFtI4EVFYaT7
NXWUFQIyY4sI1CXdTOp0U0UurHdvBhUJDD9QrXhlqoIUXznjHmUCvauDxzeJ
KaNzMmEiDeoEsp5/uvspQAHtvVk6XKhLgN9/zGBH8wIkUWHa4M8jcBS9PJTT
PcAXeL6J8zQhUOXvFuZ6qYMfILt3x4E1BCB6v+yGpr/57XtO/mO7lkBEZl6i
inWH4Gn/kxKjDcL3u4/rL2NEqHfMpiCuBQGpRr6e72ExqmvSwNO2FJ4NV8Y+
QOI0OmwkR3YbgdD48JImOp96yK1KG9xJYH5m8nX4LUc1n5Q79NgR+GBn1fCe
tYh+2LdLpc1eeL/30dUhUKBwxz+2Zh+BpLwG4y8OSnRks5j1a0cCBV0T3VS4
D2YPxM4XOBOQeBR+fv1GFaq8puBCzgEC9leDrQtGVGlNy7p1dw4RMPP0nvxa
pEYvnH0/fd2dQKP17u2bvdWpqd7+4vjDBNTqE60S5DXo0Juh45c8CRzfleYX
lalB7/qcMb7gRSC6IWzX+HJN6rBIdijEh0C9ie/l5LuaVK4oNdv/GIHabfa8
bdJatMJx+WFPfwLcrzbcnwe0qNwBj5KUQAJ9rLvrrzzQok4eN6XfnSAgo1ZS
PNGnRbO8mpxnBRNQf/bnoOQ8Fh3xky/gnSJAf33yOCnLouZB22a7hxLo2X0g
tUaGRSNP//W/q2cI7D3yWVtejEUbzwkyKs8RUNZo5ZU2aVFdMjoxfYHA4SDT
quRkLeobuWL7CkzgbuXX2klLLVoSezjVNZyA1ioDRZ1OTSqelP4zPoJAhrVx
g98RTWqb0ry+IpKA7Ke5nB1tGvRG+qIr45cJbJXMq2OZa9Bv97b3GsQS0Lmd
tN0xTp3ychhTp3gC5w2jx6Lr1OiZAnop+gqBf1z15C3F1GjVk7HWsiQC7Tff
3Fuoo0qVSo2Mfl8jsCV/QjLWWIXmVtyq35NK4Pbgrs0+XCU6UdWy+NJNAiNr
rS0NZRWpRa1CsOAWAckFy9yC+xbRzy1YUyfj//PC62s7JUf1O5772mURqJiK
M08wWUgDesbLcDaBNUUlxryaBVRq2NO9P5/Aqbg/Fsi7SFLTuTvyC4sIiOTl
pDn3TQsYqfBZvSUETPctWPFNZkzwfmHZLlUBgXy9vbX3DYYFHuq88dAyAubq
/vMW+H8SJBopm1tWEriY48kNmxzid5jYxAdXE/gR8r35Z84I33Dtxe7stwQ6
tqg9UN86xX9tMXVx4Qeh3w7axw0li6F/97XXNbUQGPhy6r+7z6UR7FfRk24j
8Cpp3qWs+bIows02CH0hkJ40oBpqsBCxj5Wr3/5K4MIJ8ZPzLeSR9/Fp7489
BKa2R627hhah4hCTF/P6CJCiY+18AwVkw2Qc8hogkJPm4d3wURFdj/jyJHWI
wEy6WF9PghLqjVaVrB0mIC0qfYG/URnxrux0mP2bwLuq6lzcpYzOJF/KNRkl
EJK67eNxfxVUlfZK5PA4ge+vFESf/1RBSnf/s02eFPZJQZ6BvrMqcr2/+k71
NIHPt2YMcYkqys33HZ2ZEfZFmHJ7obga+j90yzeD
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
/i3qZaD4HPYz/wWZgGTgkbeenTkoVH3rsEqSCUi/nG0kvMhDPuvvd1oXmkDP
ubKUHbP5yN6iaTqlxwQ6pZOaL5gVIbP9eUPVYyYQsHpJpwQVI52u0Nbedybb
72vGo50cJUjF27l0asUE1IxE3FgXS5DcSe2Uld2mQC/JyKJSU4rEn0oG7T9i
CqE8ZksfrMuQQPgxNz4BU6C9paqYTV+OjkvsNEYXTGHOT/bV7rJyxDq/qGii
YQofz79X/CRWgfZlPhYlmpvCvQGjk38bKhCNSitXvIcp7L9tXf+bpxL9+pW/
rzTIFC6VvClsi6lEXyoj1jqTTKFm7I/kgZlKNGfiNj9eaArSH2M5Jniq0ORe
3adL9abgQH7EvWpehUY7znfR9W7jb3HttI2qQvfdj9888cwUnBLvJLIUVaG7
nLtzpOe386ElDdPVVqHGkc+RuqumMPNS9K5KdRWqCh4jutGZQVkNJ8dSdhUq
ELljFXHEDCwZuNZZ/KpQxptCzXwBM3hzZvXwpHoVik+Nlm65YAZNz4I43PZX
oVAFz9OjGmYgWCfxcldfJfL5qc/8wdwMAjqzpGbdKpFHmczWlocZfNi5q0dm
dyWyMzz1hT3YDF7eZE91SatAJnT0L8WSzcBu4ch9zFyBtNu+3tcoMoPQ18cj
sqPLkZLL80b7BjMYvjd3WPtrGZLhuFsY2GsGOzRMBfU0yhD/1Tj/unkzcOWx
GKV7W4KOCxGcBlbNgEGsNb6EswSxzhjpv6Ezh+Rj18o9tYsRDeL9j/mMORgq
2+ib/leIJnfiN1RPc4ieXFLgTs9Go03lI0nB5lAnVnctOjET9TskdlQmm0PK
4cCOrKvpqOGBacbLBnNw2KDQlIYkofj4FVX5X+ZQbeC77x5rAJJlFrxNG2IB
3MaeTAm3ovDoDrOhkWQL2OpneNvQEYdtvse9yyqyAGbNP9r6zddw5JOPR870
WsB8N5442piG2bo5xH+MWQCtWU3t2YQMXH1bXavznQU83nizpWmUhUeTqkMv
77aEy0rkpRddudgm+GUeG5sljP8rIwebXcc/PPe2zPJZQrRF6fXc+XwcaXnh
cdV5S+hXJs3qWhTgI5ddPxLVLCHlz8/3X7oLcY1c7i5ZU0tI93ty7XVsEZYT
GuKidbOExIFDwfv4i7ENwxm9rARLuAqpXATFEvxj3cTDOt8S9qwG3hfoKcGR
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
dG3jrerof0hUFGo=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Gamma]t\"", TraditionalForm], 
    FormBox["\"Excitation\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     InterpretationBox[
     "\"Decay of localized excitation, \\!\\(\\*FormBox[\\\"9\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) square, \
d=\\!\\(\\*FormBox[\\\"0.75`\\\", TraditionalForm]\\)\[Lambda]\"", 
      StringForm[
      "Decay of localized excitation, ``x`` ``, d=``\[Lambda]", 9, 9, 
       "square", 0.75], Editable -> False], FontSize -> 14, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8095452008725505`*^9, 3.809545361950925*^9, 3.809545402329921*^9, 
   3.8095454606239996`*^9, {3.809545498339122*^9, 3.8095455364801044`*^9}, {
   3.809545631000289*^9, 3.8095456606410065`*^9}, 3.809599083439243*^9, 
   3.8095991160324078`*^9, {3.80960527422325*^9, 3.809605285242796*^9}, 
   3.809606517759519*^9, 3.8096079387255583`*^9, 3.809641181321965*^9, 
   3.8097290344873123`*^9, 3.809729217660472*^9, {3.809729278237445*^9, 
   3.809729286561181*^9}, {3.8097310253893948`*^9, 3.809731050358438*^9}, 
   3.8097712158552103`*^9, 3.809774108712022*^9, 3.810229128586315*^9, 
   3.8102292042289524`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_excitation_decay_afmode_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8095991185851345`*^9, 3.80959924850183*^9}, 
   3.80964436073803*^9, {3.8097292305629625`*^9, 3.8097292429309206`*^9}}],

Cell[BoxData["\<\"plot_excitation_decay_afmode_11x11_square.png\"\>"], \
"Output",
 CellChangeTimes->{{3.8095992244007683`*^9, 3.80959925102477*^9}, 
   3.809605290843827*^9, 3.809729233149047*^9}]
}, Open  ]],

Cell["Same as above but varying the atoms of interest", "Text",
 CellChangeTimes->{{3.809641320493924*^9, 3.8096413292697406`*^9}, {
  3.8096414805133643`*^9, 3.809641500650298*^9}, {3.8096416329307384`*^9, 
  3.809641689067629*^9}, {3.809641736369666*^9, 3.8096417592015233`*^9}, {
  3.809641827723316*^9, 3.809641838424391*^9}, {3.809644889757348*^9, 
  3.809644897063801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8096420661161876`*^9, 3.80964206962634*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8096420701081543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inner25Idcs", " ", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"centerIdx", "+", "i", "+", "j"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], 
           SqrtBox["atomnum"]}], ",", 
          RowBox[{"-", 
           SqrtBox["atomnum"]}], ",", "0", ",", 
          SqrtBox["atomnum"], ",", 
          RowBox[{"2", 
           SqrtBox["atomnum"]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outer16Idcs", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"inner25Idcs", ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"excitedIdcs", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sliceIdcs", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"centerIdx", ",", 
     RowBox[{"centerIdx", "+", 
      FractionBox[
       RowBox[{
        SqrtBox["atomnum"], "-", "1"}], "2"]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "sliceIdcs"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", " ", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Excitation in central row, ``x`` ``, d=``\[Lambda]\>\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"sliceIdcs", ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Atom indices\>\""}]}], "]"}]}], 
    ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8096418008174095`*^9, 3.809641842698697*^9}, {
   3.8096420077648635`*^9, 3.809642027501035*^9}, {3.809642060080149*^9, 
   3.8096421356353445`*^9}, 3.809642254019083*^9, {3.8096423458157787`*^9, 
   3.8096423548753114`*^9}, {3.8096427155364885`*^9, 
   3.8096427530581374`*^9}, {3.80964281796024*^9, 3.809642835015952*^9}, {
   3.80964408474993*^9, 3.809644087659124*^9}, {3.8096442105544176`*^9, 
   3.809644226555932*^9}, {3.8096442792071085`*^9, 3.8096443178288*^9}, {
   3.809644426421321*^9, 3.8096444294681945`*^9}, {3.809644467262104*^9, 
   3.8096445018600364`*^9}, {3.8096445365273447`*^9, 
   3.8096445391293516`*^9}, {3.809644786268194*^9, 3.809644805021984*^9}, {
   3.80964487057365*^9, 3.809644917087267*^9}, {3.809645106503605*^9, 
   3.8096451459580717`*^9}, {3.809691060102807*^9, 3.8096910993348136`*^9}, {
   3.8096911410756927`*^9, 3.8096911513605375`*^9}, {3.8097292947313557`*^9, 
   3.809729311343926*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwVl3c81f8XxyWkohAN+cre2STkfWzXvrhSJKGMkJGVmYYySlaSmb2ue7m4
l3ijKIWMUFEpooV2kvjd31/38Xzc9/uM13l9zudeUfczdidZWVhYwjaysPz/
U+z6v5IC4S49G4HEQyTSGGrhlN3n712IWHeU73GzHkNdEeRSGe969Hm70/Fy
ozGUoTnrwn2tBf2Q2soXoTWGepWDvDi8MVrfMpO3V24MRQus09eL7qFA++nV
wT1jKDvdWG819QFi1+bsebhpDD1MGTH76fUEsbDzks1fP0VfLnLNR1QPo+fF
b6+L9T1FMffqZX8XjaJrUjL6b6lPUTb8In9PnUCNej+Xr8Y/RX3aFxifvV4j
pys73i7xP0U1ujtiNeqnUbPzmlLW8ij6OulZeLb6DXodw5XSNTmKYgU5334r
mkG2G6jWk8y4N29aey2lziOuF6NRW6VH0aMbk0HvvZaQ7R1XqXqZEXQlJ7sv
Q+ULSrjfrqjGOYIUvNFRtfovaGLnFtbc+WEUvOlGVHD1V9TFo5y+u3wYrRmr
d3wp+o7eWr4I3C42jHbfO2e4kPobjQeKLCrsGkLm7Zus57zWUSWL/svQP4+R
yrr7z51f1lHPoS0HAyiPUYrI8UFxXRZo5/DxO+31GJ11bw11uM8Ce4PjwyLG
HiGjucD7TU83wG5rE6M/1D70duHliYifG0HYb2jfSf8HSORfS94/TU4IzdV3
/va9G/EXnPwiEMUJT69pxBLquhEn2mGkiDlBqzxusutUN1qKD/jkaroZnod/
f7DnRRfqYJPU7jy8BSrxM0pcdyc6xpU+kRDBBSVPap+90WhHA9yam9mO8UDr
sEAj71saGrHgyxmM5gF23wF1LR8aenZ1UepWHg9Y8CYaDHxpRLPsFUaKUzwg
49FrT9jQiFb/7Yp3cuYF2UiOCpo0Fckt/vlVe4QPdgwJirnuqkFXBttnSY78
8ERG/0jRh1x0jSs3RCSMH8qKHPzYCLdQpnkY66csflAea59/Vn0TFfYqisSP
8cPGT0N3ZkMzUXNHoXO1gwAc7zmXtdEhBb0jnx9Zs9sJltjLgxbohgyuG3dW
2OyGiMoPe8JFM3G8Oa1qJGA3nHvl8138VBbuYBfP+Je6G5KUXU/xVmZj7WiW
U/b9u+Ehi71PufgtrObTtnXdbA8cVjQozvmTjyUMVQ47GgjCdrZ9Us+vl2D3
tUI4f0IQPrW7v/q0txQXMbbJ1cYLQts9Kf6b5aVYSPnz6gYsCNmd92RbWsqw
wH8Vd+p09sLo1DGnfX0VmOO30CKbhhC8IgwOFlfWYKOG5AklByF4Tt2UaiZc
ixP8VzqPhgiBx/uhhOT0Wrw2M5FBoQrBNlujy+/D6vDvofSDLor/wYFvm9l5
lOrx+2rOS43SwqD66FXZpCIVS50KD3hlIgwbznQI3HWlYk/RucObTwnDE4uh
C19TqXj65j2546XCcND2XsGxj1T8/GLs0BbRfRA/AWTz2w34pNIKtwq3CLzq
1FDc9qoRW04mlu0WFoFtI0aDVA4aVk8UOMSiJAJWb6+fv6VIw2yvlf2e2IpA
VJqD6sFoGr5zzeuRf6YIqDX3Xxvf1oSTtH+eIJWJwID5m210lSYcNJfwR7dZ
BL5bep+fs2/CoFcgw/VMBLz6LQyUspvw64Wnl6v3ioL1nim7DL5m3HvLXThd
QRRao35fWldqxmTjL02Rh0ShjnKe1m3ZjGPzt74zOy4KhffdOO0vNmMhKwPD
+TuikOwXad75qRmz/XnyYrBRFFJPWghtZmvBn0qPBTffFwX2z+p9jXtbcOtq
RPGlOVF412bqo05owUdq69fF5cRgt6hu05b8FgxOh25u1RGDVJRrl0RpwTJs
jxW/W4hBsgirRvi9FrzsPHes218M1nRX4grmW/D0prM/q2LF4F7QgVeTyy34
QeOG1BvXxcD+zkb/lM10nL31v7tuVDGQOPBYw0qWjmNbqu3NusUgpS0x2k2L
jk96aH1SGhWDbdEk7gUTOlZvsxdc/yEGtV/LpSLc6XjUNykiX0scYoKoH+Mz
6Lh1526eSwRxmMhJVL9aQMd3ussq/I6Kw/vokL87q+g4WLBrXCdaHBgtKcJ9
d+n4aK91gHiqOCxl1Bd86aFj/eAp9q0F4pDEv2+0ZJCOeR79Vn+BxaHDoP9y
4ys6Xg691N81JA56PGtCO+bo+LXoDs+qN+Lwpcszi22BjnsHiv6mfROHh17n
oq5+p2NypGJGxEYJYPAyjpb8YfYreVfOjV8Cmp/kdtivM/sdJnSbSkpAA/WW
ah4bA1vJnvy601QCzopORPzlZuCV5NC2l44SkLD7udsILwNXLl66VHpKAsqt
q7gcBBjYkZhtczpMAq4r4vbzuxmYjVa+R/WyBHwSS29y2cvADTtbZpazJMB1
s6/O3H8MfDzyQR0uk4DRgsLMfSIMzDU1EX65SQKOGS782izGwK167/WteiRA
L7HnZrk4A3sXL2/lH2PWv5Jb+0uCgQXYNo+/mJWA7YrTvn8lGbj71J6i4h8S
cJ66ibNZioED+2R9vdkkwV7gIkNamoGFFbTVlfgloefDAxqRyY+vma/9FJeE
vdhYSYPJEV+PPryrJglZkoGuo8z7Ug6n0y8YSkJoHSN8P5OfNke5mNtLwtpc
JsWIme/8nhQpXg9JCHI/qyfIrEcxOu/LRLAk8FIeOdYz6596VdtakCAJ+9y2
KLGLMnCSfvvFk+mS8JK1fFVoHwNrlQ5YK9yRhGsyPD9/CzHwHMer3d+pkoBU
6q1vCjJwhs/iW0aXJBR8MDFc3cXA0L9WGz8sCc+d2b9LM/VeVNwebvpGEnpl
rCP28jGw+Q+lrWMsUrDdkdvfdSsDLzvC2G0eKdi9bM5L2cTAZQzbQncRKVCI
KP4xsJGBWeKC1L4gKXiSJf02+C/TH2/O/2u2kYKtocKiq7/o2Nko/UHMcSmo
abrL6fiNjps3NzpvjZOC4FcxOvHv6dgv88cFqQ4pSD65zDswQseCv9msFwak
wHl+e+RKPx0/OCKwm/ZSCh5NfnLe8ICOxfZp1ur/kwIJqfcLha10/Lwq/KmL
rjREBG811imi48tcVwrELaUhk+GdbXuL+XydyfH+6CwN7U/NVUzT6ThNnbEa
HiUNRoUe3FMX6NgEr0hktEpDw367mY6TdNzwNCa0T0sGMn6KbzskSceVlzzd
3xJkQKBF9rq4EB0XaFrY/D0qA8L335n+5qPjpJzdsvtjmJy8SdOXhY49XBqn
0rpkwJxUPJnzogXzz743dDKXBR7h6g1fUlpw2Hd7vnlnOXDWVfravNSM/Uq1
19f95OBl5KeFDXPN2J0k+nl3rByom/DnO0w1Y+uWxR7zIjn4bZAwuKOvGUtH
XY0kz8pB58uZP1tLmvEzVjwd6i8P2wo9zCyPNGMdPrl6tjgFOMSxcGBsuAkP
bjjaN3BdAQwOD50Re9SE3b5enckuUoDewIefErqb8MWhD7tkuxWA/NlBLbaR
ef5aVbwV+354mhGYc4K5r922ytplJ++H3eYPgpePN+FvK05+x/P2w9laBeGr
R5j3P165LFO3H749m2tUZO77qr73ra2D+8FRPgzRTZjnEyvFX/Mqwvy3h3rd
iszzbDI/pXMUQf5XvFA+axPe+ePw9q+ViqAomWod9I+GK2cSZVsZinAyyW3J
aZmGB7rnj1lOKkJoeqSw+yIN7zxf0RsorAQGMmWdTpPM84ET0weVlMDumXfN
/XEa1nHb9JcVlMBnFzHVYISG3ZCXUtYJJfC/TxUL6aPhqn9SOYxSJdh9qoyz
iE7DuguODQlNSlAlGCeaSaPhwanL/Ra9SnD/RPfmHAoNf2ubY3k1rwRHZSvV
BytpWPjQqPp5AWUwl3vr/fkWDXv9Tc8vc1KGe39CjlFjaTjT+vO9SDdlGNT5
dr85ioY7i40/Wnkrw3YZSnJPBA3vNlvW/BWuDHvJl5f+BdPww8xjQyY3lWFe
a1po2IuGZRVlNr4fU4bAVPtAhh0Nf3Jr95azV4GuH88cDskz79N2Xl87qgLf
hw6feiRDw0abAptG3FXgC8PlAUmKhvPqxFijglXga+Pgr5OiNGy5knj78Q0V
KLDff+HELhquy7Ab9BtSgRKvwOBAVhp+MVfzA54x490NW6StN2IObfa9AtMq
4H/lesbX1UbsOt3i1b6kAl6XFB4Rfzfibfv/27BtuypsV47fUPKpEZ/pnVer
t1IFB+4lZ5WRRtwJtacVHFXhiQD/+bjBRszTFlhS5aoKtzsneNofNWJK/R++
0jOqkPqvM4TtXiP+lrP1W84NVQjwNlFqbmjEBjuGZHfmqgIK1aMHkRtxRmrm
iYw7qiC9SLm3u7oRqyf8N5zaqApbD4deli5uxGGnlSgJY6rQ7J3aqn2tEfe+
+z6//lIVnh/0dTS+2oh3udH3xcypQs1UcfuBi42Y7qB/Pfy3Ksg9usE3EtmI
/xyyD/DbowYSlZfGnng04miecAXHY2qwRwJtvKLaiPuTdDxHT6pB09VInmfy
jfg/dpY82wA1EG788YBTshF3/Lmy1SJODboOpZdu2dWIWWZyP6JiNVCqqhW6
9KcB2x47LtZexYxXqnTxydcGXDwhflS7QQ1KdNpDfn9owAb9tX3q99Rg4/6X
R149b8AXmjoqZd+pwYvrweb/WhrwU6UL0+ULalA/l7IiU9+AJapNd0v8UoPl
higepfIGfL9gKFF4kzp0eWhMPcxowBxX3p7aIasORy//2CTr34CTjnJI/vNT
B44L79mP7m7Aespcvz6cVYdVfzPpB9wN+Cs734PxaHW4+7lWZ/vGBuxE/c+H
kqLO3BfiVkoLVCzJqVHnUasO/9rE4ysxFXc2eWg8+qQOhT0aFhbHqPhssg9H
y3d10ChyMbC0pWLpE2cmSv6qg8e06msJQyq+xhUVGbNVA9Q37Yx3kaFiZ4/0
dmV5DUiQGrn15gsF/+LpMr7pqwGevn/ZJc9RcPVc786LwRog6DOunOZLwcfu
9s8HntMA+VLWF0NHKfi+17Or5kkasMk4/L8RbQq+0bE08K9KA049M0ou/lqP
FfyEHT0/aECm6kSI+3My9ngQdUrFWxMstVxO3vaqxZ66Uta/zmjCvQKjB6f1
avEp6pBGW7gmnAyXYHnPX4u9b0uyGydqAuO8ROZsZw0OOPOkxKlcEyK25qV/
46/B53aJv4mb1QS56D2ki3VVON3rkfOg2wG4gjYN3Cwux5lTZw0zvA+A00ut
QdWAcpxF3CfvFHgAmsxbRuO0y3GOztmVN3EH4ItYopXKSBku2C5862fBAeBp
+Fj1918prm4JGhd6eQBSrscHRZmW4K5Ne4inj2iBtdssjz+hEM+VKJo/P6EF
Qjdc2416CzAXGBma+mpBeagU+YJBAXaKOKMhHqUFvY95i3UP5uOl9z17JvO0
gONheA3edxv/9yj4rfm0FrDYbzmhMpKNI1P6Q+S8DoKnZpqwAzkZq/DGZ384
qw1C79+I3fl7Frl9P6Rg7acLUzeNm1N/lyJuPpahp2d1IdxeRoRhVIZalbtD
nGN0IeCF1gTjRhniDzBp876mC5O+Uk815cvRw/fW5hcouhASsTmPxaUCKb86
7k3/oQvPXApWXjdWIZa+86ViMYdgZHyM3U6DjOrmDc2qLh0Cqrnt0I4oMjrK
wfFZ6doh8BxPtLjaSUY0wyS1Q4WH4HR9uHWyeT3y7kjvPtx1CAKPK9Z77aeg
ocaS6RR2PVA4Rpe6q0FFxQU9Qr9T9eB2ZvmeCPFGlOeiMEHK1gNxntYeEWhE
OYIZN2gFemCU2X8h26URXct24wiu14NxTc/U+cxGdO7a36XPQ3pwmJRN499I
Q3axKvfe7kDg5ByTbD1GQ1a6OTH6QgjUpFU18xZpyGxl7UCRBIKyc/rW1E1N
SC+sv/aYBoIAPcFA5YNNSD7AK/uZI4KC2WPCkbeaEJtrvs/gLQRnbMnED9bN
aH0vm8T+Owg2N0d+uOTZjFae+75KrkYgmKP0dDayGX0hadkT2hBkEsXr3pc0
oymrUd37U0zeU07f8LMZTWzV/i32DkHaW1Cr5mxBI31F1PMLCD5KH965Q6gF
PTQOkEJrCMgVHSKSBi3oRQEb58vtAMJ/f9wwTG5Bz/4dOMnFD9AqNX/7fV4L
GnM53a2zG+DW4DtxS3ILGhIcic4VARDbMUy3GmpBvdmFXw+rAPxefKGvzktH
jde0J0fsAKz5qYonLtOR++1t7K2OAG83D/5aTKcjvsq3isVHATbVWOjqF9JR
YFdSwhl3AJ7jC4OqLXSk8OOFLFcwAEeOz7rJLB1NstTbfw8FGP0uV/hzkY6S
uC/EvIgE8HpOmvT6Q0fvpeSHK88DbKT60bO5Gaj0SFSE8Q2AkduHvgmqMZD9
KZs7ClkA5TYfT8zoMBBriHj/jlsA505vTg0wYiC3lMf73hYBHLkUXtbvwEDb
bxUS+koBQqxETxa6MFBHWUgIpRJAcHxrmronAwnhvQ9iKQAij8/wlAcz0OPH
S19O0gCuXrE5mhDJQOee3RO0ogPcqNRdFolnoGdfTwfs7QS41rB1T1kKAyWu
oRzW+0xesE9LSmcgza383R8eAOjtDzNSzWGgTIm7AvQnAN0uApYP7zCQoUoa
KhwFKMpfzmiuYKBvhzx9Lk8AwKWEDV61DFRsrpXhPwkgrTt37TmFgWwPc7U7
vAaY/Oioua2JgdY9pud0ZgBeMTZ9Y2MwEDmQxiM+D9A8LH+3/S4DcSW5eH5d
BPgVk+sZeo+B2rKVrz37BuDtYXHgbC8D+Zaw0fEvAKymu0Gjj4H2UJ69KV8B
SNhVdLflMQM9vFu79doagMaBao/VAQYK74vXCGXVB+e21C+sQwwkNe5w3IVD
H871xxx7PMxAY29lrhpu0YedGXWlpFEGuri02iC3TR/+w7WdxU8ZSG11aIqX
Tx9uZMk3148x0FvOMo4/AvrQFt6YGTfOQDcEIpWn9+iDgZSFH+8EA4GY1dEH
/+nD4Ik/lieZvKQoepEsqg8bP903iWJygc7PuixJfbiaQPOxZ7KVWd9EtKw+
bPow2LPAjLfqkL/Bc78+iL0WPG3O5JoTQfIWKvpwXrLQx4eZ/2iAMUlVQx8e
R7sPmzPr2xy1J27PQX0oLzvdsDjCQPTEhUqWQ/rAcOsSIjH788rsGpkHfagO
8BWJfcJAO4uzVgeN9GFfmv+AD1OfnjofqWYzfei8NKy2m6nf2dZDtvmW+qDG
k+9x9SEDNR19wPrclqnXN2mu2B4G+rVi28RP0oea2ILnct0MpHX7hZftEX3Y
5R4yfb2DgSJ1PAVTjukDr/kejbpWBmqdXOh/cEIfPs2wfk5oZvYXFR638ZQ+
/Ji6s4e3gYFi7ybNngvQh+niIbnDlQyEXfhvNgfrg9dDwwPbSxiI5V8+4VuY
Pnhu1OKKz2eghENUsk+cPnTJ3vBJucFA915qnyi7oA+XHUBHJpmB2GLv73iT
qA+vz3qdiLnI9HfHRIRTmj4Qbb54OIQx/eF6Qj4zUx++nmzLGw9goC3rH18+
ydGH/fLDb/m8GCgFrRmYFuvDlXP1Nq2ODJTWKcGt2aAPnLorjD5VBhp2I+Og
Zn0YG3/pKyrLQHwbtILrWvXBPp2aq76PgbL0LSYk7umDj8Sq0rUtDJTbHVS8
46k+WN2f1tvxirk/3P/a2zzTh3chnD8tRuhIaOMljuQppn+ae27r99JRgWHO
adZ3zHi1oyGedXRUcr9D4+tPfWD5XjiYGkFHs55m7xVW9OHk55e1jb50JMU+
kuu9pg/dP93Mc1zoqNL43fprDgMw9MgcK0B0VNu79dHgLgPgHzOsq2Slo4VT
WdFbhAyA79whjv5vLUhx0z4lExEDoF7UMqS8bUFUU9XMdhkDuPMzLepuVwtq
fujkWnvQAGSCXU99im5B+FHZt6vOBoAcX8m+nm9GDbuHgmKOG8BS+4aIhLFm
VHpq5UughwEc9jQs/NbdjJJYbZYOnzaAvNqmdO38ZuSgvfxJMsoAFuc8OgNt
mtHHKvN3XbkGcHva4UljdRPiv7o08ee5AcwHJe9I0KMhjok9hxdeGsDpZntf
ghQN/ZEwGp9+YwCbshKL5rhp6FVnztMHHwwgRj1psWSqEVUt6w9n/TEA80SP
96oRjUjPO/ORyh5D6Hhave1DRQPyMT3Y7uNkCNyzZxcWPlHQosyeHqqLIWxJ
uni+pJ+Cgrf86f/jZghU4sx9tToKih6gT131MYQiV9sdc/4UlGavtVp1zhAM
Dwb06kzWo+bjB3Q+5hnCAdkjM6EDdYg1QoPh+8YQzi4KT3pdqkJ5lSpNp32N
QEdJZ+rk2SJ043v7+cBwY8h7od6wYdUfB4yknXCJMoYwTcvpDP4gbEn10DeL
M4bKlZk8N7kQzHFm8waRRGN4ut/teZZ9OI7+6BD/JNsY0na8Gfl5Ow6fevMp
VrHZGHp2cc9EsVzBuk/2RH/+YQySKWOOkSyZeA/5s/OzZWNI0f3ZsiE2E/9K
wTr3V40hyEii/+DfTEw1P/n3NpsJCKalHGn6kYWleinnLPhNQOzVtb2dMzcx
b7tpZLWaCfQf/rbxJPU2nqsODfMONoEDB7ta+hOKseN/a68qw0xgnURTS+os
xj3XL5t+OGcC0U3WNzevFePSszd3+14wAV/uGFnLiDvYXY/RejrTBCx9QjlG
fUrwq+HVtYBmZvxefdNEKMNjyxcSQ1dMoMJUY/gToxIbneb60rRmAsdpp44K
LlVi2stMp1+sprB6tP3gmjjz9253mWz4VlP4ZHMlbjalCtumPHgcIWQKmzJ8
v4k4V+P+fVt5ovVMwa9+4tSuDzX4vkl6TkKCKdj0dyf/10fG7061DZy7bAoa
r97NJX4lY47EWdaQJFMoKLviULWnHps90PT3SGfmq5i5yuNTj/tNJ/WN7piC
NF3JRoOVgkfNJD6xd5vCtwGD0axsCv7hbSWy1mMKPU/uSUZWUjD/1TDSrz5T
yNs2167ZSsGOfQ/x3LAp3Hl4LgJeUvALgn/mgzemcHpkSiZFlIrfmjcfurrB
DJ67AcfPO1S88fTr4PPsZpD5JMX/bAMVSyRzVkZuNgO1NAWWgS4qPvX4KJ8v
rxlYpYy4bZ6m4o8W63PmomZwNpwoUSfYgL9ZmqVx6ZuB3B+Zp1lXGvAO/6Ae
NmMzCJaZcyrOasDqqbkrq2ZmwP0yzOLSnQYcNvDZc8HWDPofPz483taAV6xu
HBx0M4PTYXb/5X1uwBtsXry9Hm8GG+lmU2STRvywgyR+9qIZ5HF5JnMSG3Ga
4rCH0xUzcJivIus4N2KRbQ9nRdLMIJTNR0XxTCOGgaY5aqEZrDYUGhtmNWLO
QyrS2SVmsMa90uhV0IiHamu9zlWYgVhquuPJikbsllLy3qDeDHqfa6p8pjfi
eIsbH0c7zGDSZE1N5kUjNmvjkqd3mwHlWfv+nW+Z/+/lr5zO6zUDYxabwy8/
NOKiLXGfPQfN4FMYVev3ciPu7PNb/PmSqe8Ah8IRARq+cvC94os3ZuDy/O1t
HiEatq3yONPxzgz2mkofLBaj4ekrR79cXjCDpHraipUSDbOYmX3b9c8M3sQF
3RgzoeGHLfdUV1kI8NNbxNPRkobTpFHINBsBuuMHT1CINCyySfNHJReT73yf
WnKm4fdhVPVUHgIIuA0dGXOjYcqcQmgQPwFcG8JZMk/SMPSK/zooRADe6K99
eQE0zKlZqCksQoDb5bKf54JpeKhMMJxVggBH+n9rbgmnYbdLvMuP5AnQcEbU
eCqWhmV+pmjVKxEgKODrpuQEGv7iyRmZoUaAo2JKP/ku03C80fofZx0CaO17
70NOoWEz2jltQAS406q33nWdhnkkfp2TMCRA/c+IF+R0Gn6WEdTGaUqAW5EX
WUOzaLho48Lfz+YEyFuyjuXPoWHvEG/dYWsCfGfpdUjNpWHlmZnoJjsCTDpO
pLzOo+HO7hf/Yo4SwDQ07hBPMVNvVUc9d1cCGKZ9vbd4h6n3neFYE3cCdGTS
HpSX0vBuPissd4oAX+WbbbTKmfqff7i+zZcAgusz7iUVNFz51RC++xMgpEWe
830lDQeewPETQcx+1s6ZcFTTsNawdldbKAFKo7HEGpNZ9Js3FEUy65ucq3pS
Q8NHjeYfPYshwECcW1FiLQ3TTHdn8iYQYBvivsxXR8PbLAjHzC8T4HV5j0cg
k72tz0ldSCKAt5G7QTGTu4k1S23XCDBc2iZXxmQh0hT9RzqzH1K1ZDSTw5y4
E/bfJMC7txy6UkwedtazOHWbANMvqsJKmPkUjp/hLywkgMuj06++M+u57F70
cqKEAOf1JKN3MXn65HA5TyUBIu6TnbYx69f2YQ0k1DLzf5iOfsbsN9NP7WAC
hQBR2plfQ5l6LJ7xZG2jEWDCqBjPlTHnGZL1+DudAGVZ00tyTD3vhPVmKrQT
IMnpZIoBU+/VyN/HTnYRQFhap2x/EQ07xshIF/QQYNB1o+XnfKYf4498Ge8j
AHehS3rsbRrecjGJsX2QAFaJ767OMuftmdiWYDZCgI0tukbC2TTckfTZ4vw4
AYoHWEblM2g45Ib1q2+vCOC+35zWzfTXYGZchfwMAfybuOQsrzL9mUMJ9Jwn
wP47za1Vl2h4qoBv4/gS00/SOiFvYmjYqHZcmsFiDo/t3BSN/Wi4oH7T169s
5vBfUIt3kBcNLzdotcptNofOpY/mwe40XMvItczjZXLyCatvh2lY4IFrUJyY
OVjWzx1YAKY/Hl3XpkuZQzOcK+jUpuFHA50bv8qZw1bF1wd91Gk49qlYtrua
OUDuTZK2NA3PvZlrNTYyh9X7mttebWE+j+92XYw1M4fWbknuYxtpOPe9mVWL
pTns0M99Qf3biK2Xql/LkMyB68yy2ctPjbhlNYCN65Q5IJdH5nqPGvGVXb+t
RhLN4evUozwU14gzHz6c6U42h3030tPHQhtxYWRuZON1c/hldFDVzK8RN08e
Ksu8aQ6TB9Pv3XNqxO8KL646VpjDYd2ImJ3KjdhAhq9mstccPN8Z9uo+a8DW
z2eg/5E5JOT0Q0V/Az6S1DR+d9Acqg6+6VjqbMCBn51YC8bN4W/6F7W9VQ24
kFJ4xG3OHALuhrO/Dm/Aq1r7Od+xW8DRzkpP1e0NmPPjWv7YZgvIc2ramLSB
+b64PaTWy20BHXyHj3d9p2K5fyHHKwQs4MrBvNYnE1R8pKu12UfSAn6f/scW
UEDFzQSzk4tGFsCrnbepT5KKA496dP++YAFEOptv338UvK3w47TuFQtodzXl
e76FgmtngtbPp1jAlysibdeW6vG8X7wuV5YFJFvv4jt/px67xuU3i5RbwOYI
3gF79npsWTpRTXhoAaoKxPLVjjoss2iRcZvLEnx7nZffstXgN+fVPVGWJbQ+
BHa5r6VYaue2a4G3LCHhnYf8+Y5S7Fs931KcbwlfIfMcJbkU/xjJ3cpWbgkh
1a8Nb0mWYk6JDY0Pmy2BZXOYbeHhEqzYO7DB7pklLI7ddZ6iFeNzW7wKPfda
wQWzLw6XyXmYP+PWi6vFVqDc1mIndzgVl/PIRT64bQ0HkzRXyhYTkeLckWW2
ImugSLyZ1Bm+glraroYblFoD6uO+cb7xKnp46kNoe601TC+qW/KHJ6OPdyuD
G9utwW+O8ua/lWtov4+0X+Fra9jd67Nz9Vc6onVJHA8Xt4Fl8ts9AfgW0r3p
8IombQMyGVfS7svmoh6/i8e+ydvAXTOa4WhGLhrfNevsr24D938rnhfwuo1+
+5c4eRjbAGkn2ZBvSz7SFhSzs/GygVgTPockkSLUFbzPWLrGBoxe5bsGapag
lZ9LaUL1NnBHqcGZy6MEqUd2TvE22sBhtjS/6OslqDLuxNnVVhvQxg9cJuZL
UFpKScnwIxsAZbaYgOxS5FYuzRr90QYe0KfCRj6WofXPN4+/57eFvoItH9UC
KlGeYjz7zE5bWPAlnqvNrERagd41L3fbQtCVhseLrZUo+LvW7xEhW1hSJkY+
4ahCc3+eX2uXsAXey6/OLt+uQoMcQh3p6rbQ4PlxtbStGhWIFAkdcrCFFe+G
b9cHa9G2JJWH+x1tQeX5bOCehVoU9707RNjJFjZ7LVaf2lqH3HrfPVp3tgUR
XW0fC9M6JOYnH9ntYQvRQXl1B+7WofKW5jHTEFuIEfUJ884lo52iZue1Qm1h
g2BSBV8TGSUmPVeQDbeFw+c65WOekJH3sdULW6JsQXunSlL6xnokt9FAdSDB
FjgPRMm0etcjsvXANbt0W+CKxbl+OyhImO6qbZhpC7pPg9pahSnouuiXd2rZ
tmAlpYnnZSko8AffIYFcW1i97ij8ClGQaq7Tp4liW8g6ULJ+0JeC7mz8mP2w
xBZy5NL/RZ+loB3+UQaMMluIaHfUKYiloB+o4FZulS20Z3ZLRKVTUPO7GdNj
VFsw4jwbmkenICmb0O9WjbYQ2iNn8KSLgm7SOQr1mmwhP+p+x+tHFBSRLPtr
H8MWKG1sebemKEhb5Uzp205bOPohpOnMGgW1R6+weA/Zgtbi/PPbOlT0q37u
S8KILWT22cvoGlKR8szIdP5TW9imHK7faE5FpYSaztFntvD0tUKe5BEqStrp
Eo/e2IJBlpX/nrNUdJ9gFnh0xhZ4Ms8kB5yjon/R6m6h72xhveg5W248FQXO
cEHNB1sYkBocDkmhIkdK+/rOb7ZQPuZvo3KHitJmqpZUftjCh5JrAwcqqKhv
Z/Zry1+28O9EvjV/LRXpxgTghBVbMEbsDjZNVBRGOVqfv2oLFhUFY3UMKqqf
MSmkr9lCb1q5w9t2KhIz3xe3yEqEh5EJxgM9VOQSs/XMZnYiiHZn0y70UVEW
5berxCYiZPyXu5dngIo4dw3pHd1KhDOFi4+rR6nIwPyuYig3EWq2xfMxxqko
OqZSOG07EcrEzlvkP6eipZn4tZ4dRIh6ZHd9/hUVyezyX5wWIIJMhcdNqzdU
5G5+5NXfXUQ42OqZcnWGivJijAd3ChJhl8wvv9vvqGicotKhIkQEOQH6gQvz
VMQz+x/ZUpgIk2Xmn+ADFRF2bSnwEiFC+prV5acfqSjB/FdqghgRWg3dN+l9
pqK7MW9j8iWI0HZL2j9mgTk/yqA/XYoI6xJ6zemLVKQ023psVIYIC5tN3sQs
UZH3rgqrRTkifPF7/VnvCxXdMc84tHk/EQKDqyfGmDwVE7dfQokI43qmRQZf
qUiAevo/pEKElF8k40tMtp49zH1UjQgcqnoP8pl8ZZfRv7MaRBjdT1NMYXK3
ufLC9QNEeM/dc9mWyX9jhF5WHyTCTGTMi4/M+OpUzoEeHSJ47vmo7szkgNkf
d6cPEYEzc1dxMbO+yl1vav8iIvjf4JPrYNb/xnwgb6cBEVQZ8y8ozP4EYxkp
KkZE+NlQ0hHJ7N+BWhZtaUIEeyn76d2fqOja7A0/LzMifG5ltbjG1O/BrliX
BHMiuO7Gm18w9WWx8LXMtySC6Vym9CpTf+1YR126NRGM+9PqfzDnc5ZqoDBq
y4wfhGvvMedHnlUUWrQjwnLsfjmf11QkarFpVfwwEU77rwwfeMHsZ8xwRPAI
EZKXA7ZmTFCRyfH4Sl5n5jxjUswfPaUi35A/DuuuREgzrPzXP8j0zz8N+V9u
RKj3v3Uh5zEVXU8M3rDgToTfJ/aowUMqot3+VPfiFBHaI2tUJbqoqFdS5uKw
N3P+lyiZbkw/P6v3PPrQlwj6CnJGkUy//7v3kqM5gOkXwRP1iMrM//nJ8Rth
RNjPu6NLtJCKnMK4NK9EEOFD674a/VxmPSwErrhzRCCSjc30spj5+bvpfrFE
GGRwzA0kMePr0njNLhNB70hssxnzef7Y+2Ve7woRtpmEgW0AFa3a7u/QSCLC
m60veDW8mXqcLPcVv0aEQ77bxrKdmfFTc+6tZTH94mUxexeY/e4au/XzJhGU
+e5RKAeZ8ynmDfx8i8mSf5wSVKmosSlJ6EU+05+P+y5jcWb8l9GhTWXM55NP
+HgJG7M+xRPSfk1E8KP16Ip2MvclPf+fewsRXA7Q4/42UxDN4MXoEQYRJNyP
PqPVUdAzR/t403Yi+PBeONCTS0FiccbPxXqIEH9Zp+J4CPP8E9nk50+JsJnw
SzCDua/TxLvKVsaJEHflENs5Pgo6He7Uufc5EQasXfV1OZj39yX+PPaSCIpp
ZRfKX9Sj6wGzx9++YzJZ2rIgpB75cheqf/pFhJsBO0oP5pCRiAX/q9XddvBr
MLvSgFyLVgtqlv/bawdGy9Vm4am1aOKbwQ70nx1It2/P8POrRddyg8zOi9pB
ypfNV3Jla9HfD4MN7HJ28OZ1xG3u4ho0fuVq4jYdO5ilJT7Lv1iNUnrXlEWO
Mdn4GyuPaCWCoDmV/47bwanr2bSWvxXox95BVcETdrDXO6lfdbwCuQTlq/Of
tIMnguT40qQKtF9IV4vT3w5kn7CqxX0tR4NBkehLtB3kR3Bi55YyxPPfD6vO
PDu4XTaSIytVgjJCPvi6TdkBWuxP0yTcRtECwtvFjthDwweltV2egahKlv3R
2Wl7EE7qn/yYkYlHhPT/+r+1BzWt7I91HzPx6vYYBa9Ze6jZQDpzUD8LW//6
ce3Ie3tIupF6oGIhC//onrXX+2IPkk6fLR8b3sTgcv/lJhYH6O3870Xx7C38
7NqFr7n7HGD31axH4j8KMGsCFssUdYDHY+79DINCLB/61z5V3AGa9+ddY7tR
iGOdQ5rjpB3g5qXNrM47i7CEjEeUp5IDNLyrBF1KET7TZcCuiBxgeSFpb8xU
Meb4sWFPlyuTD2azbBcoxcuUnGuzbg5Qcbfr+/eDpfiTvxIbp4cDlL0QvXfH
tRQPzbssWXs5QFLCyXaXilKcO9nSM3XGAb4y9NMOapZhxXv+wcvxzPouJqrY
EcqxSDzb+70XHGAPJeEAxbcc7zh0+xi65ACqW8P0R5PL8XLzQ7PLVx3g1L+j
gV4D5bi7Wnwff7oD5KqGlHZZVWDH9OePlUocgDSbSOc0rMRmNoH69mUO8KJQ
oyfXrRLrcG1qCatwgOGsLL7FmEoscln9TnuNA8T/zIudaKnEHyOvR1jQHKB4
VpijXqYKx54wlvTqcQAnttfyumtVOFB4KjfpgQM8NFCR691VjT0mg3nIfQ5w
xGzbCLdKNTYjFf39McCsV3gwasy9GvMR/g4njDtAobx8j/69alyhTI0tmHeA
uwkp+b7hNThA4Ouflg8O0H3DyPJISg1WX1EOHf7kAF1tLTfZi2tw5z3KabYv
DnCmZMk3u68GP3OkOPkuO4BUZuJA5q5aXKDzZfTCCrMfqxUFP7la7CmibJO/
6gCDFd4/13Vr8ZcP9cZDLCTwjXOSdjlRizlj6lU1N5Og8+rsjpnyWjx4YqnO
ZisJ2IdiZm+11OJMEyVZH24SHP7Ipcz1sBaL8NTvy+MlgX+HxSex97VYq4TM
xSpIgiuT7M93StZh7766uQE5Ety4o/NgU3odViQvnJhXIME9yxwz/4I6/CN9
/0sWJRJoO83zplbX4XiXulE1NRIYNd9W+ttVh3OWajtv6ZBg6dKu2OsLddj1
6WedxkMkOK3SJdnzuw5LMBRa+hEJHl6cjKJtIGNKQm3duiEJzpoUz2F+Mn4o
UJt70pIE3Ov7D105QMbXVj4JxFmTQK779furiIwdXsvfyLElwQZzazZjUzKe
rqxJfOxAglTpM8nzJDIuT/3E+s6RBHsPVf4edCFjv2D52DUnEgjcrHl6xoOM
l3VqzqocI8H6TeG3L8+QcYfIpyXz4yR4sMa/oyaUjC+yy5/2PEGCOtmZJpUo
MuZ5Un3i5kkSXLTgtzt9iYzHGz9OUbxIYM26ZiGcRMZ5OXJOj3xI8H61n550
jYxl3aut//mTQO+QzOfr2cx+8rUp386QIO5ZN8/CLTI+9fwR7/sgEgiTJ4e5
8smYXcA55GUICcYCqpSWCsm41PbT05FQEjg/dpfLvEPGhilRmg/DSeB9Vq/7
bykZv32wNac9kgQNgiG/JSvI+PzGvD8NUST4FnDgEV8VGYsgBefKGBJMi3Zr
d1eTMT53925+HAnUZgkE9Voydm22FM44T4I7p9h/edeR8erXqbgrF0gwd0Re
341Mxrf3+7+JuUSCloBvcoL1ZKzt888gJJEEilsDmrKZ/Kw0tdT7KgnCuRc/
jzE5fPo/Dtdkpp65/72ZYPJOIbKXfSoJzCjlxXlMbjqs12d2nQSjBDU9CSY7
ZAzK6d0ggainf28AM9+3QdcUtQwSNP1dI0Qz67mxZWlBJosE27nTn1ky61U2
ibMRvkkCaubQ+WlmP4Pnt1N33CKB0HVP0gFmv/7thXybb5NgePm3O5GpB9cf
pbNreSQgDqq3KpaRcY1659j3AqbeXD2+T5h6mgfaHvhQRIJWst1FtSIyfl8z
nfPqDgkqGhJ3OjPnkTgfuDJaSgIP/m0qJrlkLCW+waWvnATBQ9dnfjDned/1
RntHJQkcZ5oPeWWQMes4Nb6qlgR563nSN5PJuJjX4G0BmQSsrJRxh0QyBqsR
w0wKCfStePzGE8g45v43jjgaCewoblckI8lYiOWC99lmEkh0lSp+DyHjVp0d
j3zoJHjG9erPxQCmXxvUUh3ukmDS5Nmhn+5kfHPx3iKhgwTKigtjo0x/a8o5
2KJOpj8MCofDHMk4pPjsDrn7JLg2k6C6hUDGi9ebbq0/JsGRDvt4b3kyTn1s
zNxnzHwXNA/4iZOxwqZxl49PSMA1IM+usZeMfWJ/7RsbJcEMTjy+cwsZz/od
KK+eJMGeJ7dc976rwxcqH2wqekmCE75lwhaTdVhs9rBP1msS8MsdeA/DddjN
OUIhfob5/ZwUb9zdOjxJYDSQPpFAiaV/CyGtDhvYlDqFLpBg3JWoVn+hDlc7
XF/LXPq/PnKOI2F1+Nzxk+ZPvzP3xdkTkrYudVgwlPet3Spzv8nUiytK1GGn
Ih9eW25H2NldVJhVUYs7yxxazmx3hORKv6mX2bVYpgYdu87rCK5DpLZ3l2rx
cpNA1aCAI1yxcdbT8KjFNx93gZWwI0z+VQ16LliLx3/tCTRXcoTcZH5zr9ga
rLfKttNXxRHchU/33vOpweUbvrRdVXME1SJLtxmHGhzG1bup74Aj2E0lP/aT
q8ECYsGFpuAIl6X+3iSPVGMHq0eDRkRHUA8Rcdu3uxqPlJzbj0IcgbHVYuFi
RCXmY2lmaIc6worQRdmbrpXY3uWrsWa4IxQLDoVEGVXip/zervujHOGBGnV3
2/ZKPHGJdH3vBUfQNtuyKFRagae8lL/+TncEgu721vz75fid/ByN0uAIMvl1
Mc5zzPd3I1FX7JsjKMlaRra0FWEuLc3BHT8cYROlL571VhEWuSvoxv7LERSq
pkdVwoqw2f2ZC+//OEK0fnuEnnIRvvU09DF5w2Eo9upmUTIpxNo/bx3V4T0M
FjPFPtyc+Tha822Eg/Jh2KnvlNzpk4PX6cFNlwMOw0OziqqwlFRsoWxiHP3z
MGxejnU3Gz+HWMbGNpz9fRgIyXivO280ao482XH6z2GIj7uisNsyBondu3jA
+d9h+EG5mWfTGYdWSPdktdmdYJPMj/FRYgKqjoJty/xOwPl0TnBRNhFtfqA9
EaLuBLvCQCDMLg11nH6UcVrTCfSaThsu56WhszxHbT20nIAkVvHcej4NTR+J
7LPTdYK+atJqWNQNRP/c0qZi5ATK4fcsS4rTkTefRtGSvRMonLxUvTCbiR4c
U/I5HeIEFGMhSqzhLcTn4d2WH+oE99wHqO7XbyFX72LuoXAnaHN8K/D3xS30
K3hHg3q0EyTHWmmZBOUiiSu/V/5ddILSxU4L1dzbKL4Bp6RlO4GL/N/n96fy
kfYmW0oTwwlO7zEOF+EpRpe5rrK+b3MClt77vxuUi9Ewb7eDYIcTpB838BEg
FiNvIfU/sd1OIKiRsWR2oxjdVNltYPbYCSa8tum6b7+DfjhPj76YcoIiUY6u
vawlCE7skeJ+7QRKVavySftKUPIpuwj0xgnUd2pz39ctQWJB94VK3znBsfsb
DW+FlSDi5cqT/otOcM5Hdql7vgTlJb9pKfziBGUC5LjLG0vR+zTBLSPfnMB9
0b9ix75SFH87haz52wkWzfYMXCWVov6iHhafP04QPaVvHxxYinaVr9nd/usE
bJ37zosnlyL3mgNlA/+cICh6WDC/rBSRKYG/19edgJobOvsKl6L/AW0f5Zg=

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
N62hwvJgdVlJKvofOrNzxA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
7OReDUV1t4N+b2wQ+vpV6BrohaH/AREOP8o=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Gamma]t\"", TraditionalForm], 
       FormBox["\"Excitation\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"Excitation in central row, \\!\\(\\*FormBox[\\\"9\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"9\\\", TraditionalForm]\\) square, \
d=\\!\\(\\*FormBox[\\\"0.75`\\\", TraditionalForm]\\)\[Lambda]\"", 
         StringForm[
         "Excitation in central row, ``x`` ``, d=``\[Lambda]", 9, 9, "square",
           0.75], Editable -> False], FontSize -> 14, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"41", "42", "43", "44", "45"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"Atom indices\"", {
                 Directive[
                  GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Atom indices\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809642242584541*^9, 3.809642359146446*^9, {3.80964282893996*^9, 
   3.8096428357161055`*^9}, 3.8096440882754726`*^9, 3.809644227655964*^9, 
   3.8096442914424024`*^9, {3.809644474625911*^9, 3.80964450329021*^9}, 
   3.80964480874702*^9, 3.809645067681473*^9, {3.8096451109876127`*^9, 
   3.8096451471119843`*^9}, 3.8096910371706266`*^9, 3.809691152608757*^9, 
   3.8097290657836065`*^9, 3.809729312226534*^9, 3.809771225316037*^9, 
   3.810229293424165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_excitation_decay_afmode_central_row_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8096443813668275`*^9, 3.8096443991672115`*^9}, {
  3.809645252191497*^9, 3.8096452556073303`*^9}, {3.8097293325102835`*^9, 
  3.8097293336412573`*^9}}],

Cell[BoxData["\<\"plot_excitation_decay_afmode_central_row_9x9_square.png\"\>\
"], "Output",
 CellChangeTimes->{3.809644404506936*^9, 3.8096452566445856`*^9, 
  3.8096911626939363`*^9, 3.809729343762185*^9, 3.809771241296883*^9, 
  3.810229321735434*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["emission pattern", "Subsubsection",
 CellChangeTimes->{{3.810229407892502*^9, 3.810229412066498*^9}}],

Cell["Plot the emitted field", "Text",
 CellChangeTimes->{{3.81022932538491*^9, 3.8102293324601707`*^9}}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"soln", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "excitedIdcs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "800"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", " ", 
     RowBox[{
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Decay of localized excitation, ``x`` ``, d=``\[Lambda]\>\"", ",", 
        SqrtBox["atomnum"], ",", 
        SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", 
      RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.810229632557645*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.810229733472145*^9, 3.8102297480910406`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8102297490208073`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"state", "[", "time_", "]"}], ":=", 
   RowBox[{
    RowBox[{"soln", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}], "/.", 
    RowBox[{"t", "\[Rule]", " ", "time"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"field", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_", ",", "\[Mu]_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"state", "[", "t", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", 
             SqrtBox["atomnum"]}], "]"}]}], ",", 
          RowBox[{"z", "-", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", 
             SqrtBox["atomnum"]}], "]"}]}]}], "}"}], ",", "\[Mu]"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8102297500242558`*^9, 3.810229867883979*^9}, {
   3.8102299056912355`*^9, 3.8102299095040054`*^9}, {3.810230109237124*^9, 
   3.810230316469524*^9}, {3.810230348765873*^9, 3.81023039301291*^9}, {
   3.8102306480432734`*^9, 3.810230652495104*^9}, {3.810230715391405*^9, 
   3.8102307170061293`*^9}, 3.810230838106262*^9, {3.8102309050666323`*^9, 
   3.810230954127664*^9}, {3.810231618514459*^9, 3.8102316251782284`*^9}, {
   3.81023166907409*^9, 3.810231696369036*^9}, {3.810231726631247*^9, 
   3.8102317982174892`*^9}}],

Cell["plot the field in the y-z plane at various time steps", "Text",
 CellChangeTimes->{{3.8102304056573544`*^9, 3.810230424829867*^9}, {
  3.810230886129267*^9, 3.810230887577463*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time", ",", "intplot"}], "}"}], "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         SubscriptBox["e", "1"], ".", 
         RowBox[{"field", "[", 
          RowBox[{
           RowBox[{"0.001", " ", "d", " ", "\[Lambda]"}], ",", "y", ",", "z", 
           ",", 
           SubscriptBox["e", "1"], ",", 
           RowBox[{".5", " ", "\[Gamma]"}]}], "]"}]}], "]"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{
         RowBox[{"-", "  ", "5"}], "d", " ", "\[Lambda]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SqrtBox["atomnum"], "+", "4"}], ")"}], " ", "d", " ", 
         "\[Lambda]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", 
        RowBox[{
         RowBox[{"-", "5"}], " ", "d", " ", "\[Lambda]"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SqrtBox["atomnum"], "+", "4"}], ")"}], " ", "d", " ", 
         "\[Lambda]"}]}], "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8102304953943396`*^9, 3.8102306199672003`*^9}, {
   3.8102308962164984`*^9, 3.8102309000945177`*^9}, {3.810231039072832*^9, 
   3.8102310698051105`*^9}, {3.8102311107182045`*^9, 
   3.8102311618420067`*^9}, {3.8102312202278824`*^9, 3.8102312335438247`*^9}, 
   3.810231275615522*^9, {3.8102320812850003`*^9, 3.810232154229912*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.81023218563944*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["decay and mode overalp", "Subsubsection",
 CellChangeTimes->{{3.8102295311998863`*^9, 3.810229539368066*^9}}],

Cell["\<\
Get explicit lists of solution pts for plotting high-res time-domain results \
(specifically for the animations and field plot)\
\>", "Text",
 CellChangeTimes->{{3.8095600333873806`*^9, 3.809560038145509*^9}, {
  3.809687643871478*^9, 3.809687679927371*^9}, {3.809728352075573*^9, 
  3.8097283593431635`*^9}, {3.8102292403545527`*^9, 3.810229243003876*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "explicit", " ", "points", " ", "for", " ", "the", " ", 
    "solution", " ", "and", " ", "transpose", " ", "to", " ", "get", " ", "a",
     " ", "state", " ", "vector", " ", "at", " ", "each", " ", "timestep"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"savesoln", " ", "=", " ", "True"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ti", "=", "0"}], ";", 
    RowBox[{"numsteps", "=", "800"}], ";", 
    RowBox[{"tf", "=", 
     FractionBox[
      RowBox[{"numsteps", "-", "1"}], "\[Gamma]"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsteps", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"ti", ",", "tf", ",", 
       FractionBox[
        RowBox[{"tf", "-", "ti"}], 
        RowBox[{"numsteps", "-", "1"}]]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"soln", " ", "with", " ", "rows", " ", "i", " ", "having", " ", 
     SubscriptBox["\[Psi]", "i"], " ", "evaluated", " ", "at", " ", "each", 
     " ", "timestep", " ", "t"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tsteps"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fname", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<soln_time_evol_``_``_````x``.txt\>\"", ",", 
         RowBox[{"Floor", "[", "ti", "]"}], ",", 
         RowBox[{"Floor", "[", "tf", "]"}], ",", "gridname", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"savesoln", ",", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"ToString", "[", "solnPts", "]"}]}], "]"}]}], "]"}], ";"}], 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "transpose", " ", "soln", " ", "to", " ", "get", " ", "a", " ", "vector", 
     " ", "state", " ", "at", " ", "each", " ", "tstep"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vecSoln", " ", "=", " ", 
     RowBox[{"Transpose", "@", "solnPts"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
     RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normL", " ", "=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "the", " ", "approximate", " ", "ferromagnetic", " ", 
     "mode"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overlap", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"fmode", ".", 
            RowBox[{"evecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeIdx", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mode", " ", "=", " ", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodePts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "t", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "can", " ", "make", " ", "the", " ", "lines", " ", "below", " ", "more", 
     " ", "efficient", " ", "by", " ", "only", " ", "computing", " ", "the", 
     " ", "sums", " ", "once"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalPts", " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"vecSoln", "[", 
              RowBox[{"[", "t", "]"}], "]"}], ".", 
             RowBox[{"evecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"totalPts", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "-", 
        RowBox[{"fmodePts", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodeTuples", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "fmodePts"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "fmode", " ", "occupation", " ", "at", " ", "each", " ", "time", " ", 
     "step"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "otherPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "totalPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"occupation", " ", "in", " ", "all", " ", "other", " ", "modes"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.809537731589987*^9, 3.8095377317493005`*^9}, {
   3.809538818979971*^9, 3.8095388204221125`*^9}, {3.809538877168335*^9, 
   3.8095388806360598`*^9}, 3.809539283946311*^9, {3.8095393466665525`*^9, 
   3.809539372119471*^9}, {3.809539467892342*^9, 3.809539468073819*^9}, {
   3.8095395222788367`*^9, 3.809539522892194*^9}, 3.8095450971210623`*^9, {
   3.8095458315611763`*^9, 3.8095458355654626`*^9}, {3.80955773496976*^9, 
   3.809557757853461*^9}, {3.8095583906833534`*^9, 3.80955839126085*^9}, {
   3.8095597358014803`*^9, 3.809559807414382*^9}, {3.809559964155444*^9, 
   3.809559968153966*^9}, {3.809599552339513*^9, 3.8095995531761265`*^9}, {
   3.809599617330911*^9, 3.8095996220619907`*^9}, {3.8096000584546027`*^9, 
   3.809600116786805*^9}, {3.8096003298751945`*^9, 3.8096003393550863`*^9}, {
   3.8096006351305075`*^9, 3.8096008071453*^9}, {3.8096010934339542`*^9, 
   3.809601093899026*^9}, {3.8096011379469185`*^9, 3.8096011387812004`*^9}, {
   3.8096011727637854`*^9, 3.8096011739468527`*^9}, {3.80960124310413*^9, 
   3.8096012867778454`*^9}, 3.809605305087755*^9, {3.8096054607247677`*^9, 
   3.8096054665152907`*^9}, {3.8096484370062017`*^9, 3.809648442380129*^9}, 
   3.8096486033603587`*^9, {3.8096872387610865`*^9, 3.8096872447717113`*^9}, {
   3.8096873155956926`*^9, 3.809687355940363*^9}, {3.809687553929351*^9, 
   3.8096875833017836`*^9}, {3.809687620226015*^9, 3.8096876209750614`*^9}, {
   3.809694119981163*^9, 3.8096941727791758`*^9}, {3.8097244836682706`*^9, 
   3.8097245504190836`*^9}, {3.8097246239728518`*^9, 3.809724641454688*^9}, 
   3.8097294103660364`*^9, {3.8097295651431766`*^9, 3.8097296089304705`*^9}, {
   3.809729641149293*^9, 3.809729684871345*^9}, {3.8097739518698406`*^9, 
   3.8097739644336743`*^9}, {3.8097742206213493`*^9, 3.8097742290729055`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fmodeTuples", ",", "otherTuples", ",", "totalTuples"}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Blue", ",", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<\\\"Anti-Ferromagnetic\\\" excitation, ``x`` ``, d=``\[Lambda]\>\
\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", "Black",
        ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A.F. mode\>\"", ",", "\"\<All other modes\>\"", ",", 
       "\"\<Total excitation\>\""}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Gamma] t\>\"", ",", 
       "\"\<\[LeftBracketingBar]\!\(\*TemplateBox[{RowBox[{\"\[Psi]\", 
RowBox[{\"(\", \"t\", \")\"}]}],SubscriptBox[\"\[Psi]\", \"i\"]},
\"BraKet\"]\)\!\(\*SuperscriptBox[\(\[LeftBracketingBar]\), \(2\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8095460518368845`*^9, 3.809546069715067*^9}, {
   3.809558541997348*^9, 3.809558545173108*^9}, {3.8095585766687527`*^9, 
   3.809558695379739*^9}, {3.809558795379532*^9, 3.8095588215814395`*^9}, {
   3.8095589269086657`*^9, 3.8095589306195116`*^9}, {3.80955896284052*^9, 
   3.8095590401338406`*^9}, {3.809559130558073*^9, 3.8095591902299385`*^9}, {
   3.809559254932829*^9, 3.8095593215120664`*^9}, {3.8095593953582487`*^9, 
   3.809559588922476*^9}, 3.8095989899906483`*^9, {3.809599331272752*^9, 
   3.809599354457077*^9}, {3.8096011106737213`*^9, 3.8096011172557926`*^9}, {
   3.809605490443336*^9, 3.809605560013387*^9}, {3.809605655235878*^9, 
   3.809605655938001*^9}, {3.809694181749177*^9, 3.8096941960339346`*^9}, {
   3.809694228606848*^9, 3.8096942852120905`*^9}, {3.8096943156043634`*^9, 
   3.809694338623783*^9}, {3.809728264480889*^9, 3.809728302987866*^9}, {
   3.8097291272711134`*^9, 3.8097291416646447`*^9}, {3.8097293553870907`*^9, 
   3.80972936700701*^9}, {3.8097294641172667`*^9, 3.809729470596936*^9}, {
   3.8097299015264482`*^9, 3.809729908719213*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
4+H9rOuSLzvKt/wfyaQUAQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
l7z9V6ueRVbov+TK3rfu/uqD/u+U1mc4xnaDmeSsU3stPHuj/5KfPNjULr4X
+i/ZtjTt4ktL9F+yd6f80X1gnWTNfMcDRj3R/11MFTe1zf6c7ui/ZAvH679F
dkP/JecH/rdY3RX9l2x/pmrG0C7ov+SqNT2mdemM/ks2mr1tpZkF+i85XBU5
v10n9D9O6vfwe8O6d0T/JXuN9+8yvAP6L9nqdvcEz/bov+RBu90mrf8d/Zds
+Uf9r+fN0X/J6sSUzl/bof+7marUzjBwAGwtOTw7YfIaM/RfsrdJt4eH2qL/
kqNm5hyY0gb9l+zrPrdjy9bov2SzkNq5/7VE//cwVZKvTdtLpui/ZN+7vQ8l
tkD/JUfp0h9uM0H/JYcPmfh6izH6Lzkv6sDZnc3Rf8mGjl9bHGmG/ku2fq12
v9YU/f+bqbR95lW8bYL+Sza5f39nC9hbsnv/2HKnxui/5CTdsu2RjdB/Xo8P
bXrfCP3nz+sd1+l3WD9e+p6az8s/NMR5ktXhxq+SG5C7SY5fPTvDrz7Ol5w2
y3vmiHpkV+5WF/w71MX7SNbUrT21UR1ykOQoZ6MwQ0O8H19fvndF3drkBMl5
SQamxgZ4X277tx+61yLnSi7/MWW2oz7eX7KR+dtagTXJn/n69f0DkvXwe94r
eVa428sa5FaSVf/6jrKALSWrh3T76K8i20nWZq4fF/FriGx3yZqM1urB1WQf
vn530eDqKrJGMktY2iP3BzmG+1lycuJ3chL3r1F9Nn4jn+fPMzS2W1VJzuPP
q5E1I+gr+QVfv7TdkJAKcqXk+NK8kNgv5Pr7mEq3+cDx9M9kM8navbdtCj+R
rXjd4leqAWy/j89X6rnBH8kekjUDiwxWfCD78vV3cgdeKSeHSFY/LWjWBN4u
menanrz7nnyE72+3df7Gd2Qtr189FTahlJzP6+3zJnZ5Sy7h7zfSY1a9N+Qq
7mA9VllCNtovrR/U36f8P3J7yaxQvfrTK7K1ZK3r6A41YAfJqthfb0xektV8
vbrCzuYFOYDXnYameT0nh3Pfiby3rZgcx73SzeveM3Iaf76FW0Nj+Ap/ntPN
YE8duZC/X2RR5dyn5FLud/fUbZ+QVQmS63xa+ayI3FSyauvCTWmPyRa8futr
3Q2PyIO4j0yO+ush2ZmvH1OYPKuQ7MXr43688npADuROffl4fgF5A3eaddvV
98nx3BP9LPfkk0/w54UOD75yj5zD60tnH/l0l1zE7RewoCtczm3tEDjvDln/
gOQ9IxYfzyObcM8wN60Jd5Osuniu+4lbZMbdxraz702yK/ePx9MH5JK9ue+X
9/rtH3IQt1HvUR+uk6O4Zyzt/TSHnMCdk7q88Bo5g3v8mNSibHIud2SFx9ur
ZB139NG6+vBn7ismPTpeIRsmSjYJdhp3mdyK+9O7nqFZZEvuVn1CL10i23Gr
H3yrBbtzd7Ie4KLF/HPH7ir+4yLmn3ua2/YaFzD/3CMf37tyHvPPbZ7wMuYc
5p97QUs/v7OYf+6iT0aTz2D+5fdROzhmYP6582ySxp7G/B+UPCv7yMRTmH/u
xrlP553E/HNX/Dy37gTmn3tn58tpxzH/3HHT03TpmH/uDZsGt4BDuLffbTb5
GOafO+d33b40zD+3hSbiVSrmn7to7OOtKZh/7spxlS5HMf/c1ok9Wh/B/HN7
3TX+nIz5T5Kssh334BDmn1v/7YzsJMw/d+Hz29qDmH/uhBHNsxMx/9zqvmfu
H8D8c+ft6FuWgPnnfpHboDEcx+01tWLwfsw/d/zdJP99mH/5+XvvpO7F/HPr
Zjf7Eo/553btaGILqw5J9u1V3e1vzD83q3r0fDfmn9uypXFSHOaf2/mk3dJd
mH9uC91Pt52Yf27N01y2A/PPrTrWs992zD+39cK9/bZh/rlNfu4ZFov55y6Z
n+C2FfPPnebff1EM5p87p8hw9xbMv1zX3LoZjflPluxdaVUbNuHO0NPZb8b8
cxvq+UZHYf65VavqX9uE+efW1Vm3JBLzL9v7cN+NmH9u7Xi9Ghsw/9zsQLuH
EZh/7qjw6Mx1mH/utI53j4Zj/rnzFkw8tBbzz61J3JEahvnnds5rpA3F/B+W
149+FIL559a9LPu5BvPPHbXoVBfYjlvb0F4djPmX198btWc15l+u541/ocH8
c7PVdXrDMXL9228NV2H+5f0e366uwPxzxxd4rA/C/Ms2yJm6HPPPrc7UDlqG
+ZfrJVmdlmL+j/B6nm2bQMw/t/ZWetslmH/ZO9Z2XYz55zYrGDtsEeafW7Xt
hDoA8y+vbzxn3V+Yf7nu0eScP+ZftsuEL36Yf3n9nH/6w1puZmAU7Iv5l222
8uBCzL/sFb9NWoD559ak/mkyH/N/lNeH/3wxD/PPrd0w48JczD+3yqRhwhzM
P7em0cKt3ph/2dWfN8/G/Mvr2xrtmIX5l13DKXkm5l9+fqr6qhfmXz5/SNnr
GZh/+XkBfxvDhXLdtJGjJ+Zfrps+3fAn5j+FPy9w7z015p9b0/ZDO9hC9oKq
99Mw/9yqp22SpmL+ZVvfWuCB+ZfX91hrOwXzL9cfXzSfjPmX63VKGk7C/Mse
Ms/AHfMvu+Ck4UTMv+yBE5u5Yf5ld6juOgHzL7u/i4Mr5j+Vu+6XReMx/9yq
U2uSXDD/ct122/NxmH+5fvZqR9hV9qYDfs6Yf9l7bq11wvzL9ttn44j5l21q
/8MB8y9bz/r6H5h/2dYv9o/B/MvecCZiNOZf9jWzFfaYf9mWa5aNwn3SuPf5
Bo8kN5RdFBszAveT7bkrzY5sLvt9q4LhuK/shJP6cD/ZA6oG2uL+srUhy4eR
x8i+/DyL4XvINr/RCJ4m2/H77SH4PrJZYMRgsr/s2GCXQfhesnuv7TSQHCbb
pczQBt+P7mNWYU3eKTs9+H1/fE/ZIw986EdOkZ1o9asvvq9s6/zmcJbsxmbW
Vvje9H1SPfuQC2QPah7bG99fdvCrO73Ib2QPOd4M/iy7oPufluRq2V5W3j3x
9/kYt5lPqx7kxrLT/nrSDX+vZetOHO1K7ii7/tZ1XfD3W/aVxX6dyTaym170
ssDfc9muvzw7kR1lez2b1xF/32XbG6zqQPaUHVU7rj3+3suOW5r1O3kx+d0H
c/z9p/f51BmOkJ3Qcm475IHsjBbpZuQ9dH5qDThJtnOvY23I6bLdTea3Rl7Q
91jarxU5W3b4qfotkR+yVT3KWpAf0X2G/2uCPCGvKzAmv6fvffBRc+QLnT/w
dTOyXjp3XlENuL5sy9btm5Kbyy6McGqC/JGtSV/TmNyF6u21jZBHstlWfXiI
7PLLzkbIJzrvvv1vZBfZqpXVDZBXsp2LL9Unz6L906PrIb/o/VwW1iUvkx1v
6l4HeSZbO9bBkBwp2yzqj9rIN9q/YoIBeR+976E5tZB3dP7+tfrkU7KjKlJq
Iv9offeneuQbsnUFxnA+nZfkXoP8hM6bvleFfKT3m/3812DZH2l9enQ1uYrq
P5x+kg2Oy8/fbVpFNpLNyj58J5vKjne+/43cXraZ+5VKcg/ZqoMXvpKtqV5w
uYJsK1u7+N4XsgPVm737THaj+gAjWE2eN+gTeS6tt/H7SA6QrZ6c8oG8kt4v
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
nil4ruCFggMELxW8UvCa//f/AZOafgg=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
l25LwfGTqo86jGjJVLw5qvU1cxstm4p9kuW3T2+m5VPRNnW8yur1tHIqGtTX
dR+oTU9IxZWYS6fvLKdnpCL4Zd3Wk4voBalor9BrG61Ja6Wiq31rl2ez6A2p
MNi5TzZiKm2QimXern4n1Oi9qcjTv7Fo7TjaLBWpd33/UxlJW6WiT+sf1SYl
+mwqHltKHA4cTHum4uBZjUe6/Wn/VHx7ufi6Qm86PBVy8Z4hb3vQCalomu8n
KpGkM1NhWXosPOGXmPdfKp7vtunn3kaXpiK37uTLLV/pylRMemBurdhCP0/F
7yJzv7pmurmzH1uu6Sa/oL+kopfn4Vcez+mOznxzEuwtntDd03DNWsXGuJKW
S8MMBR/ntfdpxTTMG3Dlw5hSenQadlY0FH29TqunQSl71anrRbRGGmbtfvch
JJdenIYjZ+SVXDNo7TTUzsgYYCugN6fhe1tHT8t42igNI9TW+JlE0QfToGf9
8/SaMNo8DZHjZCzHBtG2aTBY9zhL0o92ScP+Mu2yNxdp7zSErS05/dyDDkpD
zX8vM54701FpmD3uj8cLB1qQhmK9htMNp+ncNBzecufhXUv6ehpsVAX1Kcfp
e2nYW7XV68oRujoNC8Z9neRxgG5Mw/a141Z57KHfp+GS0vMoP0P6exrujTuD
aH1aIh0+8l9PJW+ie6bjpuudyVE69MB0DA3Wmnd5NT08HT1PDVjqspxWTUdt
/4wN5xbR09IxTLGj6KImrZkOh+rlY2Nm08vTUdzVxFg8jdZJR6JJt7LKSbR+
Omas03/4SJXek47H1/eV3h9FH0nH7irRwHvDact0FM2PsH48hHZIR+HjESot
A2mPdFS7rbToK0f7piP/ze8FM3rRoelomrU/U6c7HZeOi6qaf7Z1odPTsU9O
+p5Rh+ivC9Ph8W780oM/6JJ0mH369M72C/0gHSryPwShH+jadKxZ4FpT1ky/
SkfqgH1yHS/oT+kIlxt9emQd3Z6OjwpubbNraKkM2KqFeax4RPfJgMaQ3MEG
5bRCBpYp1722vkOPzMAY21FpMTdptQyszvP1rRPRszIgN3/v8CEFNDJg/qjG
eGU2vSoDU3/ESx1Io3UzcGCr0mrHJHpHBqQl1R6Fx9L7M5AmbZlxN5I+loEZ
SvWHu4XSNhmIKzn7eXkgfS4DZ1qzkt18aa8MiG/4Zl2/SAd0xiMEB1o86MgM
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
ph2L0dLPT+FlRcbC/wNgwRlh
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 9990.}, {0, 0.9999999999999999}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\[LeftBracketingBar]\\!\\(\\*TemplateBox[{RowBox[{\\\"\[Psi]\\\", \
RowBox[{\\\"(\\\", \\\"t\\\", \\\")\\\"}]}],SubscriptBox[\\\"\[Psi]\\\", \
\\\"i\\\"]},\\n\\\"BraKet\\\"]\\)\\!\\(\\*SuperscriptBox[\\(\
\[LeftBracketingBar]\\), \\(2\\)]\\)\"", TraditionalForm], None}, {
        FormBox["\"\[Gamma] t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\\"Anti-Ferromagnetic\\\" excitation, \
\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\) square, d=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\
\\)\[Lambda]\"", 
         StringForm[
         "\"Anti-Ferromagnetic\" excitation, ``x`` ``, d=``\[Lambda]", 11, 11,
           "square", 0.4], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 9990.}, {0, 0.9999999999999999}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"A.F. mode\"", "\"All other modes\"", "\"Total excitation\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095460621223803`*^9, 3.809546070440121*^9}, 
   3.8095577264004574`*^9, 3.809557965549145*^9, 3.8095583265746727`*^9, {
   3.8095585383354445`*^9, 3.809558545717123*^9}, {3.8095595072837915`*^9, 
   3.809559515697239*^9}, {3.809559548031593*^9, 3.809559589545771*^9}, 
   3.80959899117149*^9, 3.8095995367441998`*^9, 3.809599567630124*^9, 
   3.8095996409250784`*^9, 3.809601118404739*^9, {3.8096011545845704`*^9, 
   3.8096011801785655`*^9}, {3.8096012517100906`*^9, 3.8096012906745753`*^9}, 
   3.809605478657835*^9, 3.8096055658926744`*^9, 3.809605657038061*^9, 
   3.8096411995653505`*^9, 3.809648470616344*^9, {3.809694210395522*^9, 
   3.809694237105081*^9}, {3.80969427119757*^9, 3.8096942858463874`*^9}, 
   3.8096943403950295`*^9, {3.8097282936927276`*^9, 3.8097283038356175`*^9}, 
   3.8097291423447914`*^9, 3.809729390870182*^9, {3.809729454381341*^9, 
   3.80972947120431*^9}, {3.809729882205124*^9, 3.8097299096656747`*^9}, 
   3.8097306491115704`*^9, 3.8097307108783565`*^9, 3.80977132485797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_afmode_decay_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809605603384469*^9, 3.8096056057680955`*^9}, 
   3.8097290897035933`*^9}],

Cell[BoxData["\<\"plot_afmode_decay_11x11_square.png\"\>"], "Output",
 CellChangeTimes->{{3.8096056329993114`*^9, 3.809605659778735*^9}, 
   3.8096484864876037`*^9, 3.8096943517037687`*^9, 3.809728329295531*^9, 
   3.809730715831089*^9, 3.8097713346098337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Re", "[", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8097299296013517`*^9, 3.8097299546004906`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdVVtIVFEUHUTJTEqsILGPikrTEjMfZY9ZvsbnzNx5vycQ9MOUEjENIi9l
Bj0UtNdHahGUEEWalaXFVcvsI5CpPqyRQoSkLLK0NEIyOsHeDgzDmsXea511
9t13beF+Y1GASqU6NP/9+/vv81VdvViT3Pm9VC3+gH/mdWBhU53AwdDpfW/M
7xsFDsPAhFz2dvSiwCugOlBzuffUJYFXYVb3ZLj/UbPAqxHB+DWoYvXrcEtH
+69H90+qvxEtgdRfNLzMXwz8y1OaQ1+1CLwZGV2fSqYftgkch2H9uMcaclvg
eDRojhb7tR0Cb0WW98ZU+9I7AiegiPHbcIHVJ+LYfdo/CaPhVD8ZZcx/CnrZ
+bZjA/O3A8WdUddj2//rp6K+NXzubOUDgXei1u6/+mOuR+BdGPHtLW2IeSzw
buQwfg8iWL0akaw/0Ej9y8A55i8NJ+n9yGkYY+dPRzXtL6ej4njb9KIKRfAZ
UBLdKVNdfYLPQPtQiO5wVb/gM9HH+Ew4WX0W0ln/LAwyfQ3mmD8Noth8ZaOe
3p+cjSaWTw5eMP0cfJwJjvRpnwo+F7H2yt+t0QOCz8Uk4/MwxOrzcJr1z8cJ
pp+PhHLqr2B+nsjzIRfAzuZPi9CX5H5lLZ6z/HRIYv50cJSEldeEPBO8HvmM
12OM1UtQ0/6QcIbqyxLGJOJPkTDI8jWgjp4PBtTT88sG+Gk+igEBszQ/IyzU
H4zYRHnZiGVJtN6IDyxfE3xM34QWmq9swpbPZD4UEybY/Jixj84XzCil8yeb
8Y75N+Mby8+CSOoPFvSwegumaH/FgkyJ6luR9oX4gxVxdL/KVgTR/aBYF+wH
G4qZfxuusPxtSKT3q9gwzvKzY5LVz2PaX7bjLtO3I1Wi+8GBCrp/4YCJ7l/Z
gXhW78AMy9+Jm+z+nDjP5s+JccorzgX5uTBC+8OFwJVU34XuWeJPceFeEH1/
uBHN/LuhZ/m7cZDNjxu17Pn1IMBAng94cI3Nnwdeer+KB1aWnxdHflF9LzqW
/PP3B5NcW5Q=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 121.}, {0, 0.1800078680106079}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8097299472262115`*^9, 3.80972995514406*^9}, 
   3.809771338583639*^9, 3.8097742005281878`*^9, 3.8097742672356067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[Psi]0", "]"}]], "Input",
 CellChangeTimes->{{3.809771346512965*^9, 3.8097713765559163`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0zlKBFEUhtGLkaGBgYGBioiIiPOsXc7t2HZrO2sgGBub3aW9TbgPl+AI
UudBURx+PuolNfz82nnpiYi3r+f7/Xs+GlE/VZ29uA/34wE8iIfwCB7FY3gc
T+BJPIWn8QyexXN4Hi/gRbyEl/EKXsVreB1v4E3cwFXdiWOLHcc2O44ddhy7
7Dj22HHss+M4YMfRZG9W3Z/z/vcfHNadOI7ocRyz4zhhx3HKjuOM++Fosbfo
z+uucOKCo02PE5c29+vUXeHs0OO44Ps4ccFxSY8TFxxdepy44Liix4kLjmt6
nLjguKHHiQuOW3qcuOC4o8eJC457epy44Higx4kLjkd6nLjgeKL/9yef9Hvg

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 121.}, {0, 0.3333333333333333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.809771377540568*^9, 3.8097742758700104`*^9}]
}, Open  ]],

Cell["Scatter plot the eigenvalues vs mode occupation", "Text",
 CellChangeTimes->{{3.809691190788318*^9, 3.8096912038157063`*^9}, {
  3.8096912947707624`*^9, 3.809691299476632*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fmodeEvalTuple", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log10", "[", 
       RowBox[{"Im", "[", 
        RowBox[{"evals", "[", 
         RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], "]"}], ",", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
       "normL"}]}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"otherEvalTuples", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Log10", "[", 
        RowBox[{"Im", "[", 
         RowBox[{"evals", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ".", 
           RowBox[{"evecs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], "/", "normL"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Range", "[", "atomnum", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "\[NotEqual]", "modeIdx"}], ")"}], "&"}]}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8096913633326225`*^9, 3.8096913947786117`*^9}, {
   3.809691425632874*^9, 3.8096915071742573`*^9}, {3.8096915416427755`*^9, 
   3.809691611107605*^9}, 3.809691777363924*^9, {3.8096919138452992`*^9, 
   3.80969195452117*^9}, {3.809692146215351*^9, 3.80969214909266*^9}, {
   3.809692190275172*^9, 3.8096922081644588`*^9}, {3.809693398228677*^9, 
   3.8096934265828915`*^9}, {3.809774181458193*^9, 3.8097741834002056`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fmodeEvalTuple", ",", "otherEvalTuples"}], "}"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "7"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Ferro. mode\>\"", ",", "\"\<Other modes\>\""}], "}"}]}], 
    ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", " ", "\"\<Mode overlap vs linewidth, t=0\>\""}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])\>\"", ",", "\"\<Mode overlap\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809691958689979*^9, 3.809691971685286*^9}, {
   3.809692112615225*^9, 3.809692178646309*^9}, {3.809692220848303*^9, 
   3.8096923418434916`*^9}, {3.809692375115229*^9, 3.809692470015396*^9}, {
   3.809692506597993*^9, 3.8096925194076967`*^9}, {3.8096925807902546`*^9, 
   3.8096927195305843`*^9}, 3.809692861580454*^9, {3.809693440549517*^9, 
   3.8096935473419003`*^9}, {3.8096935817997713`*^9, 3.809693696077877*^9}, {
   3.809730061495578*^9, 3.8097300653612366`*^9}, {3.809774032259774*^9, 
   3.8097740406808577`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 7, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{-2.2680366687780786`, 
         0.28840810081004953`}}, {{-2.2680366687780786`, 
         0.28840810081004953`}}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 7, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], CompressedData["
1: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
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2.2680366687780786`, 0.6775441214037387}, {
       0, 0.3373113703008319}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Mode overlap\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Mode overlap vs linewidth, t=0\"", TraditionalForm], 
     PlotRange -> {{-2.2680366687780786`, 0.6775441214037387}, {
       0, 0.3373113703008319}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferro. mode\"", "\"Other modes\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 7, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 7, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "7"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "7"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8096919731533256`*^9, {3.809692117144107*^9, 3.809692168948248*^9}, {
   3.8096922130872874`*^9, 3.809692246846362*^9}, {3.809692296383086*^9, 
   3.809692342561574*^9}, {3.809692389134718*^9, 3.809692421744496*^9}, {
   3.809692471084536*^9, 3.8096925203352137`*^9}, 3.809692605496172*^9, {
   3.8096934326166983`*^9, 3.809693446479619*^9}, 3.809693548262438*^9, {
   3.8096936707266045`*^9, 3.8096936814968767`*^9}, 3.8096940964071894`*^9, 
   3.8097300751391125`*^9, 3.80977143454315*^9, {3.809774046329821*^9, 
   3.809774059532552*^9}, {3.8097741606882553`*^9, 3.80977416426289*^9}, 
   3.8097742802114973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_overlap_v_linewidth_t0_fmode_``x``_``_9excited.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809693854721695*^9, 3.809693904449662*^9}, {
   3.8097300912161093`*^9, 3.809730092852703*^9}, 3.8097742850817165`*^9}],

Cell[BoxData["\<\"plot_overlap_v_linewidth_t0_fmode_11x11_square_9excited.png\
\"\>"], "Output",
 CellChangeTimes->{{3.809693884032281*^9, 3.809693905842928*^9}, 
   3.8097300946289835`*^9, 3.8097714580079093`*^9, 3.8097742878437557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", "atomnum", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "\[NotEqual]", "modeIdx"}], ")"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096916135217147`*^9, 3.8096916348225775`*^9}, {
  3.8096916749274163`*^9, 3.809691768770897*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8096916355193167`*^9, {3.809691702113702*^9, 3.8096917497084007`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["animation of polarization spreading", "Subsubsection",
 CellChangeTimes->{{3.8102295576144896`*^9, 3.810229573700259*^9}}],

Cell["\<\
Make a movie of the excitation spreading. First redefine tsteps to get the \
desired resolution\
\>", "Text",
 CellChangeTimes->{{3.809605573765632*^9, 3.8096055804148593`*^9}, {
  3.809645311349017*^9, 3.8096453187702*^9}, {3.809730160837861*^9, 
  3.8097301746559057`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "explicit", " ", "points", " ", "for", " ", "the", " ", 
    "solution", " ", "and", " ", "transpose", " ", "to", " ", "get", " ", "a",
     " ", "state", " ", "vector", " ", "at", " ", "each", " ", "timestep"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"savesoln", " ", "=", " ", "True"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ti", "=", "0"}], ";", 
    RowBox[{"numsteps", "=", "100"}], ";", 
    RowBox[{"tf", "=", 
     FractionBox[
      RowBox[{"numsteps", "-", "1"}], "\[Gamma]"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsteps", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"ti", ",", "tf", ",", 
       FractionBox[
        RowBox[{"tf", "-", "ti"}], 
        RowBox[{"numsteps", "-", "1"}]]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"soln", " ", "with", " ", "rows", " ", "i", " ", "having", " ", 
     SubscriptBox["\[Psi]", "i"], " ", "evaluated", " ", "at", " ", "each", 
     " ", "timestep", " ", "t"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tsteps"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fname", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<soln_time_evol_``_``_````x``.txt\>\"", ",", 
         RowBox[{"Floor", "[", "ti", "]"}], ",", 
         RowBox[{"Floor", "[", "tf", "]"}], ",", "gridname", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"savesoln", ",", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"ToString", "[", "solnPts", "]"}]}], "]"}]}], "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "transpose", " ", "soln", " ", "to", " ", "get", " ", "a", " ", "vector", 
     " ", "state", " ", "at", " ", "each", " ", "tstep"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vecSoln", " ", "=", " ", 
     RowBox[{"Transpose", "@", "solnPts"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
     RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normL", " ", "=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "the", " ", "approximate", " ", "ferromagnetic", " ", 
     "mode"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overlap", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"afmode", ".", 
            RowBox[{"evecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeIdx", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mode", " ", "=", " ", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodePts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "t", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "can", " ", "make", " ", "the", " ", "lines", " ", "below", " ", "more", 
     " ", "efficient", " ", "by", " ", "only", " ", "computing", " ", "the", 
     " ", "sums", " ", "once"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalPts", " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"vecSoln", "[", 
              RowBox[{"[", "t", "]"}], "]"}], ".", 
             RowBox[{"evecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"totalPts", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "-", 
        RowBox[{"fmodePts", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodeTuples", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "fmodePts"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "fmode", " ", "occupation", " ", "at", " ", "each", " ", "time", " ", 
      "step"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"otherTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "otherPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "totalPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"occupation", " ", "in", " ", "all", " ", "other", " ", "modes"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.809537731589987*^9, 3.8095377317493005`*^9}, {
   3.809538818979971*^9, 3.8095388204221125`*^9}, {3.809538877168335*^9, 
   3.8095388806360598`*^9}, 3.809539283946311*^9, {3.8095393466665525`*^9, 
   3.809539372119471*^9}, {3.809539467892342*^9, 3.809539468073819*^9}, {
   3.8095395222788367`*^9, 3.809539522892194*^9}, 3.8095450971210623`*^9, {
   3.8095458315611763`*^9, 3.8095458355654626`*^9}, {3.80955773496976*^9, 
   3.809557757853461*^9}, {3.8095583906833534`*^9, 3.80955839126085*^9}, {
   3.8095597358014803`*^9, 3.809559807414382*^9}, {3.809559964155444*^9, 
   3.809559968153966*^9}, {3.809599552339513*^9, 3.8095995531761265`*^9}, {
   3.809599617330911*^9, 3.8095996220619907`*^9}, {3.8096000584546027`*^9, 
   3.809600116786805*^9}, {3.8096003298751945`*^9, 3.8096003393550863`*^9}, {
   3.8096006351305075`*^9, 3.8096008071453*^9}, {3.8096010934339542`*^9, 
   3.809601093899026*^9}, {3.8096011379469185`*^9, 3.8096011387812004`*^9}, {
   3.8096011727637854`*^9, 3.8096011739468527`*^9}, {3.80960124310413*^9, 
   3.8096012867778454`*^9}, 3.809605305087755*^9, {3.8096054607247677`*^9, 
   3.8096054665152907`*^9}, {3.8096484370062017`*^9, 3.809648442380129*^9}, 
   3.8096486033603587`*^9, {3.8096872387610865`*^9, 3.8096872447717113`*^9}, {
   3.8096873155956926`*^9, 3.809687355940363*^9}, {3.809687553929351*^9, 
   3.8096875833017836`*^9}, {3.809687620226015*^9, 3.8096876209750614`*^9}, {
   3.809694119981163*^9, 3.8096941727791758`*^9}, {3.8097244836682706`*^9, 
   3.8097245504190836`*^9}, {3.8097246239728518`*^9, 3.809724641454688*^9}, 
   3.8097294103660364`*^9, {3.8097295651431766`*^9, 3.8097296089304705`*^9}, {
   3.809729641149293*^9, 3.809729684871345*^9}, 3.809730180781518*^9, 
   3.809730246959879*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gifSteps", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normVecSoln", " ", "=", " ", 
   RowBox[{"vecSoln", "*", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cf", " ", "[", "z_", "]"}], ":=", " ", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Purple", ",", "Black", ",", "Green"}], "}"}], ",", "z"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colors", "=", "\"\<AvocadoColors\>\""}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809723578017413*^9, 3.8097237124476476`*^9}, {
   3.809723787728565*^9, 3.809724169141937*^9}, {3.809724201228233*^9, 
   3.8097242725032277`*^9}, {3.8097243341735168`*^9, 
   3.8097243397114596`*^9}, {3.8097243704071174`*^9, 
   3.8097244436651106`*^9}, {3.8097247701208606`*^9, 3.809724770293457*^9}, {
   3.809724838574437*^9, 3.8097248609312625`*^9}, {3.809724919511783*^9, 
   3.8097249198884673`*^9}, {3.809724997509455*^9, 3.8097250176025133`*^9}, {
   3.809725320759549*^9, 3.8097253226388206`*^9}, {3.8097254793479247`*^9, 
   3.80972552522919*^9}, {3.8097260071736283`*^9, 3.809726007884187*^9}, {
   3.809726556144826*^9, 3.809726560318365*^9}, 3.8097266686627755`*^9, {
   3.809726715357799*^9, 3.8097267252488627`*^9}, {3.8097269530930076`*^9, 
   3.80972699097888*^9}, {3.809727072379707*^9, 3.809727084995942*^9}, {
   3.8097275036949587`*^9, 3.8097275093308525`*^9}, {3.8097303504251375`*^9, 
   3.809730385153163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cfData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"cf", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.80972728232745*^9, 3.80972730795916*^9}, {
  3.8097274667194357`*^9, 3.809727491287115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0., 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0., 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0., 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0., 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2666666666666667, 0., 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4, 0., 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0., 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0., 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3, 0., 0.3], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2, 0., 0.2],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3, 0., 0.3]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.3, 0., 0.3]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3, 0., 0.3],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.1333333333333333, 0., 0.1333333333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666665, 0., 0.06666666666666665],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.09999999999999998, 0., 0.09999999999999998],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.20000000000000018`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.13333333333333347`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.20000000000000018, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.20000000000000018`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.20000000000000018`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.40000000000000013`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.2666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.40000000000000013, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.40000000000000013`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.40000000000000013`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6000000000000001, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.6000000000000001, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.6000000000000001, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.6000000000000001, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.8, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.8, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0.8, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.8, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 1., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 1., 0.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8097272964649034`*^9, 3.809727308573516*^9}, {
   3.8097274770099106`*^9, 3.809727510972458*^9}, 3.8097303540406947`*^9}]
}, Open  ]],

Cell["Make single frame plot of f,af eigenmodes:", "Text",
 CellChangeTimes->{{3.8097307307881117`*^9, 3.8097307525820665`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"overlap", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{
      RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fmode", ".", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modeIdx", "=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", " ", "=", " ", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097310909858055`*^9, 3.8097310996062193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Legended", "[", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SqrtBox["atomnum"], ",", 
           SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<Ferro. Eigenmode, ``x`` ``\>\"", ",", 
            SqrtBox["atomnum"], ",", 
            SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"Mesh", "->", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"BarLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cfData", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809730797213892*^9, 3.8097308159322433`*^9}, {
  3.809730902211009*^9, 3.8097309215935144`*^9}, {3.8097311107544336`*^9, 
  3.8097311138321967`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{RasterBox[CompressedData["
1:eJx1lnlM03cYxhsgBS2MirB0tXJMQWCFAWImlgBCx1DKBKvoKoaEVYbApAoK
A6IsIHbDCZpuCs5xzVoFpGOsHENhTloFgUIIVoprCVAKFKiTo5xblh1/7IFf
0qT55M2b933e6+sQk3TwhDGBQCD98/vr/79fC2/LKdvaIn/C/74A6fxFf5uf
gO/OrNzleeMX4GQfFdk3XwZcFPYddZXdAbypvDBWckEOXM3ILdQxngFXOMny
XVOlwD3Ehlia/CHy89c/X6gVA8/a/vNJBfsbtFdYmka4SYCbuPYKP/6yBzh3
xEB95fYcuNlE+mW/UiVwrVAqy0tTAbdK3lZUWqEGXn9rj2m27jfgaYNT7bts
0L/9c6fFoWN9WC/7EA1ntRu4OL/aiNTxA3DKxd1zPtsfAX8y5pcxm4z5ikNa
5eykQeDfT6Tuk68MYb55XL7JAQ32m9+d2aqsUeCcXFtnwga0l2g8x9rr0L8g
6ALvgAvGU6BM5GhLUR/yI7LWTduM9dqb0M3c8gR45nSLLnAU9bfVP7jbGzQM
vOSj9D67Z1qsI/V0pLXxBPbnPe8KVxcd8B6bd+YsH4zjXEQeEW69u4b/4Tca
ngpQH7OXogTPrn7g+q2MLoeJ1jX8uyqJapxfcYW5c8FD7Gf+V5fqiWewXlZ2
dRLKPsyXPH7/ZuzCJPBlb7tMFWka9RzNS+D2ob1gs5nUogj1oeUsza+MjAAP
L5wRnhfifBm8FhVD1e3AU0QqaWMr7quys8Ft5Z04v3MBbY7icuxnetURJZ2F
9Y15L7By0B3z/fvTA3/stRz6UjsFnCXalOFMRP/mvjmtFccxHgWPEF/Mx/hD
itnEGh/MtyRactMysRM4k8NKYTmiHw+BPsRCif1wyqFfQ03EfmiamlmK98e8
hD4nBoYiUJ8AXXd7HA3tmZQPnazU2A8D/L1HjegYT1xZ1ieXvLCfRUwrzqwM
71EBO/tg5M6nwHkGVlVo8gDwc7+rX/TF4n4gRt0ivj2N87uePtzqdNK7SVhf
NU2Q+6YT2q+3f1LGDr3V2Y/74YbGm77nGO43sgc7fKcx3nfy9fDUUN9fgX87
laNcaMB7YRuqJURew/0smjHe+OIL1GfmageFVI/1ogdNHq6RYj835d/Tmn2N
9uOTRZ/12KP/c8FlJREsjEevrmnUjeK9KIkX1NpltaD+S/4bUo7XA+91p5rG
yfH9QHjdxlj9A/XRL1+zCG/A/rE+6sLcb4Tz1Zt6cvH2K+Tr2Q+/JoZ94Ib+
17vvlx2vBEczMX5xrcrEfeVH4C2rnzION5biHhjfwY95vw75lceSQDG+N9Ki
LDdHN68xX3GBURQD7p/hSscdzSR85wSc7qQ55HRhvvvnr4bdwfvOS7Y/62yO
71uPclk2baQG/ddlnOFaF//H/wQNmeYo
         "], {{0, 0}, {11, 11}}, {0, 1}], {
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 
            9}}, {{0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0,
             5}, {11, 5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11,
             2}}, {{0, 1}, {11, 1}}, {{0, 0}, {11, 0}}}],
           Antialiasing->False]}, 
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 
            11}}, {{3, 0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{
            6, 0}, {6, 11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {
            9, 11}}, {{10, 0}, {10, 11}}, {{11, 0}, {11, 11}}}],
           Antialiasing->False]}}}, {}},
      Axes->False,
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{None, None},
      FrameStyle->Opacity[0],
      FrameTicks->{{{{10.5, 
           FormBox["1", TraditionalForm]}, {9.5, 
           FormBox["2", TraditionalForm]}, {8.5, 
           FormBox["3", TraditionalForm]}, {7.5, 
           FormBox["4", TraditionalForm]}, {6.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {4.5, 
           FormBox["7", TraditionalForm]}, {3.5, 
           FormBox["8", TraditionalForm]}, {2.5, 
           FormBox["9", TraditionalForm]}, {1.5, 
           FormBox["10", TraditionalForm]}, {0.5, 
           FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {1.5, 
           FormBox["2", TraditionalForm]}, {2.5, 
           FormBox["3", TraditionalForm]}, {3.5, 
           FormBox["4", TraditionalForm]}, {4.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {6.5, 
           FormBox["7", TraditionalForm]}, {7.5, 
           FormBox["8", TraditionalForm]}, {8.5, 
           FormBox["9", TraditionalForm]}, {9.5, 
           FormBox["10", TraditionalForm]}, {10.5, 
           FormBox["11", TraditionalForm]}}, None}},
      FrameTicksStyle->Opacity[1],
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->None], Scaled[{0.5, 0.5}], Center, Scaled[{1, 1}]], InsetBox[
     TemplateBox[{FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1l01slGUUhaeBhWGDMRVXoiTGVNlocKEJ7birCxeCGxKJCyO6IYLRBSIx
DQHZ0S66sC4MhJJKUiclVPsThGlRgcrPaGc6RSu2tWqlRVlQ2Jhov3vfc2++
czMnmabn6XTeee893/uz6Y0923etKRQKl1dfTauv7HfVbLGQ02yx1D63v7n0
q3H4nZ3jKy07ncOvq5/Y27rOOfzwxsNL24ZvGod/S+Qc/mEZyDn8hdVROsd/
MQ7/bms2knP4x7JhNjqHv3ol04xx+A+bs4Gcwz8lE3QOL9Or/2wcXoY57Bz+
uS2ZnMPP788G+sk4fFdW1k7n8G1SWOfwy9kwSzeMw3/ak8k5/EtZO9udw9/L
yroybRy+N5veCefw26WhzvN+mnI1nXJVp1zVU67qlKt6ylWdclUvjkiOpozD
vy05cg6vOZqiXE2lXNUoV7WUqxrlqpZyVaNc1VKuqpSraspVlXJVTbmqUq6q
KVeTlKvJlKtJytVkUWK0xTm8tHPuR+PwUtZO5/AyvVbn8DLM0g/G4SVGPc7h
pZ3tzuGlrCsV4/CaowrlqpJyVaFcVYr/ia4bh39NJuIc/ivJxTXj8A9J/53D
vyMTv2ocfkL6ecU4/JPSN+fwB6VQ3xuHn5U+TBiH3yr1dg7/idT1snH4u1K/
S8bhX5E6OYfvl0ZcNA7/gATMOfyb8tx8Zxx+TBr3rXH4RyWQzuE/kLx/Yxy+
Jrm+YBz+Wcmvc3jN6Tjldjzlc4zyOZbWN+fwmq8y5a2ccnWecnW+OCR5OWcc
fo/k4mvj8NKGlrPG4bXPo9T30dTfEervSOrjMPVxOPVriPo1VCxLOb40Dn9A
6j1oHF73nzO0H51J+8hp2kdOp7oNUN0G0v5eov29lOrQT3XoT/M9RfM9lebV
R/PqK+6T79trHH5Rvtdx4/ADMv5nxuG7dIHy/TT5Dvm8buPwZfm/o17P5PXv
h+j9hxJ/n7j7RvqYPi/PuwOfoPnl398b+OdU7/znlAK/R/3Pf/5g4I9QHvPj
jgT+Aj0f+e9zLvAv6HnNf8+xwNto/YA+onUIukjrGbSe1kVoB62v0DFap6FF
Wu+hZ2jfgPbR/gOVaR+D1srPSqw/7avQy7Q/Q3don4e66bwAPU/nDmiGzi9Q
B52DoCfoPAVdonMZtJvOd9CDdE6EBum8Ce2gcyv0L51/oWN0joZepPM4tEDn
eugI3Q+gzXTPgK7TfQV6j+490Aa6P0GjdA+DXqf7HNQkP/leWCi8KnWL/KTk
LfL7Us/IdT+eC1zvJ5HrPhS53n/mA9f7UuR6v4pc97/f4ron/Yp8WuIW+dPS
x4XAdd+N/Jr0N/LH5bn4PXAp897I9TgUuQzb/Efget+OXPfvyPXe9Wfgek+L
XO91kasWA9fzfeR6zohc76WRa67+apCryDVXkWuubjXIVeSaq8g1V0sNchW5
5ipyzdVyg1xFrrmKXHN1u0GuItdcRa65+rtBriLXXEWuufqnQa4i11xFrrpj
/H8tDLSm
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                    Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                    Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                    Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                    Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                    Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]},
      "BarLegend",
      DisplayFunction->(#& ),
      InterpretationFunction:>(RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0., 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4, 0., 0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2666666666666667, 0., 0.2666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4, 0., 0.4]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4, 0., 0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4, 0., 0.4], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3, 0., 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.2, 0., 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3, 0., 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3, 0., 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3, 0., 0.3], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1333333333333333, 0., 0.1333333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06666666666666665, 0., 0.06666666666666665], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.20000000000000018`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.13333333333333347`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.20000000000000018, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.20000000000000018`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.20000000000000018`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.40000000000000013`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.2666666666666668, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.40000000000000013, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.40000000000000013`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.40000000000000013`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6000000000000001, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4000000000000001, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.6000000000000001, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6000000000000001, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6000000000000001, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.5333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.8, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8, 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 1., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 1., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 1., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 1., 0.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   Axes->False,
   Frame->False,
   FrameLabel->{None, None},
   FrameStyle->Opacity[0],
   FrameTicks->{{{{10.5, 
        FormBox["1", TraditionalForm]}, {9.5, 
        FormBox["2", TraditionalForm]}, {8.5, 
        FormBox["3", TraditionalForm]}, {7.5, 
        FormBox["4", TraditionalForm]}, {6.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {4.5, 
        FormBox["7", TraditionalForm]}, {3.5, 
        FormBox["8", TraditionalForm]}, {2.5, 
        FormBox["9", TraditionalForm]}, {1.5, 
        FormBox["10", TraditionalForm]}, {0.5, 
        FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
        FormBox["1", TraditionalForm]}, {1.5, 
        FormBox["2", TraditionalForm]}, {2.5, 
        FormBox["3", TraditionalForm]}, {3.5, 
        FormBox["4", TraditionalForm]}, {4.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {6.5, 
        FormBox["7", TraditionalForm]}, {7.5, 
        FormBox["8", TraditionalForm]}, {8.5, 
        FormBox["9", TraditionalForm]}, {9.5, 
        FormBox["10", TraditionalForm]}, {10.5, 
        FormBox["11", TraditionalForm]}}, None}},
   FrameTicksStyle->Opacity[1],
   ImagePadding->All,
   Method->{
    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
     "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
     "RangePadding" -> Scaled[0.05]},
   PlotLabel->FormBox[
     StyleBox[
      InterpretationBox[
      "\"Ferro. Eigenmode, \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) \
square\"", 
       StringForm["Ferro. Eigenmode, ``x`` ``", 11, 11, "square"], Editable -> 
       False], 
      GrayLevel[0], FontSize -> 14, StripOnInput -> False], TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False],
  InterpretTemplate[Legended[
    Graphics[{
      Raster[CompressedData["
1:eJx1lnlM03cYxhsgBS2MirB0tXJMQWCFAWImlgBCx1DKBKvoKoaEVYbApAoK
A6IsIHbDCZpuCs5xzVoFpGOsHENhTloFgUIIVoprCVAKFKiTo5xblh1/7IFf
0qT55M2b933e6+sQk3TwhDGBQCD98/vr/79fC2/LKdvaIn/C/74A6fxFf5uf
gO/OrNzleeMX4GQfFdk3XwZcFPYddZXdAbypvDBWckEOXM3ILdQxngFXOMny
XVOlwD3Ehlia/CHy89c/X6gVA8/a/vNJBfsbtFdYmka4SYCbuPYKP/6yBzh3
xEB95fYcuNlE+mW/UiVwrVAqy0tTAbdK3lZUWqEGXn9rj2m27jfgaYNT7bts
0L/9c6fFoWN9WC/7EA1ntRu4OL/aiNTxA3DKxd1zPtsfAX8y5pcxm4z5ikNa
5eykQeDfT6Tuk68MYb55XL7JAQ32m9+d2aqsUeCcXFtnwga0l2g8x9rr0L8g
6ALvgAvGU6BM5GhLUR/yI7LWTduM9dqb0M3c8gR45nSLLnAU9bfVP7jbGzQM
vOSj9D67Z1qsI/V0pLXxBPbnPe8KVxcd8B6bd+YsH4zjXEQeEW69u4b/4Tca
ngpQH7OXogTPrn7g+q2MLoeJ1jX8uyqJapxfcYW5c8FD7Gf+V5fqiWewXlZ2
dRLKPsyXPH7/ZuzCJPBlb7tMFWka9RzNS+D2ob1gs5nUogj1oeUsza+MjAAP
L5wRnhfifBm8FhVD1e3AU0QqaWMr7quys8Ft5Z04v3MBbY7icuxnetURJZ2F
9Y15L7By0B3z/fvTA3/stRz6UjsFnCXalOFMRP/mvjmtFccxHgWPEF/Mx/hD
itnEGh/MtyRactMysRM4k8NKYTmiHw+BPsRCif1wyqFfQ03EfmiamlmK98e8
hD4nBoYiUJ8AXXd7HA3tmZQPnazU2A8D/L1HjegYT1xZ1ieXvLCfRUwrzqwM
71EBO/tg5M6nwHkGVlVo8gDwc7+rX/TF4n4gRt0ivj2N87uePtzqdNK7SVhf
NU2Q+6YT2q+3f1LGDr3V2Y/74YbGm77nGO43sgc7fKcx3nfy9fDUUN9fgX87
laNcaMB7YRuqJURew/0smjHe+OIL1GfmageFVI/1ogdNHq6RYj835d/Tmn2N
9uOTRZ/12KP/c8FlJREsjEevrmnUjeK9KIkX1NpltaD+S/4bUo7XA+91p5rG
yfH9QHjdxlj9A/XRL1+zCG/A/rE+6sLcb4Tz1Zt6cvH2K+Tr2Q+/JoZ94Ib+
17vvlx2vBEczMX5xrcrEfeVH4C2rnzION5biHhjfwY95vw75lceSQDG+N9Ki
LDdHN68xX3GBURQD7p/hSscdzSR85wSc7qQ55HRhvvvnr4bdwfvOS7Y/62yO
71uPclk2baQG/ddlnOFaF//H/wQNmeYo
       "], {{0, 0}, {11, 11}}, {0, 1}], {{Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 9}}, {{
         0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0, 5}, {11, 
         5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11, 2}}, {{0, 
         1}, {11, 1}}, {{0, 0}, {11, 0}}}]}, {Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 11}}, {{3, 
         0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{6, 0}, {6, 
         11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {9, 11}}, {{10, 
         0}, {10, 11}}, {{11, 0}, {11, 11}}}]}}}, {
     Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
      Opacity[0], 
      FrameTicks -> {{{{10.5, 1}, {9.5, 2}, {8.5, 3}, {7.5, 4}, {6.5, 5}, {
          5.5, 6}, {4.5, 7}, {3.5, 8}, {2.5, 9}, {1.5, 10}, {0.5, 11}}, 
         None}, {{{0.5, 1}, {1.5, 2}, {2.5, 3}, {3.5, 4}, {4.5, 5}, {
          5.5, 6}, {6.5, 7}, {7.5, 8}, {8.5, 9}, {9.5, 10}, {10.5, 11}}, 
         None}}, FrameTicksStyle -> Opacity[1], GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]}, PlotLabel -> Style[
        StringForm["Ferro. Eigenmode, ``x`` ``", 11, 11, "square"], 
        GrayLevel[0], FontSize -> 14]}], 
    Placed[
     Unevaluated[
      BarLegend[{{
         RGBColor[0.5, 0., 0.5], 
         RGBColor[0.4, 0., 0.4], 
         RGBColor[0.3, 0., 0.3], 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RGBColor[0., 0., 0.], 
         RGBColor[0., 0.20000000000000018`, 0.], 
         RGBColor[0., 0.40000000000000013`, 0.], 
         RGBColor[0., 0.6000000000000001, 0.], 
         RGBColor[0., 0.8, 0.], 
         RGBColor[0., 1., 0.]}, {-1, 1}}, LegendLayout -> "Column"]], {
     After, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8097308877257247`*^9, 3.8097309259059772`*^9}, 
   3.809731130324153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_ferro_eigmode_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8097309437352915`*^9, 3.8097309883430033`*^9}, {
  3.8097311388343973`*^9, 3.809731140923805*^9}}],

Cell[BoxData["\<\"plot_ferro_eigmode_11x11_square.png\"\>"], "Output",
 CellChangeTimes->{{3.8097309828805857`*^9, 3.809730989209656*^9}, 
   3.8097311421016645`*^9}]
}, Open  ]],

Cell["Make gifs", "Text",
 CellChangeTimes->{{3.8097307824464235`*^9, 3.8097307856089373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"MatrixPlot", "[", 
        RowBox[{
         RowBox[{"ArrayReshape", "[", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"normVecSoln", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SqrtBox["atomnum"], ",", 
             SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{
             "\"\<Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) spreading, \
``x`` ``\>\"", ",", 
              SqrtBox["atomnum"], ",", 
              SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", ",", 
            RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
         RowBox[{"Mesh", "->", "True"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              SqrtBox["atomnum"]}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cfData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<t=``/\[Gamma]\>\"", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"tsteps", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
          "White", ",", "Bold", ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "gifSteps"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809723578017413*^9, 3.8097237124476476`*^9}, {
   3.809723787728565*^9, 3.809724169141937*^9}, {3.809724201228233*^9, 
   3.8097242725032277`*^9}, {3.8097243341735168`*^9, 
   3.8097243397114596`*^9}, {3.8097243704071174`*^9, 3.8097244294187202`*^9}, 
   3.8097270617434883`*^9, {3.8097270918393097`*^9, 3.809727092040349*^9}, {
   3.8097271415353003`*^9, 3.8097271800790462`*^9}, {3.8097272519297533`*^9, 
   3.8097272755216503`*^9}, {3.809727520198784*^9, 3.8097275223510237`*^9}, {
   3.8097302771411552`*^9, 3.809730289097172*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 97, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
      33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
      51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
      69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
      87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}}}, 
    Typeset`size$$ = {450., {195., 201.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$1351386$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$1351386$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Legended[
         MatrixPlot[
          ArrayReshape[
           Re[
            Part[$CellContext`normVecSoln, $CellContext`i$$]], {
            Sqrt[$CellContext`atomnum], 
            Sqrt[$CellContext`atomnum]}], PlotLabel -> Style[
            StringForm[
            "Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) spreading, ``x`` \
``", 
             Sqrt[$CellContext`atomnum], 
             Sqrt[$CellContext`atomnum], $CellContext`gridname], Black, 
            FontSize -> 14], Axes -> False, Mesh -> True, Frame -> True, 
          FrameStyle -> Opacity[0], FrameTicksStyle -> Opacity[1], FrameTicks -> {
            Range[1, 
             Sqrt[$CellContext`atomnum]], 
            Range[1, 
             Sqrt[$CellContext`atomnum]]}, ColorFunction -> $CellContext`cf, 
          ColorFunctionScaling -> True], 
         Placed[
          
          BarLegend[{$CellContext`cfData, {-1, 1}}, LegendLayout -> 
           "Column"], {After, Center}]], 
        Graphics[
         Text[
          Style[
           ToString[
            StringForm["t=``/\[Gamma]", 
             Floor[
              Part[$CellContext`tsteps, $CellContext`i$$]]]], White, Bold, 
           FontSize -> 13], {10, 0.5}]]], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
         28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
         45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
         62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
         79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
         96, 97, 98, 99, 100}, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{511., {242., 249.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8097235110675144`*^9, {3.80972364655206*^9, 3.8097236820060062`*^9}, 
   3.8097237135643225`*^9, 3.80972379352612*^9, {3.8097238455077243`*^9, 
   3.8097238613515215`*^9}, {3.809723922747713*^9, 3.809723927303635*^9}, {
   3.8097239799573483`*^9, 3.8097240193874283`*^9}, 3.809724061456005*^9, {
   3.8097241076478243`*^9, 3.8097241699030933`*^9}, {3.8097242555368395`*^9, 
   3.809724274071827*^9}, 3.80972434166551*^9, 3.809724456464079*^9, 
   3.809724660782507*^9, {3.8097248424270363`*^9, 3.809724865230003*^9}, 
   3.80972492272374*^9, {3.8097250030958214`*^9, 3.809725019481451*^9}, 
   3.809727006222603*^9, 3.809727095482311*^9, {3.8097271291183424`*^9, 
   3.809727159140645*^9}, 3.809727239663418*^9, 3.8097275229015536`*^9, 
   3.8097302897953386`*^9, 3.8097303565280666`*^9, 3.8097715035135775`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", 
    SqrtBox["atomnum"]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4",
    ",", "3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8097240342430215`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<t=\!\(\*FractionBox[\(``\), \(\[Gamma]\)]\)\>\"", ",", "100"}], 
     "]"}], "]"}], ",", "White"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"MatrixPlot", "[", 
         RowBox[{
          RowBox[{"ArrayReshape", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Re", "[", 
              RowBox[{"normVecSoln", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SqrtBox["atomnum"], ",", 
              SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<Excitation (|\!\(\*SubscriptBox[\(P\), \(x\)]\)|) \
spreading, ``x`` ``\>\"", ",", 
               SqrtBox["atomnum"], ",", 
               SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
          RowBox[{"Mesh", "->", "True"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               SqrtBox["atomnum"]}], "]"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"ColorData", "[", "cf", "]"}]}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cf", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", "100", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809687806940313*^9, 3.809687838075184*^9}, {
   3.8096882066645327`*^9, 3.809688208094444*^9}, 3.8096885281488504`*^9, {
   3.8097250769512467`*^9, 3.809725082178584*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gif", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{"normVecSoln", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["atomnum"], ",", 
               SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) \
spreading, ``x`` ``\>\"", ",", 
                SqrtBox["atomnum"], ",", 
                SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", 
              ",", 
              RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
           RowBox[{"Mesh", "->", "True"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
           RowBox[{"FrameTicksStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                SqrtBox["atomnum"]}], "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"BarLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"cfData", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"StringForm", "[", 
              RowBox[{"\"\<t=``/\[Gamma]\>\"", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"tsteps", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
            "White", ",", "Bold", ",", 
            RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "gifSteps"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.809725090252293*^9, 3.8097251220828*^9}, 
   3.809725310034401*^9, {3.8097276148536043`*^9, 3.809727629451586*^9}, {
   3.8097277426662025`*^9, 3.8097277445112658`*^9}, {3.8097304015532956`*^9, 
   3.8097304209962997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<excitation_spreading_af_``x``_``.gif\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "gif", ",", 
   RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", "0.3"}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809688180309969*^9, 3.8096882227679663`*^9}, {
   3.809688302760231*^9, 3.80968832832456*^9}, {3.8096883585526776`*^9, 
   3.8096883862690573`*^9}, {3.809725065430794*^9, 3.809725070094314*^9}, {
   3.809725735291532*^9, 3.8097258223769217`*^9}, {3.809727612165797*^9, 
   3.809727612260545*^9}, {3.809730424555784*^9, 3.8097304297190204`*^9}, 
   3.8097305667899957`*^9}],

Cell[BoxData["\<\"excitation_spreading_af_11x11_square.gif\"\>"], "Output",
 CellChangeTimes->{{3.809688354195727*^9, 3.809688363875207*^9}, 
   3.809688451140368*^9, 3.8096885888905993`*^9, 3.809725215541307*^9, 
   3.8097252507641115`*^9, 3.809725398833313*^9, 3.809725876930114*^9, 
   3.809727670252263*^9, 3.8097278193787513`*^9, 3.809730434263815*^9, 
   3.8097304793931026`*^9, 3.8097716225840006`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc physics analysis", "Section",
 CellChangeTimes->{{3.8090163619501247`*^9, 3.8090163665089817`*^9}, {
   3.809209471963997*^9, 3.8092094760770473`*^9}, 3.809209607406805*^9}],

Cell[CellGroupData[{

Cell["Hamiltonian algebra", "Subsubsection",
 CellChangeTimes->{{3.809209576436367*^9, 3.8092096042035294`*^9}}],

Cell["\<\
Try to get approximate analytical expressions for eigenvalues of square grid\
\>", "Text",
 CellChangeTimes->{{3.8092096198550777`*^9, 3.809209655266404*^9}, {
  3.8092098717740297`*^9, 3.809209875227496*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "\[Lambda]", ",", "\[Gamma]", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.809209852918344*^9, 3.809209862901392*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", "4"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"square", " ", "grid"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", 
     SqrtBox["atomnum"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", "i_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"x", "-", "polarized"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Hfull", " ", "=", " ", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["H", "##"], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"atomnum", "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{"atomnum", "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{"d", " ", "\[Lambda]", " ", 
          SubscriptBox["r", 
           RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalOmega]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Re", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"\[Gamma]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Im", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Hfull", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", " ", 
         RowBox[{"\[CapitalOmega]ij", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.809209697932802*^9, 3.809209786734555*^9}, 
   3.809209868898496*^9, {3.8092099347496405`*^9, 3.8092099681704016`*^9}, {
   3.809210277886074*^9, 3.809210301304186*^9}, {3.809210465428677*^9, 
   3.809210474762639*^9}, {3.8092108165400534`*^9, 3.8092108184094815`*^9}, {
   3.809211094207759*^9, 3.80921125260073*^9}, {3.8092116815864315`*^9, 
   3.8092117012239575`*^9}, {3.8092118113112974`*^9, 3.8092118192785807`*^9}, 
   3.809211869435025*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8092634453105717`*^9, 3.8092634569095693`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8092634476183767`*^9, 3.809263457288557*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";", 
  RowBox[{"j", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"d", " ", "\[Lambda]", " ", 
    SubscriptBox["r", 
     RowBox[{"i", ",", "j"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.809211618884531*^9, 3.809211639909103*^9}, {
  3.8092117107498627`*^9, 3.809211711471368*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211643414005*^9, 3.8092117137178254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211761139476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8092102082236176`*^9, 3.8092102669801235`*^9}, {
  3.8092107810396194`*^9, 3.8092107906814437`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]]}], ")"}]}], "k"], "+", 
  FractionBox[
   RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]]}], ")"}]}], "k"]}]], "Output",
 CellChangeTimes->{{3.809210212527547*^9, 3.809210268359639*^9}, 
   3.809210326636525*^9, 3.809210791337959*^9, 3.8092108391044807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.809210808924116*^9, 3.8092108100342226`*^9}}],

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.8092108101126695`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearest neighbor terms", "Subsubsection",
 CellChangeTimes->{{3.8092101799460707`*^9, 3.809210187857538*^9}}],

Cell["\<\
Why do the out-of-plane modes become very subradiant near \[Lambda] = 0.7? \
\>", "Text",
 CellChangeTimes->{{3.8090163717964873`*^9, 3.809016405509801*^9}, {
  3.809210174024474*^9, 3.8092101763590636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.809111096728337*^9, 3.8091111044177866`*^9}}],

Cell["Nearest- and next-to-nearest coupling terms:", "Text",
 CellChangeTimes->{{3.809112029430625*^9, 3.8091120427181067`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"nn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "r"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8091084493923798`*^9, 3.8091084596836033`*^9}, {
  3.809111913701956*^9, 3.809111953093664*^9}, {3.8091120055235224`*^9, 
  3.8091120230815935`*^9}, {3.809112080125112*^9, 3.8091121685730877`*^9}, {
  3.8091240359275904`*^9, 3.809124039288148*^9}, {3.8091240986721497`*^9, 
  3.8091240998471107`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{" ", 
      SqrtBox["2"], " "}]], "-", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", 
        SqrtBox[
         SuperscriptBox["r", "2"]]}], "]"}]}], 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.809112172389885*^9, 3.809112182624524*^9}, {
  3.8091122215859585`*^9, 3.809112256766919*^9}}],

Cell[BoxData[
 RowBox[{"nnn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809112199488027*^9, 3.809112199978717*^9}, {
  3.8091240820834923`*^9, 3.8091240925447235`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"k", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8091122177472734`*^9, 3.809112217819027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["k", "2"], 
            SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"k", " ", "r"}]]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{" ", 
         SqrtBox["2"], " "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["2"], " ", "k", " ", "r"}], "]"}]}], 
        RowBox[{"8", " ", 
         SqrtBox["2"], " ", 
         SuperscriptBox["k", "2"], " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]"}]], ",", 
     FractionBox["1", 
      SuperscriptBox["r", "2"]], ",", 
     FractionBox["1", "r"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091122906347466`*^9, 3.809112304948306*^9}, 
   3.809124077553565*^9, 3.8091241845745373`*^9, {3.8091242400000844`*^9, 
   3.809124257370179*^9}, {3.809124336900578*^9, 3.8091243706520433`*^9}, {
   3.8091245132357197`*^9, 3.8091245221096497`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      SqrtBox["2"]]}], "r"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "r"}], "]"}], 
       SuperscriptBox["k", "2"]]}], "-", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"8", " ", 
       SqrtBox["2"], " ", 
       SuperscriptBox["k", "2"]}]]}], 
    SuperscriptBox["r", "3"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "r"}], "]"}], "k"]}], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"2", " ", "k", " ", "\[Pi]"}]]}], 
    SuperscriptBox["r", "2"]]}], 
  RowBox[{"4", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8091247248776445`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          SqrtBox["2"]]}], "r"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"+", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", "r"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"2", " ", "\[Pi]"}]]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "-", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]]}], 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "3"]}]]}], ")"}]}], "/.", 
    RowBox[{"r", "\[Rule]", " ", 
     RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "*)"}], 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["10", "6"]}], ",", "200000"}], "}"}]}]}], "]"}]}], \
"Input",
 CellChangeTimes->{{3.8091245307580967`*^9, 3.8091245402471695`*^9}, {
  3.8091246326837187`*^9, 3.8091246554452*^9}, {3.8091247065265865`*^9, 
  3.80912474984779*^9}, {3.8091252494226317`*^9, 3.809125372617504*^9}, {
  3.8091254211009035`*^9, 3.8091254694513535`*^9}, {3.809125532403105*^9, 
  3.809125599088233*^9}, {3.809125796202443*^9, 3.8091258194962254`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.999999981632653}, {-1000000, 200000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8091257220486727`*^9, {3.8091257976605463`*^9, 3.8091258209403515`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Im", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
          RowBox[{"GdotP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
        "]"}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "+", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "-", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "0.3", ",", "1.1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thin"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "200000"}], "}"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "5000"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Lattice period [\[Lambda]]\>\"", ",", 
       "\"\<|Re[\!\(\*SubscriptBox[\(P\), \
\(i\)]\).G.\!\(\*SubscriptBox[\(P\), \(j\)]\)]|\>\""}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N.N.\>\"", ",", "\"\<N.N.+N.N.N.\>\"", ",", " ", 
       "\"\<N.N.-N.N.N.\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Linblad Terms, Out-of-Plane Polarization\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.80912563767312*^9, 3.8091256386155987`*^9}, {
   3.8091256742883368`*^9, 3.8091257033477015`*^9}, {3.809125743972067*^9, 
   3.809125744924512*^9}, 3.8091257830246687`*^9, {3.8091258825104265`*^9, 
   3.809125949767537*^9}, {3.8091269875159197`*^9, 3.8091269908921394`*^9}, {
   3.809127203747385*^9, 3.809127301955798*^9}, {3.809127336476527*^9, 
   3.8091275306314206`*^9}, {3.8091276036351166`*^9, 3.809127634106783*^9}, {
   3.8091276943322644`*^9, 3.8091277096308575`*^9}, {3.8091277434098577`*^9, 
   3.809127806779765*^9}, {3.80912796682623*^9, 3.809127990772332*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1:eJwVl3lcTV8XxlNJkzTP8733nCIyC2UtJWlCGZKpiaiUokyF/EpkCEVIplRC
UZIMRUqKRt353iZNmiWUTL37/et+vp97zj57r/WsZ61t4rvbfbukhITEOykJ
if//7p3pNWfOHDbs2G61fNjcDH/dL3C0IfxukU7zF8L/sRS9HQj3SoxGDBBO
1H1+ZtP/n/e6l9FNOFdarSuG8IVtPdIthPsF765wCNuc4pVWEfY/NuNfxFw2
NGptt84gvLHhb+WzeWxY1+5GbSD88tLs7HArNlh1zhTkmplhpazsDMnFbJhp
NWuXOuFQN1bzfzZs0LcpaD1Em+GFlwLxQmRDAtzX5VBmuJVrcaDUlg03zhra
WhHOUNbyPWbPhs6xFuY5lhmeMHE8NGcFGzw0etu7mWao3qY3q9CJDdrlU1Nd
Ceu9jZ0X5sqGqKBfkhkMM6xdlyD4s4oN1krfd04irF/cci/SnQ3jPfqFu0zN
sN2+onLmOjb8tF57962JGa4/siqu0IMNS7UWp9GE7QTBF8I3ku/bdM89bGyG
VZM4H5hb2ODefvAB18gMx7tEaZle5Plj16wWEs7+vL9yqy8bjJ0vrz5naIYT
rxSc6d7GhmnO044PGZihICD+RtYOcv54s0XLCC9XyWjeFMiGMx4z+Cn6Zui9
06e4dRcbqqyFqX/0zPBba37Ptd1s6Hpcw11NeLbc3Sdme8h60nE2ubpmqDip
LScrnA26rNirqoS9qPzvW/ez4Yh236YdOiSeP5iiroNsuLhtaEOFthnyOy0m
Z0Sx4a5VRZ4O4b4HUSHrj7IhrD/iV4iWGT4wCQ4RHmPDTYff8XWaZtjx7NvL
xFhyvo4JO00Jvx/XzTI4QfLdrZYUrWGGjvqnSq/Fs6FGYseLT+okXhvPTV19
hg3U6FTGPMI9DvNm8RLY4JMy3pGkZoayHmHHEy+wofRwXFOHqhmyNVYeML7I
BsefAfOWEl54f8/V28ls6HPuOHtLxQx1vKfLel4l+nhUNWVY2QzTy09qtF1j
w6UM278rCd9zORR6+wYbmmus5W5MIfu5lz+25jYbLGUXqwwpmeGlgrMmgjts
OPVo8wVXwhvb/yYnZrIhu2CF6fXJJJ8lSg8M77GhdfnLWT8VSXz27hi4/oAN
BvxRx/WEt6xYf3jNQzZsm3Fie6aCGZ6r7nwgymXD/oV/FSQJL9qjYHYln+jh
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
7zCNYYMeDfFXuFAv5ZKkRtjERf6d/TXyve44b/MoGg97btnAvs4Fq4v3162M
pDHc+qf22ltcyDLxgf2HSH7QnFa4w4XzLdfPnD1I44Qfv9hJGVzoTSjRyD9A
4+UPvrXuWUTPM02GyvfTWBmhOir9gAv/rpoXNu4j/ane99XJHC4MPHxTK0n4
t4sj2zaX6Pvyf8aaEaQ/HKiPq33MhURZ1xqrcNJfDt3c6VrAhesujyO99hK/
vi59RfIZFyr3nXLdu4fsL1TeP/4FF75/5SYkhxG/25Z5bHkxWX9CZ2tmKI0n
ZpyqGnlN1hsIt3i5m0b5LKUnB0q5kGaa9Kc5hPi7nXnvzHJSHzGN5V+CSfzO
drx6UcGFatsdhsqEP47N+3ToAxdKEuS3GOwi8+TiulkzariwkW+SOiOIzM8W
cib5dVzQkPl3dFUgmbdAuCWkgQsG5eJZWwKIXiWdFv7mcGHvUv+kQztpPJ8i
aRfJ54LZwzkKqTtonLPWLWWWiPjZGteF9/1p/K8Yzz9v5MKab+stKrfT6LTi
HXt/C9GP27TShm005mQl2Zu3ceHN3nfbP/mRee7ZhPXZHVzYc2Jlx7gvmad6
Jz7Z/pkLE7X/9ssTPlR1P3eohwuhlcVilg9Z77/L4pB+LvD4CYPLvEl/36i7
lvGFnKfYfu9qL+LPbTZB975yIeLmh29BW8n5To/Wbf9O9NyNDXu30KjS6cb+
NsKF8uhPhac30/hO7bt0xBgXpryUf393E40//CxiLf5wYcjT2yh3I431fhPT
Cv5xQVdBPqnSk/Sv4+GTIybw4K/+0QU1G8j9IWraXVqaB/tfXP7H9SD+YBrT
8kCGB7cnfR0bXE9jWW/odn85HjhtW6v4fR3xM9/x+GEFHqhdTN4qR7j1Ebcx
TIn8X1nYa7qWxgJD28O0Cg+w50S42RrSD21WFT1U48Gp6W1rl7jTOOvw8Ipd
mjzIOqhkiG7EjxObpAx0eDC/5rfW8tU0ym0I2HJTjweNcp+Pbl5F/H3JaekN
hjwQji97unUljdO4rk5txjyosY3xD3OlUeFsZlMagwdLwtvqdrsQvek63FxP
8UCJkRa2x5mcx+PkuNiMBy3KMzOOO5F+9NQr5/I0Hvh49+6LdaQx9S1/jDmD
B0+7E7uSVpDzZV0Oz5hJ9i8jzrzrQOotZ8B68xwerK0v681cTvqRb8edjnk8
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
AYyzeBw=
         "]], 
        LineBox[CompressedData["
1:eJwU13c8lW8bAHCjkOxk73POc0JGQprXXWSHbA1ERotS/IoyUioqitISJZUV
SqSorPZEFGcfpcgsTfRe718+3885znOPaz36IdGeYWIiIiKb5ERE/v/3xN6B
8ANjPdBeG/BW+f0I3FKLVj6FfjnX46LpDBHSlCavkI8Wf2xrTU8XI23fK2YW
o++WfPHL3TGNCEI8JG+h6Yt2MWb8nU5G34yINaDfi/nWDttJEhE4MfUIXdBJ
dKaCpYhC+bw/b9CPg1+WR6yZQfQ028a70Rr56eE1NtLE7EjMaC96dRH32mLR
mWTZT6XBIXSMikVdT+1M4hZ26/MvdOhUd+XBIBkS2O7VK/atB6KEHe/3/ZEh
25Z/58qg23eKdB1LlyVHta269NCZ0w3SojLlyIWMd21GaAvK8OQGCXlS+jv2
lSXarubSfy/i5MmzdzWtjuhWzgtLb5oC+WDr1+iJfqnanHzaS4F8rvpZvw69
Z7rc2bIUBSJ53KZ6O1rH0OS77HsFojLxviIe/e1K7rzrIoqE2ryn9ABatlPv
422mIrGzv3v5DNon3MUwb4ci2T+1+MRD9PV3Yl3aPxXJya2so8/QrIEzISOz
lcil7r2HO9D9/rddWPOVyMOahqTP6NmdBmnztymRqSiIUvjeA4tT/WkKXUpE
js3dpIE+LuX899OwEtF2SQ6jo+0X7DJlSs0iS5iN62zQ5dd2KPyznkXiuStc
gtE706U2Vh+fRcbd7edUotNfK7SvNVIm6Srak3fRqxvzPzcuVSZ67G9vW9Fr
S8byn3soE+fNlxJ60CZzaLZdscqk4MDEK4nxHhjkz5al1ePndTdj16P1nduK
axfPJrykI86RaPYBY4tzzrNJrH2w7k70S3qIhn3AbFLQLvv0MBriT1MicbPJ
+GCkVjVazCTzEL0cPzfQbZb+0QOvFi/rWzpLhVh/Gc+djV7aLzNrta4KeV7x
Yqse+lvPEgtirEJ+LIlXsUZ7pTmfvr1Chbj4vdu0AT1K8pKVtuPnGRkKd9Bd
qovCTFrx8/Gf68N+9kDIg2l11etUScEypz3RaKtWRwnhRlXy/dC5nD3ogJdR
NSLbVMkFjaXPj6FNtfc6zdynSr7Cfpsa9Iif3dyNF1TJ0XSZWZK/ML7/Ozrg
916VvNDVf3IdfcXo8MhlezWitylGeBNtFv8kiVqlRnbdbJ6qR2c2XEzJ91Ij
WivDrd6ix4RLNsYEq5Gtm0sv/0aHirywzN+jRmRuW+1z/o3rMQvLMytRI6uc
nS2+ouvDdzh9mqZOqK9vqZ/o6qIPCc3S6kTkeICm2J8e+LJcRfeMgjqpfhs5
TQ391G1UY46WOtEKONRpi3ZUiT340UKdfI1oiT+P/q5069WXQHWSfnBZs/Pf
HmioG+cUVqmTjcxHtT7oUM9qpzM16mTZ01VlweiveutPp91TJ2My60/FoW+0
uCqublUna3ISIi6j62YO0fPfqxPDwjsz/6DP/jneaTylTp48tPAunuiBCyMS
JYErNcivlJ2zq9Gie4/czXHSIIa21Z330VW+VwIfrdIg6a1WAR3ol5v2p2n5
ahCXZzaB/9DbZ7d6nArXIK/al0X6TPbAbs5fn4dpGqT9k/Ne0akeONLzw2N+
iwbhyIReCfjXA4LdM7eLW2mSlx46ZaFoVfc/Wro2mqQ+58OtbWipbarBNos1
yTktj+YU9NzjjbWhyzWJ79ylgmL0EdfFsy6u0iSvXFT1/qBn3hTPvhKmSR6k
Pz9/ToQFrkd4n+RzNEmBlGV2jygLgmQf5ogPaBIW4/zr7GksaFoofybhhBZp
Hrtcoi3Jgm+h1nMKVbUJnU/a2TNY8PXwVZ3EXG2iV0QZnZBhwTnfS0r6kjrk
iVq5roo8C+QgqNspTId8KX8a8laRBTvdfHU3NemQmrE0u0BlFsTe/7PaUUmX
6Mge9eaosGDj3t6C4TW6RMSJeTNHnQUN/znGuFzRJcctQ29oabFgnsc8Oade
XXJqudWvbh0WeJCcXRVKemQB3X37UX0WXEr3e1JnrkcO1sw4JE9nQW5j9JZF
Lnpk1eY1A08oFtis9yN7w/XIw5cuQ16GLKA0Dk4rS9QjryUO6rYZs2CVFKff
/ZQe8dvgfTHNlAWn/dfrPy3TIxlbWu7JzGNB/9H/HB406hGb3GfU0/kscDZe
332oS4+ciNlh7mfNAnOfMr7cAD6fFhz53oYFP9TN1iRN6pFv472DmYtZkP3N
W6ZFQZ/I7pZWUl/GgimJxVOaBvqkQPNR6nvCAoVOF+ZyS33yKucpLcOWBR93
tN3etVKfXG/YFiJvz4JHl5aGTnrrkwnJ60NPHfFzEq3rHoYWTVX3dWGBrer2
v8q79Enu26KYd6tY0Hbaoo25X5+UNgWqZ3iwwD9n2Z/JLH2yJfROoJIXC75M
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
0A9jNR4LIN/T78t5N8iGykEJ+5AHTPLDn926dgj9fV3/rI/3mWTuN9v/jr9D
va7K3uuO/PLc8XcDw6i/WWrjjfeY5EjU7w7lETYs0zTX1Uf+tD3H2fsDG3a0
EMHyu0wiYbNQ4MFHNuhSHsPSyNIXnobP/ox+aFwad6YB6+Wr83LvL+gn4y+0
x+uZxEt1ltvdrxjPLINd25CbHs/s/MtiQ69G/96uOib5uL81ZSsH9XJFf88a
5IHA4eSrXDzf9gPry2qxfjwUmMM87PdXFKsVkBW2Uh8MR9FP0u7Mj61hkuBb
JwIjxthQEfDdeuoO9gvpPNrbcaz3/Nv+nsi+vl/36X3DfpipLd1azSTyolGx
R7+jfk6crV+LnNw20vJiEuPfJ6N29Tbm5/XFV0t+Yn4rdbLEkN/+llwUMoXz
94mx9sNV6BciNQPPf2E/axJNfVOJfre/9JjUb5yX0pV32yA/HNltdOgPG750
27MrKpjk963gzrq/bBD+ZxytiDzHv2hqagb7qzrjXsotJnmqlb/JRYADPstZ
mZM38byOo3suz+LAor60DB/kh9HClT9nc+DCNj/t1huYjxzzZIc5HPgr5+K7
Cvm9RLfxBSEOnJtf05ZVjv5wSUV8dC4HYtTj7sxcZ5KVh7uqdUU4sNy14tVe
5BijrNHgeRx4rFif/+Yak+RI6jh2zufA+u2P2CbI58yXRYsv5ICN7pHD5WVM
svb0s9eBiziwQ2DTgUXId+U7BWoXc0Cn9XFFSCnq/+r3Bz9FOfBl07f8zyVM
IqP7ucBZHPefzPxhgTyluMLtsgQHAq/uv3q7mEksm3sesyU58GfHsealyJfk
9VZPIbcsuJ4rgSw4x7fIUZoDx7PSNx0uwvnK/MvnVBkOxP/JdB0uxPpNXW0/
voQD7X8+XgfkZUbdsWuWcUD359a9ZQV4vo6UzcdkOdArXfRBGlk2SN76hRzG
a8Qt9Ug+k9jvmxKVUeBAqTjn7rs8JjENyf19eDkHVoTfFF2HLBAYENGhyIHf
EauWXLnKJBfvx3QvVuaA2rySImHkL/L7Nu2lccBpwU/73blMItqTf76CzoFL
6oHxHTmY36N/D44yOJD+ZCraALlmBf3YJibmz3FjQvoVJjFZnWGTqMKB8cU5
6v+ycd62G7Bkr+BAmuDm51uRcx7tldJW5UDOv21LH2WhnhWVjwWpceDf7xCm
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
hgiW6Us5CR28z8LiEh9Z9RL/B+4vOTA=
         "]], 
        LineBox[CompressedData["
1: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
l5GwBTToWBo3GWcxpNQ+TT51IQ2bsi8PDaP7heUSqxbR8OHz+fYL2QzRtuWN
HxCiwXbrCtXVF/H8JKjWOClMg8pmE8Hv6FcqEsGqojT0HPy+9WQOPn/Hl7DV
YjTMPqcZvPQSvp+Pu8ysxGmIM26V60KLLD1pvk+CBu4iee2oXOzv94Q+xErS
UOnb0qGVxxDHb+KHi6RoYB6Irn+Pvvqt4UOTNA2LdGdUDl3G+XmnduadDA0n
DOxTNa5gPtxV4J2Wxe/z2ejdhJZLsRoQlKeh+kQnr/9VrN8ym3JxBRq+GzYY
yVxjyN3GFWt1FfH+RLzay9Gvh/e9NVai4cA+zzl++QyRedM546JMQ+cM/4WF
13Hel1+x8VOhISdm3dQt9P0Y7uVgFg1PUj5xtxdgPMtLXZLZNLx+qmH7D30l
NSowg6JhbdwbcrsQzxszubV3aRqkV0hMOd9gSOilxyINqjS8k5lSmkInZI73
N6nRMBGzvvNGEfaPU01t/ep4f9LG49Y3GXJU7+WO7xo0hFx+0juMPvSQT/S7
Jn7//WLXrFs4L3Lvl80spmFqdJ2p8W3cn8Jc6FlaNIj/Z1z5A62/86qH1FLM
hwMNs84XY38x/Valpk3DtNv0rRV38H2Pe4rROjQ8e3lmeAAt/GvDAsNlNIQH
vM04cZchFgtSxQyW05A+U8SneY8hygfV/LR1aRCU7V/Yie7VDjc21qMhyL3u
UHgJ7lu/Vlka6dOwTHvhYbVSPH8KipdYGGB+aEz1v0CLCVD+poY0/JQ5LLvn
Pp63NIUTVxnR4J3u9Um6jCHJjbPema+g4bHBT5H/0OzyhKtkJQ2RXl/b/R4w
ZFfP7zirVfg+jvl7ST1kSF5pdNXm1TQUvb6w7SHawNnn4npjGqRuLP288xE+
j4uMn70JDQE3/dr5yxky/V7spwWhQfOqUVohunf6zz8joMGc8u9z/I8hEg4T
r43X0GD90uL8BNpWbV6Kzloa7vEe/3K9AvftHUs4ButoiFq6Y3JzJeZHbHWT
oSkN+nGdEWPojbbnHqia0WDp+TDpchXOh4LHtIY52n/NXLNq7N/cDWUyFjQU
/NMW/YWe459XpLAe7y/+zlBeDZ5X4jW15TfQoLDynea6xwwx78uenm9Jw5Kw
Xf+46DVz7gjyb6SB7rm4IrMWf08/MOI3+tiqnaD/hCEnBb/k9FrRYKqS8f4T
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
o2NmBMLH0f8D/RYr8w==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
1Ns=
         "]], 
        LineBox[CompressedData["
1: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
8TaYotV00rpGlzEhSLFSoU0a66dCttd6BSZUUH7q+6FXyB5fen05E6Ksc/2n
pejk5bSP2/AKJrSycqLi0bC+LFhPkQmyvI/YquigqLqnyUpMMB3q3PufJNYn
TUr9l1VMeLFstaI12q2qxE9OhQnZMuyGfgnsv66zhsdVmZApEn72BNp3d3bb
IwoT7JVm4hahr3mIpknTmHCgaSAjXRzn112Zg350JjicmbxMR++9Hb6sdDUT
jm7/21+9BOcJPnXfRepMsDPu0N6GtnxKi7bTYELIeE1/vxideIf//XBfkwnb
J5QvHUPvWNNVLLyGCfX5rhLzi+lExlBup402E4I/PRBNQV/dvlKtWIcJ7++z
f61Cs+sC3w/qMuGGnpPJY1E6EVYcEtDRY0JuVm+sDZoTZ+AVr88Ei9//7n0V
oZNM+6aUj+uYUCWpYn8ULUbV/rXGkAkBkc6vJhfRiS3r0dfo9Uz44W5Nj0K7
z8WlNm5gwn+7AmSWo/Vommdom5hgO8LTWCCM/bpgpeYRIyYwRDmiG9H2UnpB
dzcz4ePO75YfhejkXKI0R5Aw4dfTr6Z70bEeZnQrY4zXVRKf/y6kk21bjRML
TZhwkvN6+Rk050LC67+mTNjMZPGIou3vzl7RNmPClOm3vmxBOglkGEbFmzPB
YKztqBr62MlXVp8s8HmRunnPBbCeyijo61gyoe3U+Ckz9N2clMexVhiPFhTz
j/x0svDCgYUfrDE+UsbeuKMVT4+Hq9ky4dvqQ90DC7Cfvvr2+tg23I/U47uh
6LdTrFtldkzw9e84uwRNTJ4XimxnQrOf/I90Puz3vb2hdg6Yr5H686vR15Nb
gkp3MOHzuca8B7xYDzTYwgudmODi/tZiI1pR0ebwVmcmuBUyn7znwfNQDh3J
38mER0fu5zii34XNWP3chfdr1bqbMU8jX1/mrF/twoSl9u0rT6Hz5cXtzu9h
gpn+6Pa5ORoxa2he+2YvE6qPnna9jL4V7QKq+5kg8uhQizT6S7a+/GFXJjww
FqLcmqWRjly9+JIDTHD23Bm1Fp3635zqQncmSO7z21I5QyNqissSrD2Y0PPT
dmArOiRjTqHkIBPeuOoyPkzTyHUeIRN+L4ynv7ZcR3RClZuBuTcTFo7e7Ouf
opHNCZd23PJhwrqYGWVf9OuH05u5vrifxs6945M0suz1tVr6YSZcCrl07yJa
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
iivIhjWSGwocCY2Y3GrnMRNiQ9IzvkPJQCNOvK8vxQizgTM4/qtzM41Qjp1d
y13EhgObSn5Io+sa9gWZiLLh4oKGVQ5GNKIfEh97YTEb0scb197chOdvdOlV
rxgbbsjE53/eiPPtzo8faOJs0DXQ+r0CDXs3H/WWYMNprbUpPhvwvAKC9Osk
2WDUbxV3az0+7wfPewFpNtz3fOQzYEgju/Y5xRyUYYPwjtBLKmjLNx++P5dl
wy77f7P7DTA+olJ55+TY0DN5369gHY1c3aVm47KMDfXb4xf16GO+Rop5Zcuz
YWViRQEFzff8xZ15BTYs01H22qNHI8yepPDdK9jQ0NJ5/tpazM99/1FurmRD
RAz/g05dnA8H8kYmFdnA5zv0Wxx94GNvElnFBrncCBNHHaxHOVteRyizwVqo
TvCGNo3YRx5X+qbCBj3j/IZPa2hkpmLQSonChnuZvP/JoD0XbLh5lsqGsGjO
ZUstzBeDggsdNDYcX1bYGqFJI0UvD26SX82GjY7r7F9r0MjxA7/lg9TYoHny
RsmkOs5XTm/ePldng+9JeYuN6HC9l4tnNNhwSFNoX4Qa5qNqXLCzFhsWKASQ
R6uxnvjd+u/6Gjbs8Jw/MUHH95nXl2T/aePn5nVeq9FjgZUWoMuGh7cly31o
eP8SkuIRa9nQdPFOWAkV++8LvfkuPTb8N/xx/DsFv19b8EJpHRtkL3zoWIGW
/MzMizBgw5mS/t22qthv2y0UOw3ZkFWn7xShQiN9GlOHlm/A9RquaKxRxvnt
WtD34I1s2Jnx893gKuyfjmaKNZvYoC//yU4LHTO/7t+8ERvWFU3t91eikcnK
kQkXwPMZ0eJmK2L8NPHUZxE28EyNC3SvxPo83PF81pgNXhbyiSJoCd52S2dT
Nly77p65aQXO096r7qRtwf1pbLALWY7vIz8MV4+asaFPa9KlSIFGtpfmhKy3
YMPPfLYkUx7nfR8Nz9Nb2XBSZaObKlp+7fnAFks2KHfumXBYhvOKk5qTjDUb
rMh+q8SlOM/F3Nxzwgbj74DV50o5Glkr7apTacuGKLcvtFFZfP+MNcua2saG
hf/aZHTQfeITOs72uN+HLmr7ZGjk6N9/1zK2Y/y0H5NJk8Z5vPv1yikHNmyg
DsnVSNHI+6ePYYcjG6rbk8t+SdLI058Ta1Kc2NCfZKBDQ7tp8lsMO7OhxdPi
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
n1r60f8B5yNkWA==
         "]], 
        LineBox[CompressedData["
1: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
ocevW3izGsgYpfbW6m6iIceBRav0RjL2X282F7aZhjrZdvPEfCJjp8ex1l1b
aIho3hR3vRn60R2BUAkNGrqpXT8Q3UrGORmeDaGa8D7XeiPT2iGfY0aL27Vo
6A97zdmMDugXdcXuwto0pKT+eE1EFxnPiO3YfnIbDW0IWrM3uoeMH9ao0Mt0
aGjcPTzGrY+MN9lt3TyrS0O79vxu3NYPz/NnzS1rfRoyNI4z0hgk4wvzWz6n
GNDQ1ZJ/ZjxDZOzASdb4aUhDl56fElo1AvXs4+6qgyEfEvXe941Cvrz6oBi2
nYbSQ7yGcsfhfDYsiHQZ0ZD+EUXttO/Qv7vC2iVMaOiUTKqYyw+IX1bd87Ad
NNQqHVVnTYX82r91c8dOGvrSNFGnSSfjCJfZUFFTGjpvWjw1wyDje2ejJgN3
QzzvTR7rmyLjrF+OypVmNNSdF3bw9k8y9t7ruGLBnIbCMuLQ3t/Qv9/J/9u3
h4ZmBidmN86SsWXC9k/plnD+UylVY3Nk7HlUoXrOioZWvDgyVfUfnJ/SFnNr
GxpqDIpkS/wD/XbH5dxrtjQk9drzud4SGcedfCLP2EtD/Y+cHdb8I+OuGcpp
jf1wPl77pyrYCPzL/Y1TgB0N+b8RXzq8ksBNY2TfTwdoyGHCMpa8isBnXvWY
8dlDv9hufLGBg8CT9w9a+TrQ0JOxovxELgKrjiuSSw/R0Mvg/Vc0eQhswL8h
8bcjDQWuf6HauprAqy36ZaydaGjM4FVIAi+BH32lnkt1pqFoQdo6pXUEXhtT
x/37CNRDUP/PcT4C6wq9V9jjSkN+HQ8j0gXgegtColfdaKj4vGO3ihCBl6ZV
VWjuNNRyM4v/qzCBU7an86kfo6F1b444B4oSeDZc/vJJD6jH+B0DS2IEFq2P
VP3kCfkr5N+St57AvN5Kd/m84fs15vs0JAn8ZkOm9onjNHTMhjkzIEVg9Gqr
R50PDfE2pT89K03gtGcyx7hOQH78ED6zQpbA+RWfL7v50ZBITfBijhyBr4n3
nMv3p6H80i8f5ckE1o7Pu80dQEOTYU4LDQSBC0duWbkG0tDlpadRLvIQ79TB
tvtBNKS5hq+9X4HA/x2gh60Mhny8/kUyWInAnQEWv0xPw/mUNvj8VCbw2ZCW
lRdDaGiLw9vkoxsJPJa4QWcslIY4Z3qtZ1UJLLv00lAxnIa+3c+54L2JwOsj
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
R8VhMyGer+D9OhdsRCXpqCHy9Tq71wQ+z1eS6yBFR1+mvvxQr4L6c9gqW7mB
jvyVkJXcGwI/SRrYIiRDR/PP5o6trobvS3cK7pelo3BN2sIIWOj1DYlncnTE
jEj4/qmGwKElhdNzJDpK+RHn8+At9OPUYWdtgo6or0T7w94R+Hbc6O9rFDqa
qrocdKSWwK6tWvad8nTE7XqtV+s9gceV945pKNKRi5MWlqqDePqnciYo0RE9
vjR2CXxorfz8J2WIn0rQp+Z6Ahu+jOZX2khHtfy8408aCDxXvWneV5WOyoq+
rj//gcC+3XmczWoQ39S5/442wvv0GBcpbKajrhSdNuOPBP6wZbOc9xY6QsV+
8wKfCHw34/urenU6suVbzJgCmx9mKqzTpKO+p/8VvGmCeuGRVLbUoqP89TJj
F5sJvFAnsLdgK1yv4oivewuBOfsPmtO16cirzSp5Uyv0kxXHvS106ChbXHV4
dRuBjwpmy+bq0tG1gkXrYXBbmMKDb3p0pBCilpjfDtf7FWJrbEBHr6/yNkR+
hn2sVqI53hDiPVw9sauDwO/PDQ3VIzqyyLI9vKYT+tuekxKk7XSkVzuVMwh+
dNKWfNSIjkbvvvqb0wXv9+Cv7TtjOqrf8YLrdDfsDxp/bFbvgPN58A3p9xA4
7KHkhNlOOgqJ8h5eBM9qcOU+2AXfD9LkaOolsKmw8RaqKeTH/Ku4xD4CH+Aw
GzMzo6M9rSYezl8IrDEcpHbfHPKN5PFApR/OT3hq1zcLOrqlbx7wA7zPfmu8
sSUdbZTdGlA2QOCbM59uXLSiozH9GdFTg5AfERcMP1jTkUF6sNmmr7APCq/l
JWzp6NutxPh5sOyq0XyPvXTU+MIsvWSIwNGrYnzq9tHRnPmVpDPDUN9M03pp
OzriP0ZaazxC4HJ1p2nnA3TEULkXvwAOjTM0enUQvr9G/l31KOxv6n6uKxzo
6CjtrVDoGIGPMbwLXA7R0RHGlxV4nMDxaZcuvHSEev88Fr/yG9RX6oLm38N0
VBOYbFsO1rqvxePoTEd1Dl+Twr4TuHpNTVHOETpyVb6ruHkC6tfJ//uICx1J
9tHjhsFqNZOmhm50VMnlr579g7UPPw+NdofrHxlx2TtJ4Jpd5m3DR+lI/7ls
lRAV9vW/q6p1PSA/flK7WsDRvHxnIzzpqDnpVuZZGuxDKmOuvV505E29elyP
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
seEFAwlz3g+QcoL99LnRMccKBiql/e3bDz7XQsSWVTJQyb+s1hRw5PYDgf+9
ZKDfS9iqCaxXuy/+wGsGGmhfZ7HGGX6PZeb4ZFYx0L+k9i8mYFV34YnBNwwk
v074bwR4t67NJd0aBjL0MUqoAOt5Dv45+xbu90Kteho8+WBr6uA7Bqq4wmWj
doSCj7U+e6f9noE6tfT8vMAvbCLfhtYx0HDBjp1Z4PpR0YmueuhvM3UeX8BF
TX/7pT4wUFP0sLmgCwU756z2cmxkIAPX/tZd4OYLw5LlHxloRaNnYhRY6D13
5sInBtr69KdsOVhE6M9O+2YGklhrPzAFHjcXuPC0hYGkz6VoKblS8OX+09d/
tsJ8aIg8dRhMP1PwybId5rujWlMamHJapT3lM7zfnQ2ijWCJqJC/vzqg3n5t
8VzpRsEDp37U7OmC/N2x2kkHfOpt4b6kbgYKZK844ANulNFex+iB+a6UZHoP
PNMhdEOzj4HEFV7v7AIzgoTLg74wUHzkoz9c7hR8jzK01NIPjth/3QCsprYo
JDwI++VdXWs/cPCuUevArww0ohA9fB+cYM4gPg3BvlSbSfSCQ/J2N6wdgfo7
oHaT5yj8fhD2T/YeZaBcpfDPBuDMnm8qT8YY6M36i6YnwJMXohyZ4wxE/cUd
fQf8a9f3kt3fIT68yv6t4HbnO30JE7CP5t8o/Af2jZdWpP5gIO6B65fVj0G9
cE+ZqFOh3upJb13AG4LG5wNoDGQ0nVR7Fbx+KvdzMx3qWTzRsQY8+a7sjBAT
6tnr4iEmOCQ/2TJwCub1mvUjsh7Qr04nl32aZqAusYpNNmDOuyP0db8YyPaF
yOwZ8O+uJXOf3zC/N7aqF4NfHPMKfTbDQFx7D073gc2G5w1+zsL17wpd5PSk
4Js+e5X2zMM+ciA8TgtcZfV3NOk/uL5to6gL+K5x0HvmAgMpvVz77yrYkrTO
0HSRgcZ76l6+Bn8+OB97cYmBOtY1SU2ARbIe/R7/y0ChTiO1Il4UvBGVqKuw
MdFtT0UJDBb40M/lvYKJjk083O8FLnFrY69dyUQVlV/q08AqdqItnKuYqPQH
23wV2Nlevsadg4ncFx1sqGCv0rjoh5xMZJ0ddVLYm4K3L6z+QuViIhrn0ll9
cJe1g8MuHib6sNMl14P1+b//8i+vZqIzd9G9q2DPKndp6hom4lbNKaoEH/b8
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
v0dmrOen5/RaFHfYUSQ7fsDtEny+mu8hmz3yRdm6nmPwUZ/fhdfh9rsMMzu4
aYmPv6ED+gXPf8v14FCmRQMFc8ecsZaCpVPfRSY4ol5dXoTMeaFfn6hp37QX
r3955QTreXCo1abJIbid3amjEm7Z4RFy0Yki77JknmbDwV3jSRudKfLQrW84
FF6StErkC5zm9Ep+H7zgbe3K//ZRJNNsOIXA7jwUz0YXigTY1h6XhgsPPLPo
guuXn/WaO4T1YzW7MmY/Reb1tCZ3wd9duz3XuVLk7JFFbRVwl7d10CtYJuhf
dCaszq4sdtKNItF7xXxC4KNVRXIy7liv/pf8WM/bl3JfqmiBFf8mpGrDUgYC
jOAD2C/czmmKwvz5quMSHhRZbR48M+HJYDqlPbJthOP4vb68hdMe/JA9fBD9
p8lsuATeWJ/7YJEnnDITksCyy6svj+HgKi9pH3jFykxf+0NYrzzSE+aw39HW
pIVeFJlNnfi4Cr5JFcoWwgbp/yZ4YKazVJDFYYrYNxdc7juIfrKbdpmGyxt3
bKyBZUIO38/0pkjTNh+FbNhlpWW6hQ9F7tr84g6GFzXWmE3B55IPeNrCVy99
dsvwpcgGvzYJdThpyElomx9FlK5tqVwM+/tEKQ7D170jSwc9GMyHfUbcF/3x
+674qTXAdn1ux3UDKDL/pVX6dbhfcJ11F1wwJud0Gn733LEmJhD7b48/hx28
0kd6WusI1otIwzp12N0o8ko7bCPj8VQA5rhm0xp5FOtry3algQPYr1a/9FY6
hnxBTGeew356uZmf4EXi4tmZcKXR0rTIIIqUbmxuOQZPHFszs/I48qXdZ9+d
cIxa7tgHeGR/RvtqmE/i5fbgE9iPBU+UccO/J8OCJYIpohJZrtLjjv7jeEWr
AeZPfupaBnsNOzseCkG+lfshlgxP80SLSJxEXmsMPucFjy41Tq2DI7I+nTWC
327PDfc4RRHL3ZGLZOAlIn4coqHoJx6XDCbcGEx9zp6fj+FF6jd5WH/f86r/
W/qe0+gPXF0e+XCVjflX7jCKLDMo8g6D04YdL+bCcwZ7F9nDb/nbWnadocho
ho+JKhyg2PmJ4yxFIpeJS86HZz1iLG7AFzzvxH91ZTB/qF2z2RGOeUHqYfpD
+ImS87NxOOGnybY4eDjv7Isb55Dn5qTPu8GR0tpJ2yOwXiLNXHRh3qqUhlE4
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
hVPN3hYbwP8DZpcFgg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
XnL9Z+/9sT8o45XFkeuY1322ETh2awr9D/EcfJc=
         "]], 
        LineBox[CompressedData["
1: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
ezcwLNTU2EBFy0dz9jPsZ7TmoPZGCmToLy8zPDB6yuYw+iP3JNNRtPb1Sk8j
9IjuD2aGud7cyLBBR00WsjGcspVtkzta1t5oI8MNw5zDcehnPjNCDAv6898a
Rd+psD3A8HXeK8+o6IMb5lUZ/pn7tWQcvaEmQZ3h/MGEyXmG/T9rrn6+rsDx
jZvw/VO8egy7bxJR2I9+skvanOGSDELnLTTnR2dXhptafnZGoXcy5box3P83
9es9NGvr+FmG/xkIdT9BSy1f8mBY8zd37yt0T6rtJYbL9y1872G8vpIfwHDb
yY9DA+ih9JarDA/d8v4xjD7TRvuP4TV9v4fp6PYCkev/X6+RUSZuCqi0utxg
uLquiSaN1uYNusNw58Rtujz6E79f5OrzCxweU0azPT0fxTCrR8Xvg+hlTfNo
hg9xf5g0Q9+rX7jHcL1t8l8/tPNU1yOGe4Lt566hy8wzHzNMzhGYD0HT9l1J
ZJjjX9xCJPrlPY6nDBum3vqXgp6O5k9huJlyiaUBHZr6NoNhMfjs2YIujT73
nGHvePHBL+gXcSKZq/sJXwoG0an917IYdolXuTCN/ntZIJfhQkpk3zy6ZWPh
qrlgVH8Ffazc+gXDbyn3d3LyUCD6dHgew0zwt0cU7fW6+iXDlvGmhyTRkwtG
rxh+Tsl8K4uWPNaxauN427t70fl2na8Zfkwp1DmCNjjx/i3DxPhzIjboE6fi
3zFM0tw+74g2LnF9z7BK/H/5PuhaH9oHhns15W8Ho826Ej8yHEwZcI5EF0cS
CxiWjr+r+QDN/vjbqls0QeAZ+sCyS+Hq+lDG/7xAGxWSV709PqXlI/pQo0MR
w5Wa5tmVaCmVhlW7UdaENqN//yEUM8wcX/17Dq1iq1DCcKLmTTsJXgoc3RWw
asXpPYNG6JPPtq26OnvI6Qr66lP+1fffXbs/4zYaq+Pq9W1PRpGeoslCF1bv
51NkAXsW2leAtnr/4kUjMm/QZr9PrHqMX82jFj0iJrn6/BbaZ6La0CmB/qvr
U3AxJr8XnfOuanX9Qj7/mvjNcLbq/9f3Lw/vPPqZ25nV9TeS1NjDwkcB+kr4
G4a3BMVd2Yr2/Zi7un/1W2TChdB3IxVWfTWvNGEHuqg7f3X/h3opH3ehLdoy
8xnO2UtcAHS44dXV+AEaPdANze+ctRqPKvnCS+fRTI+mV+NV9pKJvxc6/ovG
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
eH7RNjlDV5Emrl2JdSaNYL/i1DJsQ4tc6nwiM4r9v/Ul6T165s+PpfBf+Lpr
iPAj9LMWkGsmUUCc5Rd3IFo4vmKKi4L3J+rp7Iy2OrdxyJVKAYVBHd1D6FMP
c5/k0jC/U5zpsuhd3XxBnGM4j3JeF9yArmJKWXD6TYF/5TfTx/fg/BPyn276
OAVCdLpWvqCP80u8Z5rE+bqxtus9w8vbZ/SmKJDcwhP6CC3zZX9T6B8KLHh5
PbiGflcg8nlwmgKd++yFTqL5Z60f7JjF6zMdC9ZmXF/X9s71vzhfE2NMd6Il
qDkmtXP4fvE5Zjb0aMCObLYFCjSEaIhRlKWJTkLOsk6LFFivFv2kAf1+80zA
8yWch/P7171A14haTLEuYz2p/9ZwB53G/4Xp5Ar2l33eU+7oo6fSB1OYqCDV
xsdvgq4rJY78W0MF8tvZYHn0Bm/5jzosVPjkuDi2Eb2DX1P8xloqlMZ2fZ5Q
wv5fLfBugJUKrsF1lFb0o2a9zTvWUUEyKp37NXrp18Gn19mp4HFa9VI0Wp52
tKSbgwouF53hAlrlcFXOtvVUCI+9IWqKnns7X+bNRYVfWmMK8uhYv6D0wg1U
kOg9a70BTTLueCmwiQoKN6qeURWlies36lt4cVOh417IqXo0q9TG6vc8VHjf
e0ErC11skmzPx4f3W/lRIwx9uDWo2o6fCnkbLR1Po1PVwqsebabCow1Jyzro
gg82lOktVOAlrH0phs6I8B08sI0K22YfRK/sliaaXHReeCBAhR83e/z70DWa
XnkTglT403G9/yOa1+XLbmUhKhxx8fRPQAslLffcFabC5uyIzZfRi/IB5p0i
VPgwzjdpis7KEjjFJ0aFPcdNTRUY71cJfXB+B96vm+czDrTFVnj6SpwKAnwD
miQF/Pz1NQ0bJaigM1haV4EWO5pYYy1JheexgslJ6PKo+7YJUlQo2D2/dBUt
/PUY7xQBf15j9qAN2szbM3GfDBXinhz7qowGCfMjCbJUqHt74jAXeqnU+t74
LipkZ987+Ese8/V1TpaSPBVYNU7EV6K/v/s8eleBCjHO8sWJaFZu9anO3VQY
caw08EXPWbfe51eiQuMz0hlLdNYLBceLylR4EFhwSA6tcHxw/s0eKkwnaDxa
h74kaFfEs5cKfxtomd/lpInB1X95zu3DePHuJhagXWt/HcjdTwVv1izrODTn
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
jV7pxo/9/j+/R89U5jqMo/8Ad49iHA==
         "]], 
        LineBox[CompressedData["
1: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
y////czzly6hn1mOPGOi/wO42ZJo
         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0.300000000160032, 0.}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{0.300000000160032, 1.099999999839968}, {
        0.4568884820647407, 12.313592446197097`}}, {{0.300000000160032, 
        1.099999999839968}, {0.4568884820647407, 12.206072645530174`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.300000000160032, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"|Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]|\"", 
         TraditionalForm], None}, {
        FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Linblad Terms, Out-of-Plane Polarization\"", FontSize -> 12, 
        StripOnInput -> False], TraditionalForm], PlotRange -> 
     NCache[{{0.300000000160032, 1.099999999839968}, {0, 
         Log[200000]}}, {{0.300000000160032, 1.099999999839968}, {
        0, 12.206072645530174`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"N.N.\"", "\"N.N.+N.N.N.\"", "\"N.N.-N.N.N.\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809125901001849*^9, 3.8091259162631435`*^9}, 
   3.8091259535374255`*^9, 3.80912699363379*^9, 3.8091272290126657`*^9, 
   3.8091273464210105`*^9, {3.8091273824496427`*^9, 3.8091273971366963`*^9}, 
   3.8091274673445*^9, 3.809127539114722*^9, 3.8091276432821884`*^9, 
   3.8091277170661225`*^9, {3.8091277501006975`*^9, 3.8091278138668156`*^9}, {
   3.80912797918826*^9, 3.809128003663431*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<plot_nn_nnn_sqgrid_coupling.png\>\"", ",", "plt"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8091276397565823`*^9, 3.809127686600933*^9}}],

Cell[BoxData["\<\"plot_nn_nnn_sqgrid_coupling.png\"\>"], "Output",
 CellChangeTimes->{3.809127672359028*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091271572814693`*^9, 3.8091271589988317`*^9}, 
   3.809127194993588*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.808919203650082*^9, 3.8089192366372766`*^9}, {
  3.8089192957696066`*^9, 3.80891933003343*^9}, {3.808919478028981*^9, 
  3.8089195807046213`*^9}, {3.808919627325328*^9, 3.8089196445152817`*^9}, {
  3.8089197441859903`*^9, 3.8089197679996195`*^9}, {3.8089199813401203`*^9, 
  3.808920315407258*^9}, {3.8089203790375905`*^9, 3.808920462318551*^9}, {
  3.8089205004960394`*^9, 3.8089205027151155`*^9}, {3.8089206609352984`*^9, 
  3.8089206764697356`*^9}, {3.809108750050517*^9, 3.8091087910983624`*^9}, {
  3.809127027911147*^9, 3.809127063347514*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
pX002hT+3HBfpxkWC3k3syyPSa3z+6jVd9TnhUNlEvCDVPEkLsx8tXVm0D3c
N+sscZvkkI9a2VLDuegHZ4M3/oZfqS9yMoA/fIiMCP2B+Vs2ZkdBDu5HXl5R
4ieH8HdZOAjB33+OL82Ej6ZF6R/OZlLb9kYX5Sn0m/OPn72+i/g5s2ZWNRz8
xtlbDfbYmDmp94tDNliubEi5w6Tvo3dvboZnlR39zAufKY5qs5hGfzjrvtrm
NpMKDL6sHoR3nrRgNGYhf9k3p4//5pDzK5QVGLDVmbxovj8cYna0dTo4E/V/
Rb1XJDxaFxUzfItJb95wy5b+yyHllmJMfVhXbsnGDDj1ctepnJtM+nbzbOkV
/7CPOlUXicPXVAJMSmHzwzHsoxmof4x/r7V5uMR3UfLbrhuYVz4J57XClgHJ
zWrwyyql/v0zuERrpVDkpes4P6XTNv2wfITGin/XUN+O2Kh7zOSSQJ7t2ebw
suId1pPwM/pVoCYd3/eyqTucl0tW17voL4LHowJvS/Jxyf3qOqtjV5FfhlrP
r8KNMSssu9KYNLc/YsvqWVxyYXpYcQ0c7sMWKoWXB8wdungFz8s9vkprNpcE
X80Km07F+ZTFpz2H5xg6jpvBuo1VdmZzuCQj5ZlR2WXMm/e8TwzBs76LO4jA
/6k5cL35uaS++9ch1xQm3VZukzkND4izDrYk4/cWjTyInsslZgYX5ynAln7B
sgsFuCR0eW5NxCXMv/dudmbCYituLn6bhPkt9B97/Twu+STz1kIDzrZ00q+C
7yrF3LuciH4pYDllKsglNjHbr3y+yKRfK61mdsISfN+u7YLnCF+ythTiEjux
9qTiBCbVWWclNAYfO8mSEYTtDq4WPS7MJQa6sx+5x+P3reIcZs/nkg9vmz89
vID5b1pBOAkW1ambKwXLXH0mKCPCJbV7NXeejGPSI+J/LXLhbPtLIq2xTHon
bvMMdVEuWWs+m3c1/O7u/V9lcKrS07H4GCbVvly81XAB7n84Tf/DecTr+Sec
VrhJck+vAfxpr+1rWzEuqeZz70iNxnkvE5QZgdvfCIj9imLSi+fHSjwX4vc2
tRtZwAIvLG7MEOcSNRO+vnuRmH8XdLLDYfHX9yqE4DGlt97SElxyWob94WAE
3pez1DIbFq9aJFwYzqRd19yS1yzikmlXiegFsJOaHvMRHNS/ztg+DPFdr8Rv
JMkluwzeuD48x6R7fm8nrfC7mD/R8vDYrO9PD0lxybLHwlyvs8hPsdyb7+Ee
8WeZL88w6aLJL23+i/H3fY9elIcrfI/snSvNJaxde4OPh2L++/NjVSzsY2jP
bgth0l/7hPfJyXCJrU6l/XI4sWRNRxb8d4u4TVAw9pfhd7c2LeESJdMzx56f
xv5V1djYBNs6yIcthUsTqnV3LeUSuv3IspNBTBpKqDAb1jb99aTxFJNqfHqh
4ibLJRUbGJPL4Q9aiRmf4Wrh/erBgUxabfPBOViOS47cVPFsDcD+FWFwhl+e
S5hPmbpKsM059c+X4RLLQ3P8TmKeXnYgX3EZ4olNOupPoB7WRT3Nh682ym1f
Dk+vN1y1ZTmXnBVef83Tn0lf5YkPN8K9DLPrjX5MmlUvOW3K4JLRcmYZE75e
dNvyLRynvP+2ly/e/5beQkcm8s13m8lzH/QLNw+Zn7Bqh0CNJBzT2uoXxsL3
c/h1nbyZ9ORGoiSkgPP/2Rn+8DjmLd9NKlfhXge1GCE4vGxLGHMFlwgYBlk4
eGH/bO1cXQrfdErtu3cM/fncTRWDlTg/flGf6aOYP+ipkBdwpnft4B54soXD
OqTIJfm25ZNpnog/u/3yH+AUr5Xcbx5MKp3I6+muhHyxcp40hndd0Zz/F14j
dff6pSOo/1mn+c4qc8lwx4m14+5MWhS223DRKi6JXGxrth7+PtuSkwlnBHon
BB/G/BV5rF1ZhUt0Tyc+6XJD/A6Ki1fD9loC/vJwpvbTbD1VLglzG2T6uKIe
bLyX1ATPmnHxz3MXzGcCy9sOrMb350lsXwT79N+0ewdnaRtfPuyM/SKsUM9r
DZesXKZuVujEpKvUWwKn4d9HtyyeDZ8IXiYQrMYl6nln51s6MunojZnvRddy
yfeRcusMB9S3hk9SKTDrXXLDpD3mrzqXNKV1XPI1SDJYE95qKe1dAafr/LEL
tWPSu1PdN3TUUS/ifQ532mI+OMyUfwWrjO4skYHvDAZ+P7Ae9+tpqnzEBvPE
T6GlA3Dy2PPuukOYDwYVL3lqcIlQdG45P6z60szxB2y1w739gDXi6+K8cxEb
UE9d+SWuHsR88GNqSnIjl/zL04rkWGH/tfr+6Cp8csh/qwacmxLYr7qJS+R2
CkuetMT7di/Y8QCeveS/Dc0WTDpjfJ2IoSbi8ZGmoyBccT2G2QMrSKxu3nkA
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
kCvFSLRUxXwJp+M5ArH/lBZp9aGlyi49sL5IwstRzxUOajR1vknhR6kfCQGz
L5yn0Rcl99IjPiTI8axm9V5DU94SkQr63iR8/iY5ulSdpipep7YdP09CVLeo
cjxaveH5aJknCdr2Ro8l12K/UqzQ4fEggb2GK+0uWnJXYIKWG8Zb/k3PWg3c
b1mHYv+z2C8tVzvWo3O3ekRlnCHh5OrqzXs1aaphLM7r1SkSVLlsvXrRoQab
TomfJGFZWcjCCS2asuSMqNM5TsKAU3X3NHpnvoXZBWfc/6rV3Be0aSpv9Zzm
02PY7/pXXl6yDv+/hqrkgCPGa6nGwavo7erlgUwHEs4vbQom1tNUzIeJxA2H
SXC/e33xPlq+lf+L9SESbMxc29br0NTWEQ7OxIMkODR0Tzah99LpJwtsSbA0
MHW22EBTxe68nQM2mM+xZupf0KUFr9QmrbBegkJN3XRpSsCLfs1hSUKgZ0vN
b7Q0m0eLzl4SMqnUwAg9mipw6TLZuhv7N9/Fm8s20tTX4jXmZyywHs4ncCeh
p6Q+Tqabk0BX6TYo62M9cevfyzclYWFx7F0xeiS33aBzB4n3t1X6WzbRlKj9
eEKnMYnzdOrPDnRE+stDH7eRcDWG4LChaIqUUbfjNCShi6nhMIpuGdfKY99C
Amel+fJzgPsbcc2KMCBh7bcM5ixao8mi05jC82E22OeyAebLkxWqhvokPOY8
pyKwmaZ+ee7aekQP63NkXCUN7Tkm2b13A8ar3T1o5RasJ/tGa+f1mI+WWqqF
aHhi+yxYG8+fkoCV1FaMZ0nvGndNEo4K915oRD8f7x0LWYv5bvhE2saQpoYC
eLafXEPCbsk+4RG0da3Ggf2qGK9JHrsz22hqklWIOK6C9ZTyZJ7FiKZecNxZ
Yq6M+28W8i0M7dLB6NqjRAJ3SqCWgDHmyyx79WFFPM+e8rbcRjuqHd22hSRh
6WhaleJ27M+vX0gaMUnIHqqbrUAv86haISeP9XhJ7orRDozX3/zlf2VIqFUI
PfcKXbEyp2ZRCr//pne+nQlNBepeFn+znISZZb66NPp93hWrF+JYX6vLZE+Y
0pQY95OhZlGMr5TPrj9oNg3HjGQRrMel5u8DzfD7JvXvXxUi4UpHQdkyc5oy
VKz2thIgQSNFik5GX80oaTPgw/mGq/Y4cyfm30uJGC1eEtINJ6kSdGazsM8c
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
       "]], LineBox[CompressedData["
1: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
KyXl3/ucVl4ogP8PgDShwA==
       "]]}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{
  3.808919237352329*^9, {3.8089193109358196`*^9, 3.808919330548684*^9}, {
   3.8089194917158737`*^9, 3.808919581306847*^9}, {3.8089196286138535`*^9, 
   3.808919645304185*^9}, 3.808919768875477*^9, {3.8089199918659987`*^9, 
   3.8089200376462717`*^9}, {3.8089200692750797`*^9, 3.8089200932250504`*^9}, 
   3.8089201691841216`*^9, 3.8089202008216887`*^9, 3.8089202338773336`*^9, {
   3.8089202757319865`*^9, 3.8089203167548923`*^9}, {3.8089204448168306`*^9, 
   3.808920463748728*^9}, 3.808920504677824*^9, {3.8089206625335703`*^9, 
   3.8089206779272723`*^9}, {3.8091087655526385`*^9, 3.8091087927988853`*^9}, 
   3.8091112860477877`*^9, 3.809127066867016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["k", "2"], 
             SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"k", " ", "r"}]]}], ")"}]}], "/.", 
     RowBox[{"r", "\[Rule]", " ", 
      RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091110649692273`*^9, 3.809111275475924*^9}, {
   3.809111349324535*^9, 3.809111350169325*^9}, 3.8091117238314176`*^9, {
   3.8091117552494106`*^9, 3.8091117757927375`*^9}, 3.809111812474568*^9, {
   3.809111843142795*^9, 3.8091118603924522`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
DPNtrSAZhtsCdR8sgQeTv2h4HuSSyzzPnjosxbxh6ODLY4N6I/XV5pIikxZN
ceeGwtwho5AOFhzy7beULep7rYD8DPjKHBGd6/CxIoXtukwmDV5/8CXLjkvm
O1wWC2Kgv60nZfdhpwu9pGAJ6ouO8ncdey4pVtsvOroY++T8zKAX8JUtzA3S
cEGMua2NA+KRV/SboQKT5s+el/wetnK8euCcPOqnpaW8vyOeJ7RSrEgO+VJY
9IfHCee5q+rM6CIm/Xhjo9o5ODVHME4ZlvI4UCjpzCWnOHYdexeiHm8IDU+F
7QIG38fLMqlb/4a7ai7I37LbCtUy2CfklNRqYPk3zz8PL8C+bc+Yru+K8/Z+
naoICwfmMDvgTzyBB3dIM6l2KkmzcuMSSU7YrEgpJo2LPejyGb6zWazs7nwm
5SwuCz19CP26MIK3XxL9smzRb353LjHw9NOfDwcy5j5Igitmvz5OJJi0IV60
V/4wl3yp21/gLY74Sd9snAXrnBSPyxdjUv+zs2ev8eASY8tz5l3zmPTZoV75
athwy2fFObDBsvWh2zwx7+jefLpqLpNWnmnRfQtvODQqeUAU9YBzZIfjEfRr
cikkYQ6TpkldL/oBd0lJ36kQwXy0vc818CiX8Gq+4v0szKTeS7f78Hlxydol
jaJLYb5X29suwuwMjwYzIcwzZ63PyBzjEunFoZUhs1GvZ/86lwcX58QaZwsi
Pi5ef6PpjfjbNVu+exaTLqo6HVUBc94WForAj8tHwk18uOTRutomDQHMj5UO
fS9h76mm9Q4zMb/EuwU5+mL/slRafI4f3yNwy38CPpBUXnN7BpPuCf5Wf9KP
SzyGXZ/08eH5L5ocRfy5JDd/sfo/XtSPJfkWibBMpoqQGuwo0Zwpcxz9UaC5
wHY6k67o9dLJhW97+2Semcak3KxlqitP4P6sbGTv8WDeNDh0+DEslvix7eU/
Br14dnD6rpOYNz3eGU38ZdCdDe6jPbDf+fR9ivCat0FLDwVg3hfWiTP4w6C8
v9PLvsELwwXcjv1m0KclU1f9TnHJgIewVNYUg1YYvGsXCER/MTvV8/gXg8b1
vDwYA8tWeG4dn2TQaL2d2gqnuWR9/r8GUdir4I3HLXiHUeZfrZ8MnFfGhGoQ
5utXL0TcfjCoZer4sxqYzqwRCZtgUJPgHVMGwdgfqjz7ir4zqM0Gbf9ueM+c
0ohn4/i9BGtjlxDky4DQ7OFvDHr4a7TXJ5hPyt99PhzNMB45fYZLnPObklZ8
ZdBL+8UrBM5ySdjo3/z9Xxg0VU2i/zz8J6wjL/QzgzZ0p29fdA77jPJ66/RP
DNobqi1zA35+K2XO0zEGlZjtoLkmFPHr8dOGPcqgxssfZTyBLULM4v+OMKjr
TnVnkzDc7wbHzqXwHbNlAX3w6AaDbDrMoD2mah/sw1FP1ozEOw0xqMriuowf
cEmQ868THxn0eEJUUWgE3t9lq8HFDwxaKGQvLRKJ+mXCeljxnkGF9zW0pMEt
EYyM1kEG3XFrXa9iFOp3jlH1OBf3mzSwIQ+uOmH0UhaespQa0z7PJUK/ZTQ1
OHhfpsX3R7DYwZmDu9kMWlunZLonGvu8lP0L5wEG1fi3YnIQNj0Uc+fUOwY9
TwymDsUgn277fsp4i+fvem/6F96ckbCz5A2D+hxOmDgbi3kglsvs6sd5sU58
E7yA/nNo9O+fPgZ1Kh6lKfCcm0YcUfi1vjtHIY5LmoU3mazsZdBjuf5dRbC2
QG3extcMOiEZv3hDPM5TIeSKTQ+Destzah/Ac8h40pluBpX+9yB/x0UuCRg6
63uxi0FvvMsd74ZzXFf9LOpk0D3JjIhDCag/Rk8213Yw6IzPL71+w+u946+0
vmLQK0axRcGJXNK9WvjW53YG3Xu8W0/8EpfUMyQO/XnJoH/y1JSuwGvVSr5I
w2mnq+wVkrBv1LnGrW9jUMelXZ8K4TTpkhebXzCoZPu/1rXJ6EdGXz7YtzLo
sHnx9GZ4pE0w8nALg1Yduxa2/zLmv6tR5ORzBvVLSrZ/C39PFh9IfobnX5C7
cCSFS95eCJvIeMqgCtF3xSbhSc2VfNXNDDrnYNtg5BXMO8+vejxqYtBfrctE
ZFO5xPVK9PjzRgZ9rh8dmQ5vE9YL/9jAoPUxgftWXcX+ULXS9nM9g97qCwio
hHW6d+2eCYc2FX3XTeOS1r7244ufMGhklE91G6zV59a07DGD+u4w6Nt3DefL
CjfWfcSg4aPpJiOwiJ0Ie9ND5I/iGtGT17nk8YHW6yZ1yC+HrmXT07Ff7Ftz
y/4Bg972478YD+/ndOY61zJofoyuuUwGl8QZveQLqEE86xc7X4PTDXxSEqoZ
tKu16Jl6Jua9WaHil6sY9IN1bdh9OCm88+edSgZd+GjfxS03MI9FW9zOr2DQ
rfVK412wzXLFC8XlyLfnArcPZGGfOvv+V2MZnn/bq+AT/C35t2RzKYO+jBgW
8s3GPLZYoK73Ps6Xfi6bdRPz6OCdWT0lDHrookpFMrz3o2r063sMzCPe8+Rv
If4v9ZeNFjPopLRJeSFcK3zTcbiIQbWM1UrX3eaSohDuk8m7DOovYyRYA4d9
DjkpBPfVfsndmsMl7vPkkwQLGXSZa9aNDtimRi1QuoBBL394P+acyyWW4mP3
xPIZVIDfJuonvJ2zbO28Owxqrfg+8FQelyz2L76qkId8Wfjr4Zw76H8meWtl
cxmUSi04cAk+8DfioWIOg6YXHjGRzeeSEPu5RWtu43nyuyNz4c9Gy8s1bjFo
ctxm+ZUFXNL+83mTzk0GVe15POMxrO8i06uZzaC5zO26poVckv+okVcni0EV
RcVftMHa7jZJRjcQTy12hXZ30Y/S5eZuzGTQbfG174fgc62HyowyGPSv8u3D
AUXoT3NcVHXSEW92zVuEizHPXeybsfo6g2qnTR6Ph8sNJ1jkGvI7v/g34x72
3ZvTf2ikMWjSo5PtufDihPcL115l0NV+J3k0StCP/XIf6KYi3nlmBdTBD9TE
f2heYdCs8+lbt9zH+7aopWqlIF4/NRx9DZ8fflapfJlB9T+zhlxLYeEoM/lk
Bv09fuH+ZzhmX6MbKwnx9jz8VVAZl7hxv7MlL6H+50ZvmVWOeG5d8V0qEflh
LS9yBfZkZxjOSEA/KfzIUqngEsHj1yUn4hlUZ2Ztwl1YX3B+8s84Bl2psWTX
pkrkJ9tNh3uBQefaxLs+hYmEVBY7lkFHVLXat1dhH3YQzhyMgV94RA/Ahek/
b7yMZtBXfoVXXaqRz3ddz7adZ1D2eOC/KXic13ZrRRSDjs05VxxZg/n+Oc28
GcmgA6rJNXNruTjK9q/ZEajvi9fJZMCJc3JmXwjH9y4YfKr0AM839VeJCsP5
FTa15cN7HYrGI0MZdNGiDctoHb7XzdrJ+xyDKkWXv3oC53+f+ON5lkEtXj5u
2/uQS0qFWxm7z6D+yvYz38G+s5RPmYYwaBSf6jPHR/iebLWwLcHolw8EH/+A
7z1on6YWxKCjwePzAh9zyYI7l5pYpzFPSLsVzn3CJbpO8h9mBjLoKTPpzOuw
ovjG26MB6I+h7SOK9ZiXjJS7uScxbyTKniuDjT43rK8/waC6N4946zbgvHTU
pSqOM+jJfX9Ln8AKJ1aWFvmj37yZb7qnEX++3cQlwY9Bma46a/phrvb1onBf
Bo1v/HLEswn1d+7Bb44+iNf6Xh6eZsTvks0fDb3RP5vauWdhaeWvidrHGLT5
+j6Z+U+55H7ykKSMF/pzwHDWVZj3ivSB2UcZNOJH8bklzzBfPzY/znME/XDz
7PtFsCjfaoN+D9SDy4e11z/HPKJ19cfzwwwq+PCA+FP40ELWhpvuDHrmk4Wu
eQv60aoZPhcP4f7KY+u64Vd330SfdUN9tdhx0bWVS8T1DOdbuzKoLI9C5Rf4
8RXxYmMXBn3if3LVmRdcYrZyaYa8M4O6x82ZJt6G+saasvvliP51J3/JZXi0
y2nfewcGvXutN1H5JX7v3KcTlfbI30TJg0Vwr58FO9MO/UopLGBtO+qb8wLt
OFsGzbl4brgBtnhB05xsGNR8elz+1le43xdGjtsOMuhifaVH72AVpXPzFaxx
36xfKkc60E8VHPMmrBj0ulDn8AQskWrV+MYS80w9nQrtxPx1UPFWgQXq57n7
B+d0od8sfCmXsB+/t6BCMh3O1DXUstmHfm06Ia/Rjf7xOVBfYy+DvgjRCSqF
Y+ZlCMzfw6B1MWIaRj2oR4UKW9i70M/Tvq9tg1+6P9j50BzzoNmci3teI15O
nve4uZNBPdrukQ/wj7d1747twPfsd9H16MXv3xoju7Yz6IH7t+Kn9XGJ2r5j
7bLbGNShSGH9BVjeNsbtoxnm06Ks1fP7cV5xNXObTNFvwkpDbsK87RGPL5gw
qLNNJ0v9DfrbGZXL7sYMate9fNE9uD6Qc9HMiEFDWHMd9d9i39L/cUxyC/LH
dxrfU/iVd3PS180MWp566qvVO/R/tc7T9wzwvfUCawZh94rO6ih9BuXENrW4
DeD37ZarumxCP1STLvsNuw7vWauih3r04tjPEDaXHDlmWMm7kUHPGlqFSXIQ
v7y/Sx9Q5OeBgENZsOYaj84zhEHH/W5nqXDRz391X7TUQb10tl9RDY8VFaUt
0GbQQAvleQaDqG982y1Htf5rub7juXq/AIDbJDt7fj73fiSJREpK96hEGWkZ
KSkNmjKLkhElq4wkyQ7JiKwKyUiZKURLyrVXFEn6ne/r9eu/96vrfp57nvOc
cx4WFI+qGjWg47dusa/VY4HY3qJG2/4+ypV+GxSwDuet52aZveirNsuuWOqy
oIrN9Z3bQB91OaLTV3gtC5b1tOzhGuyjNMsLHzfp4PxTvU7tOnq0raYvaTXm
j7fmLrmhPkp1k+WgjTbOp7qrW1LQq79f+6uihfPNq5q7OsNYLxSnKj9ossB8
LrSiFl31YqYmeiULSjQOrzEd6aPWsEtwOGjg9+jWLHxCF9psqJRUZ8EzQ22F
Y6N91I2QU/Vf1Fiw8kdXxDC6o1JiQ+5yjI+r4O6LYzjvlClxHFZlwbbfZqc4
x/uog9w+69WWsWB8t1xHDJqrJC25ayneb8wY0coTfdSC9YR9mDLWUxOtzGw0
mXX0mSWLBS0KbwT0J7FeMuvEuUkWOE1ffFmDfuk7ofCKyQK2E/Yd235gvAx8
siIZuL7HrTrdaJu+JA4DJbzfcJoP209h/92tq8OtyAI1FevJH2hriRNCufIs
+Gx+1sx7GufnlRs7Tsnh/CVR8ZftJ87vg8bqq2Qx/x7FLdxE97CrznVJ47yz
03+vzC+sD3fcvtyWYgFX3cx8Nlo25rTYBknMr6602fUzmP9q/6q+i7MgZ9Ju
+wt0k9rpotQlLIj/nD6ye7aPGthnV71VjAUuLb+/f0AfU5RTYxPFeB8MXHXo
dx8VnGK6vlIY87EmoXkSLXHYXvuwEAuU1Kurzs/1Uby6oflyglifT7pzL/7T
R3lsGBwuXYz5YXww4Q56NnjfM1t+FoirWoYw5vsoacPhjRKL8PkvXa8eodO9
r20v4MX3xZ2wW/e3j4o+z6Z0jAfn7x9aRhVoNpK9WIkb7y+Ma77mC33Uv6vu
yc84sf/sGhJuR3/mf+DvzIHxtekaP/YP6wPJHsbLjvePI+3K4+h7gh5pRf9I
uCK0KN+NjaYuzTiGOi2QUBb26jo3O03dZF9/nO0vCZ0isU9D0W9+2VzK/UOC
rNPkBiUOmtrEmWlDzZGwzz5ALA+91jRssn2WhABbYqMOJ00VTzdOB8yQ8EbN
/EkduqZEN1D8Fwl8bFdDzblo6qXGxrhn0ySsd50peIs+yWMVd2KKhOin06pH
uGnqhs/SsblJEtp5//0aQq/zCviVMoHPq94Sv8RDU0odksrq4yTcGzwSJMBL
U4r2Y6rloyQM5YB5JPrzyQ3iR0dIsDXKOkby0ZRb+LHBsSESir4rtj9Ah2jo
lN8YJGG1FTNafxFN7d7RaSI+QEK+o21GEzr1bmdFAk2ChE+KyB5+mvrm/N2B
6iMh0dHjdR867ciZoBffSBCzsuo+vZimpFk/pg/0kuD//ezGKfTP9mzvfz0k
SBlJTAUI0FTiDdnN/l9IiMl5+ZdfkKZMPnwIVvhMgu4gj00COtTb4EvcRxLe
V1/iUxeiqbff1+rIfyDhUAq7UCH6bstvqqSLBGFLsSNbhGlK08xJRvs9CemC
miKN6Pd1d1687MD3HQkU2SlCU4KiRimH20mYiDh+6CtazlNP9PNbEm5WWvI5
itLUWTe7QJc2Eqxq2v79RivOhe/pbyWBp8nWzF+MplL6i7a4t5BQ4CY/zruE
phzvXPBe1Iz7O+n09TbaZtvjhkuNJOi71KgyxGnqhesf18UNJMjXZ78oQNvO
Ffw7/4qE2Wev8zZJ0JQZ7+7SkZcklBf9+lGPbhE7xuFVR0JGQF7QPkmaWs77
ZoiuIcFrr7tzL3q12V2/09UkbK9zyT0uhd8fqHJ5rooESuDvhlm0RZJfx7Hn
JChYRjMvS9MU6+x9idEKEhjupZaiMjT1WJf02FWO1hbvSUJvbjxJVDwlYdHP
i5VLZWlK1cTmx+YnuD+hLuMl6J2eB+IzS0kQVHF3p+RoKn61RpBKCQmqsVym
bejVNbeEA4tIMLjf4HFYnqamt81PDxSSsKkscWYAnWU1Z3O8gATHZLZXXgo0
pTLwQKwmnwTPsDMTHIo0td5nyYn1eRg/afFT19B8bo9ty3JIeHx+q66MEk3N
eOdZSjwkoflj4L4ktBj7Fo3QB7geyV1NWgyaivOfeNOTScK2sb3RL9Cb1u77
sT6DhDOvjz0yZtKU6bqhlQXpJJR6cyl1o0tFpYa500gY1szrPUTQ1FbDoW9u
KSTIBd6co9HJcx53hpJIcM5lc/AkMT5OBb76iSTkfrjIXECvGKP6shNIEP0c
qHmDRVN1PpvXzcSTcO5yXZSSMk31xs6pbbuD9YIlbpaOrrjn11N8mwSVxDHL
NUtpinPFci32WBIuKXQUl6NXasQfPx5Dwm/n7cctVGhKcqv/TFYUvs/h18ke
9NXxxrVTN0los8mrO7aMplpf5SRb3yDBWvnnuVl0mNRlkTvhJLycNnL1VaWp
BF3uxplQErQd2uq5l9NU+C8Vn/0hJNTcHzxzC7316Iaeu8EkbBwTPKmghvle
yt/++yoJn/grS/LQc/Ll2lpBJFyoy7CmVtDUkSj62LkrJCwEJuyoRYtMDbk3
+ZOQKcuItVTHfAmmo7n8sP4U5q3+jJYtuvLY+jIJDUMeSx00aOp8PetH4SUS
fGdeO06hL8vsoQe9SVDkW8HutZKmvKRCWfpeJHwdlRlarElTJW8SW06cJyGs
U1w1Gr2q9uVQkQcJOvZGz2RW0ZSrcokunzsJnBU8SQ/QMjv9bq12xXgrve1a
pYXnScEh3+cc1kvLFUdq0Jlb3MNSzpJwakX5pj3aNFU7HOXZdJoEdR5bz250
kMHG05KnSFhSFDh/cjVNWXKHVOueIKH3eHnnFHpHtoXZBUfc/7IVvBd0MJ9X
zGpXHcN617Ps6qI1+Pta6jK9RzBei7UO3EBv0yz2YzqQcH5xfQCxlqYiPo7F
rjtEgtuDmIVHaKVmwW/WB0mwMXNuWatLU1sGubhjD5DgUNs5UY/eQyefyrEl
wdLA1NFiHU3lu/G399pgPkeaaX5DF+Y0aUxY4XnxDzJ11aMpIU/6DZclCX4e
jRW/0fIc7o26e0hIoxL9QtbTVI5Th8mWXVi/BS7fWbKBpr7nrzQ/a4Hn4fwt
3jj0pOyniWRzEugyvVpVfZq6w6v/MNuUhPmF4ff56MHMVoP27STe35brb95I
U+L2I7fajUmcpxN/tqFDkhsOftpKwo0IgsuGoilCXtOO25CEDqaWwxC6cWR1
FudmErhLzaVdAPc35KYVYUDCqtEU5gxaq96i3ZjC/jAT4H3VAPPl+VJ1Q30S
nnG7qAltoqlfHju3HF6P53NwRC0J7TEs07lnHcar1c1/2Waa4rCvs3Zci/lo
uVo9Fw3PbV8E6GD/KfBdRm3B/lXQvdJNm4Sjot0X6tAvR7qHA1dhvhs+l7Mx
pKl+X75tp1aSsEvms+gg2rpSa/8+dYzXBJ/d2a00NcEuQpxQw/OU8HyOzYim
XnOlLjJXxf03Cxy9hnZqY3TsViGBN8FvtZAxTZnPcJYfUsZ+VsXfeA99ROPo
1s0kCYuHksqUt2F9fvNaxohJwv3+6pkS9BL3sqWKSngeryheN9pOUw1/s6X/
ypNQyQpyaUKXLsuoWJDF9d/xyrYzoSk/vauSb6VJmF5yUY9Gf8i6bvVaEs/X
iiKFk6a4P7zP+1+JY3xlvXf+QXNoHUmJF8PzuNj8g58Z5vOE/qMbIiRcb8sp
WmJOU4bK5V5WQiRoJcjS8eiIlIIWAwGcb3gqTzB30FReg1TEan4Skg0nqAJ0
2itR71leEvZc0zi5zgL731qZwz3cJKxI+k03oNcMeLLFcZLAbjVfbLuTppQX
PjTasOP3iAp8+oq+eN99EfWPgJTkzN2uu2hKqvbG0el5Ak7r7GL8QbM2eZ9q
niNAx1HbwHc3/v32W5KPZgkgnJMLRPbgfqZYGTv8ImDWW94rFp0p4BGvN03A
1H5WpOpenMeefJntmSRg+KPDQinaRsO5NGKcgEb7/OcbLTH+nOMSR0YJaCsL
ftuCHjyh/oFnmIAqSecNVlbYj8buXmwZIKDd+NvPQfQ7mRH2YzQBtEw4p5c1
TdmpdnFwfyegZ8zwOJsNTbHLLj/8+isB/25fl4tEy75Qndv/hQBeo4/Ksvvw
vK2/uUryEwEC0UevJKJZ76KPve8mYE2xt7amLU1lL6pfdvw9Ads+3tMtQa9V
OCWk0EGAX6d5+Lb9NOUfnzR17y0BxefW6HahR4rfh6i+IeCdsJruwQPYT9rO
tn1oJkAq4OG1CfTaoEv2No0EbJrTW3neDvult17vwisCToiwL/+Lzl18Mznn
JQElf3a7hx2kqQeCdeNLawkYHSqUFLfH+SunrKL+BQHGeUl899HDW4WurH5O
4H31joXGIZw33seJvSonoOlzw0ghuuTcp4VjTwnQlrveteUwzqvLfRWbSwnw
t90r34h+lKkab1dMwC/nnDw7B+yXQZIPSgoJOK6sHzuGDv3o8VzmEcb/U9c7
tyM0peCe1pKeSwCc5HTgOUpTRhHCib+zCcicX2cUjq6wan/smUWAoHrm5SXH
aOqLpcLpf/cJiNVK5UtD+4wli5mnEcC/Ibt/+XHsT0GiCS+TMd9kQaocba5v
c4w3kYC1twXiTR0xf0SHXS3uEvBYhnZrQ29JzResjSPAytk00cEJ46USzfHv
FgG9ryuVhtH3V3d3HIkmIGqucuLSCZrSm11vFnET1/tqRkLoJE1V7r1FVocT
0BG/4WY0+sD0lmAylICbm4UOLD2F94c/solGwZjf4yM+uegTvanxt4Pw+XWc
P7VP47x5/939qQAC7trcf1qDnnsSfEbUjwCTS5bvTc5gfheEtO73IUDJI8rw
M7r8d4zyCW8CJgT5eM+cxXnsspms33kCHmQFK06jMzerHq9zJyBY9nZQoDNN
3RviS2x0IWBnROEWwXPYz9M0wtidCZBM5bGKRGcP6nTCaQLYQukywgX3M0yA
A04Q8Pb8W5csdIOBYfqZ4wQ06JldXO+K8wvHYrP9Rwh4Hr/Q9Rp9uEa0Y/ch
AhLYysMs3GgqSWk4zduOgCQ9vsiv6HyWpNUhWwJCztuPOLrTlH5a3WNPawLi
Qwxj/6DtvwTym+zF/dY/fCvEg6YWjrbvX7aLgHtTIcOinpg//15rr91BQJnP
ppupaINz5k3spgSUC/KEqZ3HfPhWZblgTEDFevZP+egDmUaF3FsJ+L4x+JLB
BbxvaRyNe7kJ64Whols9Ov77GvNnFAEqBDzd50VTfyM8g09sIMA6Ic5yCC1n
s4KLXEeAizybsbM3nt+U/nXCawh45DwVzH4R+12zUVKhFgFd9VPMYPQM25o1
oSsJWKhUExK6RFNLS6Omz67A8xQ6sf0e+uqZQ8H8qgR473/xieVDUx37C6Bb
GePLzqwqRr/XvZl3kCBAPDt0buNlmjq9jPVMVgn3a2rltRq0kVy15Fc5zFcR
+2N7fWmqIMjssa001p9VCXc+og9NnZwUkCDg7LLjSmf9MP4ikRvOiRLwsdxx
dgFduMiY2SNIgJaVp0qgP9bTzk8lQfwE5NSKZUgGYD2OF6z+zEOAqO7Ti/fQ
nxQe85zlxO/fFn+fvIK+zD7Jz4b1dyUf8zGatyQjz3KeCcdl/Sf1AnGe6xqv
+jDLhD9d18Sa0JJr1+8Q/smEUN2XV/cHYTztbIvNJpnAEy+2uxc9cfPTvbpR
JqS3DZ1xvYrzd9HytSODTFAXau2ZQ982dPluSjOhW3FTatg1zN+MrtfWvUy4
0jxcphCM+R5SeefsZyZI+acsTUMPWX6setHNhBZ++pvOdXxf52WNyg4mOMeu
mSlHlw64RMy2MUGwusJucwje7y/+WbKxhQmt1W8l36GHb3Z+Wd7ABO/6nyzb
UFxvOoztfckEk5S0gFE0T4rY3aXVTJCWC1lzKQzrVYPQCY5KJjTH+lCc4VhP
b/3+ovCUCVmDC7ej0d7+reUfi5lwmgo1lo+gqQuuYpMfCpigsXqnaTK6P25f
Yn8uE8QXUpJW3aCpNicr5+gHTPjWwG5Sip5tCuUPuM+EzjOjhttvYv6XT38T
SWHCYwn6Vhs6yv4J9TWBCeG2khusI/G8lM9pVMQxIczj7apBtHTNwOe1MUxw
j0m45ByF821xdtLPG0zwD56W4YzG/PwXJGweivsjH8AfhR6QLH/+6CoTLhcq
7pSJwfuBfIymbQATYpWMBh6gVVewfO/6oCMutmvdwnoWb7mf5cWE6HuDkqXo
IfaXkmXuTCj2/5ZpHEtTV2LvNfU6M6HqxNCNFrSLeuubPaeYMKni8+rQbZrS
+TrmZHOcCYpXtllOoj8bR1s4HWbC6u/MdZ5xNBVwP+x49QEmnJW5eorvDs7b
MsNND62ZELXr988I9Pulg9u/7sZ4LE99Kx6P92sZupfYwYS5zi72dLSbn7fj
xDYmqAYrBKndxfjb/f3Hb8iES8Jj+8rRVVW1j3IpJjyJawg0TMD5m1l/KkmP
CdMverga0EJs0qsTdZiwu8r/ne097Fed6SakJhPiq1fN9aIF5ZojZ5YzgS/+
tLN7IvYHpycLZspMcBH9qsedhP24xdIiT4kJtSGHbEPQpj9HWA6yTND/cKZR
PpmmfO/b1kSLMyFBIzgqDd1yzeSvjDCun/EhVzUF6/v5j8YPFzHh4kCZ7BP0
08aMtyWcTOgvTP8IqbieqczTMgsM8NyjON6GXj7W6zExwwCu6Oa9h9NoaoPb
64E3kwzw6gwRG0Dv+3RWQmCEARIT7UoX0mlKY8zpRHEfA+IE1APY7uP86MBW
9OQLAzYtiKyNQq/Su9GwvIsBA+ErKDID55ufOkFpbfh75N6ELHTtjcOkdyMD
1ML4Tddn4vmgn58vqWVA/VyjRTXab16Ta1clAw7zvswyzqKpWO2q7tlSBjAH
zXZ3oc/IvPiz8IgBr5q/7rJ/QFMP9S84H8tmwK1gjtQf6D2VktUqaQyw/7bP
yD+bpmLah2wm7zJAzOC5Ad9DfH+TY7bSLQYMuRaExqHHD7bpJIUz4MGDR+rM
HNzvvrq5oKsMOO47QNxHcyRXc17wZcA2tYeOa3Jp6pXjJbmi8wwQ777IVY4O
vxUkYnsO42fXPWGeh/XuXafKFicGfOrbot2J9szZUXz7EAMKBfpf7c/H/VxS
LjZjw4BcPslHo+ijW7O7w3cyIJJv15jbI5ri5rWUvbWNAfGfZC/yFuDvm670
bQYGJO+Us4tFu5c5SfHrMuDGq2W3FAppqvqp2fWylQxIk6xWzENfX9GlEb4U
nz9+4u+ax1ifjEZd3ivg+6y2aT5Dt23NcFaVYMAT+aJC0yJcX+7mG5GLGfCi
Tz3sLfrzmrEFdw4GjAdolxwtpinaUvtR44QSyFQ56/xEt525/SvjoxKocTxd
5F2C62FTZPq/UgIH6UgNgVLM5/B0vr2PlSBAyyMrCl1K/fNfnqQE9cx+t6Vl
NKVy8MrNj8FKwJ8fEV2Mbi0zf+PtqgQ6mwz59Z/gvJjJ/nKZnRIEZl1tbUa7
8y3murZVCSrEO0csn9LU9rEUq9mVSjCtaHfgI7qr7FLyfhkl2LFwTvH0M5ri
qoykNrMpQdTXSJ1ptMD6p5ZbBxRhPg4Sgspxfj84mJbcpAiHJ5VtJCtoStjn
odWrAkV4ZCp98i76m/DyaJk4RVC+FNukXklTRX90w3wvKoL/IzKoCH1d/2KJ
6CFF+HilP1LvOc7bDQXxLoaKYKuuO/EavbXfyTphqSJUd8Wk7qzCeTflONtf
PkWwsPXN+IbmM2g3+dqvAHU9nuynXuB92217+OxLBdDlzsibRBvm1i4vyFCA
1oXDuf7VWM9e1zr4BSiAxbwaJ38NTXW6Pm8MtleAn81+mXfRZJPROYN1ChAL
wikramlq7+qQr2qiCkAUZ00WoNf93HXBYkge2tje3NxSh/0xw+qGW4U8nNzB
fa0RnetS9L0iSh7Y9c+17XxJU39ObRQWd5SHZ/+cTveip4u/l/qtkQf7urN2
TvU0FcmKc57nlgfVwxxJf9D5TD+dh81yMH63USfkFU29ncwbNY+Rg3sfUpmi
r7G/Wcp2P98vBy7jvHYpaEdfSciVk4OVvBcmVBto6nK6RMDvblkYLGd25qJj
LHTZdsXKQv02KyGqEfvlQ/15L2NZuNEVF1+LruGvz+L5LQOXNjpdsGrC+35f
RLpFvAzszjDM+YL+avIpwXK9DCjn2egcbcbv7ZE1S34rDQqhc4K/0PS1DrXO
vdLw91TmhksteF77eiLut0pBh1V60GW06GsFc/1mKcjdlNLqh76i/C62rUEK
7KTvHglCRynfq5utk4KK6ojQCLSs5bWD2uVS4CPr+TEZvVLode/BLClgqze8
WIe2TfSJueYrBRzkt6fCrVj/H17LuacqBZYjmn9E0bn7fpi2L5WCB0U+euLo
5gb/uUUsKdhlLFsmjT7UrO5+WlEKUk7vLGaipTayxcsvkYJNpZX52mji2WUV
mXlJCDC7m2713/vc6gbcGyWB6/zeiET0ibbzj+aOSoKj+5+MZHR2btTS9sOS
0OiS/DwVbbUrjJFzUBKiTo9OZqC5PA5G7bWRBMIhcE8+uiBpI9c1U0mgzItk
qtAPvG44n9WSBC+WRFrvf7/300tTdV4CPjOfPvuO/lW24kv2rAQYKB1qp9Gh
6h6+aj8lgE82h2cYzWTbGcgck4BYYUOnKfSF8GsL/V8k4PGcmwbXG7wPddXm
d72QgPHWd6XK6ArPmBpWkARkspcvqKDLzxie7/OTAHut9C3L0TY9R9KTL0lA
a5R7qwZ6ibWYoYC7BDyylBxYi65eLBmQ5SABrh+tpLajM72l3s5REjDT3+1+
Bt2U8fRLxrQ45EtXP3VGMx8PbX8xLg6O27LZXdGXnv3M7xgSh/cPvMM80Xy3
+laN9ohD2Wn5dN//1mNaat3SKA7eUwfeRaIJozm2fani8G+hR6sE7ZgVPcRn
Ig51DsxdZeihsDXhqYbiEF5/6NxTdN+VM1/XgDgoRvbmVaJ7fMK2GumIw0bl
7yvq0dx5ufUCSuLgY9K/tAv93mz6jNTkEpiPHZX9g/b0PyJ3MXwJ1Myr6/1F
f07TLV24ugRCD52x+YeO+edU7uG3BOTVxmM52/B+2LfgttVtCayvmBAXQJ89
St+zt1kCXt+nhBTQpyyMow8wl8Cs5hwHhX5XEZWmmyEGG9xCpAzQN0aaR/UT
xcC3RH7FZvSXGGd17Vgx4NtI7TVCX+U5dn0kSAykTK5k7EALnorTizoqBmuO
Cpnaoz3cQ6LPKImBV2ai/WG0xLnv7DslxaBiWNP9CHpZEZu3oqAYGLrsvueI
jmud5rswJwp7Lt+ecEaPDvRuZr4TBdc4IsYPbZCR49blLwrFHwuzAtC+slan
dM+LwpySYUUgeijB9oPXaVHwv3+8Pxg9laiQl2ElCpGFD9dFoolavtnw5aKQ
37Tmcwpaev/7wrFXIjAtUv8jDZ0eH0WvLBcB3T02vBn/fd9Mzx+jfBF43u2t
mY2ejxG8ORsjAi39z/0L0Z2vLu9af1AExthNVGr++//bcxZrW4Uh6LyiUx36
aKgnf1aOMCiNTz6oRxf2rP7lf10YLD7e1mhCu37d12+zSRgKimmdDrRl45by
kSwh2K7+xPM9Om/IQHfOTwi+pYaVdaP3CccbbbARAvGbq/W/oEWL+G5v4BYC
95P+WwbQ1/19eshdgiDUuzdoCG1crVDcTAjCfWvV+hH0uR2R3/f9EIAOw1aT
STTXsp78z2ECcOZZatgUuu9q0Y4SGwHg1fZs+Yn+rflWWJslALoMxd1z6O6Z
9/4vHy+G1luT0fP//Z7fxESR12JwEqztWPhv/VnLbv3YuBjuzJ3cx/kWnxef
qhuu4of5d2WHBNA+K7++tcpdBNEmYalCaOkGYy59h0Wg/sK+TwSt3HFNf6vE
IrDL43WSQF+p5upoP8sHv5Q/PJBCuxobx7yR4oPwu7kjMuittP/Brqe8UBm8
11kRbWdzYK3/Lx6wZlMtYKDl3ks+WBvKAxMe81ME2uHclLGcPA9cG23RUUaH
RvOc9U3nBsaRVE8V9KHAnrg7KtxQ2u1RpoqmDO8Luidzwc6d2/+ooVPJ4eB+
US7w3zjpo/mf01+bh7dygGxRzXMt9O9epmmVLAcUqt3m0EEfHOQc1dvNDqYp
J7esRUt6s34oe7DBd2kqaB26aK9BeMT8AnUxQqx+PXr3snJX9/p5SoKHXrQR
rbdZRkJMb47KvVhmAminZSugV2OG2joVGrYJ7cFX+7v55BT12cm+ZQv6Vy8X
b878COXZoy1qhH6jccrb2PoT5SQNFsZotv//+x+L5JSb
      "]], LineBox[CompressedData["
1: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
Jd4Gm0RNFrWBJz1/LYk4klGrco6NSTHk27n6hhzwwYgUu15wgevNDkknMup5
yP/M+QkVP8Obef8p2LLroQ0V3GjCM7P3JBmtv31lEfIUzsvE+WcdOK5zLo+u
BPI/8UEIfgrmgzNH9GPBR3576zaD30yoHhJ6BvN47Of2I87Qj22UY3LBayuN
XV1g0sOXBOVS6N/Ni1F2p2EeSrrE1Qq+TXkTMgWOjtCzMSqD87nxnNbNBfqX
Yfb8CHic7oH8EpiOm2Hk9HOox9t8S4GuZFQekidMBXu/4NxaAl+veffkYjns
S9biBSFuZKS3QZf8DxwWMze3AZbm6uhMqoB4OJLeHu0O8dTRYk14AfOsOh2F
3QPm1fB3qoVgwyOpFTfBTbucvVUrob/v/s3M70lGd/PpfzWBkftHjrvgOzuV
uyyrYP/uc06V9IL+wpWx8RVc94rXowjsK8px1auaii+ey1mROkNGwVsclpvg
7yn9a6Vg1y+ioZE1VNyPS+blPm8ysnA5vcFcS8UvJ2j0PwW71O1/mw5OoOid
2O9DRk4CvAuSL2E+euD1uBx81TDcpQLcFhjrdMiXjO4LYvI6dZBvDoXur8C5
PwZM3oJ3KDLpaPpBf0vlbrCrp+IOogkh7eBxbcfIr+ClqZh4HX8ymr/9Ocuj
Ac57c2y9EUwsW2D+Az47MlSrGwD9dXBn59VG2MemmB1fgSO7K0Y5m+A849mM
DQMh3jxTtHLBvvSNSe/BPxgjtsnNsB/8Sn5tcBb65cUtlmpwzkTmoS5w4EKk
j+Yr6H+eE/lGQVCP1dIkesEBere0e8BS2JSUcwsVd/GS1LIKhvmCWyOKAr4w
+P5QN7h7kKh0qRW+78pxN6tzZCSRxadC2wbzVzl9Yg/Yhx7djgE70ZSSjM+T
0YTmbxWBdojv8cWxLrDa1boD2WDe5yO5hhfIqPYOW7TCayp+NbUuogusop8q
3Qw+krreefQinO+2DFG/A+L5T8Lut2DyDVOfT+DEz7VpJpdgnhC+wnbyDXxf
4V5SB5jZeIpmCiz0floMDyGjLLMhveC3VPzDDD/2CixiM/xlAyzLQjFRvwz5
vN/j/c1OKv62rOpSA9iYn46D7x0Vv5HP+eFgKMyzdwcKMsAvjfPuloKv/VC+
IfueiqfHke0Ur8D+oJ/7uhwcWxZiVgweCE4/ptdFxS0PWanIX4X+pt25fxBc
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
nPzvfc4oLxbA/weNpKDf
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.809111210285564*^9, 3.8091112393119793`*^9}, 
   3.8091112812266083`*^9, {3.809111350940213*^9, 3.809111365360668*^9}, 
   3.8091117082699456`*^9, 3.809111744216976*^9, 3.8091117775020027`*^9, 
   3.809111813431001*^9, 3.8091118622864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "100000"}], "}"}]}], ","}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotPoints", "\[Rule]", "3000"}], ","}], "*)"}], 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", 
      ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809109399106987*^9, 3.80910942179234*^9}, {
  3.80910951873341*^9, 3.8091095194804177`*^9}, {3.809109549569007*^9, 
  3.8091095688333664`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\"", 
     FontSize -> 12, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0.1, 1}, {-751378.5313430912, 104857.96945797242`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.80910942353376*^9, 3.809109521025301*^9, {3.809109551168702*^9, 
   3.809109569744877*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Im", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], 
   RowBox[{"(*", 
    RowBox[{"PlotPoints", "\[Rule]", "3000"}], "*)"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[Gamma]\), \(i, i + 1\)]\)|\>\""}], "}"}]}],
    ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Nearest Neighbor Decay, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091084862634473`*^9, 3.8091085770332623`*^9}, {
  3.8091086207602324`*^9, 3.8091086335169997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
sIV+OmPd1OIiF7//JnXnvWmh/z8kpEEZ
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.10000001836734694`, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Decay, Out-of-Plane Polarization\"", FontSize -> 12, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809108483913726*^9, 3.8091084897730637`*^9}, {
  3.809108539897114*^9, 3.809108577939898*^9}, {3.809108625197299*^9, 
  3.809108634511338*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "k", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
   RowBox[{"GdotP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rx", ",", "ry", ",", "rz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8091088252115297`*^9, 3.809108855647868*^9}, {
  3.809108894600909*^9, 3.809108990369721*^9}, {3.8091090225747766`*^9, 
  3.809109056453086*^9}, {3.8091096542948904`*^9, 3.8091097023074875`*^9}, {
  3.809109992155261*^9, 3.8091100197724724`*^9}, {3.8091100825556245`*^9, 
  3.8091101348670444`*^9}, {3.8091101771248493`*^9, 3.809110191996142*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["ry", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["rz", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["rx", "2"], "+", 
      SuperscriptBox["ry", "2"], "+", 
      SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["rx", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["rx", "2"], "+", 
            SuperscriptBox["ry", "2"], "+", 
            SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
       RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}], ")"}], "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rx", "2"], "+", 
         SuperscriptBox["ry", "2"], "+", 
         SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["rx", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"5", "/", "2"}]]}]], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["ry", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["rz", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.809110192434922*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Together", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8091097221196704`*^9, 3.809109725425786*^9}}],

Cell["\<\
Why does the ferromagnetic mode become increasingly subradiant as d becomes \
smaller, whereas the nearest neighbor coupling vanishes very sharply?\
\>", "Text",
 CellChangeTimes->{{3.809016409143978*^9, 3.8090164817003417`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["tests", "Section",
 CellChangeTimes->{{3.8067085522849584`*^9, 3.806708562119661*^9}}],

Cell["\<\
Check my grid mapping. 2D grid, but only one index to specify atoms. \
\>", "Text",
 CellChangeTimes->{{3.8055812128834515`*^9, 3.805581234435918*^9}, {
  3.8090198717970705`*^9, 3.8090198740475454`*^9}}],

Cell[CellGroupData[{

Cell["square grid", "Subsubsection",
 CellChangeTimes->{{3.8090198877837677`*^9, 3.8090198943241434`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num", " ", "=", " ", 
    SqrtBox["atomnum"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atom", "[", 
    RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"excited", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
            "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
            "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], "}"}]}],
          ",", 
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"j", "-", "1"}], ",", "num"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
           "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gridpts", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"atom", "[", 
       RowBox[{"i", ",", "False"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", 
         SuperscriptBox["num", "2"], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"excited", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"atom", "[", 
        RowBox[{"i", ",", "True"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"atomnum", "-", "1"}], "2"], "+", 
             RowBox[{
              SqrtBox["atomnum"], " ", "i"}], "+", "j", "-", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
           "]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", "[", "pts_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"1", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.805581333965639*^9, 3.8055814341893806`*^9}, {
   3.805581552511201*^9, 3.8055815960303836`*^9}, {3.805581629511797*^9, 
   3.8055816883682003`*^9}, {3.8055817251288686`*^9, 
   3.8055817262478523`*^9}, {3.805581886212476*^9, 3.8055818997023997`*^9}, {
   3.805581939032192*^9, 3.8055820448102236`*^9}, {3.8056697625052896`*^9, 
   3.8056698196551075`*^9}, {3.8065230852646923`*^9, 
   3.8065230871668463`*^9}, {3.806523244000454*^9, 3.8065232904876947`*^9}, {
   3.806523351830069*^9, 3.806523378934533*^9}, {3.806523835979823*^9, 
   3.8065238841500297`*^9}, {3.806523947442684*^9, 3.8065240254449883`*^9}, {
   3.8065240606577477`*^9, 3.8065240730513306`*^9}, {3.806524114790417*^9, 
   3.806524148044992*^9}, {3.808175601187192*^9, 3.808175634705696*^9}, {
   3.8088539626628017`*^9, 3.8088540437169886`*^9}, {3.8088541642627516`*^9, 
   3.8088542064094296`*^9}, {3.8088542562133045`*^9, 3.808854281762638*^9}, {
   3.808854316666351*^9, 3.8088546183816257`*^9}, {3.808854679622679*^9, 
   3.8088547519374275`*^9}, {3.8088549928765655`*^9, 3.8088550254883757`*^9}, 
   3.808862892214314*^9, {3.8090197898333473`*^9, 3.809019885729237*^9}, {
   3.8090213636047497`*^9, 3.809021383906481*^9}, {3.8090217672219486`*^9, 
   3.8090217704323263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"0.7", ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3fJsH9OkqDeOGfxu/CD6ULSAHIh+/qNBGUQvSdig
DqJ9TnDrg+iN8kuMwerfHQfTs84ccwfR/FVlniB6B3uiH4iOejszGkSHagcY
7AWZ863EHETHVKy4GRvzxvFc2FMwvYO54S2INprt/xlEv+3/9QtEb3oe+w9E
b4uqN48D0txnW2xBdIVWniuIjrDV8wfRrjxTg0F0wxLFUBAt6R0ZBaInFzTG
geiqv6r7WuLfOApMDTsEoteYhv48n/DGcdLHMuYLQLoso0MIRPNInRUH0SmX
2eRAdEe6hSKI3h80VRVEV59XsAPRCoqSXiDa2ucqmJ7V5RwCohs2RILpa6+z
YkD03X+TwbRY3cFUEB3071Q22FzZ7vArQHqFm1IUiD5zqn2XYuIbx8z97ntA
NABn7shV
  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 4}, 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 1}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 2}}]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->{{-1, 5}, {-1, 5}}]], "Output",
 CellChangeTimes->{{3.805581655114204*^9, 3.8055816888449235`*^9}, 
   3.8055819020959787`*^9, {3.805581941482599*^9, 3.805581976920786*^9}, {
   3.805582038182976*^9, 3.8055820450695515`*^9}, 3.805669582249579*^9, {
   3.805669805938079*^9, 3.805669820223586*^9}, 3.8059998840810094`*^9, 
   3.806523291233897*^9, 3.8065233798524733`*^9, {3.8065238580323625`*^9, 
   3.8065238847552323`*^9}, {3.806524006640272*^9, 3.8065240259317565`*^9}, {
   3.8065240672190237`*^9, 3.8065240738995457`*^9}, 3.806524148572755*^9, 
   3.8081755189332676`*^9, 3.808175636178617*^9, 3.8088536023104763`*^9, {
   3.808854019565382*^9, 3.8088540442714815`*^9}, {3.80885417950504*^9, 
   3.8088542068163023`*^9}, {3.8088542572328033`*^9, 3.808854282126666*^9}, {
   3.8088543483426723`*^9, 3.808854355524477*^9}, 3.8088545068807526`*^9, 
   3.8088546203094683`*^9, {3.8088546828779745`*^9, 3.808854698773489*^9}, 
   3.8088547596048913`*^9, {3.808854831449887*^9, 3.8088548788481965`*^9}, {
   3.8088550018096895`*^9, 3.808855029306165*^9}, {3.8088629004731874`*^9, 
   3.808862929573784*^9}, {3.8090213785567803`*^9, 3.80902141075273*^9}, 
   3.8090217716420937`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["hex grid", "Subsubsection",
 CellChangeTimes->{{3.8090199043830104`*^9, 3.8090199092154503`*^9}, {
  3.809019960759105*^9, 3.80901996974614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumx", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomnumy", " ", "=", 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["3"]], "atomnumx"}], "+", "0.5"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
    RowBox[{
     FractionBox["a", "2"], 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
       "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "i_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     SqrtBox["3"], "2"], 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atom", "[", 
    RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"excited", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", 
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "j", "]"}], ",", 
            RowBox[{"y", "[", "j", "]"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridpts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"atom", "[", 
      RowBox[{"i", ",", "False"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"positions", "[", "pts_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"1", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.809021470240757*^9, 3.809021536932454*^9}, 
   3.8090215998981524`*^9, {3.8090217224147024`*^9, 3.809021723896715*^9}, 
   3.8090217604680147`*^9, {3.8090218065617704`*^9, 3.8090218662552247`*^9}, {
   3.8090219217738*^9, 3.8090219218635607`*^9}, {3.8090219572918634`*^9, 
   3.809021971994565*^9}, {3.80902228825834*^9, 3.8090223320751686`*^9}, {
   3.80902239796904*^9, 3.8090224258844547`*^9}, 3.809022473094236*^9, {
   3.8090225162768106`*^9, 3.8090225213073654`*^9}, {3.809022634832921*^9, 
   3.8090226571702123`*^9}, {3.809022692643534*^9, 3.8090227098625097`*^9}, {
   3.809022828261039*^9, 3.8090229389960513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", "2"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8090224764253407`*^9, 3.8090224983517246`*^9}, {
  3.8090225322600927`*^9, 3.8090225476549387`*^9}, {3.8090226040152936`*^9, 
  3.8090226164460683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.809022524857874*^9, 3.8090225480070133`*^9}, {
  3.809022604650595*^9, 3.8090226169108405`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13", ",", "18"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumx"}], " ", "}"}]}], ",", 
      RowBox[{"a", 
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumy"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.809021552640469*^9, 3.8090215841482496`*^9}, 
   3.80902162020292*^9, {3.8090219343224115`*^9, 3.8090219509837265`*^9}, 
   3.8090224444348397`*^9, {3.8090227244565506`*^9, 3.8090227425072556`*^9}, {
   3.80902278874566*^9, 3.809022806709644*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[1, 2] 3^Rational[1, 2]}, {4.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 3^Rational[1, 2]}, {0, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[3, 2] 3^Rational[1, 2]}, {0.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[3, 2] 3^Rational[1, 2]}, {1.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}, {2.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[3, 2] 3^Rational[1, 2]}, {3.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[3, 2] 3^Rational[1, 2]}, {4.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 2 3^Rational[1, 2]}, {0, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 2 3^Rational[1, 2]}, {1, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 2 3^Rational[1, 2]}, {2, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 2 3^Rational[1, 2]}, {3, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 2 3^Rational[1, 2]}, {4, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[5, 2] 3^Rational[1, 2]}, {0.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[5, 2] 3^Rational[1, 2]}, {1.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[5, 2] 3^Rational[1, 2]}, {2.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[5, 2] 3^Rational[1, 2]}, {3.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[5, 2] 3^Rational[1, 2]}, {4.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       0.8660254037844386}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {2, 3^Rational[1, 2]}}, {{0, 0}, {
       2, 1.7320508075688772`}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       2.598076211353316}}]]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->
   NCache[{{-1, 5}, {
     Rational[-1, 2] 3^Rational[1, 2], 3 3^Rational[1, 2]}}, {{-1, 
     5}, {-0.8660254037844386, 5.196152422706632}}]]], "Output",
 CellChangeTimes->{{3.809021584732686*^9, 3.8090216213797317`*^9}, 
   3.8090217296214094`*^9, {3.809021850723713*^9, 3.809021869413793*^9}, {
   3.809021923623888*^9, 3.8090219740211487`*^9}, {3.8090224321267376`*^9, 
   3.8090224501006937`*^9}, {3.809022638302681*^9, 3.809022660501314*^9}, {
   3.80902270057234*^9, 3.8090227428902593`*^9}, {3.80902279043915*^9, 
   3.8090228072521925`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{848, 811},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{
 "zunonian", "zunon", "linewidth", "waveplate", "lightbulbs", "unpolarized", 
  "collimated", "atomnums"}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 2, 272, "Chapter"],
Cell[774, 26, 192, 5, 63, "Text"],
Cell[CellGroupData[{
Cell[991, 35, 101, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[1117, 40, 99, 1, 275, "Subsection"],
Cell[1219, 43, 1336, 26, 1038, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2592, 74, 92, 1, 275, "Subsection"],
Cell[2687, 77, 845, 13, 535, "Text"],
Cell[3535, 92, 1680, 40, 441, "Text"],
Cell[5218, 134, 366, 7, 175, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5633, 147, 191, 3, 68, "Section"],
Cell[5827, 152, 321, 5, 88, "Text"],
Cell[6151, 159, 18899, 422, 1661, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[25087, 586, 268, 3, 68, "Section"],
Cell[25358, 591, 268, 5, 38, "Text"],
Cell[CellGroupData[{
Cell[25651, 600, 1630, 34, 123, "Input"],
Cell[27284, 636, 589, 10, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27910, 651, 314, 4, 49, "Subsubsection"],
Cell[28227, 657, 4500, 136, 508, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32764, 798, 272, 3, 49, "Subsubsection"],
Cell[33039, 803, 5279, 155, 976, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[38355, 963, 98, 1, 40, "Subsubsection"],
Cell[38456, 966, 171, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[38652, 974, 9871, 223, 1035, "Input"],
Cell[48526, 1199, 534, 9, 88, "Output"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49109, 1214, 108, 1, 49, "Subsubsection"],
Cell[CellGroupData[{
Cell[49242, 1219, 612, 12, 177, "Input"],
Cell[49857, 1233, 29056, 577, 522, "Output"]
}, Open  ]],
Cell[78928, 1813, 163, 2, 57, "Text"],
Cell[79094, 1817, 1068, 26, 138, "Input"],
Cell[CellGroupData[{
Cell[80187, 1847, 2098, 49, 372, "Input"],
Cell[82288, 1898, 39658, 803, 522, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121983, 2706, 365, 7, 58, "Input"],
Cell[122351, 2715, 193, 2, 58, "Output"]
}, Open  ]],
Cell[122559, 2720, 1131, 32, 216, "Input"],
Cell[CellGroupData[{
Cell[123715, 2756, 615, 19, 100, "Input"],
Cell[124333, 2777, 1839, 37, 633, "Output"],
Cell[126175, 2816, 340, 7, 43, "Message"],
Cell[126518, 2825, 388, 8, 43, "Message"],
Cell[126909, 2835, 388, 8, 43, "Message"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[127358, 2850, 103, 1, 68, "Section"],
Cell[127464, 2853, 1121, 20, 110, "Input"],
Cell[CellGroupData[{
Cell[128610, 2877, 420, 5, 59, "Subsection"],
Cell[129033, 2884, 6723, 204, 710, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[135793, 3093, 182, 2, 48, "Subsection"],
Cell[CellGroupData[{
Cell[136000, 3099, 968, 24, 170, "Input"],
Cell[136971, 3125, 184, 2, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[137204, 3133, 234, 3, 48, "Subsection"],
Cell[137441, 3138, 1667, 46, 198, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[139145, 3189, 174, 2, 48, "Subsection"],
Cell[139322, 3193, 8018, 195, 786, "Input"],
Cell[CellGroupData[{
Cell[147365, 3392, 2905, 53, 134, "Input"],
Cell[150273, 3447, 453, 8, 28, "Print"]
}, Open  ]],
Cell[150741, 3458, 477, 12, 49, "Input"],
Cell[151221, 3472, 476, 12, 49, "Input"],
Cell[151700, 3486, 174, 2, 49, "Subsubsection"]
}, Closed]],
Cell[CellGroupData[{
Cell[151911, 3493, 111, 1, 48, "Subsection"],
Cell[CellGroupData[{
Cell[152047, 3498, 104, 1, 49, "Subsubsection"],
Cell[152154, 3501, 214, 5, 63, "Text"],
Cell[CellGroupData[{
Cell[152393, 3510, 1804, 39, 223, "Input"],
Cell[154200, 3551, 452405, 7445, 313, 434582, 7153, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606642, 11001, 537, 12, 108, "Input"],
Cell[607182, 11015, 197, 3, 37, "Output"]
}, Open  ]],
Cell[607394, 11021, 379, 5, 38, "Text"],
Cell[CellGroupData[{
Cell[607798, 11030, 167, 4, 37, "Input"],
Cell[607968, 11036, 185, 5, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608190, 11046, 3647, 91, 461, "Input"],
Cell[611840, 11139, 122148, 2109, 315, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[734025, 13253, 587, 14, 166, "Input"],
Cell[734615, 13269, 254, 4, 37, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[734918, 13279, 107, 1, 40, "Subsubsection"],
Cell[735028, 13282, 105, 1, 38, "Text"],
Cell[735136, 13285, 1213, 31, 223, "Input"],
Cell[CellGroupData[{
Cell[736374, 13320, 286, 8, 37, "Input"],
Cell[736663, 13330, 235, 7, 37, "Output"]
}, Open  ]],
Cell[736913, 13340, 1753, 46, 165, "Input"],
Cell[738669, 13388, 186, 2, 38, "Text"],
Cell[CellGroupData[{
Cell[738880, 13394, 1522, 40, 107, "Input"],
Cell[740405, 13436, 76, 1, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[740530, 13443, 115, 1, 49, "Subsubsection"],
Cell[740648, 13446, 367, 6, 63, "Text"],
Cell[741018, 13454, 9256, 232, 932, "Input"],
Cell[CellGroupData[{
Cell[750299, 13690, 2852, 59, 252, "Input"],
Cell[753154, 13751, 54080, 960, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[807271, 14716, 480, 12, 108, "Input"],
Cell[807754, 14730, 261, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[808052, 14738, 224, 5, 37, "Input"],
Cell[808279, 14745, 2530, 53, 299, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810846, 14803, 135, 2, 37, "Input"],
Cell[810984, 14807, 1772, 41, 305, "Output"]
}, Open  ]],
Cell[812771, 14851, 182, 2, 38, "Text"],
Cell[812956, 14855, 1879, 50, 147, "Input"],
Cell[CellGroupData[{
Cell[814860, 14909, 1850, 42, 182, "Input"],
Cell[816713, 14953, 29085, 565, 336, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[845835, 15523, 557, 13, 166, "Input"],
Cell[846395, 15538, 238, 3, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846670, 15546, 328, 8, 37, "Input"],
Cell[847001, 15556, 246, 6, 37, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[847296, 15568, 128, 1, 40, "Subsubsection"],
Cell[847427, 15571, 285, 6, 63, "Text"],
Cell[847715, 15579, 9191, 231, 932, "Input"],
Cell[856909, 15812, 1609, 34, 110, "Input"],
Cell[CellGroupData[{
Cell[858543, 15850, 397, 11, 37, "Input"],
Cell[858943, 15863, 16923, 453, 37, "Output"]
}, Open  ]],
Cell[875881, 16319, 128, 1, 38, "Text"],
Cell[876012, 16322, 1291, 38, 158, "Input"],
Cell[CellGroupData[{
Cell[877328, 16364, 2247, 57, 387, "Input"],
Cell[879578, 16423, 41422, 802, 517, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[921037, 17230, 506, 12, 135, "Input"],
Cell[921546, 17244, 166, 2, 46, "Output"]
}, Open  ]],
Cell[921727, 17249, 95, 1, 47, "Text"],
Cell[CellGroupData[{
Cell[921847, 17254, 3492, 83, 568, "Input"],
Cell[925342, 17339, 4761, 92, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[930140, 17436, 136, 4, 61, "Input"],
Cell[930279, 17442, 216, 5, 46, "Output"]
}, Open  ]],
Cell[930510, 17450, 250, 7, 64, "Input"],
Cell[930763, 17459, 2678, 67, 373, "Input"],
Cell[933444, 17528, 3388, 82, 479, "Input"],
Cell[CellGroupData[{
Cell[936857, 17614, 853, 18, 108, "Input"],
Cell[937713, 17634, 409, 5, 37, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[938195, 17647, 184, 2, 86, "Section"],
Cell[CellGroupData[{
Cell[938404, 17653, 112, 1, 118, "Subsubsection"],
Cell[938519, 17656, 219, 4, 90, "Text"],
Cell[938741, 17662, 182, 3, 88, "Input"],
Cell[938926, 17667, 5077, 132, 1688, "Input"],
Cell[CellGroupData[{
Cell[944028, 17803, 133, 2, 88, "Input"],
Cell[944164, 17807, 21799, 572, 908, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[966000, 18384, 1096, 30, 487, "Input"],
Cell[967099, 18416, 657, 18, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[967793, 18439, 574, 16, 237, "Input"],
Cell[968370, 18457, 633, 18, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[969040, 18480, 228, 5, 88, "Input"],
Cell[969271, 18487, 2934, 87, 481, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[972242, 18579, 122, 2, 88, "Input"],
Cell[972367, 18583, 99, 2, 88, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[972515, 18591, 115, 1, 118, "Subsubsection"],
Cell[972633, 18594, 218, 4, 90, "Text"],
Cell[972854, 18600, 191, 5, 88, "Input"],
Cell[973048, 18607, 128, 1, 90, "Text"],
Cell[973179, 18610, 793, 19, 150, "Input"],
Cell[973975, 18631, 885, 29, 246, "Input"],
Cell[974863, 18662, 528, 15, 88, "Input"],
Cell[975394, 18679, 572, 19, 156, "Input"],
Cell[CellGroupData[{
Cell[975991, 18702, 1862, 57, 493, "Input"],
Cell[977856, 18761, 1136, 40, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[979029, 18806, 2569, 76, 627, "Input"],
Cell[981601, 18884, 11314, 197, 688, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[992952, 19086, 4694, 115, 858, "Input"],
Cell[997649, 19203, 332771, 5548, 783, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1330457, 24756, 219, 5, 88, "Input"],
Cell[1330679, 24763, 108, 1, 88, "Output"]
}, Open  ]],
Cell[1330802, 24767, 1779, 46, 625, "Input"],
Cell[CellGroupData[{
Cell[1332606, 24817, 2255, 52, 625, "Input"],
Cell[1334864, 24871, 96934, 1900, 791, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1431835, 26776, 2165, 56, 657, "Input"],
Cell[1434003, 26834, 96464, 1893, 791, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1530504, 28732, 1938, 52, 625, "Input"],
Cell[1532445, 28786, 11747, 209, 652, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1544229, 29000, 1694, 43, 507, "Input"],
Cell[1545926, 29045, 7398, 138, 733, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1553361, 29188, 784, 17, 150, "Input"],
Cell[1554148, 29207, 6679, 212, 1172, "Output"]
}, Open  ]],
Cell[1560842, 29422, 124, 2, 88, "Input"],
Cell[1560969, 29426, 239, 4, 213, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1561257, 29436, 92, 1, 68, "Section"],
Cell[1561352, 29439, 214, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[1561591, 29447, 106, 1, 49, "Subsubsection"],
Cell[1561700, 29450, 5388, 145, 418, "Input"],
Cell[CellGroupData[{
Cell[1567113, 29599, 1382, 37, 110, "Input"],
Cell[1568498, 29638, 2681, 48, 472, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1571228, 29692, 151, 2, 61, "Subsubsection"],
Cell[1571382, 29696, 5309, 163, 546, "Input"],
Cell[CellGroupData[{
Cell[1576716, 29863, 569, 16, 46, "Input"],
Cell[1577288, 29881, 490, 9, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1577815, 29895, 1110, 29, 120, "Input"],
Cell[1578928, 29926, 4652, 115, 598, "Output"]
}, Open  ]],
Cell[1583595, 30044, 1375, 45, 147, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

