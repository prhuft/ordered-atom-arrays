(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1143567,      22276]
NotebookOptionsPosition[   1136401,      22044]
NotebookOutlinePosition[   1136919,      22063]
CellTagsIndexPosition[   1136876,      22060]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Subradiance-protected excitation spreading for \
collimated photon emission", "Title"]], "Chapter",
 CellChangeTimes->{{3.804795257142758*^9, 3.8047952870781355`*^9}}],

Cell["\<\
P. Huft
See paper by K. Ballantine, J. Ruostekoski\
\>", "Text",
 CellChangeTimes->{{3.8047952896493063`*^9, 3.804795315348673*^9}, {
  3.8069647340862026`*^9, 3.80696474134041*^9}}],

Cell[CellGroupData[{

Cell["personal notes", "Section",
 CellChangeTimes->{{3.805668161042568*^9, 3.8056681662163057`*^9}}],

Cell[CellGroupData[{

Cell["Questions", "Subsection",
 CellChangeTimes->{{3.805668173776622*^9, 3.8056681752571135`*^9}}],

Cell[TextData[{
 "Why can a system which is excited with a single photon be adequately \
described by classical E&M?\n\nThe collective mode which is predominantly \
coupled by the initial excitation (after rotating the polarization to be \
normal to the atom grid plane) decays slowly, i.e. is subradiant, while other \
modes decay superradiantly. Why do these other modes see an a higher rate of \
decay than independent decay? Does it just \[OpenCurlyDoubleQuote]come out of \
the math\[CloseCurlyDoubleQuote] as with the ",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]]],
 " enhancement of ensemble Rabi flopping?\n\nHow does my ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "eff"], TraditionalForm]]],
 " \[OpenCurlyDoubleQuote]know\[CloseCurlyDoubleQuote] that atomic \
transitions with circular light are possible? there is no defined \
quantization axis... maybe there should be? but then there would be zeeman \
splitting, which i don\[CloseCurlyQuote]t want. As it stands, all of the \
symmetric basis states for my diagonalized ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "eff"], TraditionalForm]]],
 " have equal occupation in all m=0 sub-states. "
}], "Text",
 CellChangeTimes->{{3.805668178473505*^9, 3.8056683966718793`*^9}, {
   3.808681468062796*^9, 3.808681624587453*^9}, 3.808681678962863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Todo", "Subsection",
 CellChangeTimes->{{3.809016293718589*^9, 3.809016295903796*^9}}],

Cell["\<\
- add code for saving the solutions to a text file; i do not want to have to \
reproduce these when some take several hours to evaluate.
-  Check: does the ferromagnetic eigenmode not fully overlap a true \
ferromagnetic mode? In other words, does it have polarizations near zero that \
would allow out-of-plane emission? The in-plane mode is never very subradiant \
for this reason. It may be that there is an eigenmode that is very nearly a \
perfect ferromagnetic configuration. 
- What mechanism is behind the superradiant spike around d = \[Lambda]?\
\>", "Text",
 CellChangeTimes->{{3.8089201000159044`*^9, 3.8089201010651293`*^9}, {
  3.8089209320397234`*^9, 3.808921073334525*^9}, {3.8089516515033255`*^9, 
  3.808951651693852*^9}, {3.808951701117739*^9, 3.808951817687162*^9}, {
  3.809016299282811*^9, 3.809016300645117*^9}}],

Cell[TextData[{
 "Restricting this problem to the single-excitation subspace, the Hamiltonian \
matrix elements are: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "j"}], "-", "1", "+", "\[Nu]"}], ",", 
      RowBox[{
       RowBox[{"3", "k"}], "-", "1", "+", "\[Nu]"}]}]], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["H", "\[Nu]\[Mu]"], 
      RowBox[{"(", "jk", ")"}]], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "\[Mu]"], 
       SubscriptBox["\[Delta]", "jk"], 
       SubscriptBox["\[Delta]", "\[Mu]\[Nu]"]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[CapitalOmega]", "\[Mu]\[Nu]"], 
        RowBox[{"(", "jk", ")"}]], "(", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Delta]", "jk"]}], ")"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox[
        SubscriptBox["\[Gamma]", "\[Mu]\[Nu]"], 
        RowBox[{"(", "jk", ")"}]]}]}]}]}], TraditionalForm]]],
 ", \[HBar]=1, where \[Mu],\[Nu] specify polarization in a spherical basis \
and j,k are the atom indices in the 2D grid. The dynamics in this subspace \
are coherent, but H is non-Hermitian, so there is dissipation as the \
excitation diffuses into the collective ground state. "
}], "Text",
 CellChangeTimes->{{3.804795955202659*^9, 3.804796203497088*^9}, {
  3.8051540631375103`*^9, 3.8051541172328863`*^9}, {3.8060047095110035`*^9, 
  3.8060047102689743`*^9}, {3.8066050132591124`*^9, 3.8066050897983627`*^9}, {
  3.806708395044424*^9, 3.806708426075447*^9}, {3.8086762139235163`*^9, 
  3.808676221044484*^9}, {3.808681458085475*^9, 3.80868146251762*^9}}],

Cell["\<\
- \[CapitalDelta],\[Gamma] values used are arbitrary with the given choice of \
plot units. \
\>", "Text",
 CellChangeTimes->{{3.804797675818221*^9, 3.804797723814588*^9}, {
   3.8060077992621117`*^9, 3.8060078474172754`*^9}, {3.806527383456627*^9, 
   3.8065274289762917`*^9}, {3.8069659357565007`*^9, 3.8069660075004425`*^9}, 
   3.8087507235797634`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["general setup - run first", "Section",
 CellChangeTimes->{
  3.804795272338377*^9, {3.8047953612651463`*^9, 3.8047953705323234`*^9}, {
   3.8094683321662207`*^9, 3.809468337342882*^9}}],

Cell["\<\
System description: atomnum two-level atoms arranged in a 2D square grid with \
equal periodicity in x and y. The lower level is has only one angular \
momentum state (J=0) while the upper state has three Zeeman sublevels (J=1). \
\>", "Text",
 CellChangeTimes->{{3.8065110621169147`*^9, 3.806511163740156*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"PHYSICAL", " ", "CONSTANTS"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[HBar]", " ", "=", " ", 
     RowBox[{"6.62607015*^-34", "/", 
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", " ", "=", 
     RowBox[{"4", "\[Pi]", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", " ", "=", " ", "299792458"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]0", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["c", "2"], " ", "\[Mu]0"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ee", " ", "=", " ", "1.602*^-19"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"electron", " ", "charge"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"a0", " ", "=", " ", "5.27*^-11"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Bohr", " ", "radius"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"PARAMETERS", " ", "and", " ", "other", " ", "DEFINITIONS"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[Lambda]", " ", "=", " ", 
     RowBox[{"7.8", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"matelem", " ", "=", " ", 
     RowBox[{"ee", " ", "a0"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "just", " ", "assume", " ", "a", " ", "general", " ", "matrix", " ", 
      "element", " ", "is", " ", "of", " ", "this", " ", "order", " ", "for", 
      " ", 
      RowBox[{"now", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[Gamma]", " ", "=", " ", 
     RowBox[{
      SuperscriptBox["matelem", "2"], 
      RowBox[{
       SuperscriptBox["k", "3"], "/", 
       RowBox[{"(", 
        RowBox[{"6", " ", "\[Pi]", " ", "\[Epsilon]0"}], ")"}]}]}]}], ";", 
    " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"single", " ", "two"}], "-", 
       RowBox[{"level", " ", "atom", " ", "linewidth"}]}], ",", " ", 
      RowBox[{"\[HBar]", "=", "1"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"pol", " ", "=", " ", 
     RowBox[{"Range", "[", "3", "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"pol", "[", 
        RowBox[{"[", "\[Mu]", "]"}], "]"}], "/.", 
       RowBox[{"u", "->", "1"}]}], ",", "2", ",", 
      RowBox[{
       RowBox[{"3", " ", "for", " ", "polarization", " ", "\[Sigma]"}], "=", 
       RowBox[{"-", "1"}]}], ",", "0", ",", 
      RowBox[{"+", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"atomnum", " ", "=", " ", "atomnum"}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Hamiltonian", " ", "shape", " ", "is", " ", "atomnum", " ", "x", " ", 
       "atomnum"}], ",", " ", 
      RowBox[{
       RowBox[{"with", " ", "state", " ", "vector"}], " ", "=", " ", 
       "atomnum"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"unit", "[", "v_", "]"}], ":=", 
     FractionBox["v", 
      SqrtBox[
       RowBox[{"v", ".", "v"}]]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GdotP", "[", 
      RowBox[{"r_", ",", "p_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", 
         SqrtBox[
          RowBox[{"r", ".", "r"}]]}]], 
       RowBox[{"4", " ", "\[Pi]", " ", 
        SqrtBox[
         RowBox[{"r", ".", "r"}]]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}], ",", 
          RowBox[{"unit", "[", "r", "]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["k", "2"], 
             RowBox[{"r", ".", "r"}]}]], "-", 
           FractionBox["\[ImaginaryI]", 
            RowBox[{"k", " ", 
             SqrtBox[
              RowBox[{"r", ".", "r"}]]}]]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", 
            RowBox[{"unit", "[", "r", "]"}], " ", 
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}]}], "-", 
           "p"}], ")"}]}]}], ")"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "r", " ", "is", " ", "the", " ", "positional", " ", "unit", " ", 
       "vector"}], ",", " ", 
      RowBox[{
      "p", " ", "is", " ", "an", " ", "atomic", " ", "dipole", " ", 
       "moment"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["e", "\[Mu]_"], " ", ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "[", 
      RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"generic", " ", "basis", " ", "vector", " ", "set"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["ecart", "\[Mu]_"], ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"-", "\[ImaginaryI]"}], 
          SqrtBox["2"]], 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", "0"}], "}"}]}], "}"}], "[", 
      RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"linewidthplot", "[", 
     RowBox[{
     "sln_", ",", "polmodes_", ",", "gridshape_", ",", " ", "numx_", ",", 
      "numy_", ",", "plttitle_", ",", "saveplot_", ",", "savesoln_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"plots", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"lastmode", "=", "0"}], ",", "modelist", ",", "plt", ",", 
        "fname", ",", "title"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"polmode", "=", "1"}], ",", 
         RowBox[{"polmode", "<", 
          RowBox[{
           RowBox[{"Length", "[", "polmodes", "]"}], "+", "1"}]}], ",", 
         RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"modelist", "=", 
           RowBox[{"polmodes", "[", 
            RowBox[{"[", 
             RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "<", 
             RowBox[{
              RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"plots", ",", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"sln", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "lastmode"}], "]"}], "]"}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "5"}], ",", "3"}], "}"}]}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"modelist", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                 RowBox[{"PlotLegends", "\[Rule]", " ", 
                  RowBox[{"{", 
                   RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "}"}]}]}], "]"}]}],
               "]"}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"lastmode", "=", 
           RowBox[{"i", "-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"gridshape", "\[Equal]", "\"\<square\>\""}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"plots", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Log10", "[", 
              FractionBox["3", 
               RowBox[{"4", "\[Pi]", " ", 
                SuperscriptBox["d", "2"]}]], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"d", ",", "0.02", ",", "1.21"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"Red", ",", "Dashed"}], "]"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"{", "\"\<N\[Rule]\[Infinity], In-Plane\>\"", "}"}]}]}],
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fname", " ", "=", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<plot_linewidth_v_period_````x``.png\>\"", ",", "gridshape", 
           ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"saveplot", ",", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", "plt"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fname", " ", "=", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<soln_linewidth_v_period_````x``.txt\>\"", ",", "gridshape", 
           ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"savesoln", ",", 
         RowBox[{"Export", "[", 
          RowBox[{"fname", ",", 
           RowBox[{"ToString", "[", "sln", "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"title", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"plttitle", "\[Equal]", "\"\<\>\""}], ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Collective linewidths for ``x`` `` grid\>\"", ",", "numx", 
             ",", "numy", ",", "gridshape"}], "]"}], "]"}], ",", "plttitle"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"plt", " ", "=", " ", 
        RowBox[{"Show", "[", 
         RowBox[{"plots", ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{"title", ",", 
             RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
          RowBox[{"Frame", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"True", ",", "True", ",", "False", ",", "False"}], 
            "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Lattice period d [\[Lambda]]\>\"", ",", 
             "\"\<\!\(\*SubscriptBox[\(Log\), \
\(10\)]\)(\!\(\*SubscriptBox[\(v\), \(n\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
          RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", 
             RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}]}], " ", 
         "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
    RowBox[{"(*", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"z", " ", "in", " ", "spherical", " ", "basis"}]}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.804795372139743*^9, 3.8047954565762587`*^9}, {
   3.804795557477767*^9, 3.804795646192586*^9}, {3.805670829592176*^9, 
   3.8056708978355913`*^9}, {3.8059959856055202`*^9, 3.805995986254162*^9}, {
   3.8059985871648145`*^9, 3.8059986288484855`*^9}, {3.8059997358360014`*^9, 
   3.805999788758046*^9}, {3.8059999118297677`*^9, 3.8059999521643977`*^9}, {
   3.805999992044653*^9, 3.8060000636137767`*^9}, {3.8060001456463013`*^9, 
   3.8060001964015045`*^9}, {3.8060002660690813`*^9, 3.8060002884442167`*^9}, 
   3.806000626716222*^9, 3.806001860902274*^9, 3.8060020439721518`*^9, {
   3.8060026207721825`*^9, 3.80600266366413*^9}, {3.8060026966204414`*^9, 
   3.8060027062593665`*^9}, {3.8060060864367876`*^9, 3.806006284666767*^9}, {
   3.80600633970216*^9, 3.806006436560063*^9}, {3.8060064977258167`*^9, 
   3.8060065810076523`*^9}, {3.8065097730595045`*^9, 3.806509811016704*^9}, {
   3.8065108020023785`*^9, 3.8065108352304597`*^9}, {3.806511491827402*^9, 
   3.806511491880254*^9}, {3.8065116937092276`*^9, 3.8065117567284775`*^9}, 
   3.806512394112631*^9, {3.806512596967489*^9, 3.806512597549224*^9}, {
   3.806512635854741*^9, 3.806512639698132*^9}, 3.8065184714886026`*^9, {
   3.806518807617782*^9, 3.806518818536937*^9}, {3.8065188588224583`*^9, 
   3.8065188745589724`*^9}, {3.806522742274407*^9, 3.8065227992408857`*^9}, {
   3.80652624964219*^9, 3.8065263011476345`*^9}, {3.806526338176937*^9, 
   3.806526338878935*^9}, {3.806527870071875*^9, 3.806527886706303*^9}, {
   3.8065280491641827`*^9, 3.8065280499206524`*^9}, {3.8065288434330974`*^9, 
   3.8065288441316767`*^9}, {3.80652935916156*^9, 3.806529360595722*^9}, 
   3.8065909213975697`*^9, {3.8065945956794834`*^9, 3.8065946197902155`*^9}, {
   3.806595111718749*^9, 3.80659511816251*^9}, {3.8066044544589233`*^9, 
   3.8066044646028137`*^9}, {3.80696565986509*^9, 3.8069656634134607`*^9}, {
   3.8069656979471774`*^9, 3.8069657129861*^9}, {3.806965905008503*^9, 
   3.806965917930096*^9}, {3.806969203048703*^9, 3.806969247088546*^9}, {
   3.806969399593093*^9, 3.806969426621357*^9}, {3.8069694691605425`*^9, 
   3.8069695583291035`*^9}, {3.8069696687010384`*^9, 
   3.8069697479909005`*^9}, {3.8069708799936037`*^9, 3.806970937308947*^9}, {
   3.8071341724945297`*^9, 3.8071342023307457`*^9}, {3.807134239967105*^9, 
   3.807134245276909*^9}, {3.8071343282560205`*^9, 3.8071343467146626`*^9}, {
   3.8071344033173037`*^9, 3.8071345328828435`*^9}, {3.8071353004034786`*^9, 
   3.8071353048336315`*^9}, {3.807135353381813*^9, 3.807135371458476*^9}, {
   3.807136104073449*^9, 3.807136128133113*^9}, {3.807136286895579*^9, 
   3.8071363155599303`*^9}, {3.807182165268559*^9, 3.8071821736182346`*^9}, {
   3.807184444104906*^9, 3.8071845076699314`*^9}, {3.8071864003406534`*^9, 
   3.8071864384617157`*^9}, {3.807186480235013*^9, 3.807186493333987*^9}, {
   3.8071866070229807`*^9, 3.807186607130693*^9}, {3.8071868135856285`*^9, 
   3.8071868476256046`*^9}, 3.807203261610388*^9, {3.8072038692517233`*^9, 
   3.8072038740319357`*^9}, {3.807213911849493*^9, 3.8072139140357633`*^9}, {
   3.8072140018354006`*^9, 3.8072140100513997`*^9}, {3.8072173311304865`*^9, 
   3.807217345535433*^9}, {3.807221360734707*^9, 3.8072213636309876`*^9}, {
   3.8079821163915453`*^9, 3.8079821587163076`*^9}, {3.807986244761863*^9, 
   3.807986305420913*^9}, {3.807987427293959*^9, 3.807987461143407*^9}, {
   3.808064660727276*^9, 3.8080646710536537`*^9}, {3.808064978922209*^9, 
   3.8080649889520206`*^9}, {3.808065133138933*^9, 3.808065137247834*^9}, {
   3.8080656978757963`*^9, 3.8080657129905295`*^9}, {3.808068297769658*^9, 
   3.8080682988068843`*^9}, {3.8080683318016787`*^9, 3.808068333322548*^9}, {
   3.8080687285840673`*^9, 3.808068729604082*^9}, {3.808068793234928*^9, 
   3.8080687946362305`*^9}, {3.808071621206293*^9, 3.8080716723275375`*^9}, {
   3.8080729540168924`*^9, 3.8080729609414005`*^9}, 3.8081740669737325`*^9, {
   3.8081741515898724`*^9, 3.808174154407746*^9}, 3.8081757347113743`*^9, {
   3.80850296857384*^9, 3.8085030083264093`*^9}, {3.808503067468046*^9, 
   3.8085031670005584`*^9}, {3.8085034258887215`*^9, 3.808503429488124*^9}, {
   3.808503479673551*^9, 3.8085034823204985`*^9}, {3.8085035467900696`*^9, 
   3.808503594831055*^9}, {3.808503764886863*^9, 3.8085038227088747`*^9}, {
   3.8085062266270256`*^9, 3.8085062282964144`*^9}, 3.8085063375988884`*^9, {
   3.8085064788703156`*^9, 3.808506480017167*^9}, {3.80850652972351*^9, 
   3.8085065309142447`*^9}, {3.8085067139700546`*^9, 3.808506715888835*^9}, {
   3.808563738055747*^9, 3.808563804867737*^9}, {3.808573814421254*^9, 
   3.808573815415248*^9}, 3.808651641220073*^9, {3.8086518769444513`*^9, 
   3.808651893549247*^9}, 3.8086558780542803`*^9, {3.808656024934702*^9, 
   3.8086560272983837`*^9}, {3.808662363748914*^9, 3.808662408664112*^9}, {
   3.808664687414502*^9, 3.808664689986473*^9}, {3.8086682528166385`*^9, 
   3.8086682545748963`*^9}, {3.808676180008201*^9, 3.808676184370633*^9}, {
   3.808676232267743*^9, 3.8086762327931757`*^9}, {3.8086762661744785`*^9, 
   3.8086763102835283`*^9}, {3.8086806992151303`*^9, 3.808680700237514*^9}, {
   3.8087546100096054`*^9, 3.8087546122137136`*^9}, {3.8087547536620526`*^9, 
   3.8087547547062635`*^9}, {3.8087627100920486`*^9, 3.808762730682022*^9}, {
   3.808763339511509*^9, 3.8087633428755393`*^9}, 3.8087635580466175`*^9, {
   3.808864426190888*^9, 3.8088644468569455`*^9}, {3.8088648394815702`*^9, 
   3.8088648396005*^9}, {3.8088651910855045`*^9, 3.8088651922784843`*^9}, {
   3.809015895544302*^9, 3.80901589577279*^9}, {3.8090170885137053`*^9, 
   3.80901708984947*^9}, {3.809018596529349*^9, 3.8090185976979575`*^9}, {
   3.8090273113330765`*^9, 3.8090273114447775`*^9}, {3.8090284653517256`*^9, 
   3.8090286292701964`*^9}, {3.809028853843644*^9, 3.809028859165645*^9}, {
   3.809469660849782*^9, 3.809469660868692*^9}, {3.80953004055865*^9, 
   3.809530047376833*^9}, {3.8095411065943613`*^9, 3.80954110705513*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["linewidths vs lattice spacing", "Section",
 CellChangeTimes->{{3.8060017187482805`*^9, 3.806001720111932*^9}, {
  3.807219143212973*^9, 3.8072191566618133`*^9}, {3.8087775624633417`*^9, 
  3.8087775635834894`*^9}, {3.8090163404212494`*^9, 3.809016340797243*^9}}],

Cell["\<\
Set atomnums, run one of the grid geometry cells below, then run the \
\[OpenCurlyDoubleQuote]run\[CloseCurlyDoubleQuote] cell. \
\>", "Text",
 CellChangeTimes->{{3.8090169793060865`*^9, 3.80901704709494*^9}, {
  3.809019674019689*^9, 3.809019689982016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"atomnumx", " ", "=", " ", "12"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "only", " ", "x", " ", "value", " ", "will", " ", "be", " ", "used", " ", 
    "to", " ", "build", " ", "square", " ", "grid"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"atomnumy", " ", "=", " ", 
   RowBox[{"Floor", "[", 
    RowBox[{
     FractionBox["2", 
      SqrtBox["3"]], "atomnumx"}], "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"used", " ", "for", " ", "hex", " ", "lattices"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"atomnumx", ",", "atomnumy"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.809018686810726*^9, 3.8090186888103704`*^9}, {
   3.809018759945447*^9, 3.809018821077754*^9}, {3.8090188783247404`*^9, 
   3.809018914808607*^9}, {3.809018946610208*^9, 3.8090189836036034`*^9}, {
   3.8090196598430157`*^9, 3.809019665008836*^9}, {3.8090197081858063`*^9, 
   3.809019710750782*^9}, {3.8090230477493725`*^9, 3.80902304851731*^9}, 
   3.8090231091711864`*^9, {3.809023314803544*^9, 3.809023314881336*^9}, {
   3.809023506975886*^9, 3.809023513547315*^9}, {3.809023575210723*^9, 
   3.8090235839184003`*^9}, {3.8090236582547035`*^9, 
   3.8090236862319236`*^9}, {3.809023727606332*^9, 3.8090237457608447`*^9}, {
   3.80902381673116*^9, 3.8090238167839675`*^9}, {3.8090244286419945`*^9, 
   3.8090244446063175`*^9}, {3.8090251819225273`*^9, 3.809025182823117*^9}, {
   3.80902990374408*^9, 3.809029918557509*^9}, 3.809032843797409*^9, {
   3.809542114064296*^9, 3.809542217285282*^9}, {3.8095422602493224`*^9, 
   3.809542269455696*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8090237477674437`*^9, 3.809023817820197*^9, 3.80902410662554*^9, {
   3.809024429508671*^9, 3.809024445203719*^9}, 3.809025183052512*^9, 
   3.8090273445502877`*^9, {3.809029905040451*^9, 3.8090299196206665`*^9}, 
   3.8090312697983327`*^9, 3.8090328453672094`*^9, 3.8095300962765064`*^9, 
   3.809540898684434*^9, 3.809540993503817*^9, 3.8095411356935263`*^9, {
   3.809542194457293*^9, 3.8095422179956355`*^9}, {3.8095422631046815`*^9, 
   3.8095422702306185`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["square lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
  3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
  3.809023200615773*^9}, {3.8094683197593937`*^9, 3.8094683204016514`*^9}, {
  3.8095300977777147`*^9, 3.809530098439992*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnumy", "=", "atomnumx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", "*", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idx", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
     "Simplify"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D", 
    " ", "coordinate", " ", "indices"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
     RowBox[{"n", "\[Rule]", 
      SqrtBox["atomnum"]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
  3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
  3.8090191237504044`*^9}, {3.8090194326770754`*^9, 3.8090194334092865`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["hexagonal lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090168466120195`*^9, 3.8090168526145716`*^9}, {
  3.8090168863400745`*^9, 3.8090168935046854`*^9}, {3.8090238204661245`*^9, 
  3.8090238210405893`*^9}, {3.809468324648697*^9, 3.8094683254928503`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumy", " ", "=", " ", "atomnumx"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridname", " ", "=", " ", "\"\<hex\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", " ", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", 
       RowBox[{"atomnumx", " ", "atomnumy"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afrowsmode", " ", "=", " ", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"1", "&"}], ",", "atomnumx"}], "]"}]}], "&"}], ",", 
       "atomnumy"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afcolsmode", " ", "=", " ", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "#"], 
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{"1", "&"}], ",", "atomnumy"}], "]"}]}], "&"}], ",", 
        "atomnumx"}], " ", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
        ")"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809017140657352*^9, 3.809017154350025*^9}, {
   3.8090188539498825`*^9, 3.809018860509693*^9}, {3.809019129436096*^9, 
   3.8090191345158234`*^9}, {3.8090230603207874`*^9, 3.8090230777661314`*^9}, 
   3.8090231362179184`*^9, {3.8090236883512573`*^9, 3.8090236901055713`*^9}, {
   3.809024859356752*^9, 3.8090249368256736`*^9}, 3.8090251639675293`*^9, {
   3.8090274533055954`*^9, 3.809027453373412*^9}, {3.809090300086687*^9, 
   3.8090903159707894`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["run", "Subsubsection",
 CellChangeTimes->{{3.8090169056528196`*^9, 3.8090169355856133`*^9}}],

Cell["\<\
find the lattice period dependent transition linewidth for modes defined \
above.\
\>", "Text",
 CellChangeTimes->{{3.809016939710581*^9, 3.809016974719592*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "}"}], "&"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"polarizationmodes", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "polarizationmodes", "]"}]}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastmode", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runtime", " ", "=", " ", 
   RowBox[{
    RowBox[{"Timing", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"polmode", "=", "1"}], ",", 
        RowBox[{"polmode", "<", 
         RowBox[{
          RowBox[{"Length", "[", "polarizationmodes", "]"}], "+", "1"}]}], 
        ",", 
        RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"e", "[", "\[Nu]_", "]"}], "=", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"modelist", " ", "=", " ", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"d", "=", "0.01"}], ",", 
           RowBox[{"d", "<", "1.26"}], ",", 
           RowBox[{"d", "=", 
            RowBox[{"d", "+", "0.05"}]}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "loop", " ", "over", " ", "fractional", " ", "lattice", " ", 
             "period"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"build", " ", "the", " ", "Hamiltonian"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Hfull", " ", "=", " ", 
             RowBox[{"Array", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["H", "##"], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{"atomnum", "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "<", 
                  RowBox[{"atomnum", "+", "1"}]}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"u", "=", 
                   RowBox[{"d", " ", "\[Lambda]", " ", 
                    SubscriptBox["r", 
                    RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[CapitalOmega]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[Gamma]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Hfull", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
                   RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]ij", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}], ")"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "find", " ", "the", " ", "eigenmode", " ", "overlap", " ", 
              "with", " ", "modes", " ", "of", " ", "interest"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
             RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"mode", "=", "1"}], ",", 
              RowBox[{"mode", "<", 
               RowBox[{
                RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
              RowBox[{"mode", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"overlap", " ", "=", " ", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"mode", ",", "1"}], "]"}], "]"}], ".", 
                    RowBox[{"evecs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], 
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"maxIdx", "=", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"v", "=", " ", 
                RowBox[{"Im", "[", 
                 RowBox[{"evals", "[", 
                  RowBox[{"[", "maxIdx", "]"}], "]"}], "]"}]}], ";", 
               RowBox[{"(*", 
                RowBox[{"mode", " ", "linewidth"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"soln", "[", 
                  RowBox[{"[", 
                   RowBox[{"mode", "+", "lastmode"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"Log10", "[", 
                    RowBox[{"v", "/", "\[Gamma]"}], "]"}]}], "}"}]}], "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          RowBox[{"(*", 
           RowBox[{"end", " ", "mode", " ", "loop"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", 
          RowBox[{"end", " ", "d", " ", "loop"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"lastmode", "=", 
          RowBox[{"mode", "-", "1"}]}], ";"}]}], 
       RowBox[{"(*", 
        RowBox[{
        "since", " ", "mode", " ", "will", " ", "increment", " ", "just", " ",
          "before", " ", "the", " ", "loop", " ", "exits"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";"}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "pol", " ", "loop"}], "*)"}], "\[IndentingNewLine]",
      "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<Simulation took `` minutes\>\"", ",", 
   RowBox[{
    RowBox[{"runtime", "/", "60"}], "//", "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8088321953972454`*^9, 3.80883252033072*^9}, {
   3.808832551461509*^9, 3.8088327182497296`*^9}, {3.8088328170416355`*^9, 
   3.8088328489214215`*^9}, 3.808832881153268*^9, {3.808832912325945*^9, 
   3.808832937556507*^9}, 3.8088330655145044`*^9, {3.8088332017258544`*^9, 
   3.8088332024449263`*^9}, 3.808833266958461*^9, 3.808833298854204*^9, {
   3.8088333464898767`*^9, 3.8088335531086016`*^9}, {3.8088415808641357`*^9, 
   3.808841585619443*^9}, {3.8088644621911683`*^9, 3.8088645395140877`*^9}, {
   3.808864605851305*^9, 3.808864606220704*^9}, {3.809100435742504*^9, 
   3.8091004362461615`*^9}, {3.809536097821503*^9, 3.8095361061602135`*^9}, {
   3.8095362995998125`*^9, 3.8095363025239925`*^9}, {3.8095369682059484`*^9, 
   3.8095369750588193`*^9}, 3.8095411199735737`*^9, {3.809546448642682*^9, 
   3.8095464701696715`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Simulation took \
\\!\\(\\*RowBox[{\\\"0.17291666666666666`\\\"}]\\) minutes\"\>",
  StringForm["Simulation took `` minutes", 0.17291666666666666`],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8090274743134413`*^9, 3.809028325932001*^9, 3.8090301705121117`*^9, 
   3.8090316085760727`*^9, 3.809032865222105*^9, 3.8090903551240854`*^9, 
   3.8095301185594454`*^9, 3.8095369804563236`*^9, 3.8095409208641243`*^9, 
   3.8095410100186434`*^9, {3.809541125603516*^9, 3.809541153103958*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["soln analysis", "Subsubsection",
 CellChangeTimes->{{3.8090194737115297`*^9, 3.8090194849383807`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"saveplt", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savesln", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"linewidthplot", "[", 
  RowBox[{
  "soln", ",", "polarizationmodes", ",", "gridname", ",", "atomnumx", ",", 
   "atomnumy", ",", "\"\<\>\"", ",", "saveplt", ",", "savesln"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809028634816141*^9, 3.8090286356109934`*^9}, {
  3.809028868797657*^9, 3.8090288734162717`*^9}, {3.809029951123826*^9, 
  3.809029989347587*^9}, {3.8095301158736453`*^9, 3.809530123227334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt95C9hxclrvtrvlGt9Hbhjnb2W4LWW
gyVf7LVi+g991dhjH+/0vHKC40f7GrD6I/Z8nE9KGcqf2z+qAgmcshfMlnBk
Z7tmv6TAluv64gv2l02rLV6kdu+/vhgkcNmepXzagbbUK/u5IAL2qpxT31ms
frTfFixwy15lr+Q8PdtX+8HaC+7aH54cfK22/sP+oB0gBz2wDwt4L1zf/Hn/
m0CQwEN7A285+TeK3/a3vQYJPLb/X9RXmCf0Y78CyPlyT+3XVQdPYBf6uX8X
2D/P7E8eWnBqj/2P/SFg817YL2eZFRV98cv+d2DzXtrz/3X4+fnt2/0dYPNe
2y8O5vzJavhgvxLYvLf27yvW+P/YsX//HrB57+wvTOrafiTokL02OHw+2Asp
Fr9rFLpk/0MDJPDBfsKlEmvh0sv2R7+CBD7aR01LeJG9+az9pEMggU/2xTyT
lVzu77KPB2mP+Ww/nynKxuj53P0A3a3RDw==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9pdiiJXs4uA/slGt9Hbhjnf2Nqifq
E9P5D2jF9B/6qrHHfkXwwWVNvQIHasDqj9jf6NX2+B/De+BRFUjglL2k1iGf
3CjuA0sKbLmuL75g77C10DP1NeuB64tBApftm+JTJ79o5jzABRGwD+Nb/lU2
juWALVjglr2T3Bf1+N5/+8HaC+7a/6ryv73f7uv+oB0gBz2wv/TdbfPz+Jf7
3wSCBB7aT6s3UpGXvrK/7TVI4LH9Eb6VBU3rNtkrgJwv99Q+ikv7vcvzq/a7
wP55Zi+v/31z7o979iFg817Yv99+ZL3Qv/v278DmvbTn3fVq9uOUW/YdYPNe
2y/LeBNcGXrRXgls3lv75T+nWh/4vc9+D9i8d/YHr+j+M1g8eb82OHw+2Ker
CbwtCT20/4cGSOCDPaP/uXuKthf2H/0KEvhof9jV9LTB+mv7Jx0CCXyy3yNg
UhI15c7+eJD2mM/2ln+UnT0+PtgPADeW01w=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv97fVnD3ef+2S/U671deCOdfbfPzIf
jqv6bK8V03/oq8Yee6MfYuafP320rwGrP2L/RO/lmqD1b+0fVYEETtk3LDwa
s8L9uf2SAluu64sv2BsXLzn5dcZD++uLQQKX7f3aHFn1Wm7ac0EE7NWb17+5
b3jR3hYscMve+8vve3ZXD9uDtRfctT85faEb05XV9kE7QA56YJ8kd2+6bPSi
/W8CQQIP7efWLQxuZNu3v+01SOCx/VvZ7GMG2Sf2K4CcL/fUPvSv/tGFuRf2
7wL755k978mb+XXSV/aHgM17YV8RF/4i4fW1/e/A5r20DxZrn/lg5fX9HWDz
Xtsnzrl9eNfOy/uVwOa9tf+V//gbi9yR/XvA5r2z944Icp+cNcNeGxw+H+wv
fVrw4330AfsfGiCBD/aukgpqQolH7I9+BQl8tC/d/2bXG+H99pMOgQQ+2b++
8uFQtPNq+3iQ9pjP9v4zuniXfirfDwAardmH
          "]]}}}, {}, {}, {{}, {}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
iZ2OBFjc1bAL1+KhfwHlfOfU
          "]]}}}, {}, {}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 5x5 square grid\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Ferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Antiferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N\[Rule]\[Infinity], In-Plane\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095409473462753`*^9, 3.809540965067875*^9}, 
   3.809541012193862*^9, 3.809541166767414*^9}]
}, Open  ]],

Cell["compare square and hex grids", "Text",
 CellChangeTimes->{{3.8090276994174333`*^9, 3.8090277274066734`*^9}, {
  3.809027768558586*^9, 3.809027778439172*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x6.txt\>\"", "]"}], 
      "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sqsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_square5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8090279428347816`*^9, 3.809028088801463*^9}, {
   3.8090281461860676`*^9, 3.8090281468632965`*^9}, 3.8090282090850344`*^9, {
   3.809028245391554*^9, 3.8090282515640545`*^9}, {3.80903265241492*^9, 
   3.8090327021270423`*^9}, {3.8090327992749586`*^9, 
   3.8090328163762355`*^9}, {3.8090904155601416`*^9, 3.809090415623972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sln", " ", "=", " ", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sqsoln", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "hexsoln"}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. Ferro.\>\"", ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. A.F.\>\"", ",", "Purple"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. In-plane\>\"", ",", "Orange"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. Ferro.\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. A.F. rows\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Purple", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", " ", "\"\<In-plane\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Orange", ",", "Dashed"}], "]"}]}], "}"}]}], "}"}]}], 
     "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"linewidthplot", "[", 
   RowBox[{
   "sln", ",", "modes", ",", "\"\<\>\"", ",", "atomnumx", ",", "atomnumy", 
    ",", "\"\<Collective linewidths for 30-atom grids\>\"", ",", "False", ",",
     "False"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8090291825424013`*^9, 3.809029251828573*^9}, {
   3.809029289352435*^9, 3.8090295265953355`*^9}, {3.809029679199459*^9, 
   3.809029681999523*^9}, {3.809029712415219*^9, 3.8090297411436815`*^9}, {
   3.8090297905716853`*^9, 3.809029816927494*^9}, {3.809032708095091*^9, 
   3.8090327131437397`*^9}, {3.8090328845574236`*^9, 3.8090328847628765`*^9}, 
   3.809032921837782*^9, 3.809090409557664*^9, {3.809090451062523*^9, 
   3.8090904569985943`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9/eNDjRPWfLXfIdf6OnDHOvvbP+uy
9pR8sdeM6T/0VWOPvVT3ss2THT/aQ9QfsS8T2xvMWP7c/mEVSOCUfeLBvw3s
bNfslxTYcl1ffMHeXvLx4Tep3fuvLwYJXLb/EyIq1ZF6ZT8XRMB+bcu7SRar
H+23BQvcsq+pvr5A3/bV/kKwwF37Naf2aTfVf9gfBHbQA/uDlspe1c2f978J
BAk8tD8SP9n0leK3/SDXyrU+tr/v3zs9T+jHfnmwwFP7vMWMe1iFfu6H+OeZ
vSzzpuu77X9AzXthL/VLfUfExS9Q817a+zUk/vz89i3UvNf2kyZ3RrMaPoCa
99Z+WW1x/dcd+6HmvbPvf7hx/tGgQ9Dw+WB/+IbThGahS/bfNEACH+ynsQrX
i5Retj/8FSTw0X7mx22XsjeftQepjun/ZH+LRWKa/f1d9mDtMZ/tY8zu65o+
n7sfAAxK13g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9lSubtu7j4D6wQ671deCOdfb8ro12
E9P5D2jG9B/6qrHHvqzz1drGXoEDEPVH7Mu92F//j+E98LAKJHDKvubThoDs
KO4DSwpsua4vvmA/jWXFytTXrAeuLwYJXLbP9riT/LKZ8wAXRMB+XcpxN4U4
lgO2YIFb9mc0pkVH9f7bXwgWuGtfMkNf/4Dd1/1BYAc9sP/qfST6efzL/W8C
QQIP7Tn/bZ8kK31lP8i1cq2P7ZULX8U1rdtkLw8WeGr/InvaabfnV+0h/nlm
//qvm3Xej3v2EPNe2HP+LhMS/HffHmLeS3u+b2ptT1Ju2UPMe23/oE1ifWXo
Rah5b+3/SN5bc/D3Pqh57+zj9gVIGyyevB8SPh/sN82Lqi0NPbT/mwZI4IP9
3XP7PinYXth/+CtI4KP94c9BGw3XX9sPUh3T/8l+f4J5TvSUO/vB2mM+28fN
+ZHl/vHBfgBI4tYW
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9BteXTpuTX+13yLW+Dtyxzn57Uv1N
259f7DVj+g991dhjn7rUU/NF2Sd7iPoj9pNeWe/XcHxn/7AKJHDK3pTLM+1r
33P7JQW2XNcXX7A/+m9T9acND+2vLwYJXLYvOb/L7XTjTXsuiID9ndn3DS4q
XLS3BQvcstfv7jx7fOth+0KwwF37hhM5t64lrLYPAjvogf3vgM2Bz2cv2v8m
ECTw0P743p+8wrz79oNcK9f62L5BY4Yha/aJ/fJggaf2/OoGc6/lXtgP8c8z
+2+b3m4xVbqyH2LeC3sGxuyr6zivQ817ab/CsnIi54/rUPNe25cdUZT2EL8C
Ne+tPQ9rDrvyt8NQ897Zsz//wbsjeDo0fD7YH3Z99/JV30H7bxoggQ/2yxJ/
dMwQOmp/+CtI4KP9PbvVZ6Zc228PUh3T/8n+xWZfa7fDq+3B2mM+2zOs2lHY
/bNxPwCIztWR
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9/MKHDh7TvtrvkGt9Hbhjnf3349VX
T7V8sdeM6T/0VWOP/atNM27U3PloD1F/xD5R3JW/hueV/cMqkMAp++MLhJ3Y
Y+/aLymw5bq++II9t9aquqWf99pfXwwSuGyvsf1t9ZX44/u5IAL2Lr/evj5g
eWe/LVjglr3Nt80RXSlP9xeCBe7aCxlNSJ/+/vX+ILCDHtifZFIreP3uw/43
gSCBh/ZH4iebvlr4eT/ItXKtj+3nOTr/ZxH/tl8eLPDUPqzp6MMz+j/2Q/zz
zD67acVvhiU/oea9sGc+v7fdm+8X1LyX9jYirL9c5H5CzXttbzn90apN+TDz
3tqrH2pbHn7qI9S8d/YT/GJ/6vg/3w8Jnw/2N88naU5af2X/Nw2QwAd7vRnr
xPquTbc//BUk8NGeRb5ZdHnURXuQ6pj+T/a5sjJvfHlu2YO1x3y2b63sN/a9
cdseAMwC10g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt9+KZkZYH1n/fvkGt9Hbhjnb2r0N6e
pJ3f9mvG9B/6qrHHXmLqFc4Mpb/7IeqP2AsytgcsTfu6/2EVSOCUfd2xVmZF
SbYDSwpsua4vvmA/54jChqIX3/dfXwwSuGyf+/z3yo+XPuznggjYr73DfYbr
6LP9tmCBW/YGXzouFnPf2F8IFrhrf5+VoVZQedP+ILCDHtjrJN1I9Pl12P5N
IEjgob1rSsRR6ZmX7EGulWt9bM/tumt+8ISr9vJggaf2njqa5fMfX7KH+OeZ
/eZzP/btCDluDzHvhX3yybSIa+4Loea9tNc+vEPaJXvnfoh5r+2DJ5Va7PI6
vB9i3lt71uw5vu4Mm6Hh887+vEutedPPNfaQ8Plgf65bOP6txiH7bxoggQ/2
m1UcfHWjD9of/goS+Gi/ZEp2quzL1fYg1TH9n+xDftxgem64cT9Ye8xn++vC
seJ1BSf2AwCD987+
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9wW51fu6tX+13yLW+Dtyxzl7veVBM
6Lcv9pox/Ye+auyx/7XDLKTn8yd7iPoj9mLtxvtnMX+wf1gFEjhlP3nN4Yuh
u17aLymw5bq++IL9yt8MS8w+Pra/vhgkcNnevKfpwce3d+25IAL22ZdyO2MK
rtrbggVu2bvV/RWQ1jljXwgWuGv/pdPGc1faPvsgsIMe2NtZuDQ+vj7H/k0g
SOChvX5s+crjOav3g1wr1/rY/loPT5F44oH98mCBp/ab324xVZI4uR/in2f2
NuncHGvbL+yHmPfC3vuFXudmpSv7Iea9tL+i9cvZ2P861LzX9jJvdzwsv3wT
at5b+7WLV3EuencLat47+/XnDBWq997YDwmfD/YL8hYcsP55Yf83DZDAB3u+
pYF3fB5s3n/4K0jgo71uTFii8YGd9iDVMf2f7A2nh+SaHzxtD9Ye89n+w59F
LH9bL9gDAMGK1Hc=
          "]]}}}, {}, {}, {{}, {}}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 30-atom grids\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.21}, {-5, 3}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.21}, {-5, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Sq. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. A.F.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. A.F. rows\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.80903290188512*^9, 3.8090329239521236`*^9}, 
   3.8090904209128623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<linewidth_v_period_exactly30atoms_sq_hex.png\>\"", ",", "plt"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.809029852486635*^9, 3.8090298783693295`*^9}, {
  3.8090327726437063`*^9, 3.8090327842656107`*^9}, {3.8090329307718973`*^9, 
  3.8090329339145007`*^9}, {3.8090904638911943`*^9, 3.8090904669679937`*^9}}],

Cell[BoxData["\<\"linewidth_v_period_exactly30atoms_sq_hex.png\"\>"], "Output",
 CellChangeTimes->{3.80902988513923*^9, 3.8090327790156612`*^9, 
  3.8090329347761917`*^9, 3.809090474114911*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
      "}"}]}], "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"polarizationmodes", "=", " ", 
   RowBox[{"{", 
    RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8090277860448437`*^9, 3.809027788215191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"evecs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "evecs", "]"}], "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, Typeset`size$$ = {
    450., {130., 136.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$13122$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13122$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Re[
         Part[$CellContext`evecs, $CellContext`i$$]], 
        PlotStyle -> {{0, 25}, {-0.5, 0.5}}], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{511., {188., 195.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.809032890399807*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,123,19,30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.80946966129014*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,20,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696614386873`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,21,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696615473967`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["time evolution", "Section",
 CellChangeTimes->{{3.8094676677317724`*^9, 3.8094676720642166`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", 
   SuperscriptBox["5", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", "1"}], ";", 
  RowBox[{"(*", 
   RowBox[{
   "easier", " ", "to", " ", "solve", " ", "system", " ", "if", " ", 
    "everything", " ", "is", " ", "a", " ", "few", " ", "orders", " ", "of", 
    " ", "magnitude", " ", "from", " ", "1"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809468691632693*^9, 3.8094686964952307`*^9}, 
   3.809471193092425*^9, {3.8095346504945126`*^9, 3.8095346505533533`*^9}, {
   3.809535226269971*^9, 3.8095352433869815`*^9}, 3.809535319848155*^9, 
   3.8095399729422846`*^9, {3.8095452597710123`*^9, 3.809545262825846*^9}, {
   3.809559875541829*^9, 3.809559918667977*^9}}],

Cell[CellGroupData[{

Cell["square lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
  3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
  3.809023200615773*^9}, {3.809468314558218*^9, 3.8094683163169413`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
    "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"mode", ",", " ", "name", ",", " ", 
      RowBox[{
      "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
       "cartesian", " ", "basis"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idx", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
     "Simplify"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
    "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D",
      " ", "coordinate", " ", "indices"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
     RowBox[{"n", "\[Rule]", 
      SqrtBox["atomnum"]}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
     RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"centerIdx", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{
        SqrtBox["atomnum"], "/", "2"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["atomnum"], "+", "1"}], ")"}]}], "+", "1"}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"idx", " ", "of", " ", "the", " ", "central", " ", "atom"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
  3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
  3.8090191237504044`*^9}, {3.8090194326770754`*^9, 3.8090194334092865`*^9}, {
  3.8094677627939987`*^9, 3.809467768263092*^9}, {3.8094683836403894`*^9, 
  3.809468384246768*^9}, {3.8094686733752575`*^9, 3.8094686739143047`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["run", "Subsubsection",
 CellChangeTimes->{{3.809467855845191*^9, 3.809467856083066*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Build", " ", "the", " ", "Hamiltonian"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d", " ", "=", " ", "0.75"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"e", "[", "i_", "]"}], ":=", 
     SubscriptBox["e", "1"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Hfull", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "##"], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"atomnum", "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "<", 
          RowBox[{"atomnum", "+", "1"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"u", "=", 
           RowBox[{"d", " ", "\[Lambda]", " ", 
            SubscriptBox["r", 
             RowBox[{"j", ",", "i"}]]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[CapitalOmega]ij", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
              RowBox[{"Re", "[", 
               RowBox[{
                RowBox[{"e", "[", "i", "]"}], ".", 
                RowBox[{"GdotP", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Gamma]ij", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
              RowBox[{"Im", "[", 
               RowBox[{
                RowBox[{"e", "[", "i", "]"}], ".", 
                RowBox[{"GdotP", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Hfull", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
           RowBox[{"\[CapitalOmega]ij", "+", 
            RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
     "and", " ", "eqs", " ", "to", " ", "solve"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", " ", "=", " ", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", "atomnum"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]0", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", "atomnum"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"excitedIdcs", " ", "=", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"centerIdx", "+", "i", "+", "j"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox["atomnum"]}], ",", "0", ",", 
            SqrtBox["atomnum"]}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]0", "[", 
      RowBox[{"[", "excitedIdcs", "]"}], "]"}], "=", 
     FractionBox["1", "3"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqs", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ics", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{"atomnum", "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"eqs", ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Hfull", ".", "\[Psi]"}], ")"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"ics", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/.", 
            RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
          RowBox[{"\[Psi]0", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqSys", " ", "=", " ", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Join", "[", 
       RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "the", " ", "system"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"eqSys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           FractionBox["800", "\[Gamma]"]}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "10"}]}], "]"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<Time to run sim: \>\"", ",", "time"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8094684708348923`*^9, 3.809468482996542*^9}, {
   3.8094685547854023`*^9, 3.809468567211235*^9}, {3.809468611041896*^9, 
   3.8094686423715134`*^9}, {3.80946873561755*^9, 3.8094687637140055`*^9}, 
   3.809469288495412*^9, {3.8094693543126073`*^9, 3.8094693547495594`*^9}, {
   3.8094710366744146`*^9, 3.8094710527571635`*^9}, {3.809471101897688*^9, 
   3.809471102626219*^9}, {3.809471348031168*^9, 3.809471349794034*^9}, {
   3.809471909554092*^9, 3.8094720214892673`*^9}, {3.809472098848244*^9, 
   3.809472101474615*^9}, {3.8094721687655363`*^9, 3.8094722035766816`*^9}, {
   3.8094724104114714`*^9, 3.809472455021535*^9}, {3.8094729250397015`*^9, 
   3.809472945780697*^9}, {3.8095299900209365`*^9, 3.8095299917707295`*^9}, {
   3.8095302986149917`*^9, 3.809530315896492*^9}, {3.8095329511933146`*^9, 
   3.8095329542995653`*^9}, {3.809534663256405*^9, 3.809534706991399*^9}, {
   3.80953478345522*^9, 3.8095348145540705`*^9}, 3.8095352489630218`*^9, {
   3.8095371078228397`*^9, 3.809537115681732*^9}, {3.8095373906493454`*^9, 
   3.8095373933390503`*^9}, 3.809538423601192*^9, {3.8095406174266243`*^9, 
   3.8095406277060966`*^9}, 3.809541287294038*^9, {3.809542298257657*^9, 
   3.8095422987683363`*^9}, {3.8095446029345074`*^9, 3.809544604602*^9}, 
   3.809544946420149*^9, {3.8095452709261785`*^9, 3.8095452732838745`*^9}, {
   3.8095596789327555`*^9, 3.809559685425457*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Hfull", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      SqrtBox["atomnum"], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809537333462426*^9, 3.8095373601411724`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[ImaginaryI]", ",", 
   RowBox[{"0.06754745576155848`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.30397587088014655`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15736319117893985`"}], "-", 
    RowBox[{"0.016886863940389577`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.007505272862395334`"}], "+", 
    RowBox[{"0.10557240593890639`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.07935350255682824`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.00422171598509735`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8095373366792145`*^9, 3.8095373605740156`*^9}, 
   3.809537405143556*^9, 3.8095413035984592`*^9, 3.8095446119882555`*^9, 
   3.8095453272248077`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eqSys", "[", 
    RowBox[{"[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", "5", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8095384465985584`*^9, 3.8095384928942537`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["P", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.0545718176461565`*^-34", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.232298141701227`*^-28", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "1"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "2"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "3"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "4"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.7714067629509123`*^-29", "+", 
          RowBox[{"9.424128748323179`*^-31", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "5"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "6"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "7"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "8"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "9"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "10"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "11"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "12"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.676610060447311`*^-29", "+", 
          RowBox[{"1.861422177851913`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "13"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "14"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "15"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "16"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "17"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "18"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.1621576531156884`*^-30", "+", 
          RowBox[{"1.5550799380045296`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "19"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.031442398926536`*^-31", "-", 
          RowBox[{"1.418565311168375`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "20"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.7714067629509123`*^-29", "+", 
          RowBox[{"9.424128748323179`*^-31", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "21"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "22"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "23"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.031442398926536`*^-31", "-", 
          RowBox[{"1.418565311168375`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "24"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0909708985585976`*^-31", "+", 
          RowBox[{"1.2551787241884557`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "25"], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["P", "2"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.0545718176461565`*^-34", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "1"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.232298141701227`*^-28", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "2"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "3"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "4"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "5"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "6"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "7"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "8"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "9"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "10"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "11"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "12"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "13"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.676610060447311`*^-29", "+", 
          RowBox[{"1.861422177851913`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "14"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "15"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "16"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "17"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "18"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "19"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.1621576531156884`*^-30", "+", 
          RowBox[{"1.5550799380045296`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "20"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "21"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.7714067629509123`*^-29", "+", 
          RowBox[{"9.424128748323179`*^-31", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "22"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "23"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "24"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.031442398926536`*^-31", "-", 
          RowBox[{"1.418565311168375`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "25"], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["P", "3"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.0545718176461565`*^-34", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3.5128155924092225`*^-29"}], "-", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "1"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "2"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.232298141701227`*^-28", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "3"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "4"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "5"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "6"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "7"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "8"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "9"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "10"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.676610060447311`*^-29", "+", 
          RowBox[{"1.861422177851913`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "11"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "12"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "13"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "14"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.676610060447311`*^-29", "+", 
          RowBox[{"1.861422177851913`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "15"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "16"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "17"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "18"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "19"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "20"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "21"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "22"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.7714067629509123`*^-29", "+", 
          RowBox[{"9.424128748323179`*^-31", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "23"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "24"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "25"], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["P", "4"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.0545718176461565`*^-34", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.675400666368575`*^-30"}], "+", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "1"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "2"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "3"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.232298141701227`*^-28", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "4"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "5"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "6"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "7"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "8"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "9"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "10"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "11"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.676610060447311`*^-29", "+", 
          RowBox[{"1.861422177851913`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "12"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "13"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "14"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "15"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.1621576531156884`*^-30", "+", 
          RowBox[{"1.5550799380045296`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "16"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "17"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "18"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "19"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "20"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.031442398926536`*^-31", "-", 
          RowBox[{"1.418565311168375`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "21"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "22"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "23"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.7714067629509123`*^-29", "+", 
          RowBox[{"9.424128748323179`*^-31", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "24"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "25"], "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["P", "5"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.0545718176461565`*^-34", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.7714067629509123`*^-29", "+", 
          RowBox[{"9.424128748323179`*^-31", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "1"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "2"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "3"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "4"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.232298141701227`*^-28", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "5"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "6"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "7"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "8"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.278433345978964`*^-29", "+", 
          RowBox[{"2.526727835371819`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "9"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.5078605997317282`*^-29", "-", 
          RowBox[{"6.785647716877631`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "10"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "11"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "12"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.676610060447311`*^-29", "+", 
          RowBox[{"1.861422177851913`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "13"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.1229462937961266`*^-29", "+", 
          RowBox[{"2.957507093658872`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "14"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3.5128155924092225`*^-29", "+", 
          RowBox[{"3.769651499329311`*^-30", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "15"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.031442398926536`*^-31", "-", 
          RowBox[{"1.418565311168375`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "16"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.1621576531156884`*^-30", "+", 
          RowBox[{"1.5550799380045296`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "17"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4.466090731084561`*^-30", "+", 
          RowBox[{"1.915978375491484`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "18"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.6574653582256`*^-29", "-", 
          RowBox[{"1.509690749253447`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "19"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.675400666368575`*^-30", "-", 
          RowBox[{"2.3566908559234827`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "20"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0909708985585976`*^-31", "+", 
          RowBox[{"1.2551787241884557`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "21"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6.031442398926536`*^-31", "-", 
          RowBox[{"1.418565311168375`*^-29", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "22"], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.0243832409439549`*^-29", "-", 
          RowBox[{"1.2122142863303784`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "23"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.388981909263885`*^-29", "+", 
          RowBox[{"1.0163060014057761`*^-29", " ", "\[ImaginaryI]"}]}], ")"}],
         " ", 
        RowBox[{
         SubscriptBox["P", "24"], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1.7714067629509123`*^-29", "+", 
          RowBox[{"9.424128748323179`*^-31", " ", "\[ImaginaryI]"}]}], ")"}], 
        " ", 
        RowBox[{
         SubscriptBox["P", "25"], "[", "t", "]"}]}]}], ")"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8095384940006895`*^9, {3.809539987547217*^9, 3.8095399989527464`*^9}, 
   3.809544620780733*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrayReshape", "[", " ", 
   RowBox[{"\[Psi]0", ",", 
    RowBox[{"{", 
     RowBox[{
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"]}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.809534819918322*^9, 3.8095348218450623`*^9}, {
  3.80953536074685*^9, 3.8095353920123634`*^9}, {3.809541406021474*^9, 
  3.809541432147591*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0"},
     {"0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8095414083443084`*^9, 3.8095446262391396`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrayReshape", "[", " ", 
   RowBox[{"ics", ",", 
    RowBox[{"{", 
     RowBox[{
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"]}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.809534896378516*^9, 3.809534896546095*^9}, {
   3.8095356284171934`*^9, 3.8095356325325375`*^9}, 3.809541444155511*^9, {
   3.809559646638919*^9, 3.8095596520806475`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        SubscriptBox["P", "1"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "2"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "3"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "4"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "5"], "[", "0", "]"}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["P", "6"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "7"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "8"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "9"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "10"], "[", "0", "]"}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["P", "11"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "12"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "13"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "14"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "15"], "[", "0", "]"}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["P", "16"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "17"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "18"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "19"], "[", "0", "]"}], "\[Equal]", 
       FractionBox["1", "3"]}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "20"], "[", "0", "]"}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        SubscriptBox["P", "21"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "22"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "23"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "24"], "[", "0", "]"}], "\[Equal]", "0"}], 
      RowBox[{
       RowBox[{
        SubscriptBox["P", "25"], "[", "0", "]"}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8095348884169908`*^9, 3.809534896866023*^9}, 
   3.8095354156519995`*^9, 3.809535633033207*^9, 3.8095371454263062`*^9, {
   3.809541420965499*^9, 3.8095414462010007`*^9}, 3.809544629190263*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["soln analysis", "Subsubsection",
 CellChangeTimes->{{3.809559863627812*^9, 3.809559866184225*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"plot", " ", "initial", " ", "excitation", " ", "decay"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "excitedIdcs"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "200"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", " ", 
      RowBox[{"\"\<Decay of localized excitation\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8095401462024803`*^9, 3.80954020351366*^9}, {
  3.8095415236013713`*^9, 3.8095415299533806`*^9}, {3.8095451517330256`*^9, 
  3.809545185116693*^9}, {3.8095453811296387`*^9, 3.809545398520114*^9}, {
  3.8095454586393156`*^9, 3.809545659971798*^9}, {3.809559699479993*^9, 
  3.809559710631551*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
0vkmyC848Hd2loT9OavNEj93CP4HztjPlw==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
ydaGZBOezVu2QsJL6JC/NYxznHc+NEdrZ9ADXj3cb3cXkTb4sj5d51AZT39d
gfhOTxuc9fDGHKOCDnOdj2m/XW1wqU3XW5dHPDz3aZEie3j8muTzHZ/QYU/R
+3XSDjx+e5wiN1fS4dsG4bVLN/P4fby8xwrTYfzi3E4Znj5zB5v01j6jQ0Cf
fxiFp5/Ub9FFes/p8DitoFiEp69mxKb3mrU8v2zDDwFVHj+xU0VK9XTYtqzY
gV+Kx+8KN0rqJR1W4eovggI22PuWmfF8Ex3IBymRWoPWONwoUPR3Cx3mtTZM
bHxjjeOeFPd+fUWHDhvZqIAqXn+1rop530aHJR+YwYKpPP/yZ7kz7XToHcxu
yj1tjb2P7atSfk8HxWUCXqaHrLHmsujfBz7w3guBhU3GFtZ4zl9NKqKPDvZT
g0tylvH6s65MN6OfDoHXJ41kBK3x5cNDHgOf6PDZamrZxEte/1efCFk0QoeD
O/S6OHd58yIve1VrlKfHmTcvR2MAz1ZaN7DG6FBPqc5R3sqLp9ykfZ2ig6VP
7RXDYwjb0k0dJP7SIXV7eGrcaoQ1ypq91vyjQ0jQvnzotcKdbrPpvgt0cFjr
JF9sZYU3FbiITYowYKpA40T+N0usvm1p76wiA3qtsYqhoAWeTb87rarMgKbq
ECGXzHW446eNLFJlQFqFM333f+vwpVQ/u5MaDDjqsqF81M8c//vScl9IlwHh
BSfrjreY4vZz56Ml1zPgiZ/Q+To3E3yxbt5Q/QADfh4QW7NHfiUGv2EjVQ8G
yEgWXOU308GTyi3GVDoDdk27UE/t1cZufjdoS5kM2LbELtY8WQuvUbE0F/Vh
wLf8gDcTShq4xe84+hHKO79ctkvWeSk+xXurv4czoMdmrvZgmgw2rbezHo1k
wJeJf5qLh6VwuorihqEzDOi3tfEQ/rcY+9aX23ZeZICsoNe+4YUZrpTq5I6q
NAZ8Pmlh00L8taqp77avTGeAqfAz86qaBatg/+cOjzMYcHGtX+hRyiL0sT5h
Z2kOAyz7Xih07hJDJf5Gu28XMOB9eG6nZKMM2vXisFvcUwbEJ3d8nz+shoQD
9hyI5TLATnd6l+nbZeixqpX7hSoGrPK46NuUoo40AyieZ2oYoD8St8VxUgP9
VC0ggpsY4BnsYEyJ10JXAr4c9OxhwEHeiuBKrEJU2xA/p14GtJTJOpX8WIWy
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
gTdfCvdZ4b7d3P8B39eYOQ==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
AcsddL4J8gv2/Z2dpfY3d5V5cnuH4H9qeNJE
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Z2GBAwYKD8gw/y7u/++JlWY=
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
e4JzpUtYVHzg979/ZP5xjpvb/Tbh/wAHqDRt
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUWXc81d8blxBRSYmkErKSKHudx95c2+Xi2iMhOyur7C1kZ0SobFqOTb5J
iRIpiraRjEj87u+v+3pe55z3837ez/tzXud53VP2XkZO1FRUVC9oqaj+/8ud
+q+s6MRLxUP32k6bmo6hVnrBk5dc7yP16Ny5ZLUx1Bl0r1zAFSPFM3IyMmfH
UKbkLGlfSj+azOM2ndw3hvpEL7vQuQ6jGKbdjxu/jqJQ1p22nZJXSEvF7+LT
9lGUnaGmuJX8BslpTC2vpI2igaQRzVWXD0hXXy1CSngULcUwfQmqnkEPsvqu
Wa69QmHd9wXXSz6hZ9sWKc3tr1A2rN37nfwFTeh7XtbXeYWeykY/+OmyiDhO
iJzZbTmCauQPhUvcX0IHJnezWXGOoF+TjsV+1b9Q8JMsZuv3L1E4B/3H5ZLf
yIgqJ7XM7iXKydF3WUxeR9+nktjinF+gwfTJy19ddlBGKYo3e/8MxeVmP80U
o4J1rcI7HeRnSNgVWV64TwUN1I1nVT79h3z2pIf4VO+C4MWTsTlfB9G2mnj7
UsluSHx3NyV/ZQCxdwerzCfvgaZ/N0WrWXqR9pM9+p9dDkDKwz2M2W8fIrEd
+9UjSwcgY8h8Yc/oA5TEZfucR54Zng1Ha7IMtyE/+4f+Jj3MsM85IYCxvwWp
fvbuaR49CEz5vCdJuAF9nJ+yC1o9BHdXibUq9RXodUpic5rMYVjsGfdN7yhD
g+dkGO6EHQbkvYv/xMgt1HA5q+4tLSsw7Pq2EvsnH0Wuau/IHjkCI04/8r4+
ikdc/1oL/kmyQxypTywCpeHDRU5LrCGUOFeDp7s3E9OjQ6oimB34HsllLKnm
4MUIzx82GkchTY7lnePZItxOc1q2w5wDuM3imY+9rMDWTBlvooI4IUxieems
Yj0m3EVn8h9zwj1Ox9jm7Xqsqj8f3kh1HK6c0zv17nEDFk7T5JuNOw6vmPlf
fxJrwluHdvzUbp4AooH6xsq/Fjy0T5KBxpoLCvVQrxfbYzyiw5L7PJQLtjRx
NaH8MR6PX+C7WcAF7weul7WJPMGztJWqIu+4IEdm2ZlRvh1v/WOLsLA6Bdw3
NYS5OTswtfzKfp6QU6DhdN3bx6ID0we/KJzPOwV8fdWL/pkd+NBa3KOoiVPQ
oMRDk0bbiYUWNtZqidzAw2W6/fltJxYVfn0t8Ao3xOH2jduMXVjSveGw8k1u
cGzWEzgg34WVP7uffzPODVTmRSKjuV1Yk1ej89Yfbrh7VUL9XG8X1rfnIXiw
84Dyfdd955a6MPH95KVdFjwgnSV8hEO5G9twtm39F8gDm5XpyjRu3djRMisx
O4cH/itw/JWW0o29X+veOfOGB2qq526mjXXjgMOC0mtrPJCzh5l/93o3DjWi
7e84wgvFI3dJbGw9OO75k1lTM17INFkd4zXuwSlMeb5cAbwwhDqMT3j14Czt
AOofN3jB4a3awoP4HpwXZ5Te3MwL5LslG+ulPbi4T4QrYowX7kycezP+sAeX
0zDe117lhfOKR3dbv+zB1cpfFFhZT0NOyRTdtc89uKW92Kra5DRYPb0m3c3U
ix9vhXz38zsNucLd7yeO9+IuWYsrKOs0RE0yWt8824sHgsTp9zadBqzeVLgj
14uftzDnjL46DYIf+sv2a/Xi0ZWfp4t/nwaFqz7x/Sa9eOL80ya3Q3zgoUPn
fca2F097V6iIX+ADeWXGm3KuvXjuXuTIthEffIjJJWx49eLvP63tnvrwwTK6
8dspoBcvCckuZWbwQXPL2GZUSC9ecz1y1aaBDxjZfWYNr/birdvL+wRH+CCn
4KXWaGQvpp57XvD7Fx/kJySMMkb3YnqemjPtB/khEx2R3ozqxfvtYh/GifGD
KmO22i3K/sPFDlrGhvzw36bJKDUFj2MKjR+/zA/vlqKGuSj5uI5xunxN44cH
q5fk/vn3Yj7in9WGOn4oZK87kUfheyZnNCbsBT9Etj+6seHSi0XH6g5pLvFD
zsSzseOUeiUPJZeyMAsAt+zeIwymvVje0E1s6pwAxKvm33pC0Us5Va2j0kAA
5GOV3iko9OII7aY7I54C8NHBbOrVuV7cTsuT+S9ZADra0wXUT1Hq7UgPFbgr
AOrUIgI5B3uxbCiVs/EzAWhnVNB8StWLg6S8DMJ/CMDWgAP1hwVKf5enpO/s
FYTAVe6vE5M9+ILbI8YdTUFouvc5LbWhB/vwCq0KugrCzb8H7ugV9OC6D7nv
TWIFYWlzMHUrpgcLmwXUV/cKQqPSyhcpih95VcTMzZSFoEloOcj/Uze23y6G
SDshcMqRVNjb241LHuwXqo0QAuoTNkqVFd2YU/Tn1i4sBOfl7sXSOXZj1uOV
pXflzsD7avqMxrEubDLOmjRueQasT566+el+F87IjPHfHXwGBt9eeyYR34X3
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
WC9fxgr16+H+H06KmiY=
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
5iESKIzQ+7IWuSP3pI54/VESxKcvH2u87I66Ur4bxb0mQXZRCCtVojviyOBm
b39Hgtd2aYv/gt3R+SzTqdUpEvzNvxjfQNF3KCfmpvgnEnwqYWo/QnJHIgX1
fu6fScB95k+0mr47ir86o3T9Gwn4XKlfcSm4o/fFrP+9XibBzL/Dbzso81S4
oTXItEaCIgPLGm4md5RZGZirt0WChEjaGB2KH7RrXwvfp7IDt4bxs2sDbqi4
btfKCq0dGNbcgfg6N7TVqNguttsOSq64F3zKcUO194uMr+23A5r4T18lHdwQ
fecz9lfsdrDL49NRXopfyd3bU/uO2MHTJHWNnzxuiL3fyT/mmB3FD59NTCdd
kd/Ty8ptQnYw3Bn2ebLdFT193v3fipgdrLcI1jvlu6LosWN5rrJ2ILES0aRl
4ormZ+bbdbTtwPPBu3nGOy4I5g4lRuvbwX8GgSL58S6o6Iu+SauxHUxfDfeQ
tXFBpss1H0SsKfm3ermb/pJR6/ZZWkYPO9D4dzTPAMgo+dCmyWiSHZTZU9lF
IkeUMzDw6WGqHRw15vx6atwBlYQVhTVdtgPTw695Jf0cUMuEWmVOvh0k88cq
hV2zR3MlidvEm3ZwuSfy7IsvJKQpwnp7os8OfAPK1i1tiGhb8TjDHJ09RN2a
f3si0QQxLPy7/mq3PYRL5GQ2phqjA1dHZPv22YOjhNCf6WwjJPb3vPNNdnvY
5+jzKrLUAJF62lu8Be0hp3NZzrxdB7UY6J9a0raH0rJ3RzQXVJCfndvDzQR7
kOCTMBCJoMZMJQvTqsn2UIT8CmJyWXDtJ/+duDR7uHY1MSyDzIE/n45VZcy1
B6T5K4r3Mz92irnewltlD62FRmEz0dLYuOJNjcGAPXyhkt43OozwwhenJxmD
9uDvRXO88yHg5OPzn1+O2ENyl28t/1UN3NuyJuD01h5iqW63RGhrYeUn+0sC
FuyBjX+0WDxUF4ssGV25yugAy8enNn/bGeM+mZcN0ywOUHRvl6/yHhPsHmI3
IsjuAKv0Lx8GtZjgEirvffXcDrDeqnesl84MHzxwMemRJAUn/p2Jwua42WZf
1W5ZBxBOm/twZ48FtryW88j0pAO8p6o/rGllgdMFy6nfIgdAMlRP0j5aYFrF
7ohFcwcwDkRU3t8s8Y1IvSIZawcoEZR7GyJKwNAz1BZCcoBxBXqTt6cIOMJw
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
6mewSZMEfwNfuGHMQI0j8/auNyaBilv+mGMyC9lOSMzxMSFhU1t8ktjzWShT
dODpaTMSdEebQ8pc5dB+2Urpl5YkWP3eFHd6z2zEZAXdWAv0fRGHdmehPDqy
yHO1wJ6Ef7HeLjsm5FG7gUNP1CoSpNx1dn5apoAeWGpaVjrQfOeZ3tyUq4Bc
Nr2qXbWVhILo1RXCSEVU7FS4j+dM12++NXaoUBHpbk9VPeFKQuSJQqWsH4po
mLufLN9BwldjcfGtdkrIg+LItrmT0Gy4yrvaTwlV+G+8J+ZFwta2/NP3k5TQ
hVDWlB2XBFGX6W+vfiihsaOzMjg8kt4PA2L+zVBG3MjRdeEkCVGcT6cTjZSR
6dnai6U+JMi7z7GZHaiMki8UWbf6kZDklm7bH6+MxK5kfJveQwLrXX63da4y
epd+yBAF0/WCn2D1NmWkKPKwyCqEpPf5jovqY8rI2WNwtcUBElIPb00Wzmai
xMcG70wOklB4aB4hrstE75UpL8PDJEx+Wfawx4KJmIHp3XpHSfBaLukV6sBE
bjVf9uuGkVC1vUM3ezsTJemrimuFk7B+55nucAETfTjpGq8WScJU+cFnIiFM
pPL9nNrckyS0/rxTviicibbbvr6tGE3zvTRv5mgME11JljaXO01C7x2FqqCL
TNQ8Yl8qE0Pz+/Fj/ZXrTKTqfGyjZBwJy/a9HvTLYCL3u0VNIvEkbJyqX9L/
HxNdm/mHN3GOhJm5nIPaeUzUImAP/k0g4RdD3V+ygInUK3yP/k4koatRPOfa
PSby1Lot059E8x/J6u6kccqR7xe7L5Pg7XF+sIe+/6VJg9WRTMKSf6NJt+8y
kebSHXnfrpGgzaKea+Qw0a7ziVafU0gYv/Jm35bbTJTaW1fZlEqCnM38fLub
TNS6bqbz+zQStt16ce73FSbSylzztS6DhMDjZUCdZyKOWIRvdSYJO14dHrsZ
zURpXiV/K7NISLQzkEo/wkTfn4xGlmWTwN/xpcR/LxPpzDWXF+aQAK5j0RIE
E/GCA64V5ZGgfHNri7cLE/1Y0vEg/x7dX/WTq7PNmGjhKW27nAckDCpmnjuj
zURku0fN7YckXJ7fX7dSjok6r9X/SHlCQs+nLJON7cpI759cUHIxCWmRRX9T
a5SRt+v6qYtCev52HBr9WKiMumc9mxNXRoLP+bgIiUhltNhnIu1UBQn1h3yZ
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
/mbrdL8L8/L3/p2epsAne7lF0udW4f8tM9Hf
      "]]}, 
    {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
a+81NIDtP9soreJKPH544YmtoQYkxysu3LheiUNZA8WJdhoQL357UkK3Ej+P
VTr72kUDdtYd8M4SrMRH6GlyCBc0IOcG+dulnVQ9rd9gNriqAaYvnG4HtlD1
6Gek0RejAYoPzUMeJFdgh4X9IVrJGqAycbHc1a0C03zK+oYKNeAcJYLdjbUC
E+wc+J5WaMDN2Ee3H30sx4Vv+W0U66j+3DS/CuvLsfrz6mfSnRpwUDo/UM20
HEc1tpaLzGrAetF5HXJoGR4+FTV1d14DYqbt0+Y0yrBApQ6XwJoG5HvkTEju
LsNdeS9jju7SBIW/f+N50u5ihhsfXdlFNOGo/fbmSkYpjrVhOPHPSxOc1Nf0
ls8VY1VJlrWvfpqgYq/sKSNUjH/Ss/W+CdUEPc32PU3TRdi69ohHTbwm/BEI
j422KMInGGXuOVdrgvdR0ZefpQpxW6OzTP93TTi3ffxLc0EuXmNt17rtqQX2
+wt2Rkek4cq5noPRPlrwgO791r3xVGz35Pln72At4IxkLiqQScVdbqM39WO1
gNnssiPj12Sc0ro48K9CCzqjTWlXcuOxuNdR4tmvWnAuu6HtN4rEzr0hrlLu
2qAeXaBuvMsInVUWNF67qA2CL5tiX/22Qq61L2UeB2oDT6/JxvR9CnLPPkGv
FaMN1/6ymmdseaALFweLre9qg0/LVQmXYwEomJN/+uqMNmgdEonEXVEoNH6g
T/OHNphaTFrav4xGYTuCaphWtOFwG2eY09g1FP79+dW0nTrgePH9kNenGHQd
Bxwt49MBbi7nvZZv4lCqW7/tC4oOKOzYVw+3U1D6hJ9GmjvVfvmJWBd9Krpl
ekzM2lsHonleqFf5pKJMJb+N6as6UKKWqZSuk4by9h29s5qnAyFxO+g8JtNR
QXRf+KO7OsAy+r08X/UWKlz3cb96XwegyZ/pSN4tVPKpV46plXr+mRb3lFUG
qmy+9IZnUgf86MdY5Jtuo2pxntbpGR0o1OO2tWTKRPcKe0rv/tCBnMeZK8U2
magm7rC/5KYOsHd/73j+OxM1OXSzax7Whe//Ncdz8mShluGLfxn5dUH6g0fH
TUoWeqjH/WlAVBcSS/fLHCvOQk/OXKyzUtQFMbvvf+7zZaP2XYdMz5F04abO
zC1t5hw0VyyhP+aoCyUP0+dEtXIQC2hq6HjqQkFryvuR0BxkHXRRhj9EF8KL
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
4v8PX46YmA==
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
BfhtZOZVpXWAYtbpqLjGQpw28EPh4kFN0CFx3GVWK8Ffyd3e4gRN6M7TZlSZ
KcWcrYcu/bPXBN8cglO2TxnW2R3QNuamCdnD8oX238vw1dvHaKKCNIFJa+ED
d1Q5NvmdcuVZjiZwdnIxOARW4HDT2b6yYk1w5/asKb1VgavKVT6fq9CEMYek
wMy5CryttyTP3aQJPFH1S55W1/Hty1bD/qOakPL+7ot5nkr8duHWGkxowsfp
U9+cTSsxvQodF/uMJhjsFfoZEVWJnWfuenWvaIKPtXhZ7stKnCa3PytnUxNm
zT1+Zv2txO0XfFtP7WhCvZFAlrhwFWY+zkPNzKIFtSpdnernqrBKfKjIh0Na
MGJM19xaWIU9X46YtvNqQZWxWvaTzircE5FY4iylBboHK8qGtqvw4tBkr6yi
FoQEtb3v5KrGh/gUPtFraEHQaMK2nnI1Ptv/Sa7BVAvEE/beUQ6oxr1Q7ydJ
1ILD1Xln29KrMWtXQOVNZy3g/JptlFtdjckKCpPCXlrgMk/zYbS7Gjc2/GKr
OqsF5w4OsQSNV2Mq8R4j/nAtKGVXagr9Uo0tqxITS+O14IqN+o3329X4Oq9+
J9dFLZgUkt5zh7kG/yja+6Moh5JvvsXxkbcGax0YFTtUogXNNOns8cdr8OXM
PNfL1yl8oh4bX1CpwXO7ScWst7RAWt5Hc1O3Bssn8rzIbNGCj7zRxePmNTh5
e5Zh730teDUksXnUrga/Cq2B1EdacG12Y++kcw0WXvUNp3uuBffiSwd2e9Tg
UL8TjYmvtGCX3jPxWq8a3D//89POFAWHySv2+NRgDnLH0ZgFLTjJH0Rt4luD
vd9G2/5e1oK2C/emCJR4h7XmpbBNLbj+RFxowrMGM4zQDaztaEEHKUx20q0G
2xk+/RfIoA1StW7xLk41uPZhluIKqzaEm57s9CLW4F/qhDP+h7XhEsng0oZp
DTbq4Kj5wq8Npyr+NTPr1OAS2XdTnuLa0HypkqZFqQYv1pezz8lqg5b2b/8F
iRqsInLK1FVVG149v7t+i6cGp1WInZ/W1ob8EzVN9BR9J7mW7zuYaEP2a/Hn
vyj6R7OGSRKdtGHwHqtk+3/VeChN1ePlKW3gog0RvtBXjXnoqK5anNEG+ba9
X//UVeOeX6l7jeO0YZeL275PEdWYOdhUezBFGx45cbS6u1Rjl+X9UbrZ2vCn
g709T5vi/8eSRVRB6VdOmVuAoRpbOLkc675JiYcdtkj9XIUrXgvYqzRrg6Ec
S3zTQBXWGqp/Iv+Q0s/z6aPkxCqc1NZTKzavDZMx1+9VfqnE4yeSZmqWtCH2
4ELrtd5KLFinzym4QenH0aAzpqASPyodTeHdrQOpDOgbNaKct9QPngfEdIDb
j6b0StJ1nGZPL/TXXwfuSD4KV3tfjjWkmTa+BOtA7vuS7uy6crxKxzbwX7QO
NOfMTsmElGO7Jh6fxgwdcHHUUPJjKMdCDAq33esp9QXV3jiZleLeNneFp191
oC0wit/mcgneYO3TLfTVhZeL0jO34nNx3UL/oeQgXci5diPk++8c7HR/6FNA
pC4ol3OETAfn4EdeExeN0nTheaWDyYRXNs7pWXn+96YutJRJMJIKMrCkPy/R
44sucCTeVd3Nk4zdB6I8Zbz1YFWb5672igP2UBM22zirB41JzR1T9NbYs2lU
oStMDx7d+E9TwsIAe18RotNN0QODqvuibh0S6MzZkUq7Gj3YR/0syp3TFUVy
CMzGzemBvfIy/zvzMBSd8XxQ55seeAvTBGhwRqAY6vDGPWt68O2BDufAu0gU
/3Uo7vIufVB98b37FykWXcChvDeO6YPoy4AA55xElOv11GGYrA/Lc6Izz5ZT
Ud67YO3L3vrw9wZVxoOGiyjf8qiEXYA+/BAZ0VI/k4aKVIN/z8bpg1DczmL5
x3RUysJbvF6qD6YN2fOODVmoPHkwvrNGHx6ynifedriEKn4Fecfd0Qde3TOl
1TTZqOrjwMk9Pfpw+3DrUcnabFR3N/A/7il9sKINTM/8kIPqJbl7Zuf0gf49
7r92PBfdruivrvlG4b8mEY7CclFjOleI9LY+aJ2mLpaiv4zaXR4f0OEygDe/
j4smseWhjvGzfxgEDIBPV0pzwTIP3TM88vG5uAFYjLNcfnYpD92XO9tsq2IA
SyX8zBy781Hf7sOWfiQD2J/2ejvzYz5aqJQyeuNqAGoR07ZiXAWICXS09X0N
oC/2nfqWRQGyCz+rIBBlAO6Bot8l7xag2IPnpXKSDOCfwX3HnE8FqKqxRGQn
3QAyeB4aCB8qRCufHx+evGoA4VnsO+9PF6KD5yfZDKsN4HAGcqMtLEQq/Kt7
7942ALHqi8p2PYXoAon7X24PhV+cfkvW7iJUvy6zSTVgABVaVQOBYkVoLEf/
+5kRA5ix7zI4b1iEeJ4GfTCaMQCqR0OdKLkIaXmmTnZ8ptRLCz/8ubQIedOU
jguvGsCuKc9bD+8WoazSlud5vwxA/GluyMvhItSq8qSfhsYQxJvz8zjnitDb
/6ZxAKMhZHo9VMrbLEJU59Y6ptkMYdPE44H+nmIkzMLYbMJlCFwOmlfkDxcj
41tHb3UKGMLlx7YER5FiFKCvUCUqaQifV9VLeuWKUcFHo2sF8oZgJlQq4a5R
jO7HkQto1Q3B1Tbnh65+MfrAFXopSNcQRC/ufPI1K0YMHempM6aG8PZZE/84
oRhJWVckmBEp+QOXxpJsi5H19/bI+86GEG7NbxBNKkYRGUPnxL0MQSvixwKm
4FLRD/5FZw3hT8EZaUu7YvTo0eYp+nBDGB/U6pa1KUaL5H0uwfGGIPzUGnlZ
FCPWv8fsPqQagvbnpcRVw2KkWKxkaZFjCIZzkz7jmsXIUcHMqKfYEM6kdn5n
UypGiS/ctSWvU/SikRFvlCxGN05HqJXUGcL0/vOaDUeL0dCeSwoMLYZgef54
2IH9xehHdZVUaJchuP/LEpyhKkacWp0icw8NYYR3u51zpQhpTI/wWQ0ZAnqt
0do7WYQ8IucP944bwkGHI22T/UUo7dAfNqkpQ6iY0vc93ViEXpkJ0zEuG4Lu
yu6DtHFF6Pei6r+wDUPI7tw7zOpRhPhSLDfn/xmCjoZFf6V+EfLH0V/6WIyg
QirthT9jEcp1yP1wgtMItHas9G99KUQdmzcmr/EZweRSXnv8QCHaJf3yeYSM
EbRvkXlp4gqR6NDn/k/KRpTzYvCv3a4QmXn/wzZaRmBfJNZ1UKYQlZSLNcsQ
KOutK62mpgqQzP74gi/BRvC+YcRbVLQAdTK8Fh2INoKxCwMuq7/zkRaVVFdV
shHIdj5bbRzKR9Yrk+9d8oxgaoTZT/B0Pgp9flLsvxYjWGsMd7K6TjmvF1e6
Hvwwgo/6lYO5s7lIN0HPrPy3ERyZV2jor85Fw+HXZmJojAE9NV5R9MlF772M
6ZTZjEFkJGZyeikH0ejdMGuQMYbne/xany9nIwMal9krAcbAL/MmPqomE734
1XYuItwYejddbz49konsV5nobeON4fUnQ1PRrAzkN9MpzpZtDDIFedvyQeko
q+dQcGqDMRRuvr12TfoiGo8cpg9ZNobIPFf6n1nJiPxTXdLM3wSkHfOrWoVC
0T42qtHxYBMQ/yJpcO9dMOqUfnDOIcYETHbkIlXzzqGDZ/S6vLNMIONGsi0L
XSAa/GxmlNRoAmETU0/yZ7yQ9LSLd8eaCdx0c/Uw/IHQ1DY/E/prAm7NmVS3
fomiNK65hsd0pkC8YbL7cSAXnrPz3hw7ZAp6DPNDX0r0cNHLgAtLSqZgtloy
d+SwM6Z6klB1LMYUDt9guXUkOgDf/qRtcPO8Kdx7xzZ05FIgtqen/3YiyxRc
xpq0TMuCcKt2mpx6mSlw4of6LHeDsXdP7gPbPlNYHV2wPf8gHLNPWXtOPzGF
DGbmntzuCPzgzyHGU2OmIKV4ZN2zLRJzK1+xDPpoCv2NldOyV6LxaEvlTAad
GVzPZ5RnOhqPY8ZOJR9gNoNYKbZvey/FY/FVEdGSQ2Yg58FRrvU3HidL1Z+9
IWIGWeuGBprjCVjpZuu/PkMzEExQL6LzT8LzA6HXDazMgD//+6ja8yScu6Ck
N2JvBn89k1GqZDL+JtCd+c7PDNibv4qYzifjitLH3JuZZpB+OpRRjvI1vOoo
+dqmwAzORVqSFS5dwEVHLue0lppBpsGn57pTF3BWAZk+qMEMpi+Kd6acS8EX
rQd6R++aQdHDbu62rhSczCYVdaLXDA64x0l9pk7FkVl/Vr6NmsErq7P37VJT
cYiJW53xGzNQ/OR87PJgKuXd+sSjbtYMlnhDpZ/TX8SeFwreeP0wg9XUwjrV
mIvYKlbm4YcD5nD2Z++BRcs0bKpWFKPJbQ7//ijkMCSmYYPf/06WC5rDrXrP
E/yNaVgjdKjeScEcRJwmbwB9OlaWl/O6r24O5vdF+vSl0rH8j2J+Lj1zCF+i
iTa0TscSZ7wKJojmYN28MaBRko6FJYctTrqYQ//3tiq5znR8bFF+b4GXOfAL
yGChiXTMU3vl8dpZc/B4fnfPobV0zOlJE08INweVydFKOuYMfEDQR6U53hy8
9mT1rgtlYOYPI2usF83hjJ8s/qSagfeUKzaczTGH29K7D0yZZ2Ba52s+w8Xm
EOsVQ3rtmoF3uGgFj183ByExsu5EYAb+/cZ3Or3OHE7cedk4G5eB1wtfFC02
mwN9ilbmenoG/m6jRDDsMofPHlzf2Sn3ra8HyvbVPjSHEMEVet3SDLzwgm6Q
fsgc3qktHT1flYFnL/knnho3h7Ij6U0TtRn4nelLtUfvzIHjWqei1q0M/Hqv
yuaxeXOY6RYlPqLgsSflTQlL5pC0tf3OtS4DP0/Z7T+zbg5a+4Ou8tzIwIO6
Z4TRP3PQ7/e89LsiA39I8P1utssCxtXMR/6UZOD3M9dMY3dbgAWhI1Ewl7If
elF3e68FvCeM/wlLycBvS2kZplgsoMVGs+hXZAae+HvyFNNBC7gjWPlfvX8G
fuXo90CV0wIkbdQs8x0pfLpKj/pxW4BYiWlju1EGHj0yFl3CZwGKX6wfHTyZ
gYcj6N4+EbSAczQdXi38GfjZhNLJX6IWYJg1nlfAmIH7C8pWbWUs4NNn948q
r9Pxo/UxsxQFC7igeMSXtisd91nT17crW4CMby4SuJaO77Od9mTXsgB/t68l
QY7puDOw/KGOngVE/A2XqFdOxx2jL/mCjSzg6ofjiqbs6bglS2VyzMoC9lVf
bZsYSMNuV5jpOokW4FdlAtcq0jBb7QepCnsLSLrGw8oSmYYD+tISz7pZQKS4
50NGkTQsufZWjCnIAu5lf159HXgRT1I1EH6GWEBBAltMlOZFnLYvKeZthAUY
kERtllku4s/CEi9qEyxAlDuvi3AzFVeRosJ1cyhxtlLSteEUTPA0vy6ZbwEi
K9RFKvkpmOacwNCBYguoiK2iHbJPweSMZ0c/lFsAHftq7PSHC5gbcw3ENlpA
ibQPk9Gn8zhP8D57x4gFsJoZmuc+TsLaMtmo7KUF2HVIneqNScI/1D18Lrym
+Mt2J0RWIQlb2DJ1W7+3AJOw61KbFYmYKc3RY3XZApb6b5vmnUvAySvbzeLM
lhAHaq+dN2NwcKe6xTUTSwi8qxLHmHoOt9kP0LyxsIQ9CybRoiNBeOO3RdtB
G0v4u6em4sChIByh6nEkw8kS5HJSA5MrA3Ds/bS5yDOWsHg0LsY92g+n9LwO
t8u2hMxnu88d3XDBg86uEnl5ltDzcHeLLI8TZtxZnBopsoTEy13GKXr2OAP9
09KvsASlz6mddeXWOLtXcJ9isyU87GZgjV7RwiUPAisOjFsCOWT+2x0rAzTp
9odgPmEJVQmWPJmXTRH3rvP06e8sQXEwl9bqlCUq1S7yo5m3BOkrJ6hFMomo
8lGPwuq6Jexdyzi4YEpG9f17nw5zWEGB/Zfv0c980JJnfjQjtxXIamtNOn3z
RVK7j57Q47OCvRHpf/v2+KMmfdm8blErGDguyTWpfAa1D9o51ytbAVmOXWZZ
MRDhp9U/LjpYwYv0u0ka+0JQM+doYIwLpb5alaRNWAiq8vz9PcDdCmysaHgK
3oegNBrzFVs/K1CqcCSn1oUia5Wtr0JRVhD+IPffmFg40k895nc4zgp0TnFG
TSeHI5X/TBaZkqyArtVT6M9UODoaVPH5Z5oVCI6+rHNKi0CLN43m+0qsYDx/
VTn1WSR6txns0VZqBV8kG5XfHYpCI7plH2uvW4GPnkWQNDkKtc7+nL1UZwVf
49rDXn6LQjdO8Lom3bGCX0qPso5KR6OSGIOZ0GYroLJWCfIMjEZxh69NO3VS
9isfS59ZikZBXgNOlj1W0GL4mIlNLAZ5tK2+03lgBcF/gr+puMUgI0u9SYmn
VsC2S+VuwHAMUisLsD86bAVFrQlfoqlj0YmlkjdsY5R+Ew7TxcnGooMXV17/
emMFp7kdZjyyYhH968O2S1OU/Bvv3hnci0W/BHX+m5m1Ah6XYCTwIRZN9xaN
D3yxgpO9n//dPx6HXjA/JHQtUfqvL0+PsYhDjxyXxu6sWsEBjvopxcA4dHNL
80X+Lyv4a2wVXFgfh67q+Vtc/GsFsw3ir2AgDmXlFYxEUxPAz/T0iU/v41DC
h16zADoC5BbOT6ZvxKFg6a/P3fcQ4J2uvGARXTzyjGU3td1HgMqu57u+Mscj
0hAaMtpPgNVVdhfEEY9Mjvgaa7AToHg1mauANx5peOc9lTlMgKd2tYLfBeOR
THuPoRAPAQjn2GPNxOORIO2XQU5+AozuuSXfLBWPDlkdMGASIsCgyR07btl4
tKdcfWBHlADZTMMHs+Tj0faSl95PSQLwHz9YzqAYj5ZVcx8vSBOgsU5HLpOC
Zy/e13krTwDTjWRuHgoef73w8LkSAdqJuzvuUdb3C+3X7lMjgEKwgacHpf69
c6oPWoHCX0vuGu+JeFTfd0qzVocALLb333yh8Ctlye69YkCAF7tZKweE4lGO
Uye6ZEIAZ3XPy/eOxqPkW3M9iRYE+BetYtDHGY9CfzFrhFoT4Kdb1dkZ1njk
o6/c7WNHACL374ecDBS+oocfNzkS4DRR21/oTxwKYvw19ItMAKOJLVrauTi0
+XViXPMUARp8CLRjT+NQ9POOdxd9CPBYeg7lNcQh6oaiuRenCTB9W/aOeW4c
upAd/u1wEKXerTM2e87FoWyC0vbNSAJkKo8KZkjFIXYFTtofsQTotc9bdNkT
h0oObe1VSSKAqN9ZHX3KPFW+ucv1NJ3i16j2uidl/tpdTqouXiWA/9V9OGM0
BqlqcmjLVhDglMGts6VXY1DvsU2jyGoCnGku2/jhGYOezLfbM94hAFv4RmPM
RjR656cYKY4p620+fR6hjkaupocSgx4SYDfzU6nbvVFoQWrjYucAAXaZakxT
x0ahldW2YqNRAuyTLlA4vhaJaMIV7vnOEuD3yO5Ri5EIlEJi72ueJ8B49yL3
ncQIxKS6Pvj7CwEY5NbruuQjEPu/1om0HwS4/SSJhS4/HIkmy2/V7bKGiNHB
I/z6Ycg8W+7kVyFr+MJJ5Xk0PBhdrZVp8/O1huqUmP9GL/ijwTfug2VnrOE/
VhqLv51+aI2xYPJlkDV0kjgzY5Z9kfHp39RqUdbw9OHXqhaCD/ot89CMKcMa
8ndxzKdzeiJSl/Xn+tvWILTz6+BLaRd0aDiMa/m7NXAI3d3xPq+ItHZuSh1b
t4YPHjI3La2k0Rnpd5rEX9ZwaDZJ9oKZIOrPBe8eahsYFeUxN6qjwiG2e9qy
2GxAPtThlzKvCh6fKTE7IW8D+3fvP/2HwQpTsT13dVeygUIRZ19LPwKW1N4J
LlSzgUtXdM4QnlrjpGr3Kzs6NmCIdPH+WFss6yv5ecTGBp6GpTKmdTrinJ/d
CQFhNvClcKvwvJo7PjOW7eoYZQPTHIOX7B67Y5Mmd02DOBsInf9QbmTigenP
7qHmS6HED6mHh1mfwtGL1vEjBTbw2MFsxMfUC5OeiJC7SmxghVuN71a/F1as
/Y1ulNpAI1NV+by6N149Vb4TW2MDltJH7ykI+2DP2a+xUu02cKwtbPP1lC/W
6e1xPtJpA5WyzQfC9Pwwf1mOBn2PDTQJCln+qPfD7xxP/pt6bAP7dt9wCTzn
jy0nEmMyX9kA/6OhPr2F01jqro1TxBsb8HAW2YpUP4OZCkTVT03ZQObHKL2w
3DO4nzC8rTZvAz20Ue96Fc5itZHD0d/WbKCCoMrSLh2AD9/55jCxZQPXRXSV
7QkBeCMDqz7atgGhx+1T74IDcJPRqT9XaImgu69FJLo1AGeJKU2mMBDhuvfO
yaKxAOzPsLfrHBMR7tWlXc1ZCcDC/Y2RxgeJUHfsHiu3cCCmrU6yP8lJBKPR
QKbbKBDPJhFVBLiJUPz6sTmXXSC+qrn967cAEY7f5NbOPh+II/hG3iyIEEG7
/te5wpJATNypuDcmQYQmiXfvou8E4v3d+hF1ckQ4FR3GNjcWiJevHCEVnCQC
3p044fkxEA9FLiklqhJh/zD92yc/AvFNUi/nGUSEfRsi9/ZRB+ELSpe3SNpE
4Lvkc1yOOQh7cHhO6OoTYeAsHbXqkSCsuaHUIWNMhFcjIbuEhYIw76u9RTzm
RPAS+MG7LhWEt1umw/YQiKBAS9K/eTIIv8ltsl0nEmGT+CtKGwXh9sDkk7P2
RCifM3z1SDcI51nYcjx3JoKFAMtZKeMgHHhCfLPDjQjP5gXDEsyDsBnz3/+q
PInwQqxeEVsFYcmlkfZsXyJs/M3Z+mwdhPcMXS+IPkOEW0F8e6mIQXihLiTU
O4gIJZea39FRMJHn33RtKBEKr1Mff0PJf3zpgv6XSCL4OQevnaHUk6dhaRSL
I0LZ4RPiT8yCcFVwIadvEhEC37h+/2IYhA9+OppQl0KE/gNzgS+1g3ASqfbL
YjoRKjotJlPUgvCPZ9JWEtlEGKWmjdgjH4TdNO51+uUR4cnC62Z78SA81qgp
UF9EhPSgrNWYoxT9BJ6mf7tKpPzPTdSGHAjCjflWa5IVROg7c/qcDn0Q5mOY
dDxdTYQJ3LL2bTMQZ0e6P759kwgqOuQXgZ8D8c63r8eXbxMBtp2evHodiKdf
bP87007Rl2Y+SK8lEJvpnPdq6CSC+NXID3Zlgbi7fd/oSg9l/mJ/MxLTKPN0
hbciYIAIc63qfdxOgZiJ+caepmdE+DDjkvxNJxBHxZ8IWh0hQpz2jYQWiUBs
fwq0gyaIkJpwWUp+IwA/fT14q/kdEe7SiJ5fexOAlY0sD/6cIYK9covbvfsB
mPOE2/y5L0RIUJlMd44LwK+2klJCfhMhOv8L09qPs1jHj+l72z8iFARnOCXd
Ootbp/LsNmhsQTxRkGzjdhbnPqgWC9trCxVd5a/ePz2DLTIGnoVz28JiVtxz
z9TTeOjoXtZoDVvouSt0Ue6+L1bLvRx+X8sWdqvriJQ6+uJbtNyz23q2cKzT
9u2zPz447Ytkc4y5LXx/dgjlKvpggxYz6ziyLVhVK9PcK/XCj/RyixITbWGD
VcF2FTzwvGfX88gLtlAUfPTQ1oQ7pk+ZozmXZgvCueufXQPcscGA4mn3XFvI
KmjdFXXNDQ/pT2rqXLeFbZ/XxqmrZPzSQPAr3QNbMF02k3FldsAfjNrVL1Lb
QUR7gd6imxHe5fc+KIHODqxv7PfnrDPAgukMtRF77KDcXqRP/oce9nxmz+a7
3w6e+FxwKjmvjReNdxaM+O3gOK/ZntQwZfzDxCCbSdMO4j9peiR0ftegNn/7
4VK8HSSwsOj7ihqiwR4bgeBkO+DborYqzzZC2VIv3O1S7eB0jPkLr3VjxMc8
OMeXbQeRHcsj/q1mCJ63LTSV2UFfT+hBm11WiEFdRqSg0g7u1IkVfKi1QqP1
9V6RN+xg+I6VTKwJAZEzKj9rNdjBs/sCtI8zrVG8cc7iyx47uFHMXvV+k4gM
upgkOh7YwUbEM2aJTFvEKpHqd7XfDuyUZS0JfHaonDHum8ewHTRq6sYJAgn1
PvFfXp+yAwvJa7PKpxwQlYHBD46/dqD9jOAup+mCBu8+lN2mIsFZOTod1mYX
lC2Czs3QkiAfqTlpsZIR327FtVomEmy2kAgHo8gI+gU2lLlJYCN52I9ByxUx
KJYp8vKRoNggXq0hwBWNVh8JoxEkwemv5T84Sl0R+fz+racSJHhdnpQise6K
4nV2fjmokmBso/CuXp4bMmiNVAFEgsJJk5pPHW6IVXAjUlCbBAKlg6d137mh
8l1Lf74ZkUB9PImoeNQdeZ/zVnthRgJN9aP7n2i4I+mPH6PbrEgQUbBvisPJ
HfU+ePs3xp4EFoOP2r/ku6NUWaKGmzMJFlt+/fJvdEcW11/E6rmRgPnCSEf9
E3c0kzC4w+xLAon8+Um3LXdUu6oNP0+TgNfoDP3bfR4owBXHvw4kwZbeN2WW
Yx6ISrOdujyCBO5K5/a063kge51PTydiSOB0rjU3zs4Dtepz5u1PJMFUhrvH
C28PxGxs6GR0gQS5VHPZ9WEeyNssUjgpjQQPRzS02M57oAeWt1a6skjQ9DO4
a1eOB+K2edexlkuCPJYtQuIVDxRqty/xeCEJeoe6oi9VeaAXDhrGnldIwBX+
s0uy3gNJupw9WFZGgg8y7287NHugC27lU68rSdA1PUXPe9cDzZx6UcNaS4K9
vnlZIZ0eSMWHJsCwngQtPvcFPe57oDx/OeXERhKI/OfT/ZWCl8960HS1ksCx
WsuVmYINzuU/+9lBgpirMyeG73mg66H9eZLdJPDat2N/vN0DbUdsOp3qI4Ha
8jMxqSYPRIwRFSl9TAL6llcbY3UeqDGe9P2/JyTYzcWlzFvpgRiT0+6xDJPg
5Ci9H1uJB/JI6Uo0GCNBUubKseZLHqgn7Ztxwn8kuFwSxkaV7IE4s3jYO99S
5sc+Y+lfqAc6l2M2/WOaBP8KLyQ2UfQdzou7IfGRBHNlzJ1HSB5ItKgxwOMT
xb/Tf2LVDTxQ4pVZ5WtfSXDMjfoVt6IHelfKtuu/FYpe/w6/6aL4qXhde4h5
jQRXDK3qeJg9UHZ1cL7+FgnOR9PG6VLmQaf+P5F7VPZwqmnizNqgOypt2L26
SmsPJnW3IbHBHW01K3WK77GHisseRR/z3FH9vRKTq/vtgTbx4xcpR3dE3/2M
/RW7Pezx/HiUjzKv5N7t6X1H7GEoRUPzJ687Yh9wDow7Zg+PRz6Zmk25oYCn
l1Q6hO3hRXfEp6lON/T0ee+uVXF72GwXanQudEOx48cK3OTs4cRqVIu2qRta
mF3o1NWxB9/7bxeYbrsimOdIjjWwB3rDYNHCRFdU8tnA9K6JPXy8EukpZ+uK
zFbq3ova2IPfzYc8LX/J6O72GVomT3vQ+Xe0wBDIKJVj03QsxR4qHajso5ET
yhsc/Pgg3R74Tbi+nJpwRGURJREtl+zB8vB/fFIBjqh9Ur06r9AeMgTilSOu
OqD5suRt4g17yOmLPvPiMwlpibLdmuy3B/+ginUrWyLaVjrOME/nANE3F96c
SDZFDIv/rr3a4wARknnZzekm6MCVUbn+fQ7gKCn8ZybXGIn/Pedyg90BmJx8
X0WXGyJSX2e7j5ADXO5ekbfo1EXthganlnUc4FrF2yNai6oowN79wWaSA/Dw
SxqKRlFj5rLFGbVUB8hBAUVx+ay4/mPgTkIGBV9Jjsgic+JP/vFqTPkOoKT1
K4bvkwB2jrvWzlfjAG3FxhGzsTLYpOp1neGgA8xRyewbG0F48bPzk6whBwjw
pjne/QBw6vGFTy9HHeBCj1+9wBVN/LB9TdD5jQPEUt1qj9LRxipP9pcFLToA
s8BYqUS4HhZdNr58hckRlo5Pb/62N8H9si+bZlgdobBtt58Koyn2CLMfFWJ3
hO/0Lx+EtJviMiqffY08jrB2V//YQzpzfOjAhZRHUo7wM/nvbAy2wK22+2r2
yDmCcMb8+9uMltjqat4js5OOMEnVeFjL2hJnClVSv0GOoCFL9STjgyWmVeqN
WrJwBJNgROXz1Qpfj9YvkbVxhDIh+TdhYgQMfcMdYSRHmFCkN31zioCjjKbW
qd0cITlXoSjzDQFzXvI4qO/pCE/Q29QpVmvc/vKrbIavI+xyWzaI1LPGPxx/
nz10zhEeGeY9yq+3xtkVCVkOYY4wNGhZzDZljaUWGG6XRzkCb+eA78ReG+x7
lmNRPNkRdDQdM9Q8bDBDaylDQCpFn/Naa28ybXDNlpBIW4YjxGRbxPe02eDZ
BHkPlO8IAbdbvR2piFj4EHNWQLEjrFvVJYYdI2Lfuk93K645Ar+DZ9sXLSJu
0OibHatwhLEkZ/sWVyJeGyvZS1vjCByiCi/HY4lY2StYQaHOEc4MpOSblRBx
7B9TF887FL2VRkz4W4mYQZC6ZbCdwv8qXez4ByI27Xj77lenI7iy/7jXvknE
uSat9BLYEe7cvee5zmiL/5vJlHZ86AgWLY+Lc7htMVeIl33mAEVfsedXMyRt
MXmPZnLPM4of/04++qRii6uuHbmzMuII8v+yg6r0bfEXmbXXfOOOUGUcr/7I
yhZL9T+ntpqg6NOk3G/gaIvP2d+QSHrnCElfvdvlPGxxx3K8TeuMIygcH165
4GuLtxPt4+bnHGFUeNlL56wt1uSQv3noiyMkCjgcPBNkiy/c2vdSf4kyH59y
qOmDbfFT9Gk7fNURJK0uhDJTMMt4r3DduiMMH7J/eJGSb+1dYjH5yxHCF3OV
Iin1irfPRTL9c4QOpgmdD5T9prNNq9RpnODyxb6Ljyh8jgmJDJ+hdwKD1NHb
Ak622Ose1VYZoxO4VDywo7G2xfWmb/lfMDuB1JsfRHdDW/x9tsWY5oAT+E8l
lhqq22KF0MwQOQ4n+MD2VqTjhC2OZPQq8+ByAhH7o8tNfLYYl8KT/KNO8Mr5
H7sKqy2mlTvys1/ACeR8YY7wj0i5P/7k3hJxgjOXkkppvhJxpsNzPTFJJ+C6
5XPJ8D8iHlupCbCXdoI168fHJXuJ+FByfEm6vBPQVpN236kl4vJ6ueUlNSeY
3masvxZCxPOwj/OophP0LDuMsNkTsfirBU0LXSf4/d1wXkGdiFv/Fuc3m1Li
5x4r5+/Y4AEzKvUwZydY/2/CQTTEBjN9fONZ60apL1XLGG1ugy3CWrLfeDpB
mMiuY6WiNvhtmeec6lknmJg4vuD82hovfx9Kp4p3guZLcXvNRayx3PmaNplk
J/AIdFrK2SLg8MPx791SnUCaHckPDBIwtZac3ONsJyAx+Y1xeRLwwcvFby9W
OIGuVlTpzzwrzPjqwIugaif4u8XCRutmhak4sgYcbjqBW0aOq7GUFV4qSWw9
3kSJm78eznpkifuv+2W96HUCx0uETofPFji8WV3r8IwTlGXYjnvxm+GpF7M3
a3mdQRGEhp1o9fD4AcfynGPOMOuo4B8frYuf2vxXECnsDNmeW/58azq4/c3T
JBMpZ/B+fObx71ltnD3b4vRd3RmSJEPm6O9pYq3V8/uVnJyhr3hmseGuCq5h
FY8YuOIMzb7Pdk62HaO8L0hbtOXOsC/qBqerJx++23UxTKvKGTppsUG7HDce
9PwS0l3vDC9OHwmpZj2AF+/XBrV0OwMf+dMIYWG057iPiH/Ze2ewLb544eIr
PtSuYfv13UdnaLLX/iC4cgxpHEzxPfLZGbo/WpnZ0wohM7zgnf/dGUJTP1Xx
8IuhAPaaU+nULvAhUyMkOFsatfYJuoQJuECQ1I644H4lpFZoPd0q4gJmXx3q
ndeU0GP/ZKcfEi7A1dVbVDiujP7jmHM4Le8C0/ceCr9NV0Wbpyvt3HVdYLU9
my1lXAPFa798XW7oAsFPho8VlSLEcHiX7bSpC/zLfdxXLwuI85GbDYnoAgfe
e1adWgOkcuSYlbmXC/hSK97Wc9dCD1YsX2T4UeJ9gfXlnVrI+HGCxdOzLmC0
+i1NnlUbOQbMmumGuwDHTVufv23aKLa/3Fj1ogv0Fx46/OirDqK/Ovo0PNMF
4ubZQ6/K66JLgVRG7TkuYHCXyqU4SheVc5MNZEpcQOzQwtWtXXqoL+iorsgt
F/h155Qr9z899Ht9JZu7wQUmxLaMeOX1kXxE77v9LS7w/GPRaqi3PqqNcw3e
7nQBepaRDrEhffSBRrZ3tccFnlyPSUn8o4+4L9AwfXrgArfsXVJOiBmg7IzK
yhdPXWDMxJT+fJwBesoSvNI/7AKb99h3H681QLSXdVTvj7nArhfFZqIjBii8
eH6s5q0LvG48K3+Y0xA1c7fzXp12gadtBwRZVAzRt7ILvjkfXIDFqY2eZG+I
yDUiNNGLLlBYH9KymG+ISsS2TAOXXeCg+q1iuSZDNF4/WOz5wwVULVPqx54a
Imbp4nmHDRc4biv6bPCDITJo8ZGx/O0CUK20cOiXIUpUVInR++cCVwrdlrv3
GaFpx/NzPNRkoK28/r6HzwhFlZ5O49xFpszvtbUjskaIc8ZG+gAdGZ7hxJiX
mkaojV/jv327yXBz58LTL+ZGyMpdOJphDxmA8aeci6MRWqliPrZrLxn+sfqZ
KHgZoYyFjYG/TGRwFJLpPR1ghMRE35/eYibDOYVKVcZwI9TvM3DgJysZonTq
A5hijZDbrYZ7S2xkSPpjqxeaaIR2vhW6fD5IhlRZhT7D80boqlQ83cdDZDht
LrCQesEIKQV435riJMO7t/exAgW/arKwnDhCBnqF8VSrZCMU9FNpc4ybDJc0
JLNn440QiwL/tee8ZHC//0x4PsoI1Yfu0R7kI8OjA/LYJcQIGXasfn5wjAw9
vqwfCaeN0MKvN1ndgmTwUD129JG7EUpSfSDfIUwGxeoqvhY7I8QXU/e2WZQM
T/Tv1wmYGKHuntz42+JkuJZcmMSpYYTsqaKEayXJ0M71LDtPyghtaroPXZci
Q05e3lAJjxHKSzIOuiZNBhmW4/JSe43QMD13T648pb+QIwx7KP75GdB6ZCqS
QXfX0VfEZ4aIIe3bnlQlyv4Wa0UaLYZIa1+3TYwaGf4qLqd/iTVE782q/4Rp
kMFVOrO0xc0QRWdnVgQBGagLaGKEdA1R+wHnJS8dMvxXw8TAQm+ICDZ6l930
KP5N0xzJmjNA3wuklJ0MKP0SH3Y+7DNA4kd2kq1MKPnBw4xu4QaolK+cW92a
4gfbRvWb//QRc5rM4HEiGZh6TzKQ6vVR3M8H53jtKHhkd2lnvD4i988/3XEg
w2Y2rbe8sD465i8R8cCdDEYcDnXBHnqo5m77K/1zZAgeLj030aSDDvEbJCiF
UOZjcXPqTJgOSkl7IykWRoalq6eqJNR0kLfTdhJjFBl+8ghbiD/URuK7tGSf
J5Kh4t46/f0BLXTH7HmWVS4ZVLtzXmo0AOLtcFbRzqOsH8rMcfcBdIn/+7xc
ARlGTgTs+3UMUMAamzp7CRl0TP8msYkhJFti9/V1BWV/PpOFlI9qqH3+o75T
Exn6T758e0VGCXVH/6byHiXDyR6Wh4e/SKKNhoXviWNkCAtcnP15WYLyfz82
c22cDH7TKdeWNMRRleGt3pcTZNhv2+hSki+C0g45xqNZMozzPhXUNziGiI3d
O4d+kMEsTajM05YFZX+8uSKzRgaOXJq7N+QY0ZNDBe9NNshgm5E80sVOh9Ri
zuDE32Q4M35on+ybdY1jRkfjlmlcIftubOOM4I+elY/x/x4foOA5DfmGPg4s
ynF6eYbdFbo8e7TDDxzBbkak6T8crvBbq7Gfk8yN/2uU6ZHhdgXp7dK/jcF8
+H7Mh5hrgq5wVyucjfxOEKdy6PwNVnCFtO+fni9yHscPjKSXLp2krB98T+zY
L4X/xHBP1Sm7QuNBjlT23Sfwmbm1+zPqrtBOve9f7TlpbN1UHW2i5wrdQg5N
1hqymN9497aArStsTPgvQ4QCln+lPXaE5Aq9/oaCmS8UsJ5LfO1+B1ewC5vx
4xJVxL7nflnvOLuCzlJ+/c8RRdx65evtt56ucJL96BULRiXcLySa/MLbFYx1
Q9Z8rJXwRIOH/aCvK8hqTkS1XFXCfx9O0befcQUlad70URFlrPdtxCUn1BWE
vxg82iOqgu1CmRRTw13B10PYI8pdBftSGTLFRbqCXhvnI7ZrKvjSwQcd/rGu
IOX6400Doyq+Xvovyz3eFW7p6Qq3aqjiVlHVU/aJrmAWZlA3GaCKJ9Ra9xtc
oOC1HHR5RBUv9n//pJHqCiL7LIeObavibYvjPQpprvCsqeH5uLAa5j9V4yuQ
RcHR6ZPloWpYfuUDHMl2hYscXTpdV9SwXsRRjv25rtBvtcz1q0cN+2YWPfyX
7wrzHTkxsztqOJrjVfF6oSuQfHU0M3nUcVbF/oBvxa6wuzaN10VZHZdLmOl9
vOIKlrLSXHYEddzSlsb99porcF1FGhF+6rgfDfwYLXOFJ0V0OQ8T1PHEk11P
Biooes+eM1cqUMeLBCjrqXQFDWWPTxO16nh7KjqkrdoVjnUMDdbcU8fM3veM
62+4wkj7gkfloDrm/7HOX3nTFQhlJLvRV+pYPlp2q/iWK4jVHgk5MauO9ejP
DmffpuTzuGU/WFTHdtm3qlIaXGHukWdC+g91TLncRMY2UfwzVjTO2FLH0VWC
liEtrkD0f8s0sK3+vwbLO57KL47jtqsh60ZWXBrKuCSKOF8aVEoZLaPueu5j
ZTU0hdKQlKRSyUp+SBKV4h4hKqtFEiKSkZmV+Xv+/LzOeb7nfD6f9/N6HRyl
z1rmnccCv5XjYxazFjjpxb1p9nMW3HMOdP5L6Vzrhs9781nQEkc71zVD+atc
mL7jFQvO/Z43zaC+r9/leMamkAVjb3duSRqj/LVE7bLELLjwVUHGc9ACT3tW
6q5+zYITMlaSp7ossMwITVS3hAXdj3Nmmn5YYEbwxm+MNxTvx6a/RX2h/EmF
Pl5UzoJPLjLXb5RT/q4Lzsm8Y8GHZRtMhl5Q/tQmXSQrKP4NKn6nUfl5PTQ1
mqlkgVj95sYCKt/ThodoI9UssLnRuN8wzAJffZXd3POBBf4Pj9ZIHaT81OhE
fPvCArX0HrthS2pd6/WDiToWmM/f3lXFoOYd3VOk8o0F+YYhTl/EqPstPj/i
1sQCzT86hcdL1uHpAHWZ4B8sOBnXd1k7YR2uL8tbkdDKgkjR0grpE+tw1MH2
/T9/sWAB6l2Xv5Liq/jEcdFOal6Z2niYMMXfQvkb2t0U//uiVqfUUvwWWr0n
+lgw5/sZ5mSQOfacf9+4Z5QFf4Q/xyZmmuFNLBP7ef9YUFw1Z/Gzw2ZYM6/K
Q2+SBRHvPmpttzDD9a5T8b6zLJDZHduj8XYt3pi5V2pYkg1KWfWbZyvXYI2t
Cs1TSmw457Mqd91tEzwVnzGupsKG4bezq0O2meCvQ9bySI0NbVWZP7KFTPCV
OH/bEE02GO6Vn9PLWY0nu6pzxFewoTP3WVmcujGuu3DxvLQ5G/yeaoT1eRri
y2UzTA03NrRHf8jbyliGwb/DUG0/G5SDV+/J9lmKh1WqjZRZbIi0iLr18sUS
7Op/z1iBR+0vdB79s00b66muW0PzYcOmP4fzhY9o4mr/Y2jgJBuSBSX+kpGK
WEZteFvRXTYE36zlhm6qE5SWf99eGM+GhJFB9WPdEYKggBL7lwlsiPNpmqPm
+cWypTx6Z24KG+IzuhmZ9v2WTwIMndMy2TDW//5Iir4Icnh70PVqARukp6Zf
XZ6RQxKBu9wiBWzYdhve+BsooJdqlu6Xiih/z8XeHnejI0bg/ANnS9kgErAv
rChbEQ2pZXKCKtkgvug2M8VIFV0P7PI80MgGs91L//OzYyDlTcf9HZvZ8N7a
c13EWwZKUpobtKmFDXRMc+iy1kI5hbrndNvZsOz6HXM3I230QdLv/ngPG5Ja
nFQzJpegPQ1CqT29bMhV04sgPJailsxrmc39bHiQzxhbX7sU9e98ml/6lw3X
uhuldz1chqTvjn6+OsmGw9N7rI4b66DYg+cbwqbZMLnC/WZHtA5Ss1JqPTLL
huPd2Sdd+nWQbsfaPldRDrT21AU4Ja1AW5mnaDpzOTDiblRrNbASfRKRXqA6
nwMZX32Nsy110b7aePqCBRy4ZhL2mh6hizyPFzFG5DhgZW6+pEhND10oFbV4
rcwBZYcHtj4r9JHMzZj1uaocIMxmfXxJfXTTY8mWh+ocsAmSPrk/RR+lStvs
jmRwoKarWUJyoQHSb/3qdkabA7UdA5mFWw3Qs6ckN3ApB173nr90INgAvdlz
yX/vCg4IeXTFerYYILuVKkF2uhyYlv082CnBRF+mM04jfQ54ued8ilZlovak
qoglRhxwGbov9X4DE3kfdo9WMuZAv4rU7927meivTf+tuSYcaLK4IN1EMpFI
r0zq4FoO2Hs966m+wESXcGJmuzkHzK2Wxq+7yUSy0UZPv1pwIJ4ZFZOcwkS3
uCX57xEHgokhX7EnTKRh6lRUaMWBzSEaP/cXMFGa1K+y7PUcqFaQSHtWxkTM
xsNVyRs5oChyI0rqAxO9yJL4EmvDAf3JXb5765kIhdxsuLiZ0uHBRg9/MFGZ
4/LWk1s5oL6V9+nvLybavjT/t+82DiR0P9sMPUxUN765j23PgeTkXf9F9jOR
e0XDsPNODtw7GENvGmKijntek7aOHEgjzz81GGEiH78p4XXOHHjSV5kXPspE
w9aRNIPdHHgjG0O2UfokXX0BYy8HTI3alG0oXfVEah9y4UDgmvQb54aZSH37
SIqrGweOiBBnkgaZ6GB3S/+x/RwQ13d7eb+XiXB4pdlNFgcc3O/oBHcykYzW
i3O5HKqfBrla659MdAAnf/jI48De6MdVfxqY6IlLlEo/nwMvHZauCP5E5T9+
nJjnyYHGOEJj6i0TOcQQT3S8qfOqGgd4AiZKZjpMbTrIgcO4qUWQQ92/0sKG
68eBxRH6jlKpTLTBQyc6JIADdrZheTa3mOiGOL0p/hAHirsUg05epPJIFFpe
cIQDFYawPP0YE51v+Fo4epwD6d6p7yZ2MVH9kRKawikO+HmUzjIoXpbLP3Y0
DObAlcsfq7czmej91vAurzAOzKp3Hi8QZyLlTn/ji+c44FOXPJfWbIC8zroF
p57nwOijx5vysgzQvEJjemsEB1Yv6VseusUAue3VODATyYGTLSV9j+gGKGtk
bobKVQ54l+TYyPzQR/b6bbArhuI93U4i2lsfRd+/5l1xlwMliWQICtRDbean
nnfGc6Dw60mlWqYeMq4nRSQSOXD9QKdI3R9dVCsDt+ABB7g7zgauPqCLlEL7
SvIeccDJZvN+5uqVKJ67VSVBQOWfvWHQP3456hcyJQqLKF7Lgw8qb1qO4B7j
SUMx9f+xxInkP8tQa+2/TfRyDmz/8Sf8sMkypG2TFnCphgMNUXcC/xYuQf/p
iL8/1MIBmb9y1XrJDPRJ1WrS5ycHfIf0drHXM9DUglO6/HaKZ52QuVJtmmj7
6PCVvZ0cWNh8JbVMQxMNF7c7Wg5Q952O7PTSW4zAtbRJUogLBlPR8v1tSqj+
Sthg3GIuPD7y2TxxEw2JhGJGjCYXxu2r1VY9kUArD086Rmpxwc79V2iCqjg6
7RL4LHgZF7bt3FzBHxVG2ss5J7gGXHgVV/dkud+Ype9ra3F9xIVsm0CXtt1Z
Aolh4UWv3bnQzGCKCi+RxOPZt660H+DCwkMqL/2u03CPj4EYjcOFHW4lyXNm
pPCH36792/lcKD8wrOdfPg/HfX/+ptGXC3dtr3FCFWTx5VvbzYUCuNAUeGfw
wCtZHOz8K1vrEBdWQNCS+QfkMLdG7q5nEBc25seczkqSx/olPgHjZ7hgM3Lb
CuYtxBpnxDpVwriwvmakLS9hIZa3uOOGznFB8pa8r8BIEY8/e2sbfpELu1ws
3hy0V8LF6VqLFaK5gK6Uxz/wVMa5/JcxpjFcsE16uGVOjzJ+qL1zjkssF3p8
zTd/IVXw5fjTI4lxXMA0Ze9zrqp4V/S3CoNkLvV+iJjXrqWObe39rBwfcMHB
wTPt3xV1bD5P8vmRh1wo08ve5TSmjjXCjZMKM7jwrsc0uxIvxnLrKxRbH3Fh
1fEP3KEFGlhciB0plk31FXuYe8dSA3cfiwramkvl+1npM76pgRtNlvYdfMaF
ECG27dpiDVzzt4AT/YILOYpLi7b2aOBcn+7t3wq4ICG5c3LNWk2cuiKkdErA
Bf0/ipfl3DXx7d+KZhqvudAxE9EQGqKJT7M2LuG/4cJ/y+P2LC3VxH7qjXGX
yqk+3sxds7dNE3O+B8hkvePCVZnTcgxhBrZ1TpgcruJCQZyxxpE1DGwmZ+qv
9IELmkfKsbADA+vVVHWYf6L6Ws8z0vZkYLnNkx9D6yieCJ3LBrEMLCYRbZNa
z4WuCv2bi9IZeKx4eeG7Bi70jZo23S1g4O5gbNTbyAXrM8uWvqxi4MZ1u9Jk
fnDhUkrr7oAmBq7590fNuJULH1gD58p6GLj4Wdj13W1c+By2sfz5OAPnBipL
nfjFBfmvdFMbMS38kPnkdPxvLrw406J5RFoLH6QP/nvexYUzajHjixW1sPEE
8/DHHi4sER0rDFLXwhPNfgPdvVxwF9nxKURbCxeVZHuJDXBBEd8rX6ejhcPT
BjrUhrig/fj3hgxdLWwXyWSbDnPBZI/tYLW+FpYL8GvaMUr127vu9H8GWtR7
PnuP5zgXdHreVq+jdLz5wOewCS4s8Ez/cklPC3M1mPb3pqj/9VVCyI0VWniF
uN/7ZzNc2FuTVOu+VAsPdD3e+EGIBzl9pbOdGlr4WXV/UZcID1jldWtMlLXw
yacG60TFeXCrIj/fVk4LW9/yfa4qyYPg2MwqhpQWpp16bGQixQOtRS+6y2YY
uJrV/8h+Lg/Ek8Yum/5l4JhNBjoe83mw4eZn5tEOBt630jcldAEPsrZJelyo
Z2ANmceL78ryYEFeaK/POwbuGO6Ly5PngavSy2Mr8hk485v+who6D46a/H5X
9JCB1yRnzRNR5kGveoZueAgDz5zvO6+iyoM1u2pWvPJm4FJvfdHV6pTmrUyr
3cXAO0yy/vEZPBDKmQgvX8bA5LtHHVUreKCkvdZ9vEAT62f1sn7r8uAM0zUy
574mHo7WaxIyoPzLLHT0pvg94/ro86pV1PqnsNt/rDTxrf7MotvmPDjbkeJ2
9rkGdv/yx/ypBQ+MM02N7kdrYO183eeViPI7o/2ozlsDZ4dmPppdzwPpnyHN
6eoa+C09M45nxwPHbv+d6QPq+MpEDz14Ow+W1j55HXZbHTv9WHnt1g4ehN8V
ZteCOm5Jyzhf4cSDb8LOlcIRanjcPOOQoRsPEr0zESGtinXY6dunfXggoy9n
kl+vhN/eM8se8qXyc1t/av0hJUx8ey/b6c+DUNOt3b3SSjhlR8+XT4ep85Mi
vbCVItZAui5pp3hQM/RRQyWejheqZvEdI3kQKH72VpepHBape3Lmv0we3Dtk
HBBoLYETZa1/xmfxgEywcm5xFcew7dP6mGweXI+WWGV3VAyfKh2SCM6l+jUy
u++cKYLHc1ZFOhXwQH1mZPc6wxlBX1Te7dkKHlTKOvh5zBkQfN+cn+PcQ/Gn
IpU8Z+SXpbV9yp7DvdT33owY5N9lme4UNRPTzwMPHe/+iI4/lsf387Z8+csD
jdrvSp+aBi2VD8v+dJjiQdjs0Hbbc+OWexI8ZHfMJyBZdN6JibMiqOiB03Pf
BQQcYzc9n7YWRcszkFuULAHmzU3pN2dE0Xge/b9qOgEZCm6OXgfF0c2K17BN
nQAfXS+4b0BDdaOL/LYYEOARufYFy3A+spwSW+hpSMD2tqhYkTfzUarwwKuL
qwjQHm84XOwsjY7MK5N8Z0rN/7st8uLBBYjOCLhvA9R+Idt2R4EMOrnMbSPf
moDJyx5Oe6dkULuubU/4BgJoLlr7vq+RRbmm6qZltgScWGSUuO2RLHLa9r56
w04Cnp7fWCoIk0MFDnmHuI4ErGt4MHE8Tw5p70lQPutMwLmzefJpv+TQMPsI
UbKXgFYDUdGdVvLIlWTNa3MhoFFvg0eFtzwq9bHLEXEnwLEt++LTWHl0PYgx
Y8UmQNRptvX9L3k0cWp+CotLUO9D34h/cxQQO2x8cwhBwAXW94sx+grI6Er1
jSJPAuRdFlos8FdAcdfzzVu8Cbi9K9myP0oBidxOaZ09SMCST9nd5o8U0Kfk
43ookJoX+BKrtikgOaFn+WaHCWi26LihOqGAHF0HN5ocJSDpxM44wQI6inmh
+8nwGAHPji/iiGrT0RcF0l3vBAHTzWue9ZjQEd0/uXv5KQLc14q7B9nS0a6q
5iPawQSU7+nQTt9DR7E6yqIaIQRs2XepO4RPR1/POUephBEgVHrstdBhOlL6
eVVF8RwBP39nlCwLoaM9lpUP5c5T/d1cNHc8go5ux0kaS18koD9DtjzgBh01
jFoXSUVQ9/v1a8vte3Sk7HjaTjySgLWHKge9U+jI5XF+vVAUAdtmPq/s/4+O
7s4d4U5dJWDeI9YxzSw6auQzB8eiCeilqfqIP6Ej1VKvU39jCOiuE828m0NH
bhoPpfpjCXg7mtbdSen4kz9vdN8iwNP12mAPtb+5Xo3REUeA7r/x2IeP6Uh9
9d6s1rsEaDLIN2qZdLT/WoxZUzzF0+0Ph3Y8pKOE3pqy+gQCpC0WZ1sl0lHL
5rmOX5II2P3g7dW/t+lII3XTj5oUAvzPFAN5jY5YIqFeFakE7H1/YiLxPB0l
uReOlaUREGOlK5F8ko5+vhwPK04ngNjbXOjjR0daisYygkwCrJwnzotx6Igb
6Hs3P4sAeuLORg8nOvq1siM3O4eAJtVzG9NX0dHSC5pWmbkEDMmlXr2kSUdE
u2vVw2cE3FrcX7Nemo46737+Ff+SgJ7vaYZ27Qpo+T/pgLgCKu+w/LGEKgXk
4bxl5oaAAHLv8fFveQqoe/7rhZHFVD7XIkPFwhTQCs+ppAulBHw+7kWf4isg
rzJTg7NlBOzffGW0basC+nM6y+bEewJkNlSYX5NRQH39d4I8PhGwSkXXsyBS
HunbfRXjfSHg203F3Kue8sg3Te7agToCogwe3fHdJI8GDlz8b3cDAVpslpbL
pBz6+/FIw8afBCxbaHDObp8cGn+6cx1jiIC6or4rNf0yaN4ak2r5YQJcNssa
j2MZpFGgfEB8lIAGWCR6MEoG2Za2hXX+o85foD9rryuDbn85XJElzAelysv/
MgukkdnI7X3msnwom+tMhG+bi06a/AxyYvJB+s4K5etvRdHVl2VzNhnx4WJq
Mmv+VlGUYplx19SYD4kPksIWVYmgyk2HipTX8KHVqshO4oMwUtstQWtFfCh6
e8FZPmXWUnB0xU0fe+q81BWfX8eNWc6+CMgLP8gHhtqr6D2pzZaNEjkRSX58
KJgdl233bLB86TTIEgTwQZ9hsqp7VZ3loQFf6dEjfOiMl2DXp1VYdi7z4fOC
+bB9wnY+3vZA8CmWv2jDVT7k6lwWCjdpFTxuT+3fH82HZEfF2K+abYLLRh1v
TsTwYZ+I64e5Ur8ENtXcgKe3+JDg/kXq6ftOQYE4u4KRyAfuaxVlpXkDggeH
XE8J5/DB482l0NC2UUFo8R1HtVw+OL21ZofnjAkOyHzXWfuMD+9OfXQtPj0u
UM7cW+f3kg9d8ryNhdITgittuwxaivlw7XPc0tdzpwVehrHiU6V8iNv3Le9C
ybTANrj2u2I5H+awgrKsg2YEoipOF+wr+PCxpv2kX/2sIMhhZ6vgMx96RiYz
jqwVxs4JV5831PJhboAd7/UFYWzUVxM5+pUPkutvBnnWCePei9vN9Bv5QM6I
CVV5i2D2663X77XzoTDuStzlc6IYLYjwyO/gQ0r61aiwclGs6vYe1XbyQcX+
rFyZpBiuG7f9M6+XD542KxWWhYnhrcxNG0+O8EHi5zUlfZ44FqqtFT40xod1
pZd6f98Qx8+O8QRe//hQHzHhofpGHDNKzpq6TPPBqvpF3ZC6BK7nKww7zPJh
z8fBguubJfCVeSnZW4RJ0FszavYoQAJPOJfomImTMF3O+m1bJIGzJxw6DCVJ
6DHRLH/fLoGJ+z+TdKRIuFAbnlAqKYk/dQqrLppPQi9j7h2NzZL4QuS1epkF
JGh3ii0J40tiSyPNGzRZEj65PznqflYSp58A6XEFEhpb6y1D8iXxAY0P7/sX
knB1qK363UdJvPDN/vO/lUgoKXF2jeyUxJUe/et/KJOwe73Ho8ppSRwqHSz0
VZUEy/2r4y7I0vCap9KF1eoknNL/K1esRcN9u+OPlWmQYH9ToHLcmIZTpvRM
BAwSvDXvVD1ZT8P7EguH8rQpHamwx3MnDcts2vb40VISmtVDJlPcaLisu9Hr
wXISPrI+ynNIGj4Z5b383goSQhaJz0n1p2Ej46n2GF0STmR3ufkeo+HO+ojE
y/okqHsNpxYF03D8KRX3s0wSuCX25++cpWEnRobySSMS3HMPFQlfoGGpcrOv
gcYklGrtUx25SMMCr/fXvUxIiDonE3z0Eg0fktm3g7OGBF7bhuZL1PqKvK55
LmYk0C4/sDA8T8Mte4+9c1hHQktJVIF3GA3HztDCt1iS4LjqSQg6TcN2ybes
rYEEwtSjJuMoDYvYLp9da03CqrVVf5/60vCLP89fGW4gIVkkx24fQcMHr9kE
6Wwiofq8w+5EFxrWNvlqrGlLgnI8IybCnoYbGohBpS0kdI8rXlGxpuGrwaOP
ZOwovxb8EcdVNLxJO9yTtp2EDbGhoaZU/lNv6cuEdlD9F/EG31L9kHKrE/od
STjyYPaPUI8kVn9e6vrbmYTlkRI7H9VK4i8uTot+7KbyWUk4yGNJDA8Co6td
SIjbLhmqdEUSj24WtS9zI2He8VOigkBJnNkXPVewn4Qs+FOss0cSK63JOfuI
Q4Lx4+C1LDVJXN1oZfWAR4Kbwe/sVTMS+GzIx+m7fBKULK52fGuSwAPvB45c
9iIBfXaKf3xbApe7GXh4BZKgsURkyy9RCSzHIV/dO0zxujC5eapOHLuTifM/
HKXmR97fX5ImjkcD5HOMT1J59a76HmArjrUvjE1MnyWh3ezK75EgMXwmB1++
Gkvx/ORAYGSyCK58Pt5cfIsEyQkd0bVcEaxYaGg4EkdCYb7wv34tEZxVnly7
9z4Jvkrmd24lCOOmxvPqWmkk9F96FR0aJYTNJHdk5+WToOupNx0YPSUIn3dR
pPMVCQI0bKQwOSn4KFvspCyg+un/0BDDnhSQqsb/ThdT+dqveuGpPyG4aahk
bVtBwqu6XbSal2OCYZeWzw2NJFyuOKaf+GRIAKxFS+f/IIHz03v+eukhQQTh
EIRaKe1w2O2q56CA4V+qmvKLhJ2q/+rdGQOCneFpPJ8+Ema+pjzYqNEjuBvR
+vz+AAkNWWaWA3Vdgs6rynM+DZGwVjFbkBvZKThz53KWyRgJg2vE9Lsnfwkq
E94IefwjAbr/M7/0tF2gmDrjcGeShKPpf0ySvNoE7AzTB1XTJLwU8Vm1Wfun
ICvbb2x2lgSP9LUmsU0tgv8B0kfMLw==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Gamma]t\"", TraditionalForm], 
    FormBox["\"Excitation\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"Decay of localized excitation\"", FontSize -> 14, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8095452008725505`*^9, 3.809545361950925*^9, 3.809545402329921*^9, 
   3.8095454606239996`*^9, {3.809545498339122*^9, 3.8095455364801044`*^9}, {
   3.809545631000289*^9, 3.8095456606410065`*^9}}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.8095462185808487`*^9, 3.8095462594967465`*^9}, 
   3.8095599622134695`*^9}],

Cell["Plot mode occupation in time", "Text",
 CellChangeTimes->{{3.8095600333873806`*^9, 3.809560038145509*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "explicit", " ", "points", " ", "for", " ", "the", " ", 
    "solution", " ", "and", " ", "transpose", " ", "to", " ", "get", " ", "a",
     " ", "state", " ", "vector", " ", "at", " ", "each", " ", "timestep"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ti", "=", "0"}], ";", 
    RowBox[{"tf", "=", 
     FractionBox["800", "\[Gamma]"]}], ";", 
    RowBox[{"numsteps", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsteps", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"ti", ",", "tf", ",", 
       FractionBox[
        RowBox[{"tf", "-", "ti"}], "numsteps"]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"soln", " ", "with", " ", "rows", " ", "i", " ", "having", " ", 
     SubscriptBox["\[Psi]", "i"], " ", "evaluated", " ", "at", " ", "each", 
     " ", "timestep", " ", "t"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "numsteps"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "transpose", " ", "soln", " ", "to", " ", "get", " ", "a", " ", "vector", 
     " ", "state", " ", "at", " ", "each", " ", "tstep"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vecSoln", " ", "=", " ", 
     RowBox[{"Transpose", "@", "solnPts"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normL", " ", "=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "the", " ", "approximate", " ", "ferromagnetic", " ", 
     "mode"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
     RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overlap", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"fmode", ".", 
            RowBox[{"evecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeIdx", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mode", " ", "=", " ", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodePts", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "t", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "steps", "]"}]}], "}"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "fmode", " ", "occupation", " ", "at", " ", "each", " ", "time", " ", 
      "step"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"otherPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             RowBox[{
              RowBox[{"vecSoln", "[", 
               RowBox[{"[", "t", "]"}], "]"}], ".", 
              RowBox[{"evecs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}], "/", 
         "normL"}], "-", 
        RowBox[{"fmodePts", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "steps", "]"}]}], "}"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "occupation", " ", "in", " ", "all", " ", "other", " ", "modes"}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.809537731589987*^9, 3.8095377317493005`*^9}, {
   3.809538818979971*^9, 3.8095388204221125`*^9}, {3.809538877168335*^9, 
   3.8095388806360598`*^9}, 3.809539283946311*^9, {3.8095393466665525`*^9, 
   3.809539372119471*^9}, {3.809539467892342*^9, 3.809539468073819*^9}, {
   3.8095395222788367`*^9, 3.809539522892194*^9}, 3.8095450971210623`*^9, {
   3.8095458315611763`*^9, 3.8095458355654626`*^9}, {3.80955773496976*^9, 
   3.809557757853461*^9}, {3.8095583906833534`*^9, 3.80955839126085*^9}, {
   3.8095597358014803`*^9, 3.809559807414382*^9}, {3.809559964155444*^9, 
   3.809559968153966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fmodePts", ",", "otherPts"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Mode Occupation\>\"", ",", "Black", ",", 
      RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Ferromagnetic mode\>\"", ",", "\"\<All other modes\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Gamma]t\>\"", ",", 
      "\"\<\[LeftBracketingBar]\!\(\*TemplateBox[{RowBox[{\"\[Psi]\", 
RowBox[{\"(\", \"t\", \")\"}]}],SubscriptBox[\"\[Psi]\", \"i\"]},
\"BraKet\"]\)\!\(\*SuperscriptBox[\(\[LeftBracketingBar]\), \(2\)]\)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8095460518368845`*^9, 3.809546069715067*^9}, {
  3.809558541997348*^9, 3.809558545173108*^9}, {3.8095585766687527`*^9, 
  3.809558695379739*^9}, {3.809558795379532*^9, 3.8095588215814395`*^9}, {
  3.8095589269086657`*^9, 3.8095589306195116`*^9}, {3.80955896284052*^9, 
  3.8095590401338406`*^9}, {3.809559130558073*^9, 3.8095591902299385`*^9}, {
  3.809559254932829*^9, 3.8095593215120664`*^9}, {3.8095593953582487`*^9, 
  3.809559588922476*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwtiwtQE3Qcx4FOoEAlXsUwjI5IiOd4L5AvG28dbGyMKYN4CEYCDhEEkeeS
ZSz0RI5DMAm0jENBQF5aOiIPVB6RNweCPJbUFaQXJHGmVMfvf/e7/31+n9/H
OulgVIqOlpbWvv/m/3/jPfWXL8lnGKVL/rSAeNbBskT3d2J91FWcX/VU/kps
hBTNlYaBlgViU0RfXqvf8sPPxG+iMMa4O0pXQ7wN3cXtldsz5ojfRlEt+5u6
xRnid5DXM2q64jdNbAPh1c7mF4OTxLZQJlvJZz5VE+/Aibir+nb5KmJ7FJ79
S2+o+j6xA0Y5D+Y3PRwndoL6lTCz3KAfiV3A9syb/7NplNgVj17GbE99fo+Y
CZVm3EdPcYfYDZ9x1tj6/EFid1yPW5nXCb5N7AGj9IjlP1IHiD2xYpnYZNnW
T+yFFW8Dja2Vktgb8evlBU9ibxL7YLFovOFg7w1iFvpHOPl1kX3EH0CSe/fd
NoseYl84Sbsc+SZdxH5YTmzvKfbuJN6JU39PG1Qdbyf2h8Uv18xdV9uIgTRu
/6OTpq0bXAIM1d3kbs1rIR8A772S2F6TZvIBKLGMNVLNf02eja2JZSrjuYvk
2eiQexgefe0CeQ7W96yHHYhtJM+BynjZ/MxYA/lAHApRLI0Pf0E+EPuOWX3L
8aonH4S9zrLcD9W15IMQ4ZutzGupIR8Mm4XqieDWavLBKMxi205PVZEPQaKF
RNrkepp8CBwT1jQRzafIh+Ky1chYl7ySfCgadU/XGaxWkA8DQ8y9ojh3gnwY
zL4qcK7JlZMPx9mgeNfFwuPkwxE4rTa81CojvwtjxavdLP0y8rswre65l/BJ
CfndSHVrS2Kxi8jvhozRqkzpLiDPBbO2qM8/OZ88F4oQLtMl4Aj5CHQwWWpt
bg75CAyoR8YnyrLJR8J8douvy0wW+UhwBN3mQ/FS8jyEZ1u/KnmRscHgYX5o
uoOXd4DuebC7Vl5yxC5tg2/xwOErlGzD/dTz0WnCmirflkI9H6N6ZueyRMnU
8/F+3+vvyboSqeejTJ3zuNwngfooBA6Ksxi9cdRH4Z9Bnstdn1jqoyA86Xib
+VRMfRQytL//bfiBiHoB6icUvkcXhdQLsKlFmpVpL6BegOrh6zXMSj71Amy+
KC2oNeVRLwRrWOV5OIdLvRDlhSaG95+HUy+E9I77IWl3KPVCnFl+I26sKZj6
aEha3RYmbwRSH410nWfpoy/Z1Efj4UeTc36pAdRHo+KxIE5r1p96Eax1rRf2
M/2oF+Et3yZN2ncs6kVQW/t5OBd7Uy/C+WeDjDCpJ/UxOCY02Hzpc3fqY1D6
sURZ9ROT+hhYZjLMLux0pT4GU/IUj8M1ztSLYSwYdFp54kC9GJm3JPKKUnvq
xZiqVFlmhuygXoxG7SRPLz9b6vfgS5mscjbexv9fk6LBeQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdzk1IVFEchvGX3LRsMWBZC5UIC4nURisd51RqNlrWOH2BqzBqEVPSJmhz
NorJBOKsXAguKiJcSAm2PJFS4LatYAiu3RWR0L1z/gU+Bw6H33144Tbdf1J8
cEDSeHLTN57d/LdqqDv582PePjh9er6xkKuaDzo9HXy0NvnMfMhp3E3tvCmZ
M06764/fv+o0H3ZabGgqdx8xH3Py85u/V//0RjcmHqsfm9kyNztp53U1+8V8
PPH0+ovyW/OJxIsvhwsz5pbEfiizXTafSqxCW2vR3Jq6tPcwaz6d2if/Yz6T
Oox+3stFt6V2Hyo/zO2pNbeyZu6ouVJ+Zz5b8/L3ijlbs+omzJ3RmZK5K3ql
y3wu+tdR8/noaZkvRPvtnujuaH0195iXzDnzrLnX7M1587/j9tvDuogO6xI6
rMvosPrQYfWjwxpAh3UFHdYgOqyr6LAK6LCG0GENo8O6hg7rOjqsEXRYN/bb
wR4OsG5iD3s4wCpiD3s4wBrFHvZwgFXCHvZwgHULe9jDAdZt7GEPB1h3sIc9
HGDdxR72cIB177//AqeWjWs=
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 100.}, {0, 0.9220098844374868}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\[LeftBracketingBar]\\!\\(\\*TemplateBox[{RowBox[{\\\"\[Psi]\\\", \
RowBox[{\\\"(\\\", \\\"t\\\", \\\")\\\"}]}],SubscriptBox[\\\"\[Psi]\\\", \
\\\"i\\\"]},\\n\\\"BraKet\\\"]\\)\\!\\(\\*SuperscriptBox[\\(\
\[LeftBracketingBar]\\), \\(2\\)]\\)\"", TraditionalForm], None}, {
        FormBox["\"\[Gamma]t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Mode Occupation\"", 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 100.}, {0, 0.9220098844374868}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferromagnetic mode\"", "\"All other modes\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095460621223803`*^9, 3.809546070440121*^9}, 
   3.8095577264004574`*^9, 3.809557965549145*^9, 3.8095583265746727`*^9, {
   3.8095585383354445`*^9, 3.809558545717123*^9}, {3.8095595072837915`*^9, 
   3.809559515697239*^9}, {3.809559548031593*^9, 3.809559589545771*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc physics analysis", "Section",
 CellChangeTimes->{{3.8090163619501247`*^9, 3.8090163665089817`*^9}, {
   3.809209471963997*^9, 3.8092094760770473`*^9}, 3.809209607406805*^9}],

Cell[CellGroupData[{

Cell["Hamiltonian algebra", "Subsubsection",
 CellChangeTimes->{{3.809209576436367*^9, 3.8092096042035294`*^9}}],

Cell["\<\
Try to get approximate analytical expressions for eigenvalues of square grid\
\>", "Text",
 CellChangeTimes->{{3.8092096198550777`*^9, 3.809209655266404*^9}, {
  3.8092098717740297`*^9, 3.809209875227496*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "\[Lambda]", ",", "\[Gamma]", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.809209852918344*^9, 3.809209862901392*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", "4"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"square", " ", "grid"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", 
     SqrtBox["atomnum"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", "i_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"x", "-", "polarized"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Hfull", " ", "=", " ", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["H", "##"], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"atomnum", "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{"atomnum", "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{"d", " ", "\[Lambda]", " ", 
          SubscriptBox["r", 
           RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalOmega]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Re", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"\[Gamma]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Im", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Hfull", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", " ", 
         RowBox[{"\[CapitalOmega]ij", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.809209697932802*^9, 3.809209786734555*^9}, 
   3.809209868898496*^9, {3.8092099347496405`*^9, 3.8092099681704016`*^9}, {
   3.809210277886074*^9, 3.809210301304186*^9}, {3.809210465428677*^9, 
   3.809210474762639*^9}, {3.8092108165400534`*^9, 3.8092108184094815`*^9}, {
   3.809211094207759*^9, 3.80921125260073*^9}, {3.8092116815864315`*^9, 
   3.8092117012239575`*^9}, {3.8092118113112974`*^9, 3.8092118192785807`*^9}, 
   3.809211869435025*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8092634453105717`*^9, 3.8092634569095693`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8092634476183767`*^9, 3.809263457288557*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";", 
  RowBox[{"j", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"d", " ", "\[Lambda]", " ", 
    SubscriptBox["r", 
     RowBox[{"i", ",", "j"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.809211618884531*^9, 3.809211639909103*^9}, {
  3.8092117107498627`*^9, 3.809211711471368*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211643414005*^9, 3.8092117137178254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211761139476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8092102082236176`*^9, 3.8092102669801235`*^9}, {
  3.8092107810396194`*^9, 3.8092107906814437`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]]}], ")"}]}], "k"], "+", 
  FractionBox[
   RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]]}], ")"}]}], "k"]}]], "Output",
 CellChangeTimes->{{3.809210212527547*^9, 3.809210268359639*^9}, 
   3.809210326636525*^9, 3.809210791337959*^9, 3.8092108391044807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.809210808924116*^9, 3.8092108100342226`*^9}}],

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.8092108101126695`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearest neighbor terms", "Subsubsection",
 CellChangeTimes->{{3.8092101799460707`*^9, 3.809210187857538*^9}}],

Cell["\<\
Why do the out-of-plane modes become very subradiant near \[Lambda] = 0.7? \
\>", "Text",
 CellChangeTimes->{{3.8090163717964873`*^9, 3.809016405509801*^9}, {
  3.809210174024474*^9, 3.8092101763590636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.809111096728337*^9, 3.8091111044177866`*^9}}],

Cell["Nearest- and next-to-nearest coupling terms:", "Text",
 CellChangeTimes->{{3.809112029430625*^9, 3.8091120427181067`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"nn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "r"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8091084493923798`*^9, 3.8091084596836033`*^9}, {
  3.809111913701956*^9, 3.809111953093664*^9}, {3.8091120055235224`*^9, 
  3.8091120230815935`*^9}, {3.809112080125112*^9, 3.8091121685730877`*^9}, {
  3.8091240359275904`*^9, 3.809124039288148*^9}, {3.8091240986721497`*^9, 
  3.8091240998471107`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{" ", 
      SqrtBox["2"], " "}]], "-", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", 
        SqrtBox[
         SuperscriptBox["r", "2"]]}], "]"}]}], 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.809112172389885*^9, 3.809112182624524*^9}, {
  3.8091122215859585`*^9, 3.809112256766919*^9}}],

Cell[BoxData[
 RowBox[{"nnn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809112199488027*^9, 3.809112199978717*^9}, {
  3.8091240820834923`*^9, 3.8091240925447235`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"k", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8091122177472734`*^9, 3.809112217819027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["k", "2"], 
            SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"k", " ", "r"}]]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{" ", 
         SqrtBox["2"], " "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["2"], " ", "k", " ", "r"}], "]"}]}], 
        RowBox[{"8", " ", 
         SqrtBox["2"], " ", 
         SuperscriptBox["k", "2"], " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]"}]], ",", 
     FractionBox["1", 
      SuperscriptBox["r", "2"]], ",", 
     FractionBox["1", "r"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091122906347466`*^9, 3.809112304948306*^9}, 
   3.809124077553565*^9, 3.8091241845745373`*^9, {3.8091242400000844`*^9, 
   3.809124257370179*^9}, {3.809124336900578*^9, 3.8091243706520433`*^9}, {
   3.8091245132357197`*^9, 3.8091245221096497`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      SqrtBox["2"]]}], "r"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "r"}], "]"}], 
       SuperscriptBox["k", "2"]]}], "-", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"8", " ", 
       SqrtBox["2"], " ", 
       SuperscriptBox["k", "2"]}]]}], 
    SuperscriptBox["r", "3"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "r"}], "]"}], "k"]}], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"2", " ", "k", " ", "\[Pi]"}]]}], 
    SuperscriptBox["r", "2"]]}], 
  RowBox[{"4", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8091247248776445`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          SqrtBox["2"]]}], "r"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"+", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", "r"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"2", " ", "\[Pi]"}]]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "-", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]]}], 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "3"]}]]}], ")"}]}], "/.", 
    RowBox[{"r", "\[Rule]", " ", 
     RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "*)"}], 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["10", "6"]}], ",", "200000"}], "}"}]}]}], "]"}]}], \
"Input",
 CellChangeTimes->{{3.8091245307580967`*^9, 3.8091245402471695`*^9}, {
  3.8091246326837187`*^9, 3.8091246554452*^9}, {3.8091247065265865`*^9, 
  3.80912474984779*^9}, {3.8091252494226317`*^9, 3.809125372617504*^9}, {
  3.8091254211009035`*^9, 3.8091254694513535`*^9}, {3.809125532403105*^9, 
  3.809125599088233*^9}, {3.809125796202443*^9, 3.8091258194962254`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.999999981632653}, {-1000000, 200000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8091257220486727`*^9, {3.8091257976605463`*^9, 3.8091258209403515`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Im", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
          RowBox[{"GdotP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
        "]"}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "+", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "-", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "0.3", ",", "1.1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thin"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "200000"}], "}"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "5000"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Lattice period [\[Lambda]]\>\"", ",", 
       "\"\<|Re[\!\(\*SubscriptBox[\(P\), \
\(i\)]\).G.\!\(\*SubscriptBox[\(P\), \(j\)]\)]|\>\""}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N.N.\>\"", ",", "\"\<N.N.+N.N.N.\>\"", ",", " ", 
       "\"\<N.N.-N.N.N.\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Linblad Terms, Out-of-Plane Polarization\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.80912563767312*^9, 3.8091256386155987`*^9}, {
   3.8091256742883368`*^9, 3.8091257033477015`*^9}, {3.809125743972067*^9, 
   3.809125744924512*^9}, 3.8091257830246687`*^9, {3.8091258825104265`*^9, 
   3.809125949767537*^9}, {3.8091269875159197`*^9, 3.8091269908921394`*^9}, {
   3.809127203747385*^9, 3.809127301955798*^9}, {3.809127336476527*^9, 
   3.8091275306314206`*^9}, {3.8091276036351166`*^9, 3.809127634106783*^9}, {
   3.8091276943322644`*^9, 3.8091277096308575`*^9}, {3.8091277434098577`*^9, 
   3.809127806779765*^9}, {3.80912796682623*^9, 3.809127990772332*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1:eJwVl3lcTV8XxlNJkzTP8733nCIyC2UtJWlCGZKpiaiUokyF/EpkCEVIplRC
UZIMRUqKRt353iZNmiWUTL37/et+vp97zj57r/WsZ61t4rvbfbukhITEOykJ
if//7p3pNWfOHDbs2G61fNjcDH/dL3C0IfxukU7zF8L/sRS9HQj3SoxGDBBO
1H1+ZtP/n/e6l9FNOFdarSuG8IVtPdIthPsF765wCNuc4pVWEfY/NuNfxFw2
NGptt84gvLHhb+WzeWxY1+5GbSD88tLs7HArNlh1zhTkmplhpazsDMnFbJhp
NWuXOuFQN1bzfzZs0LcpaD1Em+GFlwLxQmRDAtzX5VBmuJVrcaDUlg03zhra
WhHOUNbyPWbPhs6xFuY5lhmeMHE8NGcFGzw0etu7mWao3qY3q9CJDdrlU1Nd
Ceu9jZ0X5sqGqKBfkhkMM6xdlyD4s4oN1krfd04irF/cci/SnQ3jPfqFu0zN
sN2+onLmOjb8tF57962JGa4/siqu0IMNS7UWp9GE7QTBF8I3ku/bdM89bGyG
VZM4H5hb2ODefvAB18gMx7tEaZle5Plj16wWEs7+vL9yqy8bjJ0vrz5naIYT
rxSc6d7GhmnO044PGZihICD+RtYOcv54s0XLCC9XyWjeFMiGMx4z+Cn6Zui9
06e4dRcbqqyFqX/0zPBba37Ptd1s6Hpcw11NeLbc3Sdme8h60nE2ubpmqDip
LScrnA26rNirqoS9qPzvW/ez4Yh236YdOiSeP5iiroNsuLhtaEOFthnyOy0m
Z0Sx4a5VRZ4O4b4HUSHrj7IhrD/iV4iWGT4wCQ4RHmPDTYff8XWaZtjx7NvL
xFhyvo4JO00Jvx/XzTI4QfLdrZYUrWGGjvqnSq/Fs6FGYseLT+okXhvPTV19
hg3U6FTGPMI9DvNm8RLY4JMy3pGkZoayHmHHEy+wofRwXFOHqhmyNVYeML7I
BsefAfOWEl54f8/V28ls6HPuOHtLxQx1vKfLel4l+nhUNWVY2QzTy09qtF1j
w6UM278rCd9zORR6+wYbmmus5W5MIfu5lz+25jYbLGUXqwwpmeGlgrMmgjts
OPVo8wVXwhvb/yYnZrIhu2CF6fXJJJ8lSg8M77GhdfnLWT8VSXz27hi4/oAN
BvxRx/WEt6xYf3jNQzZsm3Fie6aCGZ6r7nwgymXD/oV/FSQJL9qjYHYln+jh
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
7zCNYYMeDfFXuFAv5ZKkRtjERf6d/TXyve44b/MoGg97btnAvs4Fq4v3162M
pDHc+qf22ltcyDLxgf2HSH7QnFa4w4XzLdfPnD1I44Qfv9hJGVzoTSjRyD9A
4+UPvrXuWUTPM02GyvfTWBmhOir9gAv/rpoXNu4j/ane99XJHC4MPHxTK0n4
t4sj2zaX6Pvyf8aaEaQ/HKiPq33MhURZ1xqrcNJfDt3c6VrAhesujyO99hK/
vi59RfIZFyr3nXLdu4fsL1TeP/4FF75/5SYkhxG/25Z5bHkxWX9CZ2tmKI0n
ZpyqGnlN1hsIt3i5m0b5LKUnB0q5kGaa9Kc5hPi7nXnvzHJSHzGN5V+CSfzO
drx6UcGFatsdhsqEP47N+3ToAxdKEuS3GOwi8+TiulkzariwkW+SOiOIzM8W
cib5dVzQkPl3dFUgmbdAuCWkgQsG5eJZWwKIXiWdFv7mcGHvUv+kQztpPJ8i
aRfJ54LZwzkKqTtonLPWLWWWiPjZGteF9/1p/K8Yzz9v5MKab+stKrfT6LTi
HXt/C9GP27TShm005mQl2Zu3ceHN3nfbP/mRee7ZhPXZHVzYc2Jlx7gvmad6
Jz7Z/pkLE7X/9ssTPlR1P3eohwuhlcVilg9Z77/L4pB+LvD4CYPLvEl/36i7
lvGFnKfYfu9qL+LPbTZB975yIeLmh29BW8n5To/Wbf9O9NyNDXu30KjS6cb+
NsKF8uhPhac30/hO7bt0xBgXpryUf393E40//CxiLf5wYcjT2yh3I431fhPT
Cv5xQVdBPqnSk/Sv4+GTIybw4K/+0QU1G8j9IWraXVqaB/tfXP7H9SD+YBrT
8kCGB7cnfR0bXE9jWW/odn85HjhtW6v4fR3xM9/x+GEFHqhdTN4qR7j1Ebcx
TIn8X1nYa7qWxgJD28O0Cg+w50S42RrSD21WFT1U48Gp6W1rl7jTOOvw8Ipd
mjzIOqhkiG7EjxObpAx0eDC/5rfW8tU0ym0I2HJTjweNcp+Pbl5F/H3JaekN
hjwQji97unUljdO4rk5txjyosY3xD3OlUeFsZlMagwdLwtvqdrsQvek63FxP
8UCJkRa2x5mcx+PkuNiMBy3KMzOOO5F+9NQr5/I0Hvh49+6LdaQx9S1/jDmD
B0+7E7uSVpDzZV0Oz5hJ9i8jzrzrQOotZ8B68xwerK0v681cTvqRb8edjnk8
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
AYyzeBw=
         "]], 
        LineBox[CompressedData["
1:eJwU13c8lW8bAHCjkOxk73POc0JGQprXXWSHbA1ERotS/IoyUioqitISJZUV
SqSorPZEFGcfpcgsTfRe718+3885znOPaz36IdGeYWIiIiKb5ERE/v/3xN6B
8ANjPdBeG/BW+f0I3FKLVj6FfjnX46LpDBHSlCavkI8Wf2xrTU8XI23fK2YW
o++WfPHL3TGNCEI8JG+h6Yt2MWb8nU5G34yINaDfi/nWDttJEhE4MfUIXdBJ
dKaCpYhC+bw/b9CPg1+WR6yZQfQ028a70Rr56eE1NtLE7EjMaC96dRH32mLR
mWTZT6XBIXSMikVdT+1M4hZ26/MvdOhUd+XBIBkS2O7VK/atB6KEHe/3/ZEh
25Z/58qg23eKdB1LlyVHta269NCZ0w3SojLlyIWMd21GaAvK8OQGCXlS+jv2
lSXarubSfy/i5MmzdzWtjuhWzgtLb5oC+WDr1+iJfqnanHzaS4F8rvpZvw69
Z7rc2bIUBSJ53KZ6O1rH0OS77HsFojLxviIe/e1K7rzrIoqE2ryn9ABatlPv
422mIrGzv3v5DNon3MUwb4ci2T+1+MRD9PV3Yl3aPxXJya2so8/QrIEzISOz
lcil7r2HO9D9/rddWPOVyMOahqTP6NmdBmnztymRqSiIUvjeA4tT/WkKXUpE
js3dpIE+LuX899OwEtF2SQ6jo+0X7DJlSs0iS5iN62zQ5dd2KPyznkXiuStc
gtE706U2Vh+fRcbd7edUotNfK7SvNVIm6Srak3fRqxvzPzcuVSZ67G9vW9Fr
S8byn3soE+fNlxJ60CZzaLZdscqk4MDEK4nxHhjkz5al1ePndTdj16P1nduK
axfPJrykI86RaPYBY4tzzrNJrH2w7k70S3qIhn3AbFLQLvv0MBriT1MicbPJ
+GCkVjVazCTzEL0cPzfQbZb+0QOvFi/rWzpLhVh/Gc+djV7aLzNrta4KeV7x
Yqse+lvPEgtirEJ+LIlXsUZ7pTmfvr1Chbj4vdu0AT1K8pKVtuPnGRkKd9Bd
qovCTFrx8/Gf68N+9kDIg2l11etUScEypz3RaKtWRwnhRlXy/dC5nD3ogJdR
NSLbVMkFjaXPj6FNtfc6zdynSr7Cfpsa9Iif3dyNF1TJ0XSZWZK/ML7/Ozrg
916VvNDVf3IdfcXo8MhlezWitylGeBNtFv8kiVqlRnbdbJ6qR2c2XEzJ91Ij
WivDrd6ix4RLNsYEq5Gtm0sv/0aHirywzN+jRmRuW+1z/o3rMQvLMytRI6uc
nS2+ouvDdzh9mqZOqK9vqZ/o6qIPCc3S6kTkeICm2J8e+LJcRfeMgjqpfhs5
TQ391G1UY46WOtEKONRpi3ZUiT340UKdfI1oiT+P/q5069WXQHWSfnBZs/Pf
HmioG+cUVqmTjcxHtT7oUM9qpzM16mTZ01VlweiveutPp91TJ2My60/FoW+0
uCqublUna3ISIi6j62YO0fPfqxPDwjsz/6DP/jneaTylTp48tPAunuiBCyMS
JYErNcivlJ2zq9Gie4/czXHSIIa21Z330VW+VwIfrdIg6a1WAR3ol5v2p2n5
ahCXZzaB/9DbZ7d6nArXIK/al0X6TPbAbs5fn4dpGqT9k/Ne0akeONLzw2N+
iwbhyIReCfjXA4LdM7eLW2mSlx46ZaFoVfc/Wro2mqQ+58OtbWipbarBNos1
yTktj+YU9NzjjbWhyzWJ79ylgmL0EdfFsy6u0iSvXFT1/qBn3hTPvhKmSR6k
Pz9/ToQFrkd4n+RzNEmBlGV2jygLgmQf5ogPaBIW4/zr7GksaFoofybhhBZp
Hrtcoi3Jgm+h1nMKVbUJnU/a2TNY8PXwVZ3EXG2iV0QZnZBhwTnfS0r6kjrk
iVq5roo8C+QgqNspTId8KX8a8laRBTvdfHU3NemQmrE0u0BlFsTe/7PaUUmX
6Mge9eaosGDj3t6C4TW6RMSJeTNHnQUN/znGuFzRJcctQ29oabFgnsc8Oade
XXJqudWvbh0WeJCcXRVKemQB3X37UX0WXEr3e1JnrkcO1sw4JE9nQW5j9JZF
Lnpk1eY1A08oFtis9yN7w/XIw5cuQ16GLKA0Dk4rS9QjryUO6rYZs2CVFKff
/ZQe8dvgfTHNlAWn/dfrPy3TIxlbWu7JzGNB/9H/HB406hGb3GfU0/kscDZe
332oS4+ciNlh7mfNAnOfMr7cAD6fFhz53oYFP9TN1iRN6pFv472DmYtZkP3N
W6ZFQZ/I7pZWUl/GgimJxVOaBvqkQPNR6nvCAoVOF+ZyS33yKucpLcOWBR93
tN3etVKfXG/YFiJvz4JHl5aGTnrrkwnJ60NPHfFzEq3rHoYWTVX3dWGBrer2
v8q79Enu26KYd6tY0Hbaoo25X5+UNgWqZ3iwwD9n2Z/JLH2yJfROoJIXC75M
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
0A9jNR4LIN/T78t5N8iGykEJ+5AHTPLDn926dgj9fV3/rI/3mWTuN9v/jr9D
va7K3uuO/PLc8XcDw6i/WWrjjfeY5EjU7w7lETYs0zTX1Uf+tD3H2fsDG3a0
EMHyu0wiYbNQ4MFHNuhSHsPSyNIXnobP/ox+aFwad6YB6+Wr83LvL+gn4y+0
x+uZxEt1ltvdrxjPLINd25CbHs/s/MtiQ69G/96uOib5uL81ZSsH9XJFf88a
5IHA4eSrXDzf9gPry2qxfjwUmMM87PdXFKsVkBW2Uh8MR9FP0u7Mj61hkuBb
JwIjxthQEfDdeuoO9gvpPNrbcaz3/Nv+nsi+vl/36X3DfpipLd1azSTyolGx
R7+jfk6crV+LnNw20vJiEuPfJ6N29Tbm5/XFV0t+Yn4rdbLEkN/+llwUMoXz
94mx9sNV6BciNQPPf2E/axJNfVOJfre/9JjUb5yX0pV32yA/HNltdOgPG750
27MrKpjk963gzrq/bBD+ZxytiDzHv2hqagb7qzrjXsotJnmqlb/JRYADPstZ
mZM38byOo3suz+LAor60DB/kh9HClT9nc+DCNj/t1huYjxzzZIc5HPgr5+K7
Cvm9RLfxBSEOnJtf05ZVjv5wSUV8dC4HYtTj7sxcZ5KVh7uqdUU4sNy14tVe
5BijrNHgeRx4rFif/+Yak+RI6jh2zufA+u2P2CbI58yXRYsv5ICN7pHD5WVM
svb0s9eBiziwQ2DTgUXId+U7BWoXc0Cn9XFFSCnq/+r3Bz9FOfBl07f8zyVM
IqP7ucBZHPefzPxhgTyluMLtsgQHAq/uv3q7mEksm3sesyU58GfHsealyJfk
9VZPIbcsuJ4rgSw4x7fIUZoDx7PSNx0uwvnK/MvnVBkOxP/JdB0uxPpNXW0/
voQD7X8+XgfkZUbdsWuWcUD359a9ZQV4vo6UzcdkOdArXfRBGlk2SN76hRzG
a8Qt9Ug+k9jvmxKVUeBAqTjn7rs8JjENyf19eDkHVoTfFF2HLBAYENGhyIHf
EauWXLnKJBfvx3QvVuaA2rySImHkL/L7Nu2lccBpwU/73blMItqTf76CzoFL
6oHxHTmY36N/D44yOJD+ZCraALlmBf3YJibmz3FjQvoVJjFZnWGTqMKB8cU5
6v+ycd62G7Bkr+BAmuDm51uRcx7tldJW5UDOv21LH2WhnhWVjwWpceDf7xCm
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
hgiW6Us5CR28z8LiEh9Z9RL/B+4vOTA=
         "]], 
        LineBox[CompressedData["
1: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
l5GwBTToWBo3GWcxpNQ+TT51IQ2bsi8PDaP7heUSqxbR8OHz+fYL2QzRtuWN
HxCiwXbrCtXVF/H8JKjWOClMg8pmE8Hv6FcqEsGqojT0HPy+9WQOPn/Hl7DV
YjTMPqcZvPQSvp+Pu8ysxGmIM26V60KLLD1pvk+CBu4iee2oXOzv94Q+xErS
UOnb0qGVxxDHb+KHi6RoYB6Irn+Pvvqt4UOTNA2LdGdUDl3G+XmnduadDA0n
DOxTNa5gPtxV4J2Wxe/z2ejdhJZLsRoQlKeh+kQnr/9VrN8ym3JxBRq+GzYY
yVxjyN3GFWt1FfH+RLzay9Gvh/e9NVai4cA+zzl++QyRedM546JMQ+cM/4WF
13Hel1+x8VOhISdm3dQt9P0Y7uVgFg1PUj5xtxdgPMtLXZLZNLx+qmH7D30l
NSowg6JhbdwbcrsQzxszubV3aRqkV0hMOd9gSOilxyINqjS8k5lSmkInZI73
N6nRMBGzvvNGEfaPU01t/ep4f9LG49Y3GXJU7+WO7xo0hFx+0juMPvSQT/S7
Jn7//WLXrFs4L3Lvl80spmFqdJ2p8W3cn8Jc6FlaNIj/Z1z5A62/86qH1FLM
hwMNs84XY38x/Valpk3DtNv0rRV38H2Pe4rROjQ8e3lmeAAt/GvDAsNlNIQH
vM04cZchFgtSxQyW05A+U8SneY8hygfV/LR1aRCU7V/Yie7VDjc21qMhyL3u
UHgJ7lu/Vlka6dOwTHvhYbVSPH8KipdYGGB+aEz1v0CLCVD+poY0/JQ5LLvn
Pp63NIUTVxnR4J3u9Um6jCHJjbPema+g4bHBT5H/0OzyhKtkJQ2RXl/b/R4w
ZFfP7zirVfg+jvl7ST1kSF5pdNXm1TQUvb6w7SHawNnn4npjGqRuLP288xE+
j4uMn70JDQE3/dr5yxky/V7spwWhQfOqUVohunf6zz8joMGc8u9z/I8hEg4T
r43X0GD90uL8BNpWbV6Kzloa7vEe/3K9AvftHUs4ButoiFq6Y3JzJeZHbHWT
oSkN+nGdEWPojbbnHqia0WDp+TDpchXOh4LHtIY52n/NXLNq7N/cDWUyFjQU
/NMW/YWe459XpLAe7y/+zlBeDZ5X4jW15TfQoLDynea6xwwx78uenm9Jw5Kw
Xf+46DVz7gjyb6SB7rm4IrMWf08/MOI3+tiqnaD/hCEnBb/k9FrRYKqS8f4T
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
o2NmBMLH0f8D/RYr8w==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
1Ns=
         "]], 
        LineBox[CompressedData["
1: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
8TaYotV00rpGlzEhSLFSoU0a66dCttd6BSZUUH7q+6FXyB5fen05E6Ksc/2n
pejk5bSP2/AKJrSycqLi0bC+LFhPkQmyvI/YquigqLqnyUpMMB3q3PufJNYn
TUr9l1VMeLFstaI12q2qxE9OhQnZMuyGfgnsv66zhsdVmZApEn72BNp3d3bb
IwoT7JVm4hahr3mIpknTmHCgaSAjXRzn112Zg350JjicmbxMR++9Hb6sdDUT
jm7/21+9BOcJPnXfRepMsDPu0N6GtnxKi7bTYELIeE1/vxideIf//XBfkwnb
J5QvHUPvWNNVLLyGCfX5rhLzi+lExlBup402E4I/PRBNQV/dvlKtWIcJ7++z
f61Cs+sC3w/qMuGGnpPJY1E6EVYcEtDRY0JuVm+sDZoTZ+AVr88Ei9//7n0V
oZNM+6aUj+uYUCWpYn8ULUbV/rXGkAkBkc6vJhfRiS3r0dfo9Uz44W5Nj0K7
z8WlNm5gwn+7AmSWo/Vommdom5hgO8LTWCCM/bpgpeYRIyYwRDmiG9H2UnpB
dzcz4ePO75YfhejkXKI0R5Aw4dfTr6Z70bEeZnQrY4zXVRKf/y6kk21bjRML
TZhwkvN6+Rk050LC67+mTNjMZPGIou3vzl7RNmPClOm3vmxBOglkGEbFmzPB
YKztqBr62MlXVp8s8HmRunnPBbCeyijo61gyoe3U+Ckz9N2clMexVhiPFhTz
j/x0svDCgYUfrDE+UsbeuKMVT4+Hq9ky4dvqQ90DC7Cfvvr2+tg23I/U47uh
6LdTrFtldkzw9e84uwRNTJ4XimxnQrOf/I90Puz3vb2hdg6Yr5H686vR15Nb
gkp3MOHzuca8B7xYDzTYwgudmODi/tZiI1pR0ebwVmcmuBUyn7znwfNQDh3J
38mER0fu5zii34XNWP3chfdr1bqbMU8jX1/mrF/twoSl9u0rT6Hz5cXtzu9h
gpn+6Pa5ORoxa2he+2YvE6qPnna9jL4V7QKq+5kg8uhQizT6S7a+/GFXJjww
FqLcmqWRjly9+JIDTHD23Bm1Fp3635zqQncmSO7z21I5QyNqissSrD2Y0PPT
dmArOiRjTqHkIBPeuOoyPkzTyHUeIRN+L4ynv7ZcR3RClZuBuTcTFo7e7Ouf
opHNCZd23PJhwrqYGWVf9OuH05u5vrifxs6945M0suz1tVr6YSZcCrl07yJa
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
iivIhjWSGwocCY2Y3GrnMRNiQ9IzvkPJQCNOvK8vxQizgTM4/qtzM41Qjp1d
y13EhgObSn5Io+sa9gWZiLLh4oKGVQ5GNKIfEh97YTEb0scb197chOdvdOlV
rxgbbsjE53/eiPPtzo8faOJs0DXQ+r0CDXs3H/WWYMNprbUpPhvwvAKC9Osk
2WDUbxV3az0+7wfPewFpNtz3fOQzYEgju/Y5xRyUYYPwjtBLKmjLNx++P5dl
wy77f7P7DTA+olJ55+TY0DN5369gHY1c3aVm47KMDfXb4xf16GO+Rop5Zcuz
YWViRQEFzff8xZ15BTYs01H22qNHI8yepPDdK9jQ0NJ5/tpazM99/1FurmRD
RAz/g05dnA8H8kYmFdnA5zv0Wxx94GNvElnFBrncCBNHHaxHOVteRyizwVqo
TvCGNo3YRx5X+qbCBj3j/IZPa2hkpmLQSonChnuZvP/JoD0XbLh5lsqGsGjO
ZUstzBeDggsdNDYcX1bYGqFJI0UvD26SX82GjY7r7F9r0MjxA7/lg9TYoHny
RsmkOs5XTm/ePldng+9JeYuN6HC9l4tnNNhwSFNoX4Qa5qNqXLCzFhsWKASQ
R6uxnvjd+u/6Gjbs8Jw/MUHH95nXl2T/aePn5nVeq9FjgZUWoMuGh7cly31o
eP8SkuIRa9nQdPFOWAkV++8LvfkuPTb8N/xx/DsFv19b8EJpHRtkL3zoWIGW
/MzMizBgw5mS/t22qthv2y0UOw3ZkFWn7xShQiN9GlOHlm/A9RquaKxRxvnt
WtD34I1s2Jnx893gKuyfjmaKNZvYoC//yU4LHTO/7t+8ERvWFU3t91eikcnK
kQkXwPMZ0eJmK2L8NPHUZxE28EyNC3SvxPo83PF81pgNXhbyiSJoCd52S2dT
Nly77p65aQXO096r7qRtwf1pbLALWY7vIz8MV4+asaFPa9KlSIFGtpfmhKy3
YMPPfLYkUx7nfR8Nz9Nb2XBSZaObKlp+7fnAFks2KHfumXBYhvOKk5qTjDUb
rMh+q8SlOM/F3Nxzwgbj74DV50o5Glkr7apTacuGKLcvtFFZfP+MNcua2saG
hf/aZHTQfeITOs72uN+HLmr7ZGjk6N9/1zK2Y/y0H5NJk8Z5vPv1yikHNmyg
DsnVSNHI+6ePYYcjG6rbk8t+SdLI058Ta1Kc2NCfZKBDQ7tp8lsMO7OhxdPi
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
n1r60f8B5yNkWA==
         "]], 
        LineBox[CompressedData["
1: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
ocevW3izGsgYpfbW6m6iIceBRav0RjL2X282F7aZhjrZdvPEfCJjp8ex1l1b
aIho3hR3vRn60R2BUAkNGrqpXT8Q3UrGORmeDaGa8D7XeiPT2iGfY0aL27Vo
6A97zdmMDugXdcXuwto0pKT+eE1EFxnPiO3YfnIbDW0IWrM3uoeMH9ao0Mt0
aGjcPTzGrY+MN9lt3TyrS0O79vxu3NYPz/NnzS1rfRoyNI4z0hgk4wvzWz6n
GNDQ1ZJ/ZjxDZOzASdb4aUhDl56fElo1AvXs4+6qgyEfEvXe941Cvrz6oBi2
nYbSQ7yGcsfhfDYsiHQZ0ZD+EUXttO/Qv7vC2iVMaOiUTKqYyw+IX1bd87Ad
NNQqHVVnTYX82r91c8dOGvrSNFGnSSfjCJfZUFFTGjpvWjw1wyDje2ejJgN3
QzzvTR7rmyLjrF+OypVmNNSdF3bw9k8y9t7ruGLBnIbCMuLQ3t/Qv9/J/9u3
h4ZmBidmN86SsWXC9k/plnD+UylVY3Nk7HlUoXrOioZWvDgyVfUfnJ/SFnNr
GxpqDIpkS/wD/XbH5dxrtjQk9drzud4SGcedfCLP2EtD/Y+cHdb8I+OuGcpp
jf1wPl77pyrYCPzL/Y1TgB0N+b8RXzq8ksBNY2TfTwdoyGHCMpa8isBnXvWY
8dlDv9hufLGBg8CT9w9a+TrQ0JOxovxELgKrjiuSSw/R0Mvg/Vc0eQhswL8h
8bcjDQWuf6HauprAqy36ZaydaGjM4FVIAi+BH32lnkt1pqFoQdo6pXUEXhtT
x/37CNRDUP/PcT4C6wq9V9jjSkN+HQ8j0gXgegtColfdaKj4vGO3ihCBl6ZV
VWjuNNRyM4v/qzCBU7an86kfo6F1b444B4oSeDZc/vJJD6jH+B0DS2IEFq2P
VP3kCfkr5N+St57AvN5Kd/m84fs15vs0JAn8ZkOm9onjNHTMhjkzIEVg9Gqr
R50PDfE2pT89K03gtGcyx7hOQH78ED6zQpbA+RWfL7v50ZBITfBijhyBr4n3
nMv3p6H80i8f5ckE1o7Pu80dQEOTYU4LDQSBC0duWbkG0tDlpadRLvIQ79TB
tvtBNKS5hq+9X4HA/x2gh60Mhny8/kUyWInAnQEWv0xPw/mUNvj8VCbw2ZCW
lRdDaGiLw9vkoxsJPJa4QWcslIY4Z3qtZ1UJLLv00lAxnIa+3c+54L2JwOsj
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
R8VhMyGer+D9OhdsRCXpqCHy9Tq71wQ+z1eS6yBFR1+mvvxQr4L6c9gqW7mB
jvyVkJXcGwI/SRrYIiRDR/PP5o6trobvS3cK7pelo3BN2sIIWOj1DYlncnTE
jEj4/qmGwKElhdNzJDpK+RHn8+At9OPUYWdtgo6or0T7w94R+Hbc6O9rFDqa
qrocdKSWwK6tWvad8nTE7XqtV+s9gceV945pKNKRi5MWlqqDePqnciYo0RE9
vjR2CXxorfz8J2WIn0rQp+Z6Ahu+jOZX2khHtfy8408aCDxXvWneV5WOyoq+
rj//gcC+3XmczWoQ39S5/442wvv0GBcpbKajrhSdNuOPBP6wZbOc9xY6QsV+
8wKfCHw34/urenU6suVbzJgCmx9mKqzTpKO+p/8VvGmCeuGRVLbUoqP89TJj
F5sJvFAnsLdgK1yv4oivewuBOfsPmtO16cirzSp5Uyv0kxXHvS106ChbXHV4
dRuBjwpmy+bq0tG1gkXrYXBbmMKDb3p0pBCilpjfDtf7FWJrbEBHr6/yNkR+
hn2sVqI53hDiPVw9sauDwO/PDQ3VIzqyyLI9vKYT+tuekxKk7XSkVzuVMwh+
dNKWfNSIjkbvvvqb0wXv9+Cv7TtjOqrf8YLrdDfsDxp/bFbvgPN58A3p9xA4
7KHkhNlOOgqJ8h5eBM9qcOU+2AXfD9LkaOolsKmw8RaqKeTH/Ku4xD4CH+Aw
GzMzo6M9rSYezl8IrDEcpHbfHPKN5PFApR/OT3hq1zcLOrqlbx7wA7zPfmu8
sSUdbZTdGlA2QOCbM59uXLSiozH9GdFTg5AfERcMP1jTkUF6sNmmr7APCq/l
JWzp6NutxPh5sOyq0XyPvXTU+MIsvWSIwNGrYnzq9tHRnPmVpDPDUN9M03pp
OzriP0ZaazxC4HJ1p2nnA3TEULkXvwAOjTM0enUQvr9G/l31KOxv6n6uKxzo
6CjtrVDoGIGPMbwLXA7R0RHGlxV4nMDxaZcuvHSEev88Fr/yG9RX6oLm38N0
VBOYbFsO1rqvxePoTEd1Dl+Twr4TuHpNTVHOETpyVb6ruHkC6tfJ//uICx1J
9tHjhsFqNZOmhm50VMnlr579g7UPPw+NdofrHxlx2TtJ4Jpd5m3DR+lI/7ls
lRAV9vW/q6p1PSA/flK7WsDRvHxnIzzpqDnpVuZZGuxDKmOuvV505E29elyP
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
seEFAwlz3g+QcoL99LnRMccKBiql/e3bDz7XQsSWVTJQyb+s1hRw5PYDgf+9
ZKDfS9iqCaxXuy/+wGsGGmhfZ7HGGX6PZeb4ZFYx0L+k9i8mYFV34YnBNwwk
v074bwR4t67NJd0aBjL0MUqoAOt5Dv45+xbu90Kteho8+WBr6uA7Bqq4wmWj
doSCj7U+e6f9noE6tfT8vMAvbCLfhtYx0HDBjp1Z4PpR0YmueuhvM3UeX8BF
TX/7pT4wUFP0sLmgCwU756z2cmxkIAPX/tZd4OYLw5LlHxloRaNnYhRY6D13
5sInBtr69KdsOVhE6M9O+2YGklhrPzAFHjcXuPC0hYGkz6VoKblS8OX+09d/
tsJ8aIg8dRhMP1PwybId5rujWlMamHJapT3lM7zfnQ2ijWCJqJC/vzqg3n5t
8VzpRsEDp37U7OmC/N2x2kkHfOpt4b6kbgYKZK844ANulNFex+iB+a6UZHoP
PNMhdEOzj4HEFV7v7AIzgoTLg74wUHzkoz9c7hR8jzK01NIPjth/3QCsprYo
JDwI++VdXWs/cPCuUevArww0ohA9fB+cYM4gPg3BvlSbSfSCQ/J2N6wdgfo7
oHaT5yj8fhD2T/YeZaBcpfDPBuDMnm8qT8YY6M36i6YnwJMXohyZ4wxE/cUd
fQf8a9f3kt3fIT68yv6t4HbnO30JE7CP5t8o/Af2jZdWpP5gIO6B65fVj0G9
cE+ZqFOh3upJb13AG4LG5wNoDGQ0nVR7Fbx+KvdzMx3qWTzRsQY8+a7sjBAT
6tnr4iEmOCQ/2TJwCub1mvUjsh7Qr04nl32aZqAusYpNNmDOuyP0db8YyPaF
yOwZ8O+uJXOf3zC/N7aqF4NfHPMKfTbDQFx7D073gc2G5w1+zsL17wpd5PSk
4Js+e5X2zMM+ciA8TgtcZfV3NOk/uL5to6gL+K5x0HvmAgMpvVz77yrYkrTO
0HSRgcZ76l6+Bn8+OB97cYmBOtY1SU2ARbIe/R7/y0ChTiO1Il4UvBGVqKuw
MdFtT0UJDBb40M/lvYKJjk083O8FLnFrY69dyUQVlV/q08AqdqItnKuYqPQH
23wV2Nlevsadg4ncFx1sqGCv0rjoh5xMZJ0ddVLYm4K3L6z+QuViIhrn0ll9
cJe1g8MuHib6sNMl14P1+b//8i+vZqIzd9G9q2DPKndp6hom4lbNKaoEH/b8
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
v0dmrOen5/RaFHfYUSQ7fsDtEny+mu8hmz3yRdm6nmPwUZ/fhdfh9rsMMzu4
aYmPv6ED+gXPf8v14FCmRQMFc8ecsZaCpVPfRSY4ol5dXoTMeaFfn6hp37QX
r3955QTreXCo1abJIbid3amjEm7Z4RFy0Yki77JknmbDwV3jSRudKfLQrW84
FF6StErkC5zm9Ep+H7zgbe3K//ZRJNNsOIXA7jwUz0YXigTY1h6XhgsPPLPo
guuXn/WaO4T1YzW7MmY/Reb1tCZ3wd9duz3XuVLk7JFFbRVwl7d10CtYJuhf
dCaszq4sdtKNItF7xXxC4KNVRXIy7liv/pf8WM/bl3JfqmiBFf8mpGrDUgYC
jOAD2C/czmmKwvz5quMSHhRZbR48M+HJYDqlPbJthOP4vb68hdMe/JA9fBD9
p8lsuATeWJ/7YJEnnDITksCyy6svj+HgKi9pH3jFykxf+0NYrzzSE+aw39HW
pIVeFJlNnfi4Cr5JFcoWwgbp/yZ4YKazVJDFYYrYNxdc7juIfrKbdpmGyxt3
bKyBZUIO38/0pkjTNh+FbNhlpWW6hQ9F7tr84g6GFzXWmE3B55IPeNrCVy99
dsvwpcgGvzYJdThpyElomx9FlK5tqVwM+/tEKQ7D170jSwc9GMyHfUbcF/3x
+674qTXAdn1ux3UDKDL/pVX6dbhfcJ11F1wwJud0Gn733LEmJhD7b48/hx28
0kd6WusI1otIwzp12N0o8ko7bCPj8VQA5rhm0xp5FOtry3algQPYr1a/9FY6
hnxBTGeew356uZmf4EXi4tmZcKXR0rTIIIqUbmxuOQZPHFszs/I48qXdZ9+d
cIxa7tgHeGR/RvtqmE/i5fbgE9iPBU+UccO/J8OCJYIpohJZrtLjjv7jeEWr
AeZPfupaBnsNOzseCkG+lfshlgxP80SLSJxEXmsMPucFjy41Tq2DI7I+nTWC
327PDfc4RRHL3ZGLZOAlIn4coqHoJx6XDCbcGEx9zp6fj+FF6jd5WH/f86r/
W/qe0+gPXF0e+XCVjflX7jCKLDMo8g6D04YdL+bCcwZ7F9nDb/nbWnadocho
ho+JKhyg2PmJ4yxFIpeJS86HZz1iLG7AFzzvxH91ZTB/qF2z2RGOeUHqYfpD
+ImS87NxOOGnybY4eDjv7Isb55Dn5qTPu8GR0tpJ2yOwXiLNXHRh3qqUhlE4
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
hVPN3hYbwP8DZpcFgg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
XnL9Z+/9sT8o45XFkeuY1322ETh2awr9D/EcfJc=
         "]], 
        LineBox[CompressedData["
1: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
ezcwLNTU2EBFy0dz9jPsZ7TmoPZGCmToLy8zPDB6yuYw+iP3JNNRtPb1Sk8j
9IjuD2aGud7cyLBBR00WsjGcspVtkzta1t5oI8MNw5zDcehnPjNCDAv6898a
Rd+psD3A8HXeK8+o6IMb5lUZ/pn7tWQcvaEmQZ3h/MGEyXmG/T9rrn6+rsDx
jZvw/VO8egy7bxJR2I9+skvanOGSDELnLTTnR2dXhptafnZGoXcy5box3P83
9es9NGvr+FmG/xkIdT9BSy1f8mBY8zd37yt0T6rtJYbL9y1872G8vpIfwHDb
yY9DA+ih9JarDA/d8v4xjD7TRvuP4TV9v4fp6PYCkev/X6+RUSZuCqi0utxg
uLquiSaN1uYNusNw58Rtujz6E79f5OrzCxweU0azPT0fxTCrR8Xvg+hlTfNo
hg9xf5g0Q9+rX7jHcL1t8l8/tPNU1yOGe4Lt566hy8wzHzNMzhGYD0HT9l1J
ZJjjX9xCJPrlPY6nDBum3vqXgp6O5k9huJlyiaUBHZr6NoNhMfjs2YIujT73
nGHvePHBL+gXcSKZq/sJXwoG0an917IYdolXuTCN/ntZIJfhQkpk3zy6ZWPh
qrlgVH8Ffazc+gXDbyn3d3LyUCD6dHgew0zwt0cU7fW6+iXDlvGmhyTRkwtG
rxh+Tsl8K4uWPNaxauN427t70fl2na8Zfkwp1DmCNjjx/i3DxPhzIjboE6fi
3zFM0tw+74g2LnF9z7BK/H/5PuhaH9oHhns15W8Ho826Ej8yHEwZcI5EF0cS
CxiWjr+r+QDN/vjbqls0QeAZ+sCyS+Hq+lDG/7xAGxWSV709PqXlI/pQo0MR
w5Wa5tmVaCmVhlW7UdaENqN//yEUM8wcX/17Dq1iq1DCcKLmTTsJXgoc3RWw
asXpPYNG6JPPtq26OnvI6Qr66lP+1fffXbs/4zYaq+Pq9W1PRpGeoslCF1bv
51NkAXsW2leAtnr/4kUjMm/QZr9PrHqMX82jFj0iJrn6/BbaZ6La0CmB/qvr
U3AxJr8XnfOuanX9Qj7/mvjNcLbq/9f3Lw/vPPqZ25nV9TeS1NjDwkcB+kr4
G4a3BMVd2Yr2/Zi7un/1W2TChdB3IxVWfTWvNGEHuqg7f3X/h3opH3ehLdoy
8xnO2UtcAHS44dXV+AEaPdANze+ctRqPKvnCS+fRTI+mV+NV9pKJvxc6/ovG
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
eH7RNjlDV5Emrl2JdSaNYL/i1DJsQ4tc6nwiM4r9v/Ul6T165s+PpfBf+Lpr
iPAj9LMWkGsmUUCc5Rd3IFo4vmKKi4L3J+rp7Iy2OrdxyJVKAYVBHd1D6FMP
c5/k0jC/U5zpsuhd3XxBnGM4j3JeF9yArmJKWXD6TYF/5TfTx/fg/BPyn276
OAVCdLpWvqCP80u8Z5rE+bqxtus9w8vbZ/SmKJDcwhP6CC3zZX9T6B8KLHh5
PbiGflcg8nlwmgKd++yFTqL5Z60f7JjF6zMdC9ZmXF/X9s71vzhfE2NMd6Il
qDkmtXP4fvE5Zjb0aMCObLYFCjSEaIhRlKWJTkLOsk6LFFivFv2kAf1+80zA
8yWch/P7171A14haTLEuYz2p/9ZwB53G/4Xp5Ar2l33eU+7oo6fSB1OYqCDV
xsdvgq4rJY78W0MF8tvZYHn0Bm/5jzosVPjkuDi2Eb2DX1P8xloqlMZ2fZ5Q
wv5fLfBugJUKrsF1lFb0o2a9zTvWUUEyKp37NXrp18Gn19mp4HFa9VI0Wp52
tKSbgwouF53hAlrlcFXOtvVUCI+9IWqKnns7X+bNRYVfWmMK8uhYv6D0wg1U
kOg9a70BTTLueCmwiQoKN6qeURWlies36lt4cVOh417IqXo0q9TG6vc8VHjf
e0ErC11skmzPx4f3W/lRIwx9uDWo2o6fCnkbLR1Po1PVwqsebabCow1Jyzro
gg82lOktVOAlrH0phs6I8B08sI0K22YfRK/sliaaXHReeCBAhR83e/z70DWa
XnkTglT403G9/yOa1+XLbmUhKhxx8fRPQAslLffcFabC5uyIzZfRi/IB5p0i
VPgwzjdpis7KEjjFJ0aFPcdNTRUY71cJfXB+B96vm+czDrTFVnj6SpwKAnwD
miQF/Pz1NQ0bJaigM1haV4EWO5pYYy1JheexgslJ6PKo+7YJUlQo2D2/dBUt
/PUY7xQBf15j9qAN2szbM3GfDBXinhz7qowGCfMjCbJUqHt74jAXeqnU+t74
LipkZ987+Ese8/V1TpaSPBVYNU7EV6K/v/s8eleBCjHO8sWJaFZu9anO3VQY
caw08EXPWbfe51eiQuMz0hlLdNYLBceLylR4EFhwSA6tcHxw/s0eKkwnaDxa
h74kaFfEs5cKfxtomd/lpInB1X95zu3DePHuJhagXWt/HcjdTwVv1izrODTn
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
jV7pxo/9/j+/R89U5jqMo/8Ad49iHA==
         "]], 
        LineBox[CompressedData["
1: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
y////czzly6hn1mOPGOi/wO42ZJo
         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0.300000000160032, 0.}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{0.300000000160032, 1.099999999839968}, {
        0.4568884820647407, 12.313592446197097`}}, {{0.300000000160032, 
        1.099999999839968}, {0.4568884820647407, 12.206072645530174`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.300000000160032, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"|Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]|\"", 
         TraditionalForm], None}, {
        FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Linblad Terms, Out-of-Plane Polarization\"", FontSize -> 12, 
        StripOnInput -> False], TraditionalForm], PlotRange -> 
     NCache[{{0.300000000160032, 1.099999999839968}, {0, 
         Log[200000]}}, {{0.300000000160032, 1.099999999839968}, {
        0, 12.206072645530174`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"N.N.\"", "\"N.N.+N.N.N.\"", "\"N.N.-N.N.N.\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809125901001849*^9, 3.8091259162631435`*^9}, 
   3.8091259535374255`*^9, 3.80912699363379*^9, 3.8091272290126657`*^9, 
   3.8091273464210105`*^9, {3.8091273824496427`*^9, 3.8091273971366963`*^9}, 
   3.8091274673445*^9, 3.809127539114722*^9, 3.8091276432821884`*^9, 
   3.8091277170661225`*^9, {3.8091277501006975`*^9, 3.8091278138668156`*^9}, {
   3.80912797918826*^9, 3.809128003663431*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<plot_nn_nnn_sqgrid_coupling.png\>\"", ",", "plt"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8091276397565823`*^9, 3.809127686600933*^9}}],

Cell[BoxData["\<\"plot_nn_nnn_sqgrid_coupling.png\"\>"], "Output",
 CellChangeTimes->{3.809127672359028*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091271572814693`*^9, 3.8091271589988317`*^9}, 
   3.809127194993588*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.808919203650082*^9, 3.8089192366372766`*^9}, {
  3.8089192957696066`*^9, 3.80891933003343*^9}, {3.808919478028981*^9, 
  3.8089195807046213`*^9}, {3.808919627325328*^9, 3.8089196445152817`*^9}, {
  3.8089197441859903`*^9, 3.8089197679996195`*^9}, {3.8089199813401203`*^9, 
  3.808920315407258*^9}, {3.8089203790375905`*^9, 3.808920462318551*^9}, {
  3.8089205004960394`*^9, 3.8089205027151155`*^9}, {3.8089206609352984`*^9, 
  3.8089206764697356`*^9}, {3.809108750050517*^9, 3.8091087910983624`*^9}, {
  3.809127027911147*^9, 3.809127063347514*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
pX002hT+3HBfpxkWC3k3syyPSa3z+6jVd9TnhUNlEvCDVPEkLsx8tXVm0D3c
N+sscZvkkI9a2VLDuegHZ4M3/oZfqS9yMoA/fIiMCP2B+Vs2ZkdBDu5HXl5R
4ieH8HdZOAjB33+OL82Ej6ZF6R/OZlLb9kYX5Sn0m/OPn72+i/g5s2ZWNRz8
xtlbDfbYmDmp94tDNliubEi5w6Tvo3dvboZnlR39zAufKY5qs5hGfzjrvtrm
NpMKDL6sHoR3nrRgNGYhf9k3p4//5pDzK5QVGLDVmbxovj8cYna0dTo4E/V/
Rb1XJDxaFxUzfItJb95wy5b+yyHllmJMfVhXbsnGDDj1ctepnJtM+nbzbOkV
/7CPOlUXicPXVAJMSmHzwzHsoxmof4x/r7V5uMR3UfLbrhuYVz4J57XClgHJ
zWrwyyql/v0zuERrpVDkpes4P6XTNv2wfITGin/XUN+O2Kh7zOSSQJ7t2ebw
suId1pPwM/pVoCYd3/eyqTucl0tW17voL4LHowJvS/Jxyf3qOqtjV5FfhlrP
r8KNMSssu9KYNLc/YsvqWVxyYXpYcQ0c7sMWKoWXB8wdungFz8s9vkprNpcE
X80Km07F+ZTFpz2H5xg6jpvBuo1VdmZzuCQj5ZlR2WXMm/e8TwzBs76LO4jA
/6k5cL35uaS++9ch1xQm3VZukzkND4izDrYk4/cWjTyInsslZgYX5ynAln7B
sgsFuCR0eW5NxCXMv/dudmbCYituLn6bhPkt9B97/Twu+STz1kIDzrZ00q+C
7yrF3LuciH4pYDllKsglNjHbr3y+yKRfK61mdsISfN+u7YLnCF+ythTiEjux
9qTiBCbVWWclNAYfO8mSEYTtDq4WPS7MJQa6sx+5x+P3reIcZs/nkg9vmz89
vID5b1pBOAkW1ambKwXLXH0mKCPCJbV7NXeejGPSI+J/LXLhbPtLIq2xTHon
bvMMdVEuWWs+m3c1/O7u/V9lcKrS07H4GCbVvly81XAB7n84Tf/DecTr+Sec
VrhJck+vAfxpr+1rWzEuqeZz70iNxnkvE5QZgdvfCIj9imLSi+fHSjwX4vc2
tRtZwAIvLG7MEOcSNRO+vnuRmH8XdLLDYfHX9yqE4DGlt97SElxyWob94WAE
3pez1DIbFq9aJFwYzqRd19yS1yzikmlXiegFsJOaHvMRHNS/ztg+DPFdr8Rv
JMkluwzeuD48x6R7fm8nrfC7mD/R8vDYrO9PD0lxybLHwlyvs8hPsdyb7+Ee
8WeZL88w6aLJL23+i/H3fY9elIcrfI/snSvNJaxde4OPh2L++/NjVSzsY2jP
bgth0l/7hPfJyXCJrU6l/XI4sWRNRxb8d4u4TVAw9pfhd7c2LeESJdMzx56f
xv5V1djYBNs6yIcthUsTqnV3LeUSuv3IspNBTBpKqDAb1jb99aTxFJNqfHqh
4ibLJRUbGJPL4Q9aiRmf4Wrh/erBgUxabfPBOViOS47cVPFsDcD+FWFwhl+e
S5hPmbpKsM059c+X4RLLQ3P8TmKeXnYgX3EZ4olNOupPoB7WRT3Nh682ym1f
Dk+vN1y1ZTmXnBVef83Tn0lf5YkPN8K9DLPrjX5MmlUvOW3K4JLRcmYZE75e
dNvyLRynvP+2ly/e/5beQkcm8s13m8lzH/QLNw+Zn7Bqh0CNJBzT2uoXxsL3
c/h1nbyZ9ORGoiSkgPP/2Rn+8DjmLd9NKlfhXge1GCE4vGxLGHMFlwgYBlk4
eGH/bO1cXQrfdErtu3cM/fncTRWDlTg/flGf6aOYP+ipkBdwpnft4B54soXD
OqTIJfm25ZNpnog/u/3yH+AUr5Xcbx5MKp3I6+muhHyxcp40hndd0Zz/F14j
dff6pSOo/1mn+c4qc8lwx4m14+5MWhS223DRKi6JXGxrth7+PtuSkwlnBHon
BB/G/BV5rF1ZhUt0Tyc+6XJD/A6Ki1fD9loC/vJwpvbTbD1VLglzG2T6uKIe
bLyX1ATPmnHxz3MXzGcCy9sOrMb350lsXwT79N+0ewdnaRtfPuyM/SKsUM9r
DZesXKZuVujEpKvUWwKn4d9HtyyeDZ8IXiYQrMYl6nln51s6MunojZnvRddy
yfeRcusMB9S3hk9SKTDrXXLDpD3mrzqXNKV1XPI1SDJYE95qKe1dAafr/LEL
tWPSu1PdN3TUUS/ifQ532mI+OMyUfwWrjO4skYHvDAZ+P7Ae9+tpqnzEBvPE
T6GlA3Dy2PPuukOYDwYVL3lqcIlQdG45P6z60szxB2y1w739gDXi6+K8cxEb
UE9d+SWuHsR88GNqSnIjl/zL04rkWGH/tfr+6Cp8csh/qwacmxLYr7qJS+R2
CkuetMT7di/Y8QCeveS/Dc0WTDpjfJ2IoSbi8ZGmoyBccT2G2QMrSKxu3nkA
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
kCvFSLRUxXwJp+M5ArH/lBZp9aGlyi49sL5IwstRzxUOajR1vknhR6kfCQGz
L5yn0Rcl99IjPiTI8axm9V5DU94SkQr63iR8/iY5ulSdpipep7YdP09CVLeo
cjxaveH5aJknCdr2Ro8l12K/UqzQ4fEggb2GK+0uWnJXYIKWG8Zb/k3PWg3c
b1mHYv+z2C8tVzvWo3O3ekRlnCHh5OrqzXs1aaphLM7r1SkSVLlsvXrRoQab
TomfJGFZWcjCCS2asuSMqNM5TsKAU3X3NHpnvoXZBWfc/6rV3Be0aSpv9Zzm
02PY7/pXXl6yDv+/hqrkgCPGa6nGwavo7erlgUwHEs4vbQom1tNUzIeJxA2H
SXC/e33xPlq+lf+L9SESbMxc29br0NTWEQ7OxIMkODR0Tzah99LpJwtsSbA0
MHW22EBTxe68nQM2mM+xZupf0KUFr9QmrbBegkJN3XRpSsCLfs1hSUKgZ0vN
b7Q0m0eLzl4SMqnUwAg9mipw6TLZuhv7N9/Fm8s20tTX4jXmZyywHs4ncCeh
p6Q+Tqabk0BX6TYo62M9cevfyzclYWFx7F0xeiS33aBzB4n3t1X6WzbRlKj9
eEKnMYnzdOrPDnRE+stDH7eRcDWG4LChaIqUUbfjNCShi6nhMIpuGdfKY99C
Amel+fJzgPsbcc2KMCBh7bcM5ixao8mi05jC82E22OeyAebLkxWqhvokPOY8
pyKwmaZ+ee7aekQP63NkXCUN7Tkm2b13A8ar3T1o5RasJ/tGa+f1mI+WWqqF
aHhi+yxYG8+fkoCV1FaMZ0nvGndNEo4K915oRD8f7x0LWYv5bvhE2saQpoYC
eLafXEPCbsk+4RG0da3Ggf2qGK9JHrsz22hqklWIOK6C9ZTyZJ7FiKZecNxZ
Yq6M+28W8i0M7dLB6NqjRAJ3SqCWgDHmyyx79WFFPM+e8rbcRjuqHd22hSRh
6WhaleJ27M+vX0gaMUnIHqqbrUAv86haISeP9XhJ7orRDozX3/zlf2VIqFUI
PfcKXbEyp2ZRCr//pne+nQlNBepeFn+znISZZb66NPp93hWrF+JYX6vLZE+Y
0pQY95OhZlGMr5TPrj9oNg3HjGQRrMel5u8DzfD7JvXvXxUi4UpHQdkyc5oy
VKz2thIgQSNFik5GX80oaTPgw/mGq/Y4cyfm30uJGC1eEtINJ6kSdGazsM8c
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
       "]], LineBox[CompressedData["
1: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
KyXl3/ucVl4ogP8PgDShwA==
       "]]}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{
  3.808919237352329*^9, {3.8089193109358196`*^9, 3.808919330548684*^9}, {
   3.8089194917158737`*^9, 3.808919581306847*^9}, {3.8089196286138535`*^9, 
   3.808919645304185*^9}, 3.808919768875477*^9, {3.8089199918659987`*^9, 
   3.8089200376462717`*^9}, {3.8089200692750797`*^9, 3.8089200932250504`*^9}, 
   3.8089201691841216`*^9, 3.8089202008216887`*^9, 3.8089202338773336`*^9, {
   3.8089202757319865`*^9, 3.8089203167548923`*^9}, {3.8089204448168306`*^9, 
   3.808920463748728*^9}, 3.808920504677824*^9, {3.8089206625335703`*^9, 
   3.8089206779272723`*^9}, {3.8091087655526385`*^9, 3.8091087927988853`*^9}, 
   3.8091112860477877`*^9, 3.809127066867016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["k", "2"], 
             SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"k", " ", "r"}]]}], ")"}]}], "/.", 
     RowBox[{"r", "\[Rule]", " ", 
      RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091110649692273`*^9, 3.809111275475924*^9}, {
   3.809111349324535*^9, 3.809111350169325*^9}, 3.8091117238314176`*^9, {
   3.8091117552494106`*^9, 3.8091117757927375`*^9}, 3.809111812474568*^9, {
   3.809111843142795*^9, 3.8091118603924522`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
DPNtrSAZhtsCdR8sgQeTv2h4HuSSyzzPnjosxbxh6ODLY4N6I/XV5pIikxZN
ceeGwtwho5AOFhzy7beULep7rYD8DPjKHBGd6/CxIoXtukwmDV5/8CXLjkvm
O1wWC2Kgv60nZfdhpwu9pGAJ6ouO8ncdey4pVtsvOroY++T8zKAX8JUtzA3S
cEGMua2NA+KRV/SboQKT5s+el/wetnK8euCcPOqnpaW8vyOeJ7RSrEgO+VJY
9IfHCee5q+rM6CIm/Xhjo9o5ODVHME4ZlvI4UCjpzCWnOHYdexeiHm8IDU+F
7QIG38fLMqlb/4a7ai7I37LbCtUy2CfklNRqYPk3zz8PL8C+bc+Yru+K8/Z+
naoICwfmMDvgTzyBB3dIM6l2KkmzcuMSSU7YrEgpJo2LPejyGb6zWazs7nwm
5SwuCz19CP26MIK3XxL9smzRb353LjHw9NOfDwcy5j5Igitmvz5OJJi0IV60
V/4wl3yp21/gLY74Sd9snAXrnBSPyxdjUv+zs2ev8eASY8tz5l3zmPTZoV75
athwy2fFObDBsvWh2zwx7+jefLpqLpNWnmnRfQtvODQqeUAU9YBzZIfjEfRr
cikkYQ6TpkldL/oBd0lJ36kQwXy0vc818CiX8Gq+4v0szKTeS7f78Hlxydol
jaJLYb5X29suwuwMjwYzIcwzZ63PyBzjEunFoZUhs1GvZ/86lwcX58QaZwsi
Pi5ef6PpjfjbNVu+exaTLqo6HVUBc94WForAj8tHwk18uOTRutomDQHMj5UO
fS9h76mm9Q4zMb/EuwU5+mL/slRafI4f3yNwy38CPpBUXnN7BpPuCf5Wf9KP
SzyGXZ/08eH5L5ocRfy5JDd/sfo/XtSPJfkWibBMpoqQGuwo0Zwpcxz9UaC5
wHY6k67o9dLJhW97+2Semcak3KxlqitP4P6sbGTv8WDeNDh0+DEslvix7eU/
Br14dnD6rpOYNz3eGU38ZdCdDe6jPbDf+fR9ivCat0FLDwVg3hfWiTP4w6C8
v9PLvsELwwXcjv1m0KclU1f9TnHJgIewVNYUg1YYvGsXCER/MTvV8/gXg8b1
vDwYA8tWeG4dn2TQaL2d2gqnuWR9/r8GUdir4I3HLXiHUeZfrZ8MnFfGhGoQ
5utXL0TcfjCoZer4sxqYzqwRCZtgUJPgHVMGwdgfqjz7ir4zqM0Gbf9ueM+c
0ohn4/i9BGtjlxDky4DQ7OFvDHr4a7TXJ5hPyt99PhzNMB45fYZLnPObklZ8
ZdBL+8UrBM5ySdjo3/z9Xxg0VU2i/zz8J6wjL/QzgzZ0p29fdA77jPJ66/RP
DNobqi1zA35+K2XO0zEGlZjtoLkmFPHr8dOGPcqgxssfZTyBLULM4v+OMKjr
TnVnkzDc7wbHzqXwHbNlAX3w6AaDbDrMoD2mah/sw1FP1ozEOw0xqMriuowf
cEmQ868THxn0eEJUUWgE3t9lq8HFDwxaKGQvLRKJ+mXCeljxnkGF9zW0pMEt
EYyM1kEG3XFrXa9iFOp3jlH1OBf3mzSwIQ+uOmH0UhaespQa0z7PJUK/ZTQ1
OHhfpsX3R7DYwZmDu9kMWlunZLonGvu8lP0L5wEG1fi3YnIQNj0Uc+fUOwY9
TwymDsUgn277fsp4i+fvem/6F96ckbCz5A2D+hxOmDgbi3kglsvs6sd5sU58
E7yA/nNo9O+fPgZ1Kh6lKfCcm0YcUfi1vjtHIY5LmoU3mazsZdBjuf5dRbC2
QG3extcMOiEZv3hDPM5TIeSKTQ+Destzah/Ac8h40pluBpX+9yB/x0UuCRg6
63uxi0FvvMsd74ZzXFf9LOpk0D3JjIhDCag/Rk8213Yw6IzPL71+w+u946+0
vmLQK0axRcGJXNK9WvjW53YG3Xu8W0/8EpfUMyQO/XnJoH/y1JSuwGvVSr5I
w2mnq+wVkrBv1LnGrW9jUMelXZ8K4TTpkhebXzCoZPu/1rXJ6EdGXz7YtzLo
sHnx9GZ4pE0w8nALg1Yduxa2/zLmv6tR5ORzBvVLSrZ/C39PFh9IfobnX5C7
cCSFS95eCJvIeMqgCtF3xSbhSc2VfNXNDDrnYNtg5BXMO8+vejxqYtBfrctE
ZFO5xPVK9PjzRgZ9rh8dmQ5vE9YL/9jAoPUxgftWXcX+ULXS9nM9g97qCwio
hHW6d+2eCYc2FX3XTeOS1r7244ufMGhklE91G6zV59a07DGD+u4w6Nt3DefL
CjfWfcSg4aPpJiOwiJ0Ie9ND5I/iGtGT17nk8YHW6yZ1yC+HrmXT07Ff7Ftz
y/4Bg972478YD+/ndOY61zJofoyuuUwGl8QZveQLqEE86xc7X4PTDXxSEqoZ
tKu16Jl6Jua9WaHil6sY9IN1bdh9OCm88+edSgZd+GjfxS03MI9FW9zOr2DQ
rfVK412wzXLFC8XlyLfnArcPZGGfOvv+V2MZnn/bq+AT/C35t2RzKYO+jBgW
8s3GPLZYoK73Ps6Xfi6bdRPz6OCdWT0lDHrookpFMrz3o2r063sMzCPe8+Rv
If4v9ZeNFjPopLRJeSFcK3zTcbiIQbWM1UrX3eaSohDuk8m7DOovYyRYA4d9
DjkpBPfVfsndmsMl7vPkkwQLGXSZa9aNDtimRi1QuoBBL394P+acyyWW4mP3
xPIZVIDfJuonvJ2zbO28Owxqrfg+8FQelyz2L76qkId8Wfjr4Zw76H8meWtl
cxmUSi04cAk+8DfioWIOg6YXHjGRzeeSEPu5RWtu43nyuyNz4c9Gy8s1bjFo
ctxm+ZUFXNL+83mTzk0GVe15POMxrO8i06uZzaC5zO26poVckv+okVcni0EV
RcVftMHa7jZJRjcQTy12hXZ30Y/S5eZuzGTQbfG174fgc62HyowyGPSv8u3D
AUXoT3NcVHXSEW92zVuEizHPXeybsfo6g2qnTR6Ph8sNJ1jkGvI7v/g34x72
3ZvTf2ikMWjSo5PtufDihPcL115l0NV+J3k0StCP/XIf6KYi3nlmBdTBD9TE
f2heYdCs8+lbt9zH+7aopWqlIF4/NRx9DZ8fflapfJlB9T+zhlxLYeEoM/lk
Bv09fuH+ZzhmX6MbKwnx9jz8VVAZl7hxv7MlL6H+50ZvmVWOeG5d8V0qEflh
LS9yBfZkZxjOSEA/KfzIUqngEsHj1yUn4hlUZ2Ztwl1YX3B+8s84Bl2psWTX
pkrkJ9tNh3uBQefaxLs+hYmEVBY7lkFHVLXat1dhH3YQzhyMgV94RA/Ahek/
b7yMZtBXfoVXXaqRz3ddz7adZ1D2eOC/KXic13ZrRRSDjs05VxxZg/n+Oc28
GcmgA6rJNXNruTjK9q/ZEajvi9fJZMCJc3JmXwjH9y4YfKr0AM839VeJCsP5
FTa15cN7HYrGI0MZdNGiDctoHb7XzdrJ+xyDKkWXv3oC53+f+ON5lkEtXj5u
2/uQS0qFWxm7z6D+yvYz38G+s5RPmYYwaBSf6jPHR/iebLWwLcHolw8EH/+A
7z1on6YWxKCjwePzAh9zyYI7l5pYpzFPSLsVzn3CJbpO8h9mBjLoKTPpzOuw
ovjG26MB6I+h7SOK9ZiXjJS7uScxbyTKniuDjT43rK8/waC6N4946zbgvHTU
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
      "]], LineBox[CompressedData["
1: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
Jd4Gm0RNFrWBJz1/LYk4klGrco6NSTHk27n6hhzwwYgUu15wgevNDkknMup5
yP/M+QkVP8Obef8p2LLroQ0V3GjCM7P3JBmtv31lEfIUzsvE+WcdOK5zLo+u
BPI/8UEIfgrmgzNH9GPBR3576zaD30yoHhJ6BvN47Of2I87Qj22UY3LBayuN
XV1g0sOXBOVS6N/Ni1F2p2EeSrrE1Qq+TXkTMgWOjtCzMSqD87nxnNbNBfqX
Yfb8CHic7oH8EpiOm2Hk9HOox9t8S4GuZFQekidMBXu/4NxaAl+veffkYjns
S9biBSFuZKS3QZf8DxwWMze3AZbm6uhMqoB4OJLeHu0O8dTRYk14AfOsOh2F
3QPm1fB3qoVgwyOpFTfBTbucvVUrob/v/s3M70lGd/PpfzWBkftHjrvgOzuV
uyyrYP/uc06V9IL+wpWx8RVc94rXowjsK8px1auaii+ey1mROkNGwVsclpvg
7yn9a6Vg1y+ioZE1VNyPS+blPm8ysnA5vcFcS8UvJ2j0PwW71O1/mw5OoOid
2O9DRk4CvAuSL2E+euD1uBx81TDcpQLcFhjrdMiXjO4LYvI6dZBvDoXur8C5
PwZM3oJ3KDLpaPpBf0vlbrCrp+IOogkh7eBxbcfIr+ClqZh4HX8ymr/9Ocuj
Ac57c2y9EUwsW2D+Az47MlSrGwD9dXBn59VG2MemmB1fgSO7K0Y5m+A849mM
DQMh3jxTtHLBvvSNSe/BPxgjtsnNsB/8Sn5tcBb65cUtlmpwzkTmoS5w4EKk
j+Yr6H+eE/lGQVCP1dIkesEBere0e8BS2JSUcwsVd/GS1LIKhvmCWyOKAr4w
+P5QN7h7kKh0qRW+78pxN6tzZCSRxadC2wbzVzl9Yg/Yhx7djgE70ZSSjM+T
0YTmbxWBdojv8cWxLrDa1boD2WDe5yO5hhfIqPYOW7TCayp+NbUuogusop8q
3Qw+krreefQinO+2DFG/A+L5T8Lut2DyDVOfT+DEz7VpJpdgnhC+wnbyDXxf
4V5SB5jZeIpmCiz0floMDyGjLLMhveC3VPzDDD/2CixiM/xlAyzLQjFRvwz5
vN/j/c1OKv62rOpSA9iYn46D7x0Vv5HP+eFgKMyzdwcKMsAvjfPuloKv/VC+
IfueiqfHke0Ur8D+oJ/7uhwcWxZiVgweCE4/ptdFxS0PWanIX4X+pt25fxBc
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
nPzvfc4oLxbA/weNpKDf
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.809111210285564*^9, 3.8091112393119793`*^9}, 
   3.8091112812266083`*^9, {3.809111350940213*^9, 3.809111365360668*^9}, 
   3.8091117082699456`*^9, 3.809111744216976*^9, 3.8091117775020027`*^9, 
   3.809111813431001*^9, 3.8091118622864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "100000"}], "}"}]}], ","}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotPoints", "\[Rule]", "3000"}], ","}], "*)"}], 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", 
      ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809109399106987*^9, 3.80910942179234*^9}, {
  3.80910951873341*^9, 3.8091095194804177`*^9}, {3.809109549569007*^9, 
  3.8091095688333664`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\"", 
     FontSize -> 12, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0.1, 1}, {-751378.5313430912, 104857.96945797242`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.80910942353376*^9, 3.809109521025301*^9, {3.809109551168702*^9, 
   3.809109569744877*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Im", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], 
   RowBox[{"(*", 
    RowBox[{"PlotPoints", "\[Rule]", "3000"}], "*)"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[Gamma]\), \(i, i + 1\)]\)|\>\""}], "}"}]}],
    ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Nearest Neighbor Decay, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091084862634473`*^9, 3.8091085770332623`*^9}, {
  3.8091086207602324`*^9, 3.8091086335169997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
sIV+OmPd1OIiF7//JnXnvWmh/z8kpEEZ
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.10000001836734694`, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Decay, Out-of-Plane Polarization\"", FontSize -> 12, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809108483913726*^9, 3.8091084897730637`*^9}, {
  3.809108539897114*^9, 3.809108577939898*^9}, {3.809108625197299*^9, 
  3.809108634511338*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "k", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
   RowBox[{"GdotP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rx", ",", "ry", ",", "rz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8091088252115297`*^9, 3.809108855647868*^9}, {
  3.809108894600909*^9, 3.809108990369721*^9}, {3.8091090225747766`*^9, 
  3.809109056453086*^9}, {3.8091096542948904`*^9, 3.8091097023074875`*^9}, {
  3.809109992155261*^9, 3.8091100197724724`*^9}, {3.8091100825556245`*^9, 
  3.8091101348670444`*^9}, {3.8091101771248493`*^9, 3.809110191996142*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["ry", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["rz", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["rx", "2"], "+", 
      SuperscriptBox["ry", "2"], "+", 
      SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["rx", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["rx", "2"], "+", 
            SuperscriptBox["ry", "2"], "+", 
            SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
       RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}], ")"}], "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rx", "2"], "+", 
         SuperscriptBox["ry", "2"], "+", 
         SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["rx", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"5", "/", "2"}]]}]], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["ry", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["rz", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.809110192434922*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Together", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8091097221196704`*^9, 3.809109725425786*^9}}],

Cell["\<\
Why does the ferromagnetic mode become increasingly subradiant as d becomes \
smaller, whereas the nearest neighbor coupling vanishes very sharply?\
\>", "Text",
 CellChangeTimes->{{3.809016409143978*^9, 3.8090164817003417`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["tests", "Section",
 CellChangeTimes->{{3.8067085522849584`*^9, 3.806708562119661*^9}}],

Cell["\<\
Check my grid mapping. 2D grid, but only one index to specify atoms. \
\>", "Text",
 CellChangeTimes->{{3.8055812128834515`*^9, 3.805581234435918*^9}, {
  3.8090198717970705`*^9, 3.8090198740475454`*^9}}],

Cell[CellGroupData[{

Cell["square grid", "Subsubsection",
 CellChangeTimes->{{3.8090198877837677`*^9, 3.8090198943241434`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num", " ", "=", " ", 
    SqrtBox["atomnum"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atom", "[", 
    RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"excited", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
            "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
            "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], "}"}]}],
          ",", 
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"j", "-", "1"}], ",", "num"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
           "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gridpts", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"atom", "[", 
       RowBox[{"i", ",", "False"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", 
         SuperscriptBox["num", "2"], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"excited", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"atom", "[", 
        RowBox[{"i", ",", "True"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"atomnum", "-", "1"}], "2"], "+", 
             RowBox[{
              SqrtBox["atomnum"], " ", "i"}], "+", "j", "-", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
           "]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", "[", "pts_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"1", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.805581333965639*^9, 3.8055814341893806`*^9}, {
   3.805581552511201*^9, 3.8055815960303836`*^9}, {3.805581629511797*^9, 
   3.8055816883682003`*^9}, {3.8055817251288686`*^9, 
   3.8055817262478523`*^9}, {3.805581886212476*^9, 3.8055818997023997`*^9}, {
   3.805581939032192*^9, 3.8055820448102236`*^9}, {3.8056697625052896`*^9, 
   3.8056698196551075`*^9}, {3.8065230852646923`*^9, 
   3.8065230871668463`*^9}, {3.806523244000454*^9, 3.8065232904876947`*^9}, {
   3.806523351830069*^9, 3.806523378934533*^9}, {3.806523835979823*^9, 
   3.8065238841500297`*^9}, {3.806523947442684*^9, 3.8065240254449883`*^9}, {
   3.8065240606577477`*^9, 3.8065240730513306`*^9}, {3.806524114790417*^9, 
   3.806524148044992*^9}, {3.808175601187192*^9, 3.808175634705696*^9}, {
   3.8088539626628017`*^9, 3.8088540437169886`*^9}, {3.8088541642627516`*^9, 
   3.8088542064094296`*^9}, {3.8088542562133045`*^9, 3.808854281762638*^9}, {
   3.808854316666351*^9, 3.8088546183816257`*^9}, {3.808854679622679*^9, 
   3.8088547519374275`*^9}, {3.8088549928765655`*^9, 3.8088550254883757`*^9}, 
   3.808862892214314*^9, {3.8090197898333473`*^9, 3.809019885729237*^9}, {
   3.8090213636047497`*^9, 3.809021383906481*^9}, {3.8090217672219486`*^9, 
   3.8090217704323263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"0.7", ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3fJsH9OkqDeOGfxu/CD6ULSAHIh+/qNBGUQvSdig
DqJ9TnDrg+iN8kuMwerfHQfTs84ccwfR/FVlniB6B3uiH4iOejszGkSHagcY
7AWZ863EHETHVKy4GRvzxvFc2FMwvYO54S2INprt/xlEv+3/9QtEb3oe+w9E
b4uqN48D0txnW2xBdIVWniuIjrDV8wfRrjxTg0F0wxLFUBAt6R0ZBaInFzTG
geiqv6r7WuLfOApMDTsEoteYhv48n/DGcdLHMuYLQLoso0MIRPNInRUH0SmX
2eRAdEe6hSKI3h80VRVEV59XsAPRCoqSXiDa2ucqmJ7V5RwCohs2RILpa6+z
YkD03X+TwbRY3cFUEB3071Q22FzZ7vArQHqFm1IUiD5zqn2XYuIbx8z97ntA
NABn7shV
  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 4}, 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 1}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 2}}]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->{{-1, 5}, {-1, 5}}]], "Output",
 CellChangeTimes->{{3.805581655114204*^9, 3.8055816888449235`*^9}, 
   3.8055819020959787`*^9, {3.805581941482599*^9, 3.805581976920786*^9}, {
   3.805582038182976*^9, 3.8055820450695515`*^9}, 3.805669582249579*^9, {
   3.805669805938079*^9, 3.805669820223586*^9}, 3.8059998840810094`*^9, 
   3.806523291233897*^9, 3.8065233798524733`*^9, {3.8065238580323625`*^9, 
   3.8065238847552323`*^9}, {3.806524006640272*^9, 3.8065240259317565`*^9}, {
   3.8065240672190237`*^9, 3.8065240738995457`*^9}, 3.806524148572755*^9, 
   3.8081755189332676`*^9, 3.808175636178617*^9, 3.8088536023104763`*^9, {
   3.808854019565382*^9, 3.8088540442714815`*^9}, {3.80885417950504*^9, 
   3.8088542068163023`*^9}, {3.8088542572328033`*^9, 3.808854282126666*^9}, {
   3.8088543483426723`*^9, 3.808854355524477*^9}, 3.8088545068807526`*^9, 
   3.8088546203094683`*^9, {3.8088546828779745`*^9, 3.808854698773489*^9}, 
   3.8088547596048913`*^9, {3.808854831449887*^9, 3.8088548788481965`*^9}, {
   3.8088550018096895`*^9, 3.808855029306165*^9}, {3.8088629004731874`*^9, 
   3.808862929573784*^9}, {3.8090213785567803`*^9, 3.80902141075273*^9}, 
   3.8090217716420937`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["hex grid", "Subsubsection",
 CellChangeTimes->{{3.8090199043830104`*^9, 3.8090199092154503`*^9}, {
  3.809019960759105*^9, 3.80901996974614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumx", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomnumy", " ", "=", 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["3"]], "atomnumx"}], "+", "0.5"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
    RowBox[{
     FractionBox["a", "2"], 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
       "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "i_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     SqrtBox["3"], "2"], 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atom", "[", 
    RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"excited", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", 
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "j", "]"}], ",", 
            RowBox[{"y", "[", "j", "]"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridpts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"atom", "[", 
      RowBox[{"i", ",", "False"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"positions", "[", "pts_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"1", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.809021470240757*^9, 3.809021536932454*^9}, 
   3.8090215998981524`*^9, {3.8090217224147024`*^9, 3.809021723896715*^9}, 
   3.8090217604680147`*^9, {3.8090218065617704`*^9, 3.8090218662552247`*^9}, {
   3.8090219217738*^9, 3.8090219218635607`*^9}, {3.8090219572918634`*^9, 
   3.809021971994565*^9}, {3.80902228825834*^9, 3.8090223320751686`*^9}, {
   3.80902239796904*^9, 3.8090224258844547`*^9}, 3.809022473094236*^9, {
   3.8090225162768106`*^9, 3.8090225213073654`*^9}, {3.809022634832921*^9, 
   3.8090226571702123`*^9}, {3.809022692643534*^9, 3.8090227098625097`*^9}, {
   3.809022828261039*^9, 3.8090229389960513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", "2"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8090224764253407`*^9, 3.8090224983517246`*^9}, {
  3.8090225322600927`*^9, 3.8090225476549387`*^9}, {3.8090226040152936`*^9, 
  3.8090226164460683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.809022524857874*^9, 3.8090225480070133`*^9}, {
  3.809022604650595*^9, 3.8090226169108405`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13", ",", "18"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumx"}], " ", "}"}]}], ",", 
      RowBox[{"a", 
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumy"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.809021552640469*^9, 3.8090215841482496`*^9}, 
   3.80902162020292*^9, {3.8090219343224115`*^9, 3.8090219509837265`*^9}, 
   3.8090224444348397`*^9, {3.8090227244565506`*^9, 3.8090227425072556`*^9}, {
   3.80902278874566*^9, 3.809022806709644*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[1, 2] 3^Rational[1, 2]}, {4.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 3^Rational[1, 2]}, {0, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[3, 2] 3^Rational[1, 2]}, {0.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[3, 2] 3^Rational[1, 2]}, {1.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}, {2.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[3, 2] 3^Rational[1, 2]}, {3.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[3, 2] 3^Rational[1, 2]}, {4.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 2 3^Rational[1, 2]}, {0, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 2 3^Rational[1, 2]}, {1, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 2 3^Rational[1, 2]}, {2, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 2 3^Rational[1, 2]}, {3, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 2 3^Rational[1, 2]}, {4, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[5, 2] 3^Rational[1, 2]}, {0.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[5, 2] 3^Rational[1, 2]}, {1.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[5, 2] 3^Rational[1, 2]}, {2.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[5, 2] 3^Rational[1, 2]}, {3.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[5, 2] 3^Rational[1, 2]}, {4.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       0.8660254037844386}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {2, 3^Rational[1, 2]}}, {{0, 0}, {
       2, 1.7320508075688772`}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       2.598076211353316}}]]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->
   NCache[{{-1, 5}, {
     Rational[-1, 2] 3^Rational[1, 2], 3 3^Rational[1, 2]}}, {{-1, 
     5}, {-0.8660254037844386, 5.196152422706632}}]]], "Output",
 CellChangeTimes->{{3.809021584732686*^9, 3.8090216213797317`*^9}, 
   3.8090217296214094`*^9, {3.809021850723713*^9, 3.809021869413793*^9}, {
   3.809021923623888*^9, 3.8090219740211487`*^9}, {3.8090224321267376`*^9, 
   3.8090224501006937`*^9}, {3.809022638302681*^9, 3.809022660501314*^9}, {
   3.80902270057234*^9, 3.8090227428902593`*^9}, {3.80902279043915*^9, 
   3.8090228072521925`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1307, 805},
WindowMargins->{{Automatic, -1897}, {Automatic, -363}},
SpellingDictionaries->{"CorrectWords"->{
 "zunonian", "zunon", "linewidth", "waveplate", "lightbulbs", "unpolarized", 
  "collimated", "atomnums"}},
Magnification->1.25,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 2, 190, "Chapter"],
Cell[774, 26, 192, 5, 63, "Text"],
Cell[CellGroupData[{
Cell[991, 35, 101, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[1117, 40, 99, 1, 113, "Subsection"],
Cell[1219, 43, 1336, 26, 426, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2592, 74, 92, 1, 113, "Subsection"],
Cell[2687, 77, 845, 13, 220, "Text"],
Cell[3535, 92, 1680, 40, 182, "Text"],
Cell[5218, 134, 366, 7, 72, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5633, 147, 191, 3, 68, "Section"],
Cell[5827, 152, 321, 5, 63, "Text"],
Cell[6151, 159, 18412, 401, 1211, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[24600, 565, 268, 3, 68, "Section"],
Cell[24871, 570, 268, 5, 38, "Text"],
Cell[CellGroupData[{
Cell[25164, 579, 1584, 31, 123, "Input"],
Cell[26751, 612, 567, 10, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27355, 627, 314, 4, 49, "Subsubsection"],
Cell[27672, 633, 4500, 136, 315, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[32209, 774, 272, 3, 40, "Subsubsection"],
Cell[32484, 779, 5279, 155, 400, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[37800, 939, 98, 1, 40, "Subsubsection"],
Cell[37901, 942, 171, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[38097, 950, 9871, 223, 963, "Input"],
Cell[47971, 1175, 534, 9, 37, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[48554, 1190, 108, 1, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[48687, 1195, 612, 12, 86, "Input"],
Cell[49302, 1209, 29056, 577, 335, "Output"]
}, Open  ]],
Cell[78373, 1789, 163, 2, 38, "Text"],
Cell[78539, 1793, 1068, 26, 86, "Input"],
Cell[CellGroupData[{
Cell[79632, 1823, 2098, 49, 158, "Input"],
Cell[81733, 1874, 39658, 803, 335, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121428, 2682, 365, 7, 37, "Input"],
Cell[121796, 2691, 193, 2, 37, "Output"]
}, Open  ]],
Cell[122004, 2696, 1131, 32, 86, "Input"],
Cell[CellGroupData[{
Cell[123160, 2732, 615, 19, 37, "Input"],
Cell[123778, 2753, 1839, 37, 403, "Output"],
Cell[125620, 2792, 340, 7, 29, "Message"],
Cell[125963, 2801, 388, 8, 29, "Message"],
Cell[126354, 2811, 388, 8, 29, "Message"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126803, 2826, 103, 1, 86, "Section"],
Cell[126909, 2829, 757, 15, 62, "Input"],
Cell[CellGroupData[{
Cell[127691, 2848, 261, 3, 49, "Subsubsection"],
Cell[127955, 2853, 4811, 141, 375, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[132803, 2999, 94, 1, 40, "Subsubsection"],
Cell[132900, 3002, 8071, 202, 829, "Input"],
Cell[CellGroupData[{
Cell[140996, 3208, 339, 10, 49, "Input"],
Cell[141338, 3220, 768, 16, 37, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[142143, 3241, 293, 8, 29, "Input"],
Cell[142439, 3251, 34197, 943, 1301, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[176673, 4199, 395, 10, 41, "Input"],
Cell[177071, 4211, 1004, 30, 168, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[178112, 4246, 418, 10, 41, "Input"],
Cell[178533, 4258, 3552, 107, 168, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[182134, 4371, 104, 1, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[182263, 4376, 1462, 34, 110, "Input"],
Cell[183728, 4412, 281160, 4637, 313, "Output"]
}, Open  ]],
Cell[464903, 9052, 114, 2, 38, "Text"],
Cell[465020, 9056, 112, 1, 38, "Text"],
Cell[465135, 9059, 6101, 163, 570, "Input"],
Cell[CellGroupData[{
Cell[471261, 9226, 1691, 36, 94, "Input"],
Cell[472955, 9264, 16570, 326, 328, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[489586, 9597, 184, 2, 86, "Section"],
Cell[CellGroupData[{
Cell[489795, 9603, 112, 1, 49, "Subsubsection"],
Cell[489910, 9606, 219, 4, 38, "Text"],
Cell[490132, 9612, 182, 3, 37, "Input"],
Cell[490317, 9617, 5077, 132, 692, "Input"],
Cell[CellGroupData[{
Cell[495419, 9753, 133, 2, 37, "Input"],
Cell[495555, 9757, 21799, 572, 373, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517391, 10334, 1096, 30, 200, "Input"],
Cell[518490, 10366, 657, 18, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519184, 10389, 574, 16, 98, "Input"],
Cell[519761, 10407, 633, 18, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520431, 10430, 228, 5, 37, "Input"],
Cell[520662, 10437, 2934, 87, 198, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523633, 10529, 122, 2, 37, "Input"],
Cell[523758, 10533, 99, 2, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[523906, 10541, 115, 1, 49, "Subsubsection"],
Cell[524024, 10544, 218, 4, 38, "Text"],
Cell[524245, 10550, 191, 5, 37, "Input"],
Cell[524439, 10557, 128, 1, 38, "Text"],
Cell[524570, 10560, 793, 19, 62, "Input"],
Cell[525366, 10581, 885, 29, 102, "Input"],
Cell[526254, 10612, 528, 15, 37, "Input"],
Cell[526785, 10629, 572, 19, 64, "Input"],
Cell[CellGroupData[{
Cell[527382, 10652, 1862, 57, 203, "Input"],
Cell[529247, 10711, 1136, 40, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530420, 10756, 2569, 76, 258, "Input"],
Cell[532992, 10834, 11314, 197, 283, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[544343, 11036, 4694, 115, 352, "Input"],
Cell[549040, 11153, 332771, 5548, 322, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[881848, 16706, 219, 5, 37, "Input"],
Cell[882070, 16713, 108, 1, 37, "Output"]
}, Open  ]],
Cell[882193, 16717, 1779, 46, 256, "Input"],
Cell[CellGroupData[{
Cell[883997, 16767, 2255, 52, 256, "Input"],
Cell[886255, 16821, 96934, 1900, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983226, 18726, 2165, 56, 270, "Input"],
Cell[985394, 18784, 96464, 1893, 325, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1081895, 20682, 1938, 52, 256, "Input"],
Cell[1083836, 20736, 11747, 209, 268, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095620, 20950, 1694, 43, 208, "Input"],
Cell[1097317, 20995, 7398, 138, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1104752, 21138, 784, 17, 62, "Input"],
Cell[1105539, 21157, 6679, 212, 481, "Output"]
}, Open  ]],
Cell[1112233, 21372, 124, 2, 37, "Input"],
Cell[1112360, 21376, 239, 4, 88, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1112648, 21386, 92, 1, 68, "Section"],
Cell[1112743, 21389, 214, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[1112982, 21397, 106, 1, 49, "Subsubsection"],
Cell[1113091, 21400, 5388, 145, 229, "Input"],
Cell[CellGroupData[{
Cell[1118504, 21549, 1382, 37, 110, "Input"],
Cell[1119889, 21588, 2681, 48, 472, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1122619, 21642, 151, 2, 49, "Subsubsection"],
Cell[1122773, 21646, 5309, 163, 437, "Input"],
Cell[CellGroupData[{
Cell[1128107, 21813, 569, 16, 37, "Input"],
Cell[1128679, 21831, 490, 9, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1129206, 21845, 1110, 29, 133, "Input"],
Cell[1130319, 21876, 4652, 115, 479, "Output"]
}, Open  ]],
Cell[1134986, 21994, 1375, 45, 118, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

