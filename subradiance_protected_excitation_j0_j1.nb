(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1691363,      31907]
NotebookOptionsPosition[   1681677,      31601]
NotebookOutlinePosition[   1682198,      31620]
CellTagsIndexPosition[   1682155,      31617]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Subradiance-protected excitation spreading for \
collimated photon emission", "Title"]], "Chapter",
 CellChangeTimes->{{3.804795257142758*^9, 3.8047952870781355`*^9}}],

Cell["\<\
P. Huft
See paper by K. Ballantine, J. Ruostekoski\
\>", "Text",
 CellChangeTimes->{{3.8047952896493063`*^9, 3.804795315348673*^9}, {
  3.8069647340862026`*^9, 3.80696474134041*^9}}],

Cell[CellGroupData[{

Cell["personal notes", "Section",
 CellChangeTimes->{{3.805668161042568*^9, 3.8056681662163057`*^9}}],

Cell[CellGroupData[{

Cell["Questions", "Subsection",
 CellChangeTimes->{{3.805668173776622*^9, 3.8056681752571135`*^9}}],

Cell[TextData[{
 "Why can a system which is excited with a single photon be adequately \
described by classical E&M?\n\nThe collective mode which is predominantly \
coupled by the initial excitation (after rotating the polarization to be \
normal to the atom grid plane) decays slowly, i.e. is subradiant, while other \
modes decay superradiantly. Why do these other modes see an a higher rate of \
decay than independent decay? Does it just \[OpenCurlyDoubleQuote]come out of \
the math\[CloseCurlyDoubleQuote] as with the ",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]]],
 " enhancement of ensemble Rabi flopping?"
}], "Text",
 CellChangeTimes->{{3.805668178473505*^9, 3.8056683966718793`*^9}, {
   3.808681468062796*^9, 3.808681624587453*^9}, 3.808681678962863*^9, {
   3.8102098440588174`*^9, 3.810209847448387*^9}}],

Cell[TextData[{
 "Restricting this problem to the single-excitation subspace, the Hamiltonian \
matrix elements are: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "j"}], "-", "1", "+", "\[Nu]"}], ",", 
      RowBox[{
       RowBox[{"3", "k"}], "-", "1", "+", "\[Nu]"}]}]], "=", 
    RowBox[{
     SuperscriptBox[
      SubscriptBox["H", "\[Nu]\[Mu]"], 
      RowBox[{"(", "jk", ")"}]], "=", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[CapitalDelta]", "\[Mu]"], 
       SubscriptBox["\[Delta]", "jk"], 
       SubscriptBox["\[Delta]", "\[Mu]\[Nu]"]}], "+", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["\[CapitalOmega]", "\[Mu]\[Nu]"], 
        RowBox[{"(", "jk", ")"}]], "(", 
       RowBox[{"1", "-", 
        SubscriptBox["\[Delta]", "jk"]}], ")"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox[
        SubscriptBox["\[Gamma]", "\[Mu]\[Nu]"], 
        RowBox[{"(", "jk", ")"}]]}]}]}]}], TraditionalForm]]],
 ", \[HBar]=1, where \[Mu],\[Nu] specify polarization in a spherical basis \
and j,k are the atom indices in the 2D grid. The dynamics in this subspace \
are coherent, but H is non-Hermitian, so there is dissipation as the \
excitation diffuses into the collective ground state. "
}], "Text",
 CellChangeTimes->{{3.804795955202659*^9, 3.804796203497088*^9}, {
  3.8051540631375103`*^9, 3.8051541172328863`*^9}, {3.8060047095110035`*^9, 
  3.8060047102689743`*^9}, {3.8066050132591124`*^9, 3.8066050897983627`*^9}, {
  3.806708395044424*^9, 3.806708426075447*^9}, {3.8086762139235163`*^9, 
  3.808676221044484*^9}, {3.808681458085475*^9, 3.80868146251762*^9}}],

Cell["\<\
- \[CapitalDelta],\[Gamma] values used are arbitrary with the given choice of \
plot units. \
\>", "Text",
 CellChangeTimes->{{3.804797675818221*^9, 3.804797723814588*^9}, {
   3.8060077992621117`*^9, 3.8060078474172754`*^9}, {3.806527383456627*^9, 
   3.8065274289762917`*^9}, {3.8069659357565007`*^9, 3.8069660075004425`*^9}, 
   3.8087507235797634`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["general setup - run first", "Section",
 CellChangeTimes->{
  3.804795272338377*^9, {3.8047953612651463`*^9, 3.8047953705323234`*^9}, {
   3.8094683321662207`*^9, 3.809468337342882*^9}}],

Cell["\<\
System description: atomnum two-level atoms arranged in a 2D square grid with \
equal periodicity in x and y. The lower level is has only one angular \
momentum state (J=0) while the upper state has three Zeeman sublevels (J=1). \
\>", "Text",
 CellChangeTimes->{{3.8065110621169147`*^9, 3.806511163740156*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"PHYSICAL", " ", "CONSTANTS"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[HBar]", " ", "=", " ", 
     RowBox[{"6.62607015*^-34", "/", 
      RowBox[{"(", 
       RowBox[{"2", "\[Pi]"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]0", " ", "=", 
     RowBox[{"4", "\[Pi]", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", " ", "=", " ", "299792458"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]0", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["c", "2"], " ", "\[Mu]0"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ee", " ", "=", " ", "1.602*^-19"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"electron", " ", "charge"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"a0", " ", "=", " ", "5.27*^-11"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"Bohr", " ", "radius"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"PARAMETERS", " ", "and", " ", "other", " ", "DEFINITIONS"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[Lambda]", " ", "=", " ", 
     RowBox[{"7.8", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"matelem", " ", "=", " ", 
     RowBox[{"ee", " ", "a0"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "just", " ", "assume", " ", "a", " ", "general", " ", "matrix", " ", 
      "element", " ", "is", " ", "of", " ", "this", " ", "order", " ", "for", 
      " ", 
      RowBox[{"now", "."}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[Gamma]", " ", "=", " ", 
     RowBox[{
      SuperscriptBox["matelem", "2"], 
      RowBox[{
       SuperscriptBox["k", "3"], "/", 
       RowBox[{"(", 
        RowBox[{"6", " ", "\[Pi]", " ", "\[Epsilon]0"}], ")"}]}]}]}], ";", 
    " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"single", " ", "two"}], "-", 
       RowBox[{"level", " ", "atom", " ", "linewidth"}]}], ",", " ", 
      RowBox[{"\[HBar]", "=", "1"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"pol", " ", "=", " ", 
     RowBox[{"Range", "[", "3", "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"pol", "[", 
        RowBox[{"[", "\[Mu]", "]"}], "]"}], "/.", 
       RowBox[{"u", "->", "1"}]}], ",", "2", ",", 
      RowBox[{
       RowBox[{"3", " ", "for", " ", "polarization", " ", "\[Sigma]"}], "=", 
       RowBox[{"-", "1"}]}], ",", "0", ",", 
      RowBox[{"+", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"atomnum", " ", "=", " ", "atomnum"}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "Hamiltonian", " ", "shape", " ", "is", " ", "atomnum", " ", "x", " ", 
       "atomnum"}], ",", " ", 
      RowBox[{
       RowBox[{"with", " ", "state", " ", "vector"}], " ", "=", " ", 
       "atomnum"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", "FUNCTIONS", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StepsTable", "[", 
      RowBox[{"stepList_", ",", "list_"}], "]"}], ":=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"stepList", ",", "list"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"unit", "[", "v_", "]"}], ":=", 
     FractionBox["v", 
      SqrtBox[
       RowBox[{"v", ".", "v"}]]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GdotP", "[", 
      RowBox[{"r_", ",", "p_"}], "]"}], ":=", 
     RowBox[{
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", 
         SqrtBox[
          RowBox[{"r", ".", "r"}]]}]], 
       RowBox[{"4", " ", "\[Pi]", " ", 
        SqrtBox[
         RowBox[{"r", ".", "r"}]]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}], ",", 
          RowBox[{"unit", "[", "r", "]"}]}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["k", "2"], 
             RowBox[{"r", ".", "r"}]}]], "-", 
           FractionBox["\[ImaginaryI]", 
            RowBox[{"k", " ", 
             SqrtBox[
              RowBox[{"r", ".", "r"}]]}]]}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", 
            RowBox[{"unit", "[", "r", "]"}], " ", 
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{"unit", "[", "r", "]"}], ",", "p"}], "]"}]}], "-", 
           "p"}], ")"}]}]}], ")"}]}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "r", " ", "is", " ", "the", " ", "positional", " ", "unit", " ", 
       "vector"}], ",", " ", 
      RowBox[{
      "p", " ", "is", " ", "an", " ", "atomic", " ", "dipole", " ", 
       "moment"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["e", "\[Mu]_"], " ", ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "[", 
      RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"generic", " ", "basis", " ", "vector", " ", "set"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["ecart", "\[Mu]_"], ":=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], ",", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"-", "\[ImaginaryI]"}], 
          SqrtBox["2"]], 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "1", ",", "0"}], "}"}]}], "}"}], "[", 
      RowBox[{"[", "\[Mu]", "]"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{
       RowBox[{
       "z", " ", "expressed", " ", "as", " ", "superpositions", " ", "of"}], 
       " ", "+", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "0"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"linewidthplot", "[", 
      RowBox[{
      "sln_", ",", "polmodes_", ",", "gridshape_", ",", " ", "numx_", ",", 
       "numy_", ",", "plttitle_", ",", "saveplot_", ",", "savesoln_"}], "]"}],
      ":=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"plots", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"lastmode", "=", "0"}], ",", "modelist", ",", "plt", ",", 
         "fname", ",", "title"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"polmode", "=", "1"}], ",", 
          RowBox[{"polmode", "<", 
           RowBox[{
            RowBox[{"Length", "[", "polmodes", "]"}], "+", "1"}]}], ",", 
          RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"modelist", "=", 
            RowBox[{"polmodes", "[", 
             RowBox[{"[", 
              RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "<", 
              RowBox[{
               RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
             RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"plots", ",", 
                RowBox[{"ListPlot", "[", 
                 RowBox[{
                  RowBox[{"sln", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "lastmode"}], "]"}], "]"}], ",", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "5"}], ",", "3"}], "}"}]}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                  RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                  RowBox[{"PlotLegends", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "}"}]}]}], "]"}]}],
                "]"}], " ", ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"lastmode", "=", 
            RowBox[{"i", "-", "1"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"gridshape", "\[Equal]", "\"\<square\>\""}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"plots", ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Log10", "[", 
               FractionBox["3", 
                RowBox[{"4", "\[Pi]", " ", 
                 SuperscriptBox["d", "2"]}]], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"d", ",", "0.02", ",", "1.21"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{"Red", ",", "Dashed"}], "]"}]}], ",", 
              RowBox[{"PlotLegends", "\[Rule]", 
               RowBox[{
               "{", "\"\<N\[Rule]\[Infinity], In-Plane\>\"", "}"}]}]}], 
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"fname", " ", "=", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<plot_linewidth_v_period_````x``.png\>\"", ",", "gridshape", 
            ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"saveplot", ",", 
          RowBox[{"Export", "[", 
           RowBox[{"fname", ",", "plt"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fname", " ", "=", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"StringForm", "[", 
           RowBox[{
           "\"\<soln_linewidth_v_period_````x``.txt\>\"", ",", "gridshape", 
            ",", "numx", ",", "numy"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"savesoln", ",", 
          RowBox[{"Export", "[", 
           RowBox[{"fname", ",", 
            RowBox[{"ToString", "[", "sln", "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"title", " ", "=", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"plttitle", "\[Equal]", "\"\<\>\""}], ",", 
           RowBox[{"ToString", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{
             "\"\<Collective linewidths for ``x`` `` grid\>\"", ",", "numx", 
              ",", "numy", ",", "gridshape"}], "]"}], "]"}], ",", 
           "plttitle"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"plt", " ", "=", " ", 
         RowBox[{"Show", "[", 
          RowBox[{"plots", ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Style", "[", 
             RowBox[{"title", ",", 
              RowBox[{"FontSize", "\[Rule]", " ", "14"}]}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
           RowBox[{"Frame", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{"True", ",", "True", ",", "False", ",", "False"}], 
             "}"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Lattice period d [\[Lambda]]\>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(Log\), \
\(10\)]\)(\!\(\*SubscriptBox[\(v\), \(n\)]\)/\[Gamma])\>\""}], "}"}]}], ",", 
           RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", " ", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", 
              RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}]}], " ", 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
     RowBox[{"(*", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"z", " ", "in", " ", "spherical", " ", "basis"}]}], 
      "*)"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.804795372139743*^9, 3.8047954565762587`*^9}, {
   3.804795557477767*^9, 3.804795646192586*^9}, {3.805670829592176*^9, 
   3.8056708978355913`*^9}, {3.8059959856055202`*^9, 3.805995986254162*^9}, {
   3.8059985871648145`*^9, 3.8059986288484855`*^9}, {3.8059997358360014`*^9, 
   3.805999788758046*^9}, {3.8059999118297677`*^9, 3.8059999521643977`*^9}, {
   3.805999992044653*^9, 3.8060000636137767`*^9}, {3.8060001456463013`*^9, 
   3.8060001964015045`*^9}, {3.8060002660690813`*^9, 3.8060002884442167`*^9}, 
   3.806000626716222*^9, 3.806001860902274*^9, 3.8060020439721518`*^9, {
   3.8060026207721825`*^9, 3.80600266366413*^9}, {3.8060026966204414`*^9, 
   3.8060027062593665`*^9}, {3.8060060864367876`*^9, 3.806006284666767*^9}, {
   3.80600633970216*^9, 3.806006436560063*^9}, {3.8060064977258167`*^9, 
   3.8060065810076523`*^9}, {3.8065097730595045`*^9, 3.806509811016704*^9}, {
   3.8065108020023785`*^9, 3.8065108352304597`*^9}, {3.806511491827402*^9, 
   3.806511491880254*^9}, {3.8065116937092276`*^9, 3.8065117567284775`*^9}, 
   3.806512394112631*^9, {3.806512596967489*^9, 3.806512597549224*^9}, {
   3.806512635854741*^9, 3.806512639698132*^9}, 3.8065184714886026`*^9, {
   3.806518807617782*^9, 3.806518818536937*^9}, {3.8065188588224583`*^9, 
   3.8065188745589724`*^9}, {3.806522742274407*^9, 3.8065227992408857`*^9}, {
   3.80652624964219*^9, 3.8065263011476345`*^9}, {3.806526338176937*^9, 
   3.806526338878935*^9}, {3.806527870071875*^9, 3.806527886706303*^9}, {
   3.8065280491641827`*^9, 3.8065280499206524`*^9}, {3.8065288434330974`*^9, 
   3.8065288441316767`*^9}, {3.80652935916156*^9, 3.806529360595722*^9}, 
   3.8065909213975697`*^9, {3.8065945956794834`*^9, 3.8065946197902155`*^9}, {
   3.806595111718749*^9, 3.80659511816251*^9}, {3.8066044544589233`*^9, 
   3.8066044646028137`*^9}, {3.80696565986509*^9, 3.8069656634134607`*^9}, {
   3.8069656979471774`*^9, 3.8069657129861*^9}, {3.806965905008503*^9, 
   3.806965917930096*^9}, {3.806969203048703*^9, 3.806969247088546*^9}, {
   3.806969399593093*^9, 3.806969426621357*^9}, {3.8069694691605425`*^9, 
   3.8069695583291035`*^9}, {3.8069696687010384`*^9, 
   3.8069697479909005`*^9}, {3.8069708799936037`*^9, 3.806970937308947*^9}, {
   3.8071341724945297`*^9, 3.8071342023307457`*^9}, {3.807134239967105*^9, 
   3.807134245276909*^9}, {3.8071343282560205`*^9, 3.8071343467146626`*^9}, {
   3.8071344033173037`*^9, 3.8071345328828435`*^9}, {3.8071353004034786`*^9, 
   3.8071353048336315`*^9}, {3.807135353381813*^9, 3.807135371458476*^9}, {
   3.807136104073449*^9, 3.807136128133113*^9}, {3.807136286895579*^9, 
   3.8071363155599303`*^9}, {3.807182165268559*^9, 3.8071821736182346`*^9}, {
   3.807184444104906*^9, 3.8071845076699314`*^9}, {3.8071864003406534`*^9, 
   3.8071864384617157`*^9}, {3.807186480235013*^9, 3.807186493333987*^9}, {
   3.8071866070229807`*^9, 3.807186607130693*^9}, {3.8071868135856285`*^9, 
   3.8071868476256046`*^9}, 3.807203261610388*^9, {3.8072038692517233`*^9, 
   3.8072038740319357`*^9}, {3.807213911849493*^9, 3.8072139140357633`*^9}, {
   3.8072140018354006`*^9, 3.8072140100513997`*^9}, {3.8072173311304865`*^9, 
   3.807217345535433*^9}, {3.807221360734707*^9, 3.8072213636309876`*^9}, {
   3.8079821163915453`*^9, 3.8079821587163076`*^9}, {3.807986244761863*^9, 
   3.807986305420913*^9}, {3.807987427293959*^9, 3.807987461143407*^9}, {
   3.808064660727276*^9, 3.8080646710536537`*^9}, {3.808064978922209*^9, 
   3.8080649889520206`*^9}, {3.808065133138933*^9, 3.808065137247834*^9}, {
   3.8080656978757963`*^9, 3.8080657129905295`*^9}, {3.808068297769658*^9, 
   3.8080682988068843`*^9}, {3.8080683318016787`*^9, 3.808068333322548*^9}, {
   3.8080687285840673`*^9, 3.808068729604082*^9}, {3.808068793234928*^9, 
   3.8080687946362305`*^9}, {3.808071621206293*^9, 3.8080716723275375`*^9}, {
   3.8080729540168924`*^9, 3.8080729609414005`*^9}, 3.8081740669737325`*^9, {
   3.8081741515898724`*^9, 3.808174154407746*^9}, 3.8081757347113743`*^9, {
   3.80850296857384*^9, 3.8085030083264093`*^9}, {3.808503067468046*^9, 
   3.8085031670005584`*^9}, {3.8085034258887215`*^9, 3.808503429488124*^9}, {
   3.808503479673551*^9, 3.8085034823204985`*^9}, {3.8085035467900696`*^9, 
   3.808503594831055*^9}, {3.808503764886863*^9, 3.8085038227088747`*^9}, {
   3.8085062266270256`*^9, 3.8085062282964144`*^9}, 3.8085063375988884`*^9, {
   3.8085064788703156`*^9, 3.808506480017167*^9}, {3.80850652972351*^9, 
   3.8085065309142447`*^9}, {3.8085067139700546`*^9, 3.808506715888835*^9}, {
   3.808563738055747*^9, 3.808563804867737*^9}, {3.808573814421254*^9, 
   3.808573815415248*^9}, 3.808651641220073*^9, {3.8086518769444513`*^9, 
   3.808651893549247*^9}, 3.8086558780542803`*^9, {3.808656024934702*^9, 
   3.8086560272983837`*^9}, {3.808662363748914*^9, 3.808662408664112*^9}, {
   3.808664687414502*^9, 3.808664689986473*^9}, {3.8086682528166385`*^9, 
   3.8086682545748963`*^9}, {3.808676180008201*^9, 3.808676184370633*^9}, {
   3.808676232267743*^9, 3.8086762327931757`*^9}, {3.8086762661744785`*^9, 
   3.8086763102835283`*^9}, {3.8086806992151303`*^9, 3.808680700237514*^9}, {
   3.8087546100096054`*^9, 3.8087546122137136`*^9}, {3.8087547536620526`*^9, 
   3.8087547547062635`*^9}, {3.8087627100920486`*^9, 3.808762730682022*^9}, {
   3.808763339511509*^9, 3.8087633428755393`*^9}, 3.8087635580466175`*^9, {
   3.808864426190888*^9, 3.8088644468569455`*^9}, {3.8088648394815702`*^9, 
   3.8088648396005*^9}, {3.8088651910855045`*^9, 3.8088651922784843`*^9}, {
   3.809015895544302*^9, 3.80901589577279*^9}, {3.8090170885137053`*^9, 
   3.80901708984947*^9}, {3.809018596529349*^9, 3.8090185976979575`*^9}, {
   3.8090273113330765`*^9, 3.8090273114447775`*^9}, {3.8090284653517256`*^9, 
   3.8090286292701964`*^9}, {3.809028853843644*^9, 3.809028859165645*^9}, {
   3.809469660849782*^9, 3.809469660868692*^9}, {3.80953004055865*^9, 
   3.809530047376833*^9}, {3.8095411065943613`*^9, 3.80954110705513*^9}, {
   3.8096006063652363`*^9, 3.809600607036578*^9}, {3.810209919376263*^9, 
   3.810209923533496*^9}, {3.810210052112395*^9, 3.8102100737811394`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["linewidths vs lattice spacing", "Section",
 CellChangeTimes->{{3.8060017187482805`*^9, 3.806001720111932*^9}, {
  3.807219143212973*^9, 3.8072191566618133`*^9}, {3.8087775624633417`*^9, 
  3.8087775635834894`*^9}, {3.8090163404212494`*^9, 3.809016340797243*^9}}],

Cell["\<\
Set atomnums, run one of the grid geometry cells below, then run the \
\[OpenCurlyDoubleQuote]run\[CloseCurlyDoubleQuote] cell. \
\>", "Text",
 CellChangeTimes->{{3.8090169793060865`*^9, 3.80901704709494*^9}, {
  3.809019674019689*^9, 3.809019689982016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"atomnumx", " ", "=", " ", "12"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "only", " ", "x", " ", "value", " ", "will", " ", "be", " ", "used", " ", 
    "to", " ", "build", " ", "square", " ", "grid"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomnumy", " ", "=", " ", 
    RowBox[{"Floor", "[", 
     RowBox[{
      FractionBox["2", 
       SqrtBox["3"]], "atomnumx"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"used", " ", "for", " ", "hex", " ", "lattices"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"atomnumx", ",", "atomnumy"}], "}"}]}], "Input",
 CellChangeTimes->{{3.809018686810726*^9, 3.8090186888103704`*^9}, {
   3.809018759945447*^9, 3.809018821077754*^9}, {3.8090188783247404`*^9, 
   3.809018914808607*^9}, {3.809018946610208*^9, 3.8090189836036034`*^9}, {
   3.8090196598430157`*^9, 3.809019665008836*^9}, {3.8090197081858063`*^9, 
   3.809019710750782*^9}, {3.8090230477493725`*^9, 3.80902304851731*^9}, 
   3.8090231091711864`*^9, {3.809023314803544*^9, 3.809023314881336*^9}, {
   3.809023506975886*^9, 3.809023513547315*^9}, {3.809023575210723*^9, 
   3.8090235839184003`*^9}, {3.8090236582547035`*^9, 
   3.8090236862319236`*^9}, {3.809023727606332*^9, 3.8090237457608447`*^9}, {
   3.80902381673116*^9, 3.8090238167839675`*^9}, {3.8090244286419945`*^9, 
   3.8090244446063175`*^9}, {3.8090251819225273`*^9, 3.809025182823117*^9}, {
   3.80902990374408*^9, 3.809029918557509*^9}, 3.809032843797409*^9, {
   3.809542114064296*^9, 3.809542217285282*^9}, {3.8095422602493224`*^9, 
   3.809542269455696*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8090237477674437`*^9, 3.809023817820197*^9, 3.80902410662554*^9, {
   3.809024429508671*^9, 3.809024445203719*^9}, 3.809025183052512*^9, 
   3.8090273445502877`*^9, {3.809029905040451*^9, 3.8090299196206665`*^9}, 
   3.8090312697983327`*^9, 3.8090328453672094`*^9, 3.8095300962765064`*^9, 
   3.809540898684434*^9, 3.809540993503817*^9, 3.8095411356935263`*^9, {
   3.809542194457293*^9, 3.8095422179956355`*^9}, {3.8095422631046815`*^9, 
   3.8095422702306185`*^9}, 3.809605200302825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["square lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
  3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
  3.809023200615773*^9}, {3.8094683197593937`*^9, 3.8094683204016514`*^9}, {
  3.8095300977777147`*^9, 3.809530098439992*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnumy", "=", "atomnumx"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", "*", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idx", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
     "Simplify"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D", 
    " ", "coordinate", " ", "indices"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
     RowBox[{"n", "\[Rule]", 
      SqrtBox["atomnum"]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
  3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
  3.8090191237504044`*^9}, {3.8090194326770754`*^9, 3.8090194334092865`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["hexagonal lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090168466120195`*^9, 3.8090168526145716`*^9}, {
  3.8090168863400745`*^9, 3.8090168935046854`*^9}, {3.8090238204661245`*^9, 
  3.8090238210405893`*^9}, {3.809468324648697*^9, 3.8094683254928503`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumy", " ", "=", " ", "atomnumx"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridname", " ", "=", " ", "\"\<hex\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", 
   RowBox[{"atomnumx", " ", "atomnumy"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", 
       RowBox[{"atomnumx", " ", "atomnumy"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afrowsmode", " ", "=", " ", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], 
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"1", "&"}], ",", "atomnumx"}], "]"}]}], "&"}], ",", 
       "atomnumy"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afcolsmode", " ", "=", " ", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "#"], 
          RowBox[{"Array", "[", 
           RowBox[{
            RowBox[{"1", "&"}], ",", "atomnumy"}], "]"}]}], "&"}], ",", 
        "atomnumx"}], " ", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
       RowBox[{
        FractionBox["1", "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}], "-", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
            "2"}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
        ")"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809017140657352*^9, 3.809017154350025*^9}, {
   3.8090188539498825`*^9, 3.809018860509693*^9}, {3.809019129436096*^9, 
   3.8090191345158234`*^9}, {3.8090230603207874`*^9, 3.8090230777661314`*^9}, 
   3.8090231362179184`*^9, {3.8090236883512573`*^9, 3.8090236901055713`*^9}, {
   3.809024859356752*^9, 3.8090249368256736`*^9}, 3.8090251639675293`*^9, {
   3.8090274533055954`*^9, 3.809027453373412*^9}, {3.809090300086687*^9, 
   3.8090903159707894`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["run", "Subsubsection",
 CellChangeTimes->{{3.8090169056528196`*^9, 3.8090169355856133`*^9}}],

Cell["\<\
find the lattice period dependent transition linewidth for modes defined \
above.\
\>", "Text",
 CellChangeTimes->{{3.809016939710581*^9, 3.809016974719592*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "}"}], "&"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"polarizationmodes", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Length", "[", "polarizationmodes", "]"}]}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastmode", " ", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"runtime", " ", "=", " ", 
   RowBox[{
    RowBox[{"Timing", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"polmode", "=", "1"}], ",", 
        RowBox[{"polmode", "<", 
         RowBox[{
          RowBox[{"Length", "[", "polarizationmodes", "]"}], "+", "1"}]}], 
        ",", 
        RowBox[{"polmode", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"e", "[", "\[Nu]_", "]"}], "=", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"modelist", " ", "=", " ", 
          RowBox[{"polarizationmodes", "[", 
           RowBox[{"[", 
            RowBox[{"polmode", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"d", "=", "0.01"}], ",", 
           RowBox[{"d", "<", "1.26"}], ",", 
           RowBox[{"d", "=", 
            RowBox[{"d", "+", "0.05"}]}], ",", 
           RowBox[{"(*", 
            RowBox[{
            "loop", " ", "over", " ", "fractional", " ", "lattice", " ", 
             "period"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"build", " ", "the", " ", "Hamiltonian"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Hfull", " ", "=", " ", 
             RowBox[{"Array", "[", 
              RowBox[{
               RowBox[{
                SubscriptBox["H", "##"], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "<", 
               RowBox[{"atomnum", "+", "1"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "<", 
                  RowBox[{"atomnum", "+", "1"}]}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"u", "=", 
                   RowBox[{"d", " ", "\[Lambda]", " ", 
                    SubscriptBox["r", 
                    RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[CapitalOmega]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
                    RowBox[{"Re", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"\[Gamma]ij", "=", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
                    RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"e", "[", "i", "]"}], ".", 
                    RowBox[{"GdotP", "[", 
                    RowBox[{"u", ",", 
                    RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Hfull", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
                   RowBox[{"(", 
                    RowBox[{"\[CapitalOmega]ij", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}], ")"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "find", " ", "the", " ", "eigenmode", " ", "overlap", " ", 
              "with", " ", "modes", " ", "of", " ", "interest"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
             RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"mode", "=", "1"}], ",", 
              RowBox[{"mode", "<", 
               RowBox[{
                RowBox[{"Length", "[", "modelist", "]"}], "+", "1"}]}], ",", 
              RowBox[{"mode", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"overlap", " ", "=", " ", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", " ", "=", " ", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"modelist", "[", 
                    RowBox[{"[", 
                    RowBox[{"mode", ",", "1"}], "]"}], "]"}], ".", 
                    RowBox[{"evecs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], 
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"maxIdx", "=", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{"overlap", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"v", "=", " ", 
                RowBox[{"Im", "[", 
                 RowBox[{"evals", "[", 
                  RowBox[{"[", "maxIdx", "]"}], "]"}], "]"}]}], ";", 
               RowBox[{"(*", 
                RowBox[{"mode", " ", "linewidth"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"soln", "[", 
                  RowBox[{"[", 
                   RowBox[{"mode", "+", "lastmode"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"d", ",", 
                   RowBox[{"Log10", "[", 
                    RowBox[{"v", "/", "\[Gamma]"}], "]"}]}], "}"}]}], "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          RowBox[{"(*", 
           RowBox[{"end", " ", "mode", " ", "loop"}], "*)"}], 
          "\[IndentingNewLine]", "]"}], ";", 
         RowBox[{"(*", 
          RowBox[{"end", " ", "d", " ", "loop"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"lastmode", "=", 
          RowBox[{"mode", "-", "1"}]}], ";"}]}], 
       RowBox[{"(*", 
        RowBox[{
        "since", " ", "mode", " ", "will", " ", "increment", " ", "just", " ",
          "before", " ", "the", " ", "loop", " ", "exits"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";"}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "pol", " ", "loop"}], "*)"}], "\[IndentingNewLine]",
      "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<Simulation took `` minutes\>\"", ",", 
   RowBox[{
    RowBox[{"runtime", "/", "60"}], "//", "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8088321953972454`*^9, 3.80883252033072*^9}, {
   3.808832551461509*^9, 3.8088327182497296`*^9}, {3.8088328170416355`*^9, 
   3.8088328489214215`*^9}, 3.808832881153268*^9, {3.808832912325945*^9, 
   3.808832937556507*^9}, 3.8088330655145044`*^9, {3.8088332017258544`*^9, 
   3.8088332024449263`*^9}, 3.808833266958461*^9, 3.808833298854204*^9, {
   3.8088333464898767`*^9, 3.8088335531086016`*^9}, {3.8088415808641357`*^9, 
   3.808841585619443*^9}, {3.8088644621911683`*^9, 3.8088645395140877`*^9}, {
   3.808864605851305*^9, 3.808864606220704*^9}, {3.809100435742504*^9, 
   3.8091004362461615`*^9}, {3.809536097821503*^9, 3.8095361061602135`*^9}, {
   3.8095362995998125`*^9, 3.8095363025239925`*^9}, {3.8095369682059484`*^9, 
   3.8095369750588193`*^9}, 3.8095411199735737`*^9, {3.809546448642682*^9, 
   3.8095464701696715`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Simulation took \
\\!\\(\\*RowBox[{\\\"0.17291666666666666`\\\"}]\\) minutes\"\>",
  StringForm["Simulation took `` minutes", 0.17291666666666666`],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8090274743134413`*^9, 3.809028325932001*^9, 3.8090301705121117`*^9, 
   3.8090316085760727`*^9, 3.809032865222105*^9, 3.8090903551240854`*^9, 
   3.8095301185594454`*^9, 3.8095369804563236`*^9, 3.8095409208641243`*^9, 
   3.8095410100186434`*^9, {3.809541125603516*^9, 3.809541153103958*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["soln analysis", "Subsubsection",
 CellChangeTimes->{{3.8090194737115297`*^9, 3.8090194849383807`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"saveplt", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"savesln", " ", "=", " ", "False"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"linewidthplot", "[", 
  RowBox[{
  "soln", ",", "polarizationmodes", ",", "gridname", ",", "atomnumx", ",", 
   "atomnumy", ",", "\"\<\>\"", ",", "saveplt", ",", "savesln"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809028634816141*^9, 3.8090286356109934`*^9}, {
  3.809028868797657*^9, 3.8090288734162717`*^9}, {3.809029951123826*^9, 
  3.809029989347587*^9}, {3.8095301158736453`*^9, 3.809530123227334*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt95C9hxclrvtrvlGt9Hbhjnb2W4LWW
gyVf7LVi+g991dhjH+/0vHKC40f7GrD6I/Z8nE9KGcqf2z+qAgmcshfMlnBk
Z7tmv6TAluv64gv2l02rLV6kdu+/vhgkcNmepXzagbbUK/u5IAL2qpxT31ms
frTfFixwy15lr+Q8PdtX+8HaC+7aH54cfK22/sP+oB0gBz2wDwt4L1zf/Hn/
m0CQwEN7A285+TeK3/a3vQYJPLb/X9RXmCf0Y78CyPlyT+3XVQdPYBf6uX8X
2D/P7E8eWnBqj/2P/SFg817YL2eZFRV98cv+d2DzXtrz/3X4+fnt2/0dYPNe
2y8O5vzJavhgvxLYvLf27yvW+P/YsX//HrB57+wvTOrafiTokL02OHw+2Asp
Fr9rFLpk/0MDJPDBfsKlEmvh0sv2R7+CBD7aR01LeJG9+az9pEMggU/2xTyT
lVzu77KPB2mP+Ww/nynKxuj53P0A3a3RDw==
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9pdiiJXs4uA/slGt9Hbhjnf2Nqifq
E9P5D2jF9B/6qrHHfkXwwWVNvQIHasDqj9jf6NX2+B/De+BRFUjglL2k1iGf
3CjuA0sKbLmuL75g77C10DP1NeuB64tBApftm+JTJ79o5jzABRGwD+Nb/lU2
juWALVjglr2T3Bf1+N5/+8HaC+7a/6ryv73f7uv+oB0gBz2wv/TdbfPz+Jf7
3wSCBB7aT6s3UpGXvrK/7TVI4LH9Eb6VBU3rNtkrgJwv99Q+ikv7vcvzq/a7
wP55Zi+v/31z7o979iFg817Yv99+ZL3Qv/v278DmvbTn3fVq9uOUW/YdYPNe
2y/LeBNcGXrRXgls3lv75T+nWh/4vc9+D9i8d/YHr+j+M1g8eb82OHw+2Ker
CbwtCT20/4cGSOCDPaP/uXuKthf2H/0KEvhof9jV9LTB+mv7Jx0CCXyy3yNg
UhI15c7+eJD2mM/2ln+UnT0+PtgPADeW01w=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv97fVnD3ef+2S/U671deCOdfbfPzIf
jqv6bK8V03/oq8Yee6MfYuafP320rwGrP2L/RO/lmqD1b+0fVYEETtk3LDwa
s8L9uf2SAluu64sv2BsXLzn5dcZD++uLQQKX7f3aHFn1Wm7ac0EE7NWb17+5
b3jR3hYscMve+8vve3ZXD9uDtRfctT85faEb05XV9kE7QA56YJ8kd2+6bPSi
/W8CQQIP7efWLQxuZNu3v+01SOCx/VvZ7GMG2Sf2K4CcL/fUPvSv/tGFuRf2
7wL755k978mb+XXSV/aHgM17YV8RF/4i4fW1/e/A5r20DxZrn/lg5fX9HWDz
Xtsnzrl9eNfOy/uVwOa9tf+V//gbi9yR/XvA5r2z944Icp+cNcNeGxw+H+wv
fVrw4330AfsfGiCBD/aukgpqQolH7I9+BQl8tC/d/2bXG+H99pMOgQQ+2b++
8uFQtPNq+3iQ9pjP9v4zuniXfirfDwAardmH
          "]]}}}, {}, {}, {{}, {}}}, {{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
iZ2OBFjc1bAL1+KhfwHlfOfU
          "]]}}}, {}, {}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 5x5 square grid\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.2100000000000006`}, {-5, 3}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Ferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Antiferromagnetic\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N\[Rule]\[Infinity], In-Plane\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095409473462753`*^9, 3.809540965067875*^9}, 
   3.809541012193862*^9, 3.809541166767414*^9}]
}, Open  ]],

Cell["compare square and hex grids", "Text",
 CellChangeTimes->{{3.8090276994174333`*^9, 3.8090277274066734`*^9}, {
  3.809027768558586*^9, 3.809027778439172*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x6.txt\>\"", "]"}], 
      "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hexsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_hex5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sqsoln", " ", "=", " ", 
     RowBox[{"ToExpression", "[", 
      RowBox[{
      "Import", "[", "\"\<soln_linewidth_v_period_square5x5.txt\>\"", "]"}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8090279428347816`*^9, 3.809028088801463*^9}, {
   3.8090281461860676`*^9, 3.8090281468632965`*^9}, 3.8090282090850344`*^9, {
   3.809028245391554*^9, 3.8090282515640545`*^9}, {3.80903265241492*^9, 
   3.8090327021270423`*^9}, {3.8090327992749586`*^9, 
   3.8090328163762355`*^9}, {3.8090904155601416`*^9, 3.809090415623972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sln", " ", "=", " ", 
   RowBox[{"Catenate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sqsoln", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", "hexsoln"}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. Ferro.\>\"", ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. A.F.\>\"", ",", "Purple"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Sq. In-plane\>\"", ",", "Orange"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. Ferro.\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", "\"\<Hex. A.F. rows\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Purple", ",", "Dashed"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"None", ",", " ", "\"\<In-plane\>\"", ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Orange", ",", "Dashed"}], "]"}]}], "}"}]}], "}"}]}], 
     "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", "=", 
  RowBox[{"linewidthplot", "[", 
   RowBox[{
   "sln", ",", "modes", ",", "\"\<\>\"", ",", "atomnumx", ",", "atomnumy", 
    ",", "\"\<Collective linewidths for 30-atom grids\>\"", ",", "False", ",",
     "False"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8090291825424013`*^9, 3.809029251828573*^9}, {
   3.809029289352435*^9, 3.8090295265953355`*^9}, {3.809029679199459*^9, 
   3.809029681999523*^9}, {3.809029712415219*^9, 3.8090297411436815`*^9}, {
   3.8090297905716853`*^9, 3.809029816927494*^9}, {3.809032708095091*^9, 
   3.8090327131437397`*^9}, {3.8090328845574236`*^9, 3.8090328847628765`*^9}, 
   3.809032921837782*^9, 3.809090409557664*^9, {3.809090451062523*^9, 
   3.8090904569985943`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9/eNDjRPWfLXfIdf6OnDHOvvbP+uy
9pR8sdeM6T/0VWOPvVT3ss2THT/aQ9QfsS8T2xvMWP7c/mEVSOCUfeLBvw3s
bNfslxTYcl1ffMHeXvLx4Tep3fuvLwYJXLb/EyIq1ZF6ZT8XRMB+bcu7SRar
H+23BQvcsq+pvr5A3/bV/kKwwF37Naf2aTfVf9gfBHbQA/uDlspe1c2f978J
BAk8tD8SP9n0leK3/SDXyrU+tr/v3zs9T+jHfnmwwFP7vMWMe1iFfu6H+OeZ
vSzzpuu77X9AzXthL/VLfUfExS9Q817a+zUk/vz89i3UvNf2kyZ3RrMaPoCa
99Z+WW1x/dcd+6HmvbPvf7hx/tGgQ9Dw+WB/+IbThGahS/bfNEACH+ynsQrX
i5Retj/8FSTw0X7mx22XsjeftQepjun/ZH+LRWKa/f1d9mDtMZ/tY8zu65o+
n7sfAAxK13g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9lSubtu7j4D6wQ671deCOdfb8ro12
E9P5D2jG9B/6qrHHvqzz1drGXoEDEPVH7Mu92F//j+E98LAKJHDKvubThoDs
KO4DSwpsua4vvmA/jWXFytTXrAeuLwYJXLbP9riT/LKZ8wAXRMB+XcpxN4U4
lgO2YIFb9mc0pkVH9f7bXwgWuGtfMkNf/4Dd1/1BYAc9sP/qfST6efzL/W8C
QQIP7Tn/bZ8kK31lP8i1cq2P7ZULX8U1rdtkLw8WeGr/InvaabfnV+0h/nlm
//qvm3Xej3v2EPNe2HP+LhMS/HffHmLeS3u+b2ptT1Ju2UPMe23/oE1ifWXo
Rah5b+3/SN5bc/D3Pqh57+zj9gVIGyyevB8SPh/sN82Lqi0NPbT/mwZI4IP9
3XP7PinYXth/+CtI4KP94c9BGw3XX9sPUh3T/8l+f4J5TvSUO/vB2mM+28fN
+ZHl/vHBfgBI4tYW
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9BteXTpuTX+13yLW+Dtyxzn57Uv1N
259f7DVj+g991dhjn7rUU/NF2Sd7iPoj9pNeWe/XcHxn/7AKJHDK3pTLM+1r
33P7JQW2XNcXX7A/+m9T9acND+2vLwYJXLYvOb/L7XTjTXsuiID9ndn3DS4q
XLS3BQvcstfv7jx7fOth+0KwwF37hhM5t64lrLYPAjvogf3vgM2Bz2cv2v8m
ECTw0P743p+8wrz79oNcK9f62L5BY4Yha/aJ/fJggaf2/OoGc6/lXtgP8c8z
+2+b3m4xVbqyH2LeC3sGxuyr6zivQ817ab/CsnIi54/rUPNe25cdUZT2EL8C
Ne+tPQ9rDrvyt8NQ897Zsz//wbsjeDo0fD7YH3Z99/JV30H7bxoggQ/2yxJ/
dMwQOmp/+CtI4KP9PbvVZ6Zc228PUh3T/8n+xWZfa7fDq+3B2mM+2zOs2lHY
/bNxPwCIztWR
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYv9/MKHDh7TvtrvkGt9Hbhjnf3349VX
T7V8sdeM6T/0VWOP/atNM27U3PloD1F/xD5R3JW/hueV/cMqkMAp++MLhJ3Y
Y+/aLymw5bq++II9t9aquqWf99pfXwwSuGyvsf1t9ZX44/u5IAL2Lr/evj5g
eWe/LVjglr3Nt80RXSlP9xeCBe7aCxlNSJ/+/vX+ILCDHtifZFIreP3uw/43
gSCBh/ZH4iebvlr4eT/ItXKtj+3nOTr/ZxH/tl8eLPDUPqzp6MMz+j/2Q/zz
zD67acVvhiU/oea9sGc+v7fdm+8X1LyX9jYirL9c5H5CzXttbzn90apN+TDz
3tqrH2pbHn7qI9S8d/YT/GJ/6vg/3w8Jnw/2N88naU5af2X/Nw2QwAd7vRnr
xPquTbc//BUk8NGeRb5ZdHnURXuQ6pj+T/a5sjJvfHlu2YO1x3y2b63sN/a9
cdseAMwC10g=
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYt9+KZkZYH1n/fvkGt9Hbhjnb2r0N6e
pJ3f9mvG9B/6qrHHXmLqFc4Mpb/7IeqP2AsytgcsTfu6/2EVSOCUfd2xVmZF
SbYDSwpsua4vvmA/54jChqIX3/dfXwwSuGyf+/z3yo+XPuznggjYr73DfYbr
6LP9tmCBW/YGXzouFnPf2F8IFrhrf5+VoVZQedP+ILCDHtjrJN1I9Pl12P5N
IEjgob1rSsRR6ZmX7EGulWt9bM/tumt+8ISr9vJggaf2njqa5fMfX7KH+OeZ
/eZzP/btCDluDzHvhX3yybSIa+4Loea9tNc+vEPaJXvnfoh5r+2DJ5Va7PI6
vB9i3lt71uw5vu4Mm6Hh887+vEutedPPNfaQ8Plgf65bOP6txiH7bxoggQ/2
m1UcfHWjD9of/goS+Gi/ZEp2quzL1fYg1TH9n+xDftxgem64cT9Ye8xn++vC
seJ1BSf2AwCD987+
          "]]}}}, {}, {}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQXS2yzv1hVYu9wW51fu6tX+13yLW+Dtyxzl7veVBM
6Lcv9pox/Ye+auyx/7XDLKTn8yd7iPoj9mLtxvtnMX+wf1gFEjhlP3nN4Yuh
u17aLymw5bq++IL9yt8MS8w+Pra/vhgkcNnevKfpwce3d+25IAL22ZdyO2MK
rtrbggVu2bvV/RWQ1jljXwgWuGv/pdPGc1faPvsgsIMe2NtZuDQ+vj7H/k0g
SOChvX5s+crjOav3g1wr1/rY/loPT5F44oH98mCBp/ab324xVZI4uR/in2f2
NuncHGvbL+yHmPfC3vuFXudmpSv7Iea9tL+i9cvZ2P861LzX9jJvdzwsv3wT
at5b+7WLV3EuencLat47+/XnDBWq997YDwmfD/YL8hYcsP55Yf83DZDAB3u+
pYF3fB5s3n/4K0jgo71uTFii8YGd9iDVMf2f7A2nh+SaHzxtD9Ye89n+w59F
LH9bL9gDAMGK1Hc=
          "]]}}}, {}, {}, {{}, {}}}}, {PlotLabel -> FormBox[
       StyleBox[
       "\"Collective linewidths for 30-atom grids\"", FontSize -> 14, 
        StripOnInput -> False], TraditionalForm], ImageSize -> Medium, 
     Frame -> {True, True, False, False}, FrameLabel -> {
       FormBox["\"Lattice period d [\[Lambda]]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(n\\)]\\)/\[Gamma])\"", 
        TraditionalForm]}, Axes -> False, LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.21}, {-5, 3}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.21}, {-5, 3}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Sq. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. A.F.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Sq. In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. Ferro.\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Hex. A.F. rows\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"In-plane\""}, "PointLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1155], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.80903290188512*^9, 3.8090329239521236`*^9}, 
   3.8090904209128623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<linewidth_v_period_exactly30atoms_sq_hex.png\>\"", ",", "plt"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.809029852486635*^9, 3.8090298783693295`*^9}, {
  3.8090327726437063`*^9, 3.8090327842656107`*^9}, {3.8090329307718973`*^9, 
  3.8090329339145007`*^9}, {3.8090904638911943`*^9, 3.8090904669679937`*^9}}],

Cell[BoxData["\<\"linewidth_v_period_exactly30atoms_sq_hex.png\"\>"], "Output",
 CellChangeTimes->{3.80902988513923*^9, 3.8090327790156612`*^9, 
  3.8090329347761917`*^9, 3.809090474114911*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afrowsmode", ",", "\"\<A.F. rows\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ymodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
      "}"}]}], "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"polarizationmodes", "=", " ", 
   RowBox[{"{", 
    RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8090277860448437`*^9, 3.809027788215191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"evecs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "25"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "evecs", "]"}], "]"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, Typeset`size$$ = {
    414., {118., 124.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$13122$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$13122$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Re[
         Part[$CellContext`evecs, $CellContext`i$$]], 
        PlotStyle -> {{0, 25}, {-0.5, 0.5}}], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{471., {174., 181.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.809032890399807*^9}],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,123,19,30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.80946966129014*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,20,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696614386873`*^9}],

Cell[BoxData[
 TemplateBox[{
  "ListPlot","lpn",
   "\"\\!\\(\\*RowBox[{\\\"Re\\\", \\\"[\\\", RowBox[{\\\"evecs\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \\\"]\\\
\"}]\\) is not a list of numbers or pairs of numbers.\"",2,123,21,
   30699518468381943577,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8094696615473967`*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["time evolution", "Section",
 CellChangeTimes->{{3.8094676677317724`*^9, 3.8094676720642166`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", 
   SuperscriptBox["11", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]", "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "easier", " ", "to", " ", "solve", " ", "system", " ", "if", " ", 
    "everything", " ", "is", " ", "a", " ", "few", " ", "orders", " ", "of", 
    " ", "magnitude", " ", "from", " ", "1"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809468691632693*^9, 3.8094686964952307`*^9}, 
   3.809471193092425*^9, {3.8095346504945126`*^9, 3.8095346505533533`*^9}, {
   3.809535226269971*^9, 3.8095352433869815`*^9}, 3.809535319848155*^9, 
   3.8095399729422846`*^9, {3.8095452597710123`*^9, 3.809545262825846*^9}, {
   3.809559875541829*^9, 3.809559918667977*^9}, {3.8095990098106685`*^9, 
   3.809599010592574*^9}, {3.8096052143423004`*^9, 3.8096052144869137`*^9}, {
   3.8096056859687347`*^9, 3.8096056860634813`*^9}, {3.8096409192750893`*^9, 
   3.809640919753411*^9}, {3.809684767494185*^9, 3.8096847675969095`*^9}, {
   3.8096857967111936`*^9, 3.8096857973983636`*^9}}],

Cell[CellGroupData[{

Cell["square lattice setup", "Subsubsection",
 CellChangeTimes->{{3.8090167692966056`*^9, 3.8090167910903134`*^9}, {
  3.809016870300989*^9, 3.809016891726209*^9}, {3.809023198381733*^9, 
  3.809023200615773*^9}, {3.809468314558218*^9, 3.8094683163169413`*^9}, {
  3.809728415834035*^9, 3.8097284219337177`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gridname", "=", " ", "\"\<square\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ferromagnetic", " ", 
     RowBox[{"state", ":", " ", 
      RowBox[{
      "all", " ", "atoms", " ", "with", " ", "same", " ", 
       "polarization"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", 
      RowBox[{"phase", ".", " ", "can"}], " ", "be", " ", "used", " ", "for", 
      " ", "either", " ", "in"}], "-", 
     RowBox[{"plane", " ", "or", " ", "out"}], "-", "of", "-", 
     RowBox[{"plane", " ", "basis"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"afmode", " ", "=", 
    RowBox[{"unit", "[", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmodes", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["e", "1"], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<Ferromagnetic\>\"", ",", "Blue"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"afmode", ",", "\"\<Antiferromagnetic\>\"", ",", "Purple"}], 
        "}"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ymodes", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["e", "2"], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"fmode", ",", "\"\<In-plane\>\"", ",", "Orange"}], "}"}], 
       "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{"mode", ",", " ", "name", ",", " ", 
     RowBox[{
     "polarization", " ", "of", " ", "kth", " ", "atom", " ", "in", " ", 
      "cartesian", " ", "basis"}]}], "}"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"polarizationmodes", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xmodes", ",", " ", "ymodes"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idx", "[", 
     RowBox[{"i_", ",", "j_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "n"}], "+", "j"}], "//", 
     "Simplify"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "get", " ", "1", "D", " ", "atom", " ", "idx", " ", "from", " ", "2", "D", 
    " ", "coordinate", " ", "indices"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["r", 
     RowBox[{"i_", ",", "j_"}]], ":=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
     RowBox[{"n", "\[Rule]", 
      SqrtBox["atomnum"]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"centerIdx", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Floor", "[", 
       RowBox[{
        SqrtBox["atomnum"], "/", "2"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        SqrtBox["atomnum"], "+", "1"}], ")"}]}], "+", "1"}]}], " ", ";"}], 
  " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"idx", " ", "of", " ", "the", " ", "central", " ", "atom"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perimeterIdcs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", 
       SqrtBox["atomnum"]}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{
       RowBox[{"atomnum", "-", 
        SqrtBox["atomnum"], "+", "1"}], ",", "atomnum"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"n", " ", 
         SqrtBox["atomnum"]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox["atomnum"], "-", "1"}]}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "n"}], ")"}], " ", 
        SqrtBox["atomnum"]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            SqrtBox["atomnum"], "-", "1"}]}], "]"}]}], "}"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"centerRowIdcs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"centerIdx", "+", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            SqrtBox["atomnum"]}], "+", "1"}], "2"], ",", 
         FractionBox[
          RowBox[{
           SqrtBox["atomnum"], "-", "1"}], "2"]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8090171183870115`*^9, 3.809017118509525*^9}, {
  3.809018668352194*^9, 3.8090187435481806`*^9}, {3.809019108668911*^9, 
  3.8090191237504044`*^9}, {3.8090194326770754`*^9, 3.8090194334092865`*^9}, {
  3.8094677627939987`*^9, 3.809467768263092*^9}, {3.8094683836403894`*^9, 
  3.809468384246768*^9}, {3.8094686733752575`*^9, 3.8094686739143047`*^9}, {
  3.8096440700083637`*^9, 3.8096440713278327`*^9}, {3.809644560302745*^9, 
  3.8096446249268913`*^9}, {3.8096446970449677`*^9, 3.809644704890011*^9}, {
  3.809644734985485*^9, 3.8096447447966223`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["fmode", "Subsubsection",
 CellChangeTimes->{{3.8097284733860984`*^9, 3.809728477211938*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"modename", " ", "=", "  ", 
  "\"\<ferromagnetic\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{"1", "&"}], ",", "atomnum"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", " ", "=", " ", "fmode"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initExcitation", "[", "numExcited_", "]"}], " ", ":=", " ", 
   RowBox[{"1", "/", 
    SqrtBox["numExcited"]}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"excitation", " ", "per", " ", "atom"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8097285078150425`*^9, 3.809728511867614*^9}, {
  3.8097285575783463`*^9, 3.8097286664144945`*^9}, {3.8097288518546934`*^9, 
  3.809728916251459*^9}}],

Cell[BoxData["\<\"ferromagnetic\"\>"], "Output",
 CellChangeTimes->{3.809731004191583*^9, 3.8097738832773547`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["afmode", "Subsubsection",
 CellChangeTimes->{{3.8097284559746675`*^9, 3.809728472123473*^9}, 
   3.809728924490383*^9, 3.8097289584564543`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"modename", "=", "\"\<antiferromagnetic\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"afmode", " ", "=", 
   RowBox[{"unit", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "#"], "&"}], ",", "atomnum"}], "]"}]}], 
    "]"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"antiferromagnetic", " ", 
      RowBox[{"state", ":", " ", 
       RowBox[{"every", " ", "atom", " ", "has", " ", "P"}]}]}], "=", "x"}], 
    ",", " ", 
    RowBox[{
    "but", " ", "alternating", " ", "phases", " ", "by", " ", "\[Pi]"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"mode", " ", "=", " ", "afmode"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initExcitation", "[", "numExcited_", "]"}], ":=", 
  RowBox[{"Array", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        SqrtBox["numExcited"]}], ")"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"#", "+", "1"}]]}], "&"}], ",", "numExcited"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8097284896227016`*^9, 3.8097284925249767`*^9}, {
  3.8097285554021664`*^9, 3.8097285899535537`*^9}, {3.809728643937166*^9, 
  3.8097286950768185`*^9}, {3.8097287355025253`*^9, 3.8097287376607127`*^9}, {
  3.8097288674928355`*^9, 3.8097288936059933`*^9}, {3.8097706615409517`*^9, 
  3.8097706624433947`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["run", "Subsubsection",
 CellChangeTimes->{{3.809467855845191*^9, 3.809467856083066*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tmax", "=", 
    FractionBox["800", "\[Gamma]"]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Build", " ", "the", " ", "Hamiltonian"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", " ", "=", "0.75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e", "[", "i_", "]"}], ":=", 
   SubscriptBox["e", "1"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hfull", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["H", "##"], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<", 
      RowBox[{"atomnum", "+", "1"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{"atomnum", "+", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "=", 
          RowBox[{"d", " ", "\[Lambda]", " ", 
           SubscriptBox["r", 
            RowBox[{"j", ",", "i"}]]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[CapitalOmega]ij", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
             RowBox[{"Re", "[", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], ".", 
               RowBox[{"GdotP", "[", 
                RowBox[{"u", ",", 
                 RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], " ", 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"\[Gamma]ij", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
             RowBox[{"Im", "[", 
              RowBox[{
               RowBox[{"e", "[", "i", "]"}], ".", 
               RowBox[{"GdotP", "[", 
                RowBox[{"u", ",", 
                 RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Hfull", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "  ", 
          RowBox[{"\[CapitalOmega]ij", "+", 
           RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Build", " ", "the", " ", "initial", " ", "array", " ", "state", " ", 
    "and", " ", "eqs", " ", "to", " ", "solve"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["P", "#"], "[", "t", "]"}], "&"}], ",", "atomnum"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]0", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "atomnum"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"excitedIdcs", " ", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"centerIdx", "+", "i", "+", "j"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["atomnum"]}], ",", "0", ",", 
          SqrtBox["atomnum"]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]0", "[", 
    RowBox[{"[", "excitedIdcs", "]"}], "]"}], "=", 
   RowBox[{"initExcitation", "[", 
    RowBox[{"Length", "[", "excitedIdcs", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqs", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"system", " ", "to", " ", "solve"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ics", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";", 
  RowBox[{"(*", 
   RowBox[{"initial", " ", "conditions"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"atomnum", "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"eqs", ",", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Hfull", ".", "\[Psi]"}], ")"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"ics", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/.", 
          RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "\[Equal]", 
        RowBox[{"\[Psi]0", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqSys", " ", "=", " ", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"eqs", ",", "ics"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8094684708348923`*^9, 3.809468482996542*^9}, {
   3.8094685547854023`*^9, 3.809468567211235*^9}, {3.809468611041896*^9, 
   3.8094686423715134`*^9}, {3.80946873561755*^9, 3.8094687637140055`*^9}, 
   3.809469288495412*^9, {3.8094693543126073`*^9, 3.8094693547495594`*^9}, {
   3.8094710366744146`*^9, 3.8094710527571635`*^9}, {3.809471101897688*^9, 
   3.809471102626219*^9}, {3.809471348031168*^9, 3.809471349794034*^9}, {
   3.809471909554092*^9, 3.8094720214892673`*^9}, {3.809472098848244*^9, 
   3.809472101474615*^9}, {3.8094721687655363`*^9, 3.8094722035766816`*^9}, {
   3.8094724104114714`*^9, 3.809472455021535*^9}, {3.8094729250397015`*^9, 
   3.809472945780697*^9}, {3.8095299900209365`*^9, 3.8095299917707295`*^9}, {
   3.8095302986149917`*^9, 3.809530315896492*^9}, {3.8095329511933146`*^9, 
   3.8095329542995653`*^9}, {3.809534663256405*^9, 3.809534706991399*^9}, {
   3.80953478345522*^9, 3.8095348145540705`*^9}, 3.8095352489630218`*^9, {
   3.8095371078228397`*^9, 3.809537115681732*^9}, {3.8095373906493454`*^9, 
   3.8095373933390503`*^9}, 3.809538423601192*^9, {3.8095406174266243`*^9, 
   3.8095406277060966`*^9}, 3.809541287294038*^9, {3.809542298257657*^9, 
   3.8095422987683363`*^9}, {3.8095446029345074`*^9, 3.809544604602*^9}, 
   3.809544946420149*^9, {3.8095452709261785`*^9, 3.8095452732838745`*^9}, {
   3.8095596789327555`*^9, 3.809559685425457*^9}, {3.8096052448178453`*^9, 
   3.809605256107673*^9}, {3.8096057520241814`*^9, 3.8096057637997084`*^9}, {
   3.8096409817109747`*^9, 3.8096409865537214`*^9}, {3.8096411549346576`*^9, 
   3.809641169700226*^9}, {3.809648370324535*^9, 3.809648398360179*^9}, {
   3.8096848007489824`*^9, 3.80968480142877*^9}, {3.8096850657415743`*^9, 
   3.809685134886038*^9}, {3.809685422012596*^9, 3.8096854270513897`*^9}, {
   3.809685507414732*^9, 3.809685510966921*^9}, {3.809685771394848*^9, 
   3.809685792596719*^9}, {3.8097289354810224`*^9, 3.8097289460426817`*^9}, {
   3.8097291979113007`*^9, 3.809729201084811*^9}, {3.8097295257535086`*^9, 
   3.809729527086974*^9}, {3.8097310076433587`*^9, 3.809731038857202*^9}, {
   3.809770610955254*^9, 3.809770618121476*^9}, 3.8097738874526615`*^9, {
   3.809774089933311*^9, 3.8097740931161323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"solve", " ", "the", " ", "system"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "soln"}], "}"}], "=", " ", 
     RowBox[{"Timing", "[", 
      RowBox[{"First", "@", 
       RowBox[{"NDSolve", "[", 
        RowBox[{"eqSys", ",", " ", "\[Psi]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "15"}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
         RowBox[{"Method", "\[Rule]", " ", "\"\<ExplicitRungeKutta\>\""}]}], 
        "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Time to run sim: `` mins\>\"", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"time", "/", "60"}], "//", "N"}], "]"}]}], "]"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8094684708348923`*^9, 3.809468482996542*^9}, {
   3.8094685547854023`*^9, 3.809468567211235*^9}, {3.809468611041896*^9, 
   3.8094686423715134`*^9}, {3.80946873561755*^9, 3.8094687637140055`*^9}, 
   3.809469288495412*^9, {3.8094693543126073`*^9, 3.8094693547495594`*^9}, {
   3.8094710366744146`*^9, 3.8094710527571635`*^9}, {3.809471101897688*^9, 
   3.809471102626219*^9}, {3.809471348031168*^9, 3.809471349794034*^9}, {
   3.809471909554092*^9, 3.8094720214892673`*^9}, {3.809472098848244*^9, 
   3.809472101474615*^9}, {3.8094721687655363`*^9, 3.8094722035766816`*^9}, {
   3.8094724104114714`*^9, 3.809472455021535*^9}, {3.8094729250397015`*^9, 
   3.809472945780697*^9}, {3.8095299900209365`*^9, 3.8095299917707295`*^9}, {
   3.8095302986149917`*^9, 3.809530315896492*^9}, {3.8095329511933146`*^9, 
   3.8095329542995653`*^9}, {3.809534663256405*^9, 3.809534706991399*^9}, {
   3.80953478345522*^9, 3.8095348145540705`*^9}, 3.8095352489630218`*^9, {
   3.8095371078228397`*^9, 3.809537115681732*^9}, {3.8095373906493454`*^9, 
   3.8095373933390503`*^9}, 3.809538423601192*^9, {3.8095406174266243`*^9, 
   3.8095406277060966`*^9}, 3.809541287294038*^9, {3.809542298257657*^9, 
   3.8095422987683363`*^9}, {3.8095446029345074`*^9, 3.809544604602*^9}, 
   3.809544946420149*^9, {3.8095452709261785`*^9, 3.8095452732838745`*^9}, {
   3.8095596789327555`*^9, 3.809559685425457*^9}, {3.8096052448178453`*^9, 
   3.809605256107673*^9}, {3.8096057520241814`*^9, 3.8096057637997084`*^9}, {
   3.8096409817109747`*^9, 3.8096409865537214`*^9}, {3.8096411549346576`*^9, 
   3.809641169700226*^9}, {3.809648370324535*^9, 3.809648398360179*^9}, {
   3.8096848007489824`*^9, 3.80968480142877*^9}, {3.8096850657415743`*^9, 
   3.809685134886038*^9}, {3.809685422012596*^9, 3.809685438629361*^9}, {
   3.809685469226745*^9, 3.809685479069775*^9}, {3.8096858186530886`*^9, 
   3.8096858270851116`*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"Time to run sim: \\!\\(\\*RowBox[{\\\"0\\\"}]\\) mins\
\"\>",
  StringForm["Time to run sim: `` mins", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.809686026556696*^9, 3.809722986099189*^9, 
  3.8097290258952646`*^9, 3.809729214470006*^9, 3.809729809672757*^9, 
  3.8097310205573196`*^9, 3.8097707900546865`*^9, 3.8097739093033295`*^9, 
  3.809774103574546*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ArrayReshape", "[", " ", 
    RowBox[{"\[Psi]0", ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"]}], "}"}]}], "]"}], "//", "MatrixForm"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809534819918322*^9, 3.8095348218450623`*^9}, {
  3.80953536074685*^9, 3.8095353920123634`*^9}, {3.809541406021474*^9, 
  3.809541432147591*^9}, {3.809605724459856*^9, 3.8096057281699376`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ArrayReshape", "[", " ", 
    RowBox[{"ics", ",", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox["atomnum"], ",", 
       SqrtBox["atomnum"]}], "}"}]}], "]"}], "//", "MatrixForm"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809534896378516*^9, 3.809534896546095*^9}, {
   3.8095356284171934`*^9, 3.8095356325325375`*^9}, 3.809541444155511*^9, {
   3.809559646638919*^9, 3.8095596520806475`*^9}, 3.8096057222477684`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["soln analysis", "Subsubsection",
 CellChangeTimes->{{3.809559863627812*^9, 3.809559866184225*^9}}],

Cell["\<\
Plot the excitation in t\[LineSeparator]he x polarization state for the \
initially excited atoms\
\>", "Text",
 CellChangeTimes->{{3.80964157433803*^9, 3.8096416122752094`*^9}, 
   3.809774105823183*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "excitedIdcs"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "800"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", " ", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Decay of localized excitation, ``x`` ``, d=``\[Lambda]\>\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8095401462024803`*^9, 3.80954020351366*^9}, {
  3.8095415236013713`*^9, 3.8095415299533806`*^9}, {3.8095451517330256`*^9, 
  3.809545185116693*^9}, {3.8095453811296387`*^9, 3.809545398520114*^9}, {
  3.8095454586393156`*^9, 3.809545659971798*^9}, {3.809559699479993*^9, 
  3.809559710631551*^9}, {3.809599030044757*^9, 3.809599081442619*^9}, {
  3.8095991126624804`*^9, 3.8095991135519257`*^9}, {3.8096052835702677`*^9, 
  3.80960528398516*^9}, {3.8096415548512354`*^9, 3.8096415687667065`*^9}, {
  3.8097292692983923`*^9, 3.809729285191844*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
9FBhUeDU/DyB9y87fgyWbkX/AUWGGU8=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
uDvXFablDds8CkHMecnYd4NezlfXG35ZOnymYkrBTlcvdToZekP/tA/saqfg
H/xsjxtNvSHo9QvegqQUTKDdeLlhuZefYqXX53pS8Nri+Ki8nTdkOvxmKF5I
wUGDrZOxTt7Q8D2D5hNtKt5Xnz332s0bpK4Z/vrKmYqjUvy+sxG84dPFX9X1
IqmYjmD418p3z15A/8hF8VScoiO1XR3gDdR97g5he3JmCVby5Vve0EtCfdl7
+rks63TS4d5w5F+if8Keffb1McawaG8IZOfz9djzf+f9wxPP4/fqc/ysuf4e
P/5HWdwMKd6w4H9u2TI5Bdfm3zxrTNrj+4nwpFE3BYvdMrhQmr1XjwaGdpej
KbjF4qLMQr43PPhwZc0rPhnLyB+7cr7EG6aSKVszPyXhbq411YByb5ijmaKv
OZuEFcnHtHur9+zFrdUx2SbiZ59bjGnrvGGEt41POzEBaz7NtNZu2rsP5QEn
PlXG45EqX+fcFm8Y7ebNVLkfhyddJAMEsTeYWu5fGyqLwVYaLGGEPm+IK3L/
whkXjeeFV2Pbn3qDemA9d5lNFP75+0GO6itvSLlf4DW71z/2+0m0Oc94wx1d
xg03vWAcbcTc0/TZG9zfN/96FxuAD8qsDGx+84ZjCRJRLE03MfPO/fG45T17
3fO7pnNemD9CfL3mABFYz9v/OLtsgO/ZMZH9oSLC/WWJy+HTV/H5q3+pZA4S
gSxzrf6F45CcLO39Yy+YiGCoZMNNt2SArqdcuLh4Zk9/RdPvR74XGvViRBcE
ifAMfi0ruhKRoc4f5UBhIihvn2bOEL6JrFma9ekuEmF1NqXZNioIfVlLM9eR
IYJz0I4yD1sIcn1PsM9DRDg+vBFV8TIU+eaf9z2rQoT9uxz5TsLhaCuY4Za3
OhGkS619pjUjUKjFcuQjLSLw/SoOz7eJRLFcTRlqRkT4fLjr/EuHaERPnlaQ
bkaEaJl2fin9GJT22at8wooI5EdPffkiGYvyq8QeuDjvnZ9onvr/+zTw3mag
yJ0IqhU6m8oh8egvbebEGwIRCijk5Dy5EtBp2YEfVDf38vOKPje/JQGpuW3u
kw3ciy9BWCxCJhH5Fgoxe4YQ4ZwEq/TPhkRUOmzOXxZOBLEhFftGliQ0RJYq
Mx5NhCL9gYpC1yS0KdaneTCBCFc/bz1IaUpCvDYrVpBChElbq1M+X5OQNonP
h0giQil/dull+mR067FRTFU2EUirmhmT3MmoZjU+bzKfCPayJ/m0BZLRO76u
uiMlRNg4pqJ2jz0Z7Tf61aNYToRTBzfu/juQjITjuN76VROBSaooTP99EjJ6
pPu19h4RcmobL34sTEIR36O2phuJcME2uaRHNwk1nGqjZ24hwsX/5HrObSWi
Sc1FzmvtRJiyIPUZpSUi6tBTEsFdRPCuFhlNOJ6IxBuvqzT2EuGJpUjkYVIC
spy9bfL5CRHoxjOlhXbjUQLjfXe2F0Qwe7d56LJpPGpVnL+tMUyErY2042V3
49CcD2vG7Td79p2LUvqWYtGRStWqB2NEmL6m0n+AOxY50NQPnZomQphMOEW/
YzRKk56ZuTFHhPR3x7BkQBTqcmFcifxKhOY1VvrW0EjEMnTzxI9fROg6L5Vz
zCMcKexWC3OtEEHicFTxUcMw5C46Ka+/QYQGoZ7jplK30ZM0cOza5wOJOmzz
5b3ByMeA5kESgw94mHWeODTojUanczVFxH0gKFTJNjFUApMxDFrZSPlAb9dx
y9LN61joyi4xS9YHxsVjPOPjjHF4uU3erqIPJLVcHOipd8DnnYW+Duv5wPN3
XiTBcR9snme+dcDYB6iuK5W0SPvhuJcp9FLmPuDSqfRnJykAzwqviBfb+4BI
Ukm2FHUITv3Tedvzpg90GRu+8U8Ox+4jKVamgT6gbPCu/6JTBFZvtJFXCfGB
9tOtvRcuRWKBFElO8XAfMDc0EDy+G4kpPWj2nY72gWXHG55Z7VF4TmNymi7e
B5xzpHeNXKJxj1B991qSD4h++9dx8mgMDlrQDR3O3MOMcjMl0rHY6Bmf5aNc
H7ihF+f/pTMWS1ZtospCHxBi/RkoLxGHmaIHOdJLffbmVWn/iOI4/NuuePdW
hQ/8ZX9LFbkbh4cUvf9zrvGBGQbzklPa8biWWxnr1/nAixNMCZLZ8Th2P1uR
QpMPzIUEUbW/jsf2M4u3hFt8YF3nY2DaTjxW7O4yP97uAxPzzB1N7AmYsyhV
jrLLBzQYr9McP5+Ad4Jt2Zd7fCBHZKpsQCoBT5pe3Jl67AMVd5h18Z68TYb2
47NnPhBaPpZFczoBZx6f6nww6AM4oYGpc6+/EjfqC0pe+0D05LPRn6Px+MZ4
WHDiWx8YEWaiasuPx8IP9cz83/vAjmQdr6xhPD6YyX/ZbsoHaDPX+cuo4vE3
4tbJGzM+cDpSnv3k3Tj8RGdoW/azD+SHU3O8VojDZedLJvm/+YC7ZPiBf0Ox
+PZRYgfTkg9YhS8nfbwei2WH2YK+//WBy2nk77pFYzBb3XeT8XUf+PN6VftG
ajReTcAy/dt78d8cu9PyJQo3qtpt5ZH7QtC+b63KNyNxkoDURDS1Lyw0fTI6
0xiBXanpHnkf9IWoQ7JZl2fDMe+ThgA1Jl9Q8+Z1LTkbhsnLw40vsvqCTOOI
AFa8jWfC9aW5T/rCjHm6fIt+KM6X397Y5PYFhzR7ybHBIHy086p/zQVf8AgQ
OdURR8Q/8o4bZV70hfBrTyspbAn4ZcCSVJiML8jS/pm9JemJo6TS142u+II1
o9/2SoYD3m7+eJNGxxeet09nlHor4/kaH19Hgi/Mu7UIXuhwQ/qndj5W+frC
2nfWG6K8XuhxctTVbwG+gN2qbWNsvFEZMYvVOdwX8qY4frq23URMXzhu10T7
wsh76qW+YX8UblT1bSHeF9hzOP5+exeIrOXa2l1IvpAUsK1e1hyCRhrkuWuz
fUHFP16qpC8UyXM/j/+e7/v/faJj/s5tdJp6wtSt3BfelE+Y8SmHo5QAm8f3
qn3hmofymiZVBNr9vnjuxz1fqLa5rK7TGYE+vt7ecW/xhfrhWuE8yiikqRjp
UN/uC9O3WIiyOVGos+XQq59dvnDFVqU/jCMaCQlkSon27dVL4VyMSE40ys9j
L/F8uleP6Aw3SsoYdJC+kqbxhS+EtR0f/mAXgwJDRQi/h30hhiewLKo1Bi0s
P/wgNuoLJltp5HP/YpCxHVwhjPtCXOlI9luJWPR8bOBu06QvDCmZ8mhYxqJL
qjeY/kz7wsH9tX8uB8eiqo73QRc++0JAkcCpgoRYxPo/Cq47Lufvi6eiUtJQ
SBKSUigqId3Tnlrae++9nr1HJApZ0SAURUlC33ITKiEpUhFSKk0jSZLf8/vz
vj73Ofe8xzn33H+e7cGfU74I+DF+BwlHD6GMC6P7qycE+uuH/2lgH0Iz8ik1
09/SwTajTLQw6hAK5/9R0Z9JhzA7cF1rdgi9nuVkpM2lw4/Ue6EByw8h8xip
r7cXBPlKBlVmtgnm+b5czxlhAlxIvjH+mHkQbXRa+8BAjAA9wcuZFuqC+7jx
siZBkgDn//7nZYkzkLD+tuN3lhMgKyUpa7F9BkoqqZn7JU+AmRWLsh8/46OP
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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
wuLA8bk5Av0v26f6S7eh/wCHEhpT
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c81t8XV9lKZUWDjKwkCsnoHkJlZe+993g8ZJa9t8feeyQZJYRL2mVU
ChlfZEUaykz8/P56Xu/Xufd9znm/P88993JauWvZ7icjI3tDTUb2/1+upH+l
Bey/rkR0jWXo6H5Ej6gFOFwd+tGCzNVfneODqNu3rozf4T/Ueki+rufQIEqT
mDE5lDiPqORVU0qYP6DnIp72lA4/0DdSfaQezXsUyLzbslv0G1Gk9bbOrQyg
jFTFK9sJ64jw5Apps74fvYx/f33Vfhe9DLsQ9u3mG/Qz/OC8b80+GOYTWvkj
/AoF9dwXWC86AIVhyqlOp16gDFir+51ABSxZz88OivSgV1Jhrd/sD8P7+6bM
nP4t6K4M423x+0egnfVsSq3+Q/Rr1KaQWHMUMvgk+79qNaLbx6mnV4oYQfit
xiGZc9UoM1Pd/kfCMXj9V5FWzzoYTUgURQvHsELRMbHXJRXGmOfTr2rXcDao
P/xVW300EtczpX9b8j8BDqETxmx8Bfh1yqjngj0HGLzsmr95uh5HZ2W8ShM9
DWu+rmbqTI1YyAEZXbx/Grz4R7zIfjXh/ksLi++FOKHsmpNC0YOHmECVEkCo
4QTzAVG3ANNHmHno8kEGfi54ry7zceNrC26pmM5rKOcCUQnluDqDNmzsE3dO
k5sbJKhcPEyqHuMdRbHOn0XcILDQvEE23I6LmcfVk9l54GIfe9qHuQ6sMBvx
3/k8HuA8dlhHZbATLzwQ9uhnOwNImkORpwjjuPAhMvfMPXxgMkLgTBcW1glO
oWfmhX6pGwuxjl34PbcAV10qL5xK9Jh3ye/C3r/fNaod4YPN/dNUAt1dmLXH
/+pyAh+kxZ5OPfuxCz9O5R6Mp+OH5Hm1np2RLmxm9dZGKIYfvu1qHJYe6ML7
LnivvqEUgLNC59WTW7pw2T72SOdwASjM4EctaV342rvnLHT7BeGf5L21QKsu
vFjkXllzRxBeiPxMq9urL9GDVVL5nyAoicXLqLVjLArdL7/6n4WFQ3EboWwY
Dx52MozZOAtBFJIqHTad2Pc/hkV+HyHgGFFse1zYgTtv29A5eJ4DX+V3R74v
PcaW6ofyqH6cg2hVJ0IE2WNMzt4sVOkiDDdZiNzFdG1YuYNKfc7+PIjwjbZU
07Vg0V2rVZaf5+HpZNi+c8vNOP60eR+3jAikzgkdqXz9EBOt2rx1nooAjUD/
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
8Nf/voXu0Ec3C3x/Tk0ReFkxix/TbYj+DyR/Sm4=
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
PPPOyAL9HxV2hic=
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
JEq0ORWdTka/TEOfnt/GhGbt0b7TP5NQPscupVCHCRVPB2KRbRJqX6J476ge
E64QXv9paIhHsdaiYYcNmLD2wICdBIpDYlnj4gcMmaAsYn4sriYGmS1vcKcZ
MaE16JBOFD0S1coFTERaMKEzKVpr8EIQKlIpUTTez4R81KpeZ7wdSWXptm71
YAJ4y0cldk+ZMH40pSp5MUE0q2HBXEcLB7V8bvvny4QTTqd3rrW2xKpxWqSm
UCakfaue4N/zwkdf1avdDGdC1cL35A+b/bAIcuwojWTCnsFzbw6zA/GgTPJm
XiwTJApvbZURCcWXbte+2pfKhJLma2vFpaOx/AZrlmE6E4YcJT62Z8TgzKxe
bU0CE96IN9CFXsTiKP95zjIKE66RWQYB/gm4p+Xw9j9UJqz/tXUzMycR2+go
vxmjM6GR+nCO5JWEt4iY7XjGZsKnG5fkf4Um44K4rncNXCb8dS6ye/EuGUt0
hx28zmfC8rU1x2lOKZiKZvSKDzCBQNbZ+PROCh4vz/yYm8WEowphu/PXpmI/
2bXZzGwm3ByfNq0R3JefUa7sSs5hQkt++8yy+6nY5PPegeA8gb450pWEpWn4
uuOzHNejTLBp+mb/ySINK90J2GOeL6ivcWHakJSGczd8/bzzBBNWsVlfoy+k
YaFDrCNqp5jAbLpaGNaShpOmZY1XFTBBf0n6vw0f0vBH/wsji88K9PLbVrNk
Mg27PNLPnylkwudDa/e8m07DTTqP0HAxE/xl/pPq/ZaGdxR4jb0+xwRLZaXG
ws9p+LzI6InWUiawJHpUdnekYbl4itndi0x4kPFG9O6NNMztlpy8XMaEgKuF
z7dmpeFpVHS64DITZmruLq32TsNhl7dbHroqOO+29VaIShp+JXv/K+UaE86X
WfX7vU/FVlTXs3GVTKhzzhe9fywV134e2Od/Q8DX2uHhO5CK1Z3SfzjcFPRH
kexA4ucUfPLOkmKTW0y4l+nsKcNOwWKqp2y33xbgSd39+ql8CiYe0pxRvsuE
y6eNRnpLk/HIdN056f8E+rpq/y1JMxl7B9g7LGpgQpvGlbS2siS8RzfxwqdG
Juj2UCoZyon4SoGQc1cTEwZfmq1q+RGP14ke/fOgmQkeGV9Onf8vDs9317he
bGXCVkv10HiNGNxAnROK6mCC6n5vy+jMMDxTOfSV3ckE2fhkP/pICNYZ6PxY
+JIJKZNV1t8gGF+wudrY1cOE3A+MD6K3fXGWvB8T9TPhbLgdZczMDjfbWCf5
DDBBDW6KJK2xwH+pekHpn5lQ3kI/Sn6xGycNSMLVLwK9eurtaE1fijyqGv7J
f2fCqBh9C7vTAeUNXJ7SnWaCkEKjNCHQFT2WP/HBfkYwn679LL302B0Z0RIw
e44J3OT0sb8pfiijyqeycJ4J8yZ7JFquB6LKAaviOwuC+WVUe2coNhip2ioz
JoVZ0NJolnkmPQz50SQSxRezoEm6V8v+Szg6XvUrQG0pC1qX2Ksfd45EYqs7
THwkWEDZ7fxc7Vc0MrOt35a+nAVzw1p+6vqxiEorV8pbwYLJZSfl1cPi0NQA
c+GhHAsuBeV69B1NQBqr4yc/rmJBaJDns0NHElGIrff7P6tZUOSRW3QEJaGz
NMt2eQUWRIh2vjp9LQl1V+ne01VkgX/Skk/XZZOR9OD66/ZKLHC4FW1xLiEZ
2axeVhSpwoIqsZf3Le4nI7btzGG2KgtWHN3ZQ1yWguppn2iFaiy482LHJWXb
FDRT1R5/R50FbzeOn1rHTEHbB+v8uzRYsFv+V4pnRQqKWl3mMLmFBSYv2lc+
ak9B522PGYtvZUH1tkOvAoZT0FsaY6vadhawA2YNV82koFU3YtcjXRZsus55
PD6XghwHPZf77GQBYnzaOf4zBR1YbfE3TZ8F/5yskYLgfJOtzkTuLhYk/rdu
F1fg/w9N8d2V3SyQkHDsMBXE17sh9uzhXhZcXp91PVaQX8LgdP1HYxYc+6pV
tc4uBZWv7q/4g1jwyDxkT4ZkCuq3fXZW3owFE9vKxC82JyMF+t1sXQsWMKqS
v7xITUb7b1yk2luxYK+m22IthWSUM3gkLtKaBaXCuSUjt5PQo9V0P7YtC0To
SlEWDkloD93D6I4jCy5ee38+ByegtBtm2l3OLOjYk3X7a108uj64TXHSlQXC
ZZudy8ri0Aa7pfMbPVkQ08tYnu4Zg/RemXcqeLPAuaCXFaQbjawCmeUyvgI8
NFXsbwpFoZjU3/v/BbCgcoNG8ytWOKo5M3atL4IFD9QkdwwrBSGr8eeBRzIE
+USnUVOcTZFXhqTBASILjGsKy3dQDFCMkI0kgyzIRyQge2uZGspd2XQnjs6C
yO+fbk10a+EeoxoZaz4LRk1VhQitjni05euwyQEBnz+/reHZueJ556339LME
etJ0iTqq4Y43hF+K2ZjDArH72Z8W7vngmMOnHiwcZwFJy41/vDAEU1e/Ov3z
JAtE2+ocvF+H4pxzMknjpwX40iwmXJeG45u3shT7ClkQfLN/9/i+SNyCHn3v
KBbwEZu+Os8zCvc8Fnn86BwLbDbuXsHwjcbz76jpty6yQHnfd8YJk1gsFXXX
rqKMBRv7pg9PKsbhDd9/bii9zILykhuBQpNxWI+6Y/b0VRa0PRL2I92Ix1ZL
EtvzrrHg/VXL8SWRCdgr7+qFzEoBvhYX8/ykErHg8UGm32BBCYRom5QlYuoF
NZf0myz4lfZn6901STh3W/DmuFsCvT4JnQz0SMLn7xT+DbnNgrC3V0Io2Um4
xqyvy/suC97kZnr8qUvCLU/lrzj/x4KPGuHOHf1JuMfDjbmvgQXUhB3yY0LJ
ePRjrocJZsFiI+s7ZmuS8d+Yp9r691mQsVLjy8vNyVj6p5iI9gNBvKjIiuLt
yViVYdmr+pAFW7ovlZ4TfOuJsyvXPhLk36K+tF/wv9Wxezzpx4J8iKoa0QJ/
Xuv/+C59woJDhcJJlouScWzZrh0LT1nQ7fCOzv6UhOm6aWI/21lg/oVgrF+f
hPP+q3o/1sGC2t114hk5gvosJ2o+dQrwCsmw8PcW1Pdc81DvSxa4nwb3xesF
/2+8f3GumwXXDwl9VhfgFUvwalzXy4I9+VSTLyKJ2OrJVJ/RG0H/FocaVjon
YFXlzJ/+7wT88t/N9h+Ox39TlKQZH1igYnBtxZxgf/S03NpS0s8CvoSoQvKb
WJybMBj46TMLDHK5HNrXaBzTRCGLjAj0XTC/eMdwFLaSlzuuNsoCx1fsi6kv
IvF8g2lbxCQL3o0XFa7khOOY5cV6YzMsKOMTFDzig7BVsIGT5G8WHIiQleds
CsAbbj2L3vpHoK+H/0l4hvjiHr/5osR/gnm7yfSU1B13bFnhLT69lA1GYqGK
3/6aYxW7le/n17DhD3p+eqO1HZovujq7fh0bKtTYB8h0Z/T6u5kcWs+Gs6Fb
IqUc3VBOQbI1awMbfHb9udLb4oWiJ8VCz29kg9lqs1jzeF9kYVZCe7CJDQfK
wr/riASgP1/aqxdvYYN0QqO+GjUYdRtHPFPXZoPr5FQQ5UoIqj7yd3jfNjZ4
rtfslWwPRVG7tddn7WDDzoS3nMLv4cji8INdV/XYsLqdZZ7zPQIp9/u4PjUQ
xI/a8vnY50jUfeBgptReNjyrWeCtLo1G1W9Vzm83ZsOwzfvF/8XFoMM6d+qd
ERvQy4LvDzbHoiiu0+tkUzb47at/86ErFln0DH07as4GiasPCA1JcUhZmy5Z
Y8mGJ+8IRKmFODTHWLX51T42PAprfnKSEo+6uypMZ2zYcOh6k5D6l3h0Y7OF
32p7NpTdE33Fs0pA2ZQ3GYaObLBMK1XIPZaAop6nHPF2ZgOx916RVkcCMt+4
rILsygbHCmqX1XwCUiKcazmznw0hZ3Bt++pENNdm2F/vwYaxvNzmZtVE9Eqp
4887L0E+KXspO9cnoqqUSPl/PmxQl/OiblqaiLJbFnRU/NlgGOO+t/JjAoLk
Id31gWzQqVsOq68noOl17TsUgtnwQMc/NC0+AZW33Nq5OpQNR+QGno8oJSC/
5EK9leFsSLSYXFbaFI+kFXn6MpFsSPNM/vnGKx41t8QZSEWzIatZuulpfxwi
Ju/fJRHLBsUtOvFV/nFoq6KRoVg8G2K+4/vPn8aiTy0bdy9OZINSSeF30vZY
dCJZYo9wsqDefr+9C7wYtNDSt3c+jQ3+4/evj68Q8JXcZPQ7gw0nPj4pW2sR
hSIUrxjPENlwvtp3y+n4SNSeTEJfqWxotlTfsPd8OGIrBsMEnQ2LxhX9LK6H
IYNH1qajTDZMRcl4hN4IRUWKa8wHuWz48CWusqsoGCU+qrXqyWZD/8AJTqmN
D5JeP+3QeFaAX4fcKbi3BzU/euPYUMSGt4eW3rtapoOIKQ+c6krYYL1PTMzE
VAF9fHTUpeYCG+oblydZKWrhGym67uUV/7e79oRzbXHE+rUeF6+zofWZ9RV7
Vyes0Crkeb6KDfel/4roL3XF7PUdXmdr2BB7jZAYc8EDu7Ym+OXVC/CqldrL
sQrES1I9/A/fY0M0sTKr80IQrltvEpDVKOBnUMV8UVEwVk1dHsRtFujTxSwg
Mz0Ud6//GcRqYQPTQyJa0i0MZ7W+Daa3sgEO5UsfVw/H39dXhBKfsqFaxSV8
3/UIfKn1WFh6OxvmTuzzbwmOxD6plPCUDkE9Imz2vHgUllIKjUjsZMOdNVNS
pZeicFOrbWTcS4G+k86cSdsVjTNSd0RFdwvwezR+xbA+Gm9RUoiO6GHDhqHa
Fw16Mfh966KY0D42SFlr3O4sicHHUr/EBL1lQ2OBmZaNUCxWsCInu71nwxsl
Gye2Syw+v0aCaPWRDSI0YenQE7F4y9gZ+u5Pgn5m8pU722NxdYM2T3uQDQbx
vmL/zcXiPXkNh5SH2PC1LIa/WiEO3w9xPCo7wgbd/0LGBrTjsLX+h1OLRwX9
F9Z9QnFnHO5YmlQ8O8YGi2/vLjQL7F59QpfGJtjwi+PgP742Dn+sOFLxfooN
jKLonIsC/1EM1Zsvvgn6dVGjkfDzWDzlcvNu8w82sItOzCqejMUZahaNt3+y
we0f58Q6t1i8MPOy5covNtAdJivVRGIx/3H4s8LfbNj27kloYFkMljo705X3
hw11hyTr5lEMPpGQ2cf5y4bNLqfyDZ5F4/Wma/oz/rHhZM1RtX1O0fiC3OXh
6EUcOKOjdTK6JQprD+2e9BPhwLrEhDMDO6JwzZ22aafFHKj7xNdbdDwSGx3y
/WO2lAOERH+K1EQEttOhiWlKcOAg27fHkBmOO4WlVigu58Dx8s9F4vVh2OdV
0aoVKzgQeETVbvNUKI4hN6r+lBXEI3/UbTMKwQeaRYzvK3Ag/pXtT29hfyx9
Mt+8RpEDynbpIn6LffHJ6E22ZUocmHS/11z11wtfktrneViVA8zmn6ckO/fj
h15Zyd5bOGC98kXEX2trLDwhfenbbg7cY2htrW0zQFn4XMXgXg58m6FPu59E
SObojpuvjTmQM1n8Z36zBVLZtb+xwZQD2/Zxbsj9Z48Q62TfQRsO2PRtv1h6
yAO1uGn0U+04kLSh2Ogb1Qs5qt8dTnTgwMrG4SfiIT4o4EnftLsLB9Ygsyfp
ogFoqDD2j7UbB3y5j0lGjYEoPml+kZE7B0JCRIi+tUGIukpphaq3AA9/xZ8H
bUPQsxviPsiXA9J/xTKSVociJcefF/z8OXDhLc/9QW8oShj9OEUK5IDOtvc6
mkfCEOY/3XMymAOkFdcqbYzDkfTGO7yaUA7kym4yaH8XjoJwaceLcA4M7F6i
lpASgW745q6biuSAfmD1seG5CCQ8S46QjOHA5z3Gt2YzIpFrfsQNzTgO3L//
tCNiKBKV6rjOWyVwYM5k0YYlNlFo+qnxvrAkDhgfIDRXFEUhi2jNo6wUDszs
0ZQW3BfQ8cWr3hWlccBj+708imo0GjonpFGfwYHnf3uXE52jkYHJeEovkQOF
WzOJ8snRKLPvdcMMmQOKO5Oi7bjRqCfjgdhKGgdCI373rsuKRhpylW66DA4c
mNepzWVHI1JlQZEjS6C3zPVFlfHRqM2O/yWWw4HxfWda8+yikcJIst5BHgc8
pX/ZuilGo1iuP+NSJgcCDDqOr/4YhepVbNoeHOSAmulvSeGTUUiyQW9V/yGB
vbar1so0Cvl7qwQtHBboLcouY/2HSHT9p8TVdXkc2JmYz76XFIkWjvz6aXiU
I3j/HuyMnYlATtsGwCOfA0aK0oSUpAhU0tZ+KPUEB4Q3/6eg8iEcfY2o6847
xYEEpndjs1k4Olp8JO7JWQ6IbdMajRkNRQN7abdHigT+tOwXbd8eivR6ooSX
nOPAsXfLzJNjQtAraTgFFzlQO17sZNAShNawJx/cuiboF/V483Tkg6KV+qS6
KjkgsqTKqMPWC9XVPfT+eoMDWq8iIj7beiDfH2enttQK8O8uD8zb6oqKwuzW
ldzjwKkivHmVoTmaEtoV0dDIgbPup4UfVhkjKFS90dckwJeirrxnRA/1v/pt
teoRB4Rqr04EJi9DavvKU7KeC/i1bCnadxDhtIFjDWUvBPp1Kl1cK2aBHzIY
Yg+7OFAeb3xSB1njiDseRf9ec2BMyiEsyNgZX9Zc3Jb2kQNWD56eMfztiTsV
Tf/Ef+KAVFDI2fjL3nh+BU07cpAD9psHnjyy98WOM9M53iMcMNPreqQVE4CJ
X3QaXUc5cEXKkt77KRCfexv3zW6cA7q+T/YsXAzC002DbiZfOVB/Ocjg6kww
VqpV4e36LpgXSie19Y+G4H2X/Wp1pjngvH+D9Hu1UJx09tSw5gwHzPvjqHHX
Q3FB7ss1G2cFeHA17cu2heFmtrSt4hwHvh/k0TwuhuGJdHvKqnkO5FX6ZdjL
hmP56AMVUgscGA2W2xqcHo7Br/ndUiEu5GQEXYxrF9yPnYRWLBLmwuDifgub
9RH4mJkRzIlw4c/1WJ93wRG4Xp+Y/GMxFy7ZeozJno3AQxo158eXCr6P5C10
PYnA0opfuz6Lc2Fnw/x7qW8RePcK7cUfJLiwMbmvr0EiEocIRxn0LOdCuXi/
97t1kTj7Z2nkixVcULWd7oveEIlrRz6capPhwmxJnk+EYiT+8GZd2wM5LoQc
vnr4o2QkFnvu+ad+FRe2ntu5Zfh7BN7RdEy7djUXejU3mR9sj8B+t577V67l
guPt/vD3xRGYVy6RW76OC/eK1S4viYzA18/sazy3nguvdlRzVNUicE8O51uB
MhfcVqS7uL0Ox8JsrJq/gQs60/d0mgX7QCv9j9vhjYL4+LPRJZVwvD9qF4+/
iQscllHZltthmO6bWsvYzIUjjlKeXIswXO5YOUzU5MIF9f3bvraG4hemY2tS
tAT1xz65eN0iFKtphFLCtnPBF7mv09gYgh3XFVf463JBm+ZJTOEHY4LUm3ce
O7kgYuOItn4Kwm3TrmCziwtJAWK2gWKBOPG+2eJtSFAPmzDw+pcXPlVDN9hs
yoWuwN4l6708cVNZXaSKORd29NTIvL3ujlfm7GiT3ccFwTq1GzBzxXU+qrm/
HLngdCYl9vIuK7xketHa+wFcYByqU60p2Ipmq07lDAZx4Urw44IebIDG4reL
ioVyocn754h9iQnqGPabcozkguGRQFHz5ftQwZvbD98mckHZ95HY/EdXlH3K
ca9QChc0hOczgwv3I4b756qNaVzoMb3xKt3BA4U9lz0bQ+TCVG3wRRueN/LI
viyTQxbkuzBi5S/hi2xsIPMGlQu35C1i+1h+aNuD+JRZpoAPIbd6LeNApMIU
HVnH4ULC92pPBwhCcsZn/BFPgDdjbvH7niC0ZE63KySTC/wMP+p8ZDCarW21
5h8U8CvkvClwIhiNpgbeu3yIC3dLmstao0LQO52Znc8Oc0G6LfaiUF8I6pjI
vvw1lwsBrpYf2iEUNV3ZqLzyKBe+PN0QKVwYimoi6/J35XNB/3fvhozJUFSm
5rLM9wQXrAbTly7RD0MF/cMM+ikuVCz+8yE3KQxlF9F/nivgwpz044aFkjBE
910V+/AsF6arkwvNW8JQ8pqKjyNFXLjodOWk08cwFPbKzEPynKAfzxfPKEyF
IY+jvU+2l3Jh6e5HV698D0PWTkmmbhe5UFNZ9k10LAztlVx6O6OMC+v+u3hG
tycMbXtcqF1wmQvJL5fFWtaFIRW+3vmGq1xQJ78O8xXsX1nzJ6v7r3GhrXzu
Uo5/GFosFHJYtIoLfdkfqoSUw9Bs/aywRjUXNNm5mz68CkWjpFyiXQ0Xrv+5
I+LNDkVvDdQnE2q5cPt6QnaRWih6/qM+9OgdQT/np9mM1Yegpiq33lt1XBjJ
Sr7JtAtBNfGjjr31Ar4CHb1KOoLRpS2s5vl7AvyLF7Xk2Qej08Or96jc58IH
yvin8zgI0YMtN0U+FNTrapg2tiYQJSm9Lch6xAXi0p0Wbc/8UeibFOnrj7lA
Wla2vjLVD1m7l/yZfsaFd9+yV5w47o1kbf68YHdzIT3T/8pfazckuuTovks9
AjudefLVWRf0q0mj4XGfIL81JPE/HU7orZFHufQHLgSb/QqdeWWNynRu0IuG
ucCyD6n3e6+HElZ9+337CxdE787sZEdrIb05nfQXY1yguv0Ikt2kgBofVMWK
fuVCXtDcGhtZZdzjUeUVM8uFZ3eDBy+OmuKivV+7OHNcuLmYfuuJmyUOU9Fx
KpznQkvVrgvkSmv89UulZYcQD8jHZN7V73LCYrTKHQbiPJgfjjzlXumO24On
rjlJ8IAdUGGTuNoT51tt14xezgOlh5d4xSleWEW6UvmsDA84v9uUTv7zwUPT
kwW35HiwVMnl2EYdP1zRu03++SoeTCQeV3N08ceGpdclhRV4oJNgbmUfGogX
Micz1ynyYL/cvcATmkG4OW6biL4SD8r+UXe+ORWEs1wS6I4qPMgwKFA2+ReE
nQ2u/45U5cHqg3HvjvkFY/l1k2ksNR5M+dxm1FQF47f/tn4tUOeB6EF3Y+Kf
YHx+MD62RoMHPSUzhvcE9+Wox9eGnm3hwbFwIjcxLQRvuz4RPKzNg/qru2fS
z4fg6aNb3wlt54F/QV9PfUsIriPEeyno8mAt69rzPf0hmOl3rWvnTh6cI6d0
jn0LwVamE44O+jx4uc98+MlsCJZU39oWsYsHVknXd7/9GYI7l8VbMnfzwOfN
kIfmlxB8aqqi8fReHoT/dHW93xmCA16O771pzIOU2uqf1dUhWO2u9u2niAf3
dA7flT8YgkcL43YMmfJA/O5eGUmPEFzFrrj2z5wHtxP4J6vXhuCMyHGNtVY8
2BA2KLX1ZTA2ste+sMOaBx2Fdbsv84KxsG6csr0tD7Zd0TTx3BaMW1dVFITb
80Al7D4nsj0I58yNrWI48qD63PYwmYggvP+D1pFTzjwQ9uo5unksEH8sv5r5
ZD8PPvUH3DGd88eXDo8Jf/YQ8OVT/y92zA/HpWjRF7x48L35zoa0dl88u/dq
mq4/D6hij8oOxXnjeypjU7aBPPjocWTNmIYX5i7Wig0L5sHTuPCr93s9sPTz
K8EnwwV4bUmULV23H2uGXHH8G8+DoAoT1fwYe9xauKfqeyIPaBEXNP87aIMj
ettkRpJ5cNDWbLF/sRW+4Dz2sjOdB5Zf9JbE3gSsgrR9y2k8QH8r2+KPqmJM
rq8vZPBAS2N4Q0i3OA6otVc6xuKB84/DL1oyl6AzW+P7aTwetJx/QDh6dSuS
V7we6XaYB657QnaLbjJHtzxNHlvn8sDhdH9c1Lwl2n+sfYvJER7I/6Be+/fI
Gh1ZNjWhcZwHviFvN/8xcEQ6VgwnpZM8uHCyZZtQnDNqZ624IXeaB223iSST
Ghck+Xt72sJZQX/8LP/8SHM/uqrX+OpHkYDvpdQrwh7uyDbJedeXEh6IXJNY
eEvwQJnDSXNdF3jwJlb67MkCL6S+cZHf40s8aA/wPXG4wBs1BxxpuFfOAxfK
5jWeOT5IuPsG83IFDxLFTLMGnfzQORmzT0XXefBCQtRwVNEfgUOneX4VD7Zw
9BLd3vqj9wdCLh6s5oHCDymPnsMBiNb8fQmjhgeGZWR7Xd1ApCjEiUqrFeCL
ZWvWtASiur1ybdF3eNBU05OgrR6EvAmlWoF1An2v4vX0Bweh2eqdh/fX82Bm
sD1v1YkgdHLywaTNPR5YZB+LqG4KQgZb9jujRh7s8C76dnU4CL0MH7yh18QD
48a7MbOiwSj1XJrclmYejISnSOQoBCPZd6Lpyi082Ltpv3iERjCqWnO8e2Ur
D1jb3wewtwUjp/2bDJe18YAv1VEypB2MJnNvnf73RKDXxyUJJzYGo8NPLAXz
mQe7OG7Vp2WDkfbSbr/R5zzI+09xn9BcEGozi7j34YXAfsh8sK83CEXTZ5Rf
dfFg+umz2D3VQUisjs9qe8UDN62pXfqcIHTpp/wAfi2YT58HdUbsg5ClbpnF
rV4emC2uO5e0IggNxu26dOUNDzyav5J6jgciTvmjpSXvePBrSebE34UApDro
GX38g0C/y7M9S30C0H3lkbasfh6cjttQo3DZHwX5ErWZAzyY6y1m3h71Q/9O
iOWkf+bBfxcrtfqU/VBR56mpmGEeqJ6+Wv3F2he9sblb7T4m6O+/Rp3xRG9k
5nTBK32CB8lSyiLOMV7oyv7chfwpHpSP2mevdfZE5MBw25c/eNCZKTzd9Xs/
UkiX+eQ6L9B7072+xTeckFdJtIzzcj4wj70anz+iixov7r+duIIPFwJ1v4+b
bkYaV5F/rgwf7NWOO5XckUezt1Zdbl/Fh/zjdaRl99fgk0/ug4MSH2RunOT5
kozxQkfFUJwKH1rlzkV9yDPFEd0ns7NV+ZCla1rxn7cFNuiP73mizocJhKPv
PbDB3TNrk2y382GrtYyz5xcXbDIvKh+jy4edbkt2TMi64UuLvv53cCcflIXE
15/V3Y8zJFuWPt7Fh8cFVyoW2Xvg9zI3ro3s5sODbJFVN6w8sdXqs25iRnxo
0L10NVTPC69STSneB3xY8ShL/O+QN6Zu9reMNOPD06tLr6+96oMHta3H+BZ8
IBbmPMwP8sX2O3YeuWTFh2uX3urJL/XDNbuUdrVY82FdaUGSZ5EfVjQWf/fZ
lg+qbw/8kFP3x1yzafZiBz7IedgvES/yx+P7PmhscuJD4TObj4uXBOD9Dm3t
Fi58ME/f83fAPwDXu95KC3Pjg8fN8gXqxQCs5lWiwHXnQ0nUojvVbwNwtv+h
xlJPPlRUOVwjiwTi6ZCMiAfefHAtULB+tjYQ+0UFSw748kHcc8z0gnIgbo63
rxYO4MO/wzUZy1YFYu3UXV6qQXygFRe3yM8F4GNE1QXTED6wy6JdP7YH4Dna
8gvBYQJ+UxPuco8F4BDOrA0rgg8zxL9G+tYBuO3AwFRJFB9SOaefq0/44x05
7ccbY/iQFLV8Wy7bHxccu7v3YxwfgvJfUqrF/LHw6Qv9/xL4kKm3NLqf4Ydj
inIzlZP54KncKh0/4os7S8lbUapAL4/bhK6a+WJZodq7e9L5ENG3xtLvjA92
8/tmaUDgA9rmy7Ia8cYvV0YFbKXwQe+aV5pGkIC/5NJRDRofNHYEiw4d8sQe
z95nqDH40OF3ZyrkmoegNd1z13H48OTavhs2Xfvxmk9561bz+FCnPnW3sMcN
e5k8LZPN5IOVYjzQX7nivhmzRvFDfEj8VlvTddsZv43U+fbrKB92XOaVXfCx
xorNsbQf+Xx43fBqf9mcJfZXKROfOsGHy3bH+NuOmuP3PetVhwr4kFef71Po
ZYw/2ki4vTzPB3WzKo29Nar4s9ZQTVU1H27rO0yN7zZB6gc2mFbUCPCes2/R
ppiiiEG/Z2W1fNhyObfy9nNzNHK263NRHR+WdJRUXve0Rhq/pVIK6vlg28/d
tuqgLYp2t104fo8PfNbLRw8q7NHo8vvyh5v4cLV9bcjFUGe0JWb+/IFmPhxc
7aKiGeCCYlt2bee28AXv3ReNws6uaJx+fR+ljQ+mD84rblyzH2m/+dKV8ZQP
+zXbL56b2I/id20KSmnng/fZtMvjd9zR5NQZYnQnHwKzE/2Kt3uibfavRcNf
CvhyXBYR1ueJEstljwR18+H6OKvyP5IXqhJ1XO/Xw4dFXpsvRi73Rl+DDl72
7OODwRmj7i2C+7FuQ7O+21s+hDOlNdukfVDKWqEmx/d8EH7kUrqG6YOq0/c6
2n7kgw/5Rs7kJx/040VGn+UnPviZUXep7fZFetuqI0wH+dC3586hE2xflJY1
8d1oiA/ZYn9DdbEvujWkwTAc4UOYc+/JgUlfNGMWJqE3KphnPm/lzsr4IYPi
4pPbx/nwskUo0GWzHyL86duoNcmHz/W08qU6fuiOp3yV+lfBvAgwyW7W8kOz
N12MVL8L+BZ3lctR8EOShgbtctOC/vi18Enrry9SqVcIWjwjwCPJSJfVJcgP
/n2b+SWof8jIt7zQF1k3D3BGfgvyPR59vN7XF/lZt67q+8OHO0pO1oPLfVHS
04qyJ3/5sLHEtdOhxgdxnY/sbvgniL9HuWGzkw86/TL9yfVFmVBhqzN37r03
uu7l418ikgk/+pUVZkO8UdNbk6kjizNB1qs3LPatF+oO2sjiLM2EfjUDbWM7
LzQ6uFQuXTwT9h2ye1FV6YkWosYvREhkwmOZa69XLvNEshMdBl7LM+GtNpf8
n48H2vPztM9emUy4TLxgovhxP3Ik0ce1/9dwmfhzvXxhPEmrRJulb1qUJSVb
8utijp2UvpsvcqOokJRrqUiR1AwhSUjIWmmzlCyVkf1KlFLdyFLZIrsi5Pf5
A+Y5r+ec93lmZhmGuzsqF4eu4CPHacezsiswBGnk6KUY8FCoyOZUIWkMtw4d
9ONe4KCmFcU9VWsxpGanZeZ5WCB/rS+n+KqMvuZvDZNOTRRZVLnQRB3DluNE
RPaEKkrXu5ewXRODkayvA1dYEdWaeJfIaGN4zM2xlkuaj1Zbz53fjjAsElL5
FG6+hao3fb/eoI/huHpRkOYsDWriUK9cbohhqNRQm8veTo85x+25bYqh/5mU
6soqRItPbop134PBURBzV6HflDZMiik5cDBc+cJv2N5oTjsDRorYPAw1Ct11
MVkWVIw8a9GwxvD0WYY36689dL1oisdGWwyKopR72IdNtSIvzJa0w7DN8qOc
szGH2sdZyv+2x2DQctU5tJZLPVkaBb37mX5fdD275DyPXkyW3PnZEUMu559Q
X1U+jd8w1VR3EEPrUh/hc+/49OGdNveSwxiyLS0yu45Z0dLNFTM5LhgqinVH
js9Y0ffZmVfSjmB4beL5pPmCgH7XjJC7dhTDixg3hwkhazpT4Jl38RiGjZ5f
heO9rGnz3NxLqR4YyAIv9tsv1rSIP3Sg2BND3nj9jIWxDY1NVdX+5I1Bpifh
RXO8DfUePC728wQGl2lvmcNfbShHL+ubhC+Ggsvyt6tlbalKWH/RltMY5vy5
fa13ly1d9GnLFfMzGHjBWZ0V7ra0W8Hd+VAAhuctBYPsc7a0wue+7rlzGORT
ZMYvYluaWta7LPE8BpbQYObxQFsaKKH8veAChukgz0oW8z/Y53Ck5B3G8EU+
f1fyTlu640FmzGAIhonwkTfiLFsqNdl9VDQMQ9KWurfRbTZ0zEzRUDECw6og
rC+Is6ENMc7SRpEYFuv/OBVgaEOzvt0acIjCMHy7/4wx4z9MvbPidDSGPZ/9
Hbq9remRwI0JsTEYxp5sy7ozKaCmdQc9H8Ux+mNVj/49IaAbWOlm9fHM+eWh
xxI6rejsI19lexMwFH5ao3HCwoo+E3F8uT4Fg3pHaN2NMR69zktJ0UvDUO2/
V/LeXzx6IqXt5N4Mxp8wd7bBKS5V1XXYEJWJ4fb+Zc6P37NphvffZ4RyMZQK
lLfvcdtJg0pv8FY/xrA12CZir68Z3S/epPS/Jwx/9ofnL/M3oTL3bd97FDH+
rlqHf3IyoBFfBVvbSjF08bw2meZrUDe1GJGpcsafmMh6z3wVahbQ2CRZhUG6
pDQp5+dGKryKT/a8xOBPqB73rhA9xeW0F7/FsP7xyt5AGxVklRyZ/6kRw83n
7py0YxpIvb8+/OcHDG9CnXrfpW1HP0Isd6g0Y9CTcChe2IJQzYdw8Z0tTB7x
nN66D+ijOxtfdR5qw9B2tdZFvMMQOb6wuJr4jdnXgNqxBfdNEVpyybWwE8OJ
rXaiZ0+bI9a+GtTYzdSzYC130rFA78fN+kR/YDhf1n1yMsISPTIhpYoDjJ6k
qV/IEjaKjK6KMxrCEGOs+jSzjo0sVE2M/ceY+tp0KleVi2Y1Ngp5/8KgxRqv
dq/moie+h4rdJjBwXt+N1bPmoaOyY35Okxh6gqJu9TTz0Pqy4O120xjSGpV9
dGz56KPz8lHuDJMH9a3GIrV8FCGanr1TiEBl2Xjl0m1WyChHw91AmICX+RoT
nWgr9NuqTGmHCIHZK+zWHOixQtm/uZ1q8wgYzImd3q8pQIdvfklVWkBg6t2i
OJaPALGMPB3WLSIQnnTEJuCeADV0C7GkFxOILnHq8fsgQCT8ykfxJQTGysoX
CE0IkJ76umvzJQjUtJwLFRG3RqPvszmzlhHY7cJXIixrdPc0iI0vJ0Beu3WG
yVqj/Wtf1wysJHBn/skyyZXWaGWFA+6SIvAs3NVCVdga1boOGLbKMPWMRoZ7
OgQoSCxg1gcWAW2J3qy9xQKk/UjseZ0sAZaRYVBcmAD1Wyf5Vq4lkD3lU1jM
FqD0qS1axesJLF7y8a+RhQK0N+X5cN4GAnN+FKnue2qFxE12Zz2QJ3C9+Z8R
OUcrVPm92S1DkYDv/MZKnxk+8r98VDFxE4FqOXWrkKt8pK459S16M4EAcbOa
a7J81P3xUkqYCgGr62+aGpJ5KOnMKvtgVQKZ2dMygTI8tKBqxwcvTQIbTypt
1R/joGK3mqtuWgTyP/JM2wUc5C2+l+2kTaD98ugriRw2arP1/ZerQ0Cl/pfx
f8mWqKAv/6maEYHEIu/77cQMHbtiekrJhMCIv3zHcJcJ2qD1QXOdGYGktoR4
qmuMIgN+PhDfRcDyo/7v+6/1kcvSbckDPAJtZvz96fxtSDa//O8uKwIh6SO6
7Htq6J0dX7rVmkBE9QuvgXFlBBleUXV2BPxyz0S/4ckgKe3c4AdOBJRypQtD
Dq6ldc36+hmHCAi97VVyzlGgwefeTCc4E3gkbrQlvl+FDtYMnghzIxDzJSUo
KEaLVu3b6urmRWD5gVHzaCkDutTJ5WmiD4Fr97qGhzoMqb1LyuLXJwncUFc8
UHTLmP70XJar6U/gj7xibN4fM2pwatcc57OMnvLk1NronTT8zAXB9UACLV/z
W22ld9EN5Nfv6WACBRXnjk4MWFKPcNXdqpjhXfBabXQNmz6Ncr3pGEJA90Xh
TXYxm86NSx2KvsTwvd3v+wsuh3ITmwyrwhn+5N5e/dPMoUmpy2MmLjN+hMpN
n//NpT23d3crRxFItusUf/aGSzUfXNxhH01gw3/tERVMXgbm0rDIGAI7V2Xd
yIjn0dr88ZbSOAJVCx9e2dTPo5LP1dTG4glI9PS6qGnxqWPpkfMKiQSCk5Oc
EjyZ+7MqrdH2JgHP5TJrLNP49Hdts0JYCgEPc9uzGtV8atKwwq84jeFFJ0TK
uJ1Poz5Y1g5mEHDufavg38+nn5uxrNwdhsf39sLvB/hU8UuJh9VdAoblBfoO
HXzq3TVRiu8TEO1IEFKs59OSPvUVRQ8JyA65qek/4FPRYTfnvmwCJcE9pVUB
fGrzK71Q9hGBRrN/G9tN+DRt6vMiTh6B4h/cmrzZfNovJGl/Pp/AUd21uccf
8eiOeezsvEKGt9Y5wua2zHtBNGR291MCD+sOyJ4Z5dI3EqV8mWICri8/vTK7
wKUsyclbu0qY/W/YVDy6iEtdWJoTZ0sJrJsrcbmecOjjde4WOeUElsYazFOc
YtNZCrcSv1YSkFI25/EOs2msmpSB2UsC8DmP6upb0i9anGi/VwQcuhYPzvq6
i6rohHberyfgMy6XEehjQStNpkIl3jHzVu/TUfAwo6N2bW8/NRNYsDrTkDTq
UzggLb+4lcDx3fpmZ1cCvXSYewq1ExgoaB1yvqlD1/9TzkrvIBBP9638vm8b
5Vy8c8i9n0CTWF+E65A0TbjUnn9zkAA/tlGv8psI7Y6UWdgwzPAS/yyoevWg
XuCNsIdavwg09BVGjX5bi2qTK2a5ThCo6xFb2AeKSPLWH+6NSQK5/9uslxCy
FTne257xaprpz4//hgP3aaCH2R6/ZmaYeZTN40d0a6H/A7axRas=
      "]]}, 
    {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
vv2FYcWTzvSWfhfKNr3eJxeBIeVR71aWqivVift4V/sIBmntQ3IVTq5Uql07
wfYY4x9Wcwf+3ZUObtjv73ccw3WyMDYuypU+Onjt1xMnMKjll47TM64098HQ
8qwoDI5v7bs1TrvSSDmt9xWnMTz85F/SFupKPbwC7zVjDPWWa+W7uK7UpOhq
ymgMBs+dsywnDVe66sdg8JI4hv9SWbOdoy70q43GDo2zGLrOOayVvOZCm1L8
V1sIMQR+kerOcXeh1/suj3glYjDxuNpjPyugcfr9j44kYZg4tUDDKlVAAyPX
Z6amMPqHSW59tk5ArRt8Q2+mYRgfMNFSFfMpS+mSTeMFDB9mFD3PreHTnwLf
KA9lYijicXgBmEf/kfB5qibCsHGt7EwRcGk6VyQyzcPw5Vns5RdnOfQvUc+h
XWImn+c2vm9+waa6v3qxEq9i6AgTZ0hYOFNx2O5jc29gENrk66qdt6UnazK4
P9/CsOZ1zjAps6besh2a225jqEKLBj/XW1LFa26tIXcxTKsIgidemdGzbwSb
e2owKKSJFjTuMqBBeikSUw8Z/nZJ1e/5OtTmeEuHQi2G7nFX0+jh9XTeGh7Z
+RRDr0RHrvy2+TScw+6tfoFB47GWdMCeTYifIyxvb8GgZUUGF9rpI/2PjfHf
2jCoG/l87BYYoQ8xTiY6nRhsDZeubTU3RXVt8bJ2rzBkLiGcLzJmKH/9s36/
Hgx6Z4qXmoyZI5/79uez+hgeEW1j61OsEFoaG3CnH8PkWVMyybNBSh51qGUQ
g1KakcFbCTvU+t1meMkHDB4XW6XSTBzRTStSozHC6K/05HzTP05ImFSbZvEJ
Q/nu7UZT8s7IXtfK8uhXpn+kDDQp7mejOS0tc8PGmfPtC9paZtnodoRfddAE
hp6vEpoSZzgoWPnr4b0/MLgRtaEDUlyk9uDUVvdpDDm2aqqvo7jopf+KL5xZ
DCO+YzE6n7no7JJLJXZzCXSEj9qz3HjIotRgv/k8AoMt85szynhokv9A00SC
wKnAE/YHJfmoZJLTr7eQwBfhmQ0JbD76Lft1ruYiAvYWL149F/KRkkWol6oU
gXclQh2Vx3zUNDhXabU0AfehjNaQT3xE4hNeyi4loFitWXBrmQCZ6qsmS8oR
SHRriOjWFKAvrSXsOcsJrNn+Mm7USIAKjoDM9xUEpD8H7xjaJkDeKs/rRuQJ
IEnWbJO+AMk/8sIDqwg837iMFKsKUH3AyI5uRQIu6UFKwgUCdFLm+Jw2JQIT
3il743r5yPimTFWDMgG/7cUyFTf46KPLxYjHKgSaF+kNbTrMR5emtI2q1Qi8
1ev6LmPMR7tEVWNlLAInf70bHDXMQ7JWjteL1AnoyLQXXU/locfvO4PEGgTu
vWl5Qrfx0NFzwRpZGwm8GWseGGjiIn3Dqb6kTQS6bHsKdzPzZPBlrChOh4B/
27Apd4iDLh5b43lKl4D2cj8PySAOWlRr0vanIQEf206VCg4bVQfVnQ8yIjB/
JvGdcaUzCpPd5bzXmID4u8GPWCVn1OMW8YSznYAMGK+rTXZEFcPllXoWBLpZ
tU63q63RgQTrcE0rAhtialhdOlaIZdRmqGpDIOd4dsnCFAskPP6tSNaBgK6T
h2yAgxnat2xLzgiXwO0KYf3rLkOkXP5w9wCfgHXVdcNQNz3U7M5b3e1CwDS/
O3VZthYC8Z+JDe4EDAWZe1bXKqJVxjdOFe1l9OiAhHFZZdrQaWYm9iNQ0Jel
ECqjTk+d+Hc6059A+KvNyYUS2nS0bvSvuCACtyynwm95bKG1HpsDgv4k8MHV
u27oFzO6bO++yqyDBCxZcoeivptTz30i6eeHmPeEjUSsumpBv4Uuv2F4lLnP
N+QGfm1NzcMd5vv/zfglPSGmIMCWxh87LUiPJPCxSF7RqdeOssj45PQpAtmN
5esmLjrSkHhdR11MIK4wLib5jROtTAzI9olh/G75c3LfYme6IC33U1IsgZXb
t548esGZcrI6dtTGE9i6976HvQqbXsxdkTJxjoDt/96rLs5k03dXHAe1Eglc
G0xpD5fmUMOiaBPPJALRrlJX9oZxaOQNGidMITDU4N+c+pxD68u/v6pJI5Ai
CpF/q8qlClV6el8vEID7khs193GpT01g1IYsAiOWir1Wecz8rM1rccsmEDWz
yE/1BZdO1nduiBMRWH6ys0o8zqVWTSsPV+cRkK3PMKiX5dHENqf6UTEBTe9V
hfHKPNrViZXX5RP42Vgw3a/Coxqv74XwCwgUmngUvVHg0bCBiRp8jUDfGoNL
ifN49N6w/sq7xQTUDWIT5/Vx6ZKxIP/hEoYXx6WCfYf5X4xfuqN8k0DWykot
URSX5k11SbHLCNwvljOT38GlH+cqeEaVM/7zq6htH+dQk4XOJWV3CMx7YHBw
fS6zLyyJ+WmwkslL4rOXOuYc+q9cDU+xmql/wb+dui/ZVEnhx2WHe0x/eJ/e
E+LLpvuUDCf+riFw84fnHJMBZ3pLdb996UMCegGDx9q8nemcDZez3jwm4FsV
Fb8lbydN1VtlbvOUQOjxA4XTBo70tRE76fAzAvKWxZzSPnuqs/1M/7VGAlXz
FheLo+3oY6upM3LNBHYf4AqyRNb0i3vPi/ZOAkmJ4g/6DmYU9qxWl+5meLtZ
2XmZIhr7Gycc9RK4In3XfUfLL1Ttj4dKl94y/BvfscVdhpQdne+3/yOBi5Ut
sbMWijQztrc8e5TpRzPLXZ/eWkgHhYqLm8YIqDy8v7XMq880MiOu2GicyUtp
8pGLWmtRfc6jOQETBGj0TFZwgTpSuDzDyfhB4JfAt/teXdNGPoVbxc+mCWw+
8nd9noM+Ki4JGZ+dZXg+7ZzsL9uC/gN4zRkY
      "]]}, 
    {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
dCKU8WSXStEkoTtPDaKrs4mQsa6eMcmRhGrX4/Im84lgJ3mGW5M3CX3g7q4/
XkKE7ZNKKvdYktBBg5+98hVEOHtk6+6/Q0lIIJb9vW/Nvl5iRaG644nI4JH2
Yt09IuTWNV39VJiIwr9F/p1uIoKwdVJJr3YiajzbTsPQSgSx/6R7L/5NQJPq
y2w3Oojwn1l6n0FqAqIMPisS2E0Er5pLI/GnEpBw002lpsf7+ptfijiWHo/M
Z0OM5p8R4ehYpjj/XhyKp7vvyvyKCKYfto9KGcehNvmFELUhIvzdSj1VfjcW
zXkxZYS82+/fsSi5byUGHa9Srn4wSoSZG0pPDnHEIDuqhsGz00QIlwgje2If
hVLFZ2Zuze3z8eEkFvWPRN1OdGsRi0S4v8FE0xYcgRgHfU5//0mE7stiOSfd
wpDsXo0A+xoRRI5FFp/QD0WugpMyultEaOTvPWUsFoKepYJ99wEviNdiXqh4
HIi89KgeJNJ6gbtJ1+mjA55oZDpX/ZKwF/gGK1gnBItgEtoBCysxL3jcfcq8
dPsm5pfbI2ZJesFH4Wj3uFhDHFZhlbcn7wWJrVf7exvs8GVH/sUhHS94/cEj
nW/MC5vmmf49ZOgFlDcVSlrFfXHs62QaMVMvcOxS+L2b6I9nBdaEi229gD+x
JFuMMgin/O4Kcffxgm5D/Xd+SWHY9W2yhfFtL1DU+/DkqkM4Vm2yklEK8oL2
c22Pr1yLwLzJomzCYV5gqq/Hd2ovApO7UR04F+UFq/a33LM6IvGc2uQ0dZwX
OOWI7xk4ReFe/oaejUQvuPz1X+eZE9E4YEk7eChzH9NJz5SIx2CDF9zmj3K9
QEsn1u9LVwwWrd5GVYVecJHpx20ZkVhMHzXAmlbqBT9rxf3Ci2PxL5vivTuV
XrDG8p4iYi8WD8p7/udY6wWztKYlZzXjcB2HItat94KB0/TxotlxOOYgc5Fs
sxcsBAVQdLyJw7Yzy3cEWr1gS+vT7dTdOCzf0216qsMLJhcYOptZ4jFbUYo0
ebcXqNPdpDp1OR7vBlqzrPZ6Qe6lqfJ+sXg8aXx1d+qpF1SVMWjjfXu7xOFP
L154QUjFaBbVuXiceWqq68GAF/TEN9J37c9X4lZDQckbL4iefDHyYyQO3xoL
DUx47wUjAvQU7flxWOChjonfuBeQXK3nktSPw0cyeaRspryAOnOTp5wiDn8l
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
v/837L9XEz3Icv81PU2gsWwON6xbG/0PSYhGtw==
      "]]}, 
    {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwUV3c8lt8bViEryUqlhXytrJCMzi2yQvbee3u9Xq+Rvffee68QQkJOUqEk
Rak0EBpSEcooP7+/ns/5PPc513Xf9/Oc67pP23rpOuyloKB4QENB8f8nV+rf
ypITyxcFgsi3tAxeoFs0/Cc9nJ8iuQU5OrH1cdTv31zF5/wBjZhYnBfpeI4e
ino7UTv/QEwGB05ywxgKYtvp2in7hfirI+5/PzaKcjIuX9xO/o2y3AOPcI4+
RkNJz1XXnHaQSpe64P6UQfQziuGTf8MeENMeTzAsf4CCB27w/y7bB/Q6hYf2
Tw4gur167r65VOC0056pePYeyoH15l/J++Erh5uvTPldxB2av+wdRQtns5rW
9lr1oZY7chI/A+mhL7Vu5HldDxqWibz9zekg5B1NWt+u6UTX5VhCJG8wQcMT
ePFRsx0tT9mXkhoOwa0HKrR5+9tQyFGa2ZUyFrjw5HMqp+J1lJur5fQj+TCs
/yymu5ibhd5LlcUJx3PAjEuOPH9yHOJ5uVzvEXUEnvs9IWicIaAW1uxvi4HH
4J2JjsV/qnH4UfqU92enk2B3MFNTUr0ax+XlDGeKnYIVn61htrE6LOSMTM/d
OAWUk/db94g34qfnP399LnQa4uMX7w+438DE/enXiA2nwfGrRHr3xVbMNnmB
gZmPC3YIQ0K9LW24q2a2qLWaC94U3ZbToG/HZuTEszrc3PCaX2XRT7MD/7ss
0fezjBvuWgfLRJA7cTnbO620Ezzwlj7X/E30Law0H/1BpIgH/FRMi05c68Kf
24UJT4+cAd7b1euchrdxYtQkhVfuGbjyddh9mL0bC+uHpTOy8cKhxfEYlTvd
+Dk3P1dzBi/QH9RteKXWg31/PWvTZPoP5Pc9mPnS24M5BgIVl5L/gyKJG7E7
7L24J4N7IomeD65JbxoPGPdiS9sRe6F4Pnjvq7L1M6IX7xH3XXtMzQ+Dyg8U
bHN6cdWeEzFuUfzQsWkt8i+zF6s8e8hOv1cA6OL+1d0L6sVfy7xqG0IFYGhb
p7pTpxenEDik1f8KwIt4qtmfLL1YDPqHvgQKQomSyLPk+z144qCrSfwfQWip
c3/XZt+D/T8wf+UjC0EOx3hA3Fo3PnajJ3DolxDcidzz+4J/N+4Lsad39j4L
2m62p34t3cY2WgeK9v84Cz+s15neG93GlCc6hWrdhaEhlHLr9K0urH5nv9aC
kwj0pnSkyZjewmI7tmvsP0WAz8ElXCetEyedshrllhMF5oLMJh7cgUm23b76
90WBQZdCi4uhHSstEO53TIiB90elR3uiWrB07AmOUQ5xmIbym6MKN7AQ34jb
grk42B12mbEMacIsrv+xHJ4XB6qPy2NPqRrw7NI7G/+1c/AxYDb8JaESv0xJ
7Ei7IAFfnvix+syV40ciF2jrgyVgtaNmyd6uDLd5Z7W8ppIESzYeZ0W6QlzD
fIlyRU0SKqQM5Bl08nDBzR9GdCmS8O/7C2/q1mwcvqa+I8MuBSPHl9vze9Mw
KeePrp6pFNTdKettepqEnc/X1LiVSEFg0KnMZcM4rB2wR6uI9zzENC1fvTMf
ik/9vVX0V0oaGD/wRzr+voRZSxx+sl2TBuMK338bTDqIBrEoCWNpAK0kM6Ka
A/oR5rloqXIBuPxLHS+0kVEf5RmZu0YyoGTbX8yqGoPaqp8nvyqUAZoJkS9L
L+NQjXLYzM8PMnCQfOt4pnEiSombijvtLAuLNR2qpSfSkAVDxmSEvxwcHpCY
jJvOQtpNSLCwVw66DUSoTRhzkJLWUshNCnm4YnqKXV8uFwmlqfLOxclDxCOu
X+SCfLTNskO6nH8RUrKP/Zi1L0FPDkjRUloAlBz88ABTV6HnV5jzRoMA+hMv
5uhmVqFX8d9584sAHh33uk5xohrNUdUqCb8FGJEw+UMlVIO+KkaO/9kCkCPn
3YxtrkE/w61sB44pQBtP1o7P2Vq0/fdwmLGZAmTPur6tPVGH9sqtMnJfUwBG
Q5qe7dQ6RBM4VrxUoADh0wcejG/VIcauRqGubgVYUOFWbbapRyzrcT0RbxTg
e93o4oH+esQh4aCuuakAmUj8HOlIAzpBVHh9+OgleLQ/dtXWtQHxtBx3nr1w
CRo0Fo9Y3WxAAt831htNLsHze5QbS78akKjQy2i/gEuwNiJzNlvwOpJybWO9
lH8JoupE46dNriO5upRKhtuXYG+J4JB1yHV0acFVfPLVJRgNDr1Tk3cdqfKo
9Jf/uQREhU/vL9ddR1q23NruHIpwrV9Y7X3jdaRftvNeSloRZlO48llqriOT
91Mee4wV4VyMRmB85nVkydm1/dhPEaiGzw8ukq4je9OsxJxcRRB6pPRlTe06
cs0jHLW5pQjmNfc37JmvI8JLjXrBSUUIne+9v/6kAZFZ+aXX1xWhrzzUwT+o
AQXpUg3eZVeCGyykqgfHG1BE2oxBopQStFoGvuturUdxo3fmDAyV4NbZ8SEp
6XqUwlDgc4qsBEy6GQ/PttahLHXy3sVsJaBXpnhcylmHCuJ00zs6lIDgVT2f
FFiLSh8Knwp7oQQ5m5PBm49qUBUl/Q31NSW4M73uuZ+xBjVc+iTPxnYZblZo
nHmjWI06+0rNGvQvA21G1D1SXCXq3b72lUS6DFfXLs935lagezLGASjrMvSY
GjM1FZSj0U6m3InxyyB56uG7jY0SNN8c/vyfrjIoi6X9Ng/JRl+/WdgME5Wh
VuTXoR/fM9BPAZmfmRnKoHD0QrWDVhrarlk5wP9cGbzpzR9s3olGrKV2ano6
KtAyv0pWE76EL6Vevlt7VRX+JOrFZ+jn4TD19vrnnqpwViCLb06sEPdRcWf+
TVaFUWd7j1HqEiwTROGoN6IK/PG+OepD5dj/vNfVkEVVEFEny1GfrsSdK++k
6+nU4Pafl6f+I1bhcy499DuqamCp8iddd7MGE3kE1vid1cDIQDD0rkgdbvmQ
914/Vg38Pu8lGpvWYyFDcmvDAzV4wy+yzJR0Hbsemi94MacG8/+WLO+kN+K6
Eb0oCkp1oAyeUG+Kb8I8imJGhpfU4ZXyS5NXmjew7b9SCLdRh6Mr6y3uDC24
7DajQGOYOpy18v7yyqUFvycFs0yWqoNy0ajSr74WzCn6bXsPVgcTI2nHUPpW
bLpouiD0Xh2WasdA4WorzqsZfmr0Vx0mz/8WoU5oxS9tpG9HcF6Bw99t9Gp6
dvX6eG1Fk+wV+Ncaa735sRXrv2JLemV6BVLe3qB/u7cNZ2RG+e4LvAL1riob
YhxteEzrl6Vw/hWgfPH8+SJ3G2aks1U16boCH/JIhI0zbVjjwZhY1OQVYCSN
PNU40YYTwtCxG+tXwCIu6PInhjY8JNtM+YZNA1jvTDwfW27F1L85v1NKasBP
Ud6wQ09asVJb4qSIvgaEUYaf6ihpxREem3dNfTRg/33TgEnHVnyXz6UhOkMD
uGW1QvPOtOJ/HyczW1o1IPR0sRDHVAuWK1UOnhrTgEkLn4Kg2BYcaNrhSP1T
A2riQXZToAV3sfFoix3UBNqGB0dTE2/g32MZF8yFNcEkBYVKtTRjqaQ93LGa
mqBz8AzZ+X4TJqkQGNrcNUGdov/M7aFG/POO5of91zXhOXNaCmNVAxYO6B0S
f6QJXO/3muoG1WN3CcE2iy+aQAxo9lFQqcOfG2iib/6nBTGribKUXdWY19HP
872yFnA+zow1s6rC9qcXjGgdtcAm53eG+3YFns4dELCq0gLro/xVNMfK8Ouo
kDG601dh1GOP2l/KLOwgsnlA7IA2RB1X3fN+3BdpTMVWc5zQhvsC78SS7oQj
iVg2eQoRbTjMx9qyFhyHKD+Iuj/V1gb0M5fjxesM9C2hb98tG23wZLam0WPK
QeNSGoUlRG34/mfa+bVEPqpIcXrkkaUNMpoex6ShFCXIrNkYVGvDZ5NLvv2H
ypH3QsSGXKc2dP55pD5ErkBwsYSP4ZU25JiebH58uBrxfRW8++uzNhygYK4w
161BTDm3jaY2tCHIuIbJKrgWfViaiGk4pgNLgoe5XCrq0cN82xMZQjrg2dmq
6VDYgJov/+wIkNeBB59tAm9GXEc5y8GaNlo6IP7zAfpj1IhCiunnVa10QOKm
Y9v7o03IUS0/SJSgA44/LtOyPG5Cmmu8rBzhOiCbTOlq4tyMJMrbr++k64CZ
au1A0koz4tS8pPipQgfGY7a+xbncQJQbT9+M3tSBgWy9bNEnN9BilQWx874O
BNTeenSPsQU9116kLXmhA6eaFK6qnW1B3dv+5dELOnCSwsRZ7FILqqijvuDx
Wwfa2aeD4zVbUIJ+1pg+jS5Mq3PXul1tQUQKLme5I7pQWyI7uKLSgkwab+xw
C+gC21HLZNnzLQiM5XPpZXVh3v/KqOfxFsRH+Vj41xVdeFJ2tYO0dgMxtRg/
fGOuC6kXLpzJK7mB/pgtWNzz0AXaY77MzVI30PR+0lp9iC40XawdFulrRoM3
9ySnp+rCwkZtYZ5kM2q2SuUJKNOFz5y/jByKm1AO/fFe61Zd6KR81nN6fbee
txr0VO/pghjrjWkbaEQOdtKLIuO6AB9OrN0Ouo4kevSO7qzqwlWGc2dPj9Yj
TqeZ1gUqPVC8IPI6cK4OUbJ4qY2y64FJ11kS+UctGndN8C+W1oO5gYpo+oVq
1M3OwRStpgfS1WE6+8erUMW96lp3Uz2Q0x+ddrxViYhH+1/KBumBU+XbcT6X
csT06LfEG6wH2Z/YZBRp85Emv8Myu4o+HPfJDXS56402E3173hnqAyz8CpjR
sUZ136Ojqxz1gUAxM8X6UxJTttccEY/Rh9I9j0L6RUm4++JnBc0H+sC0fUD1
tsyu/yv/Q8/6Qh+mjvfzm6inYTZK2pdv5vRBue9PlrN7BiYM87s6UxpAUnDo
yYakHMyr75YRqWgArxstMi4LlOCJzmvm6noGEPwsZejvYikOP5LEe8jOAOgL
+kLujJbht+8bu0siDGDnfFLzY8cKnKBwJ8ohwwD6PhWqlZ+pxNJVT7SEKgxA
vIf3mcVUJc50+T57u98AGDJSuVsFqjGM/GsMe2YAYXvufFgcqMbfhQ/6qcwY
wA0x7UINvRpclH5SgXHZAALPaQfXv6rB6qsi9C8oDMH7b//CjF4t/mMILwqZ
DMHvYVjt5P1aXH1bu9T2lCFoHvud7i5Yh3U5bVz4RQ1BMn6BOia2DlOEep/7
iQwho5lfnPl1HW6eCf/bedUQ3tsHZlOcqsdmShmDwVaGwPtY7hGY12Oa2op0
JS9DEI7dih9MrsedtDfN6EMNIcrEXCm9vR7buw+ceZ5iCKW/aRgKx+rxoafj
P/JKDKHzE7XK7Ew97hObu23VvEtyfnWf2+fd+zJrNZK3zxAC+bIT0Vw9Pvqb
UmvpiSGIExfsXF/U40ETNo72d7vn5/C9X++px6TeM7OBS4bwVL5b+k9uPeY6
KdWo8NcQdG0RxLjU47FwZTLNASOgjFV52iVaj0PmdmM5jeAwjY9O/dLuPKvi
RJcjZAQuRadfBpTV4df1fhPmckaQ0fbV9qpaHY5hiCvh1jACbXvtf1qfa7GE
V57zVzOj3fq9MC8LrsWzz+rEW92MIPC4wW0f2lqcJnF72++aEdhIhexsJtbg
i7nDDy8mGsHcSBiPM1UNXtx4nUZVaAQe/mZcy77VWBlv8mR2G4Gwq2SepnwV
Xj1N/8PkkRHYJQisFWdV4vKoY7dPvTGCfyMRdjRzFXhbTU6zecMIumLrFnXd
y3HbRLDvsLQxnOTkSLc2LMJ10fa2s2rGoLHt0FTrXYBLpK5c3TI1hoi4isdu
YXk4IY+D/2ywMTSl9D4SDMrCduY336b1G8NCmOJ878E4zDr3WdFY3QS2/fb1
B2STEV32U1FvMxMQ9mBUy7cORRTKnccT3E1Awkpgke9AFPpWG/m7J8UEjDQc
rGYrk9ADtxPXT46bwMxPnS7GqBzUy0mVJz1nAqw8XvL2vnmo7clilM6aCbQ8
vU8YMClAJSK3LSMPm0Idt2h9++9ilDVdeqWIzxR+pJC0DG/s6k16jHTHBVPY
cGq7yH69DJF/6TF/MjOFf6XvBnakKpB7lczOjrspsMocOl31vQLZGpz+xhFi
Crkbou0XiiqRMTXNa7FUU6i1UGi0RVVI69b3B+plplBtHPiof7IKKTm/aLNr
NYXz/CXMlA7VSOZIb2nQPVOwef/C6MPufSX6qCIpe9wUOhg9O2gtatB/1+ID
mudMQZ1AjpAfrEEnhAiOg2umIKE0taN4phaxvjPUm6Y2A3l0/OYXci2iS5GH
jcNmYHbiSNdWTy2iQDxnmfnNYLyOXlhvtRat/6A7KihjBrzXT3pMnKxD38qW
qZWumMHkdytZ+4t1aFbn1S9zczMY6+8YWLxah17txdO+Hmbg5zN4xEG/Do3e
rH6SEmIG/LFfbEav1KH79kndtalmEK9z8AqvVB3qZvOpvVtmBv2rzjN+LHWo
9aFJ1utWM7jNUh3+5mMtqvOD8JV7ZsDeGMXkWFuLSvj+86SfMIMDcxXxUpa1
KOv1ATOeeTNYomp46k9TixISVlXk181g62g+l2VNDQqTnZIw3G8Ozit0YhzS
NYj8rf+0F4c5ZL+2//DxTjVyL65jjOM3h3aWJEo66Wpkq5W6VSZjDt9ou+gn
aqqQ8Y7v59tXzOEN3bf6FLrd/rSYv3hubg5nR5Ytsu0qkSyzwA3KUHPIYkqe
pPq9Oz/sMR1+kmoOubS+cnOS5ch6Of5jTpk5vByJ7NlyK0NRY18O898zB4Gd
4cDDocVoNKU+TJPKAgyDp3ODuXKQdcjrAnZ2C7DOOSiReDYLrXjQdnzgtYAf
H2mfPBTOQIc1Xb54q1rA6JcmTlHRJGRNz6+bk2gBva7cxvI5ZLSyaexuVWQB
h1tjnpnSuqOor3ExfE0Wu9+frdFtbIDqhz93d49aQAfDZJ+8jRNeia3j/nDI
EoQi2j0ma2JwlN8r+TouS+ha6v0KvQmY3YnG2PucJZgwmlMI9qdgWWXnpH0G
lnDG7urXNNVMHEXJt/ZfniUw2getusYVYPZVo4PLdZaQ8PN64iOJ3f/9Yyx/
921LcPw8FSTwrBg/uffJQmPKEgRozjTpupVh67bD/mzfLOFARpc5x8lyvFKu
kvF+2xLYr1cdNhoux+zhtQ8JJ6zgZ8iBnS87FbiOMDl9QcQKSo1++FcnVmJZ
6/1be8EKQgMEl+sZqvDo1fNsI9pWYI+3zDojqrA1chLJtrGCBzqdlhlLVXhF
OFfNkmgFLE/6ZZk1q3HUiUG7/yKtYH3kpjh9eTVmZ/wd/DPTChpF/xnrf6nG
9X95825XWcEL+Wqt8TM1WG7JsC2iwwp6+z6WkAxr8OjbmJErD60g6WLMJ55r
Ndh6pHOBddIK9D4J2k1m1uCVngWK95+s4LfpFFdKWQ2Ovs5+rPaPFYxGzchp
ltfgJM3Ko12U1kDdUXPjSE4NNrjcU8t5wBpah7Y5qEJr8An5cYlwNmsgpksb
CZjX4E8Si/3zx63htz9zaNXZGtwitO+qOq81TFVJtWf8qsYBPMfeNgtbw4Ht
iBqu5mp8ifOcC8t5a1i6JaUcbVGN6VmvrPsha9jJ3ze+uKcaT9DbRb5VsQaD
H9V5aYVVuGTfNSYFbWtwFco50iVQhZ22Moqrja0Bu5Htam9U4iytbwMB1tZg
6PSEbe5cJb5bfvmrprM1IMtt6js3KjCH6h+pdb9dfCH3VovUcqxUqGPxKNQa
PklH1rb/KsOE7w2RJbG7+PFMsaPaZXgoy2JMOdca1laYVIWWivHqp871o6XW
wL7g5/AqtAifkmU6/qPGGjRWeKi6qAux/8w9l9xOaxhxqSOu/8rF/MJ8+z6/
sIbp3/8KfW3SsWF4OH/vO2v4w3rpm7FBKo6YeHM1bd4aGKrWf/m8TcRvApOL
pNd285OT/Cb2NAonDK5IxrPagPC1j77bz13wovUdZwE9G2h1VEqgex6NONrZ
U/+Z2sC3mOLOVLF4pLSf0PHc1gbcjJir3kQkoaImrr3XiDZASHSLCQhMR0MU
QXxXA22gWMJPK4Q2E63qvdDijrABCUbp1dKULKSxGVv4ON0GBI/cw0X+uchf
c6a/NN8GAA8pK7zNQ1VlMp99ym3gaPKEeeq5ArStvCTB2WoDvKv7Khe6ixBf
gbLZzy4beNA6H/HtSzHSXyoNv3/XBn7UwaMEulLUlKk76j5mA2cLDKvMU8vQ
m4Xrq/DKBvot0CNMU46oZaiOse06Z/3QkufHA8uReLKlwpdPNjBwLUtX9WM5
spy+5XTnhw2sH17ad1SpAiWcO5SS/ns3/zCpv95FFagzxrXdYccGaETHzUS+
VaDZ1wNvLuy3BZa+Sb1z5yoR49njexgP2kJlF5O4i3clkgkj/zfLbgv1Kfuv
4ppK5Dj+VLPzhC0sj/zdxzNeiTJ4+UkJvLawNLFMFb9eifoCIgoshW0hrf++
wFemKvR1ZOquuJQtNNJJilzmqkLspyQ/UV+0BXUT/ze5AlXokk/KganLtjDw
UWhgjr8KeT38dO6G5u55IuUD509VobvQ6CZkaAvlgSYrlfRViKmHUFlvaQuP
ZRRVKr5VImtJySleJ1sQF5Kl1ByoRC03NpirvGyBeOXOp4eplYhCoE/9tL8t
XD+ptyOuW4l0qiIiSsJsgePdQalbdJWo4oRK97F4W2h728QefbsCreTRr+Sl
2wIDIwPnM8sKdIlljJ+9wBYCbSj2jG2Wo8zkLJvMCltQuMzVeCe5HM3tN8ln
um4LZd9f070/XI4kIo4/S765m/9/imTf/F292J6hoe+1hd+GQqyPmMvQC3IN
xN23BbkXHEmGNKWI7CbSEvHCFqqtq31vlxWhh/O/Pu28swV7kz6eJqNCdNi6
62Twgi34V5Rvuu8pQF36Cql+v21BYr3FX1E0F23I63m6H7GD0zOsRy8cSkdB
TH5ChhZ2wJjdlB/zyR2NJMjajzvYAYel66/G/yzRcSqKIm1PO4Bny9ueZ3lQ
30Yc/ZVQO7g81XAsQ8YVU3ws+IrK7eCvVefn1N+RWNvCiutOvR3c4XSLn5eM
xeWT3KYybXZAunjzU7dDAr400jgsMWAHx1ZeVj9US8ORHX11/PN2wHD0Q2bw
v2w8IRI5XbNkB1/WJKxBKxfzNKhw8KzbQVfvt7ZvaXn4fslY7In99uAwZxoa
860Asx7JxoUH7eHfAcGaK5RF2CHT5DcHhz1UJLukNDMUY+q4WUcWfns4mpnf
rLpUgg331pakidlDFQOXYun9Ulwb5PbygIw90P4VWba/XIb/rIswJl6yB9Gk
w/fbSsuwqvfqZZor9sBR87Lq0HIZzlvsCo7WswfPdhlXqwvl+ItDcMdec3s4
a075N8C/HMtMKyyF2tvDMYqbvErN5TjBlPrMX3d74PJ7l3X9TTm+KMqw/oVk
DwHlU4p5W+V4mYp58GWQPdTR963IsFbgqqnDeQNR9nA5rXggmacCG7ced2lJ
sodHA19PpAtVYPpYbpniLHuwlb5Xenl33WfOT59QZA9ObelrjdwVmCgu8pZc
ZQ8nXjwrfcZcgc/QSDbZNdrDvghBt3sb5fjVO5kQ7XZ7cK3oFEx5VY6TbsJV
+V57+NOd+OLyjXKM4pVPCdy3h6hhr7h9Ibv6bKmxzD5iDw3yhW8/KpXjGgnd
e/sm7CH+GtljH2U5NqEzzvw5ZQ+aB7mNI3rKMMO0hf27j/Zw9+rgZtyu3t/t
sJN8tGgPRlQ2s8BahkmJLtS3ftnDhrmRT61bKf7PxmuycsseYq9IUUyXleAU
hmsBwfQO0L4wtyn2sQgrzIapu7I4gBiXSdnp5UK8eivmmNExB8jxO7D8ZqUA
m9ll3BEVdIC7ZPml2vE8zHghL+X4OQfwso4U6L2Zi+8xlljRyTrAAfLY8Zr4
HMzXXb9nTt0BBCNKcy8eycLrTP2Xc10doMjhROn7G8m4YeEhexTRATI+sh8R
/56ALXpHPhECHeC4QFLWh9Nx+L7Tq3j1BAc4KPDgVKxnBE7v+/Hkb/0uX4/v
n11p3bBS1lrJ11YHkBqP0rkZbYn/uGx5Td52AJ4Z538hc7LYkm0/c+uwA1hX
XmiL2bBDQu4nDO2/OMBQWQCKDQ5D0wo8/+ksO0DZqsDPs2qRKPOwwB/5DQfw
Z5o8IEsXgzbvSRYcpnWEhy5fBOKcElFznqwb5SFHOE+ll229JwXZeCrILXM4
wmZoG9Ony2lo6Ijm+0d8jiBS1PbsS2cGCvqhe+OWqCPs7L8yWTGTiUQeGIdV
STvCrWiPrGt7s1EOwZ4rRNUR/nzWzonjyUVqyq6/XLUdQZnKf+A5Tx7aPka4
b2TsCJQU1IxWR/KR3eA1RzFnRyhJbdhKe1eA7OV4tda9HEGuo4Mvoa4QObaO
Sfb4OUKNovKxIcci5MR77XhYqCOEPx3m3zhcjJwLz1BdjnUEC2/mn296ipEr
09g32lRHuFrw8ICobglyiw6cGM1xBIHvStw9b0qQ+yZPb2aJI3D25TsoGpQi
T6+nlcY1jlDB3elQ1l+KCHMBicebHYGv8kDTy4NlyNuEx2e2wxE+icnjivNl
iDg6alp7xxFCvwWanTEuQyTFgEvuDxyBg14nzch7d57r4hYQe+IIWx3hFeci
y5Df2dFD6xOO0K1mO38zuQz5V/hvdL91BPIDj8OTaWUo8DD3TOicI3i7G5Ir
k8pQUNKTIaVvjvAfxY+Nk+FlKHiPfwvtqiNsy24O6HmWoRAyV97oliO4zDw0
vqJfhsIWR0Iz9znBtsBs+5FzZSjC2s/JmN4JFq5OSz2nK0ORL05fPc7iBNKd
3AKHbpWiKPURqdmjTpDEckG0Sb0UxWDyiVouJ8j4m+7XOVaC4iROU7sLOMHq
hoOmm1oJiq9/vCQq7gQvz84K0ncUo4QT5BdrF5zgAHf7xVmWYpSUeepOt4IT
6LYVOSvt9ieF5nFVqJoTROwvr41uLESpwb5JSjpOULn0+t7WQgHKcHpkNmrt
BOGrboysMvko6y1JMdN5l0/Rg+4ovTyUrXNS0Jiwuz/hcOR921yUJ0vanAl1
gp288+Mx9tmo5OCJ/LUSJ6ipGvjPY286KosaCuuucYLRAH1xkxupqHyD6Bza
7AS0nMT3ZprJqOrj4Hnavl3+pMw4U+c41HDL+yXnOydgn4qeVfcJQo1CnH0z
c07gT4wZNEd+qKn8YXXNNycoySnPq6YkopbEY76i207AeTud/h2TJeq0esCi
dMwZWt7ZyTeNuuKuCa8tGm5nkBM52HUljYhvqx39+ETAGSpa8reimvxw7zmv
NiMZZzj7LD1p7V0Y7t9/RMfNxBm+tPz377tvAl6oFFZ/beMMca9KP578noQZ
QElRxdUZqM7E9rju+lFjfy9J7mvOoGndLKiyno5DWKOF0yOdIYRJvJbuQCau
ain4byfRGapjmeTZdu+jH58fHJkqcgZkq3JqhTEHs0ZPMatVO4OQUgXH6O8c
LHN6mf5WkzMIRtsV0E3kYus71FRnOp2BI+mbqmxlHo4x4fyX0ecMP1PFSjft
83HjmthvikFnMKfuaf/FUYCfp6v89HzqDLZZG4cn+grwn7MWX95OOsPBE5ct
1A0L8fFHxFn1aWewK/rDxfqhEF9yjJvq+uwM2VXgu2lchJ33lkzwLjvDuZ8X
6x8OFOGUkptPsjacQa8/iKRyshi3yww/3LvXBeort+5ZuhXjNy/fYwKdC/ga
pD5aqS3GFD6rXe+ZXaDnD63C14lizHuQrk3jmAsUunUrX1gpxleun7zeze0C
x4XMU2d3ijFBRbKKT8gFmg+eTfjytxjnfFQvzpFwgU8bO6cNvhXj3lDrHEp5
F2BzZeBDj4vx7DFyKvGyC5TrXRwdLCjGNF2JcdOau+vV46SDZsVYWL88XMvQ
BUa5NXpg1x/o/+wM7LV0AXFm8UM5zUU4IGnER8DJBb7fIsleuVSES/hm3fO8
XEBNdnKreLAQ37//24Ha3wXOSD5mfnuxEH+1PmBFCnMBJo2mVdO6Asz0l8t4
Ns4F/sqIChIoC7BUvrSOdroLMHbM//PTy8fmklrqffku0KRTdOVddh6u9QiQ
K2hwgbuxt6RJ6zl4hDZVkuamCwiu8lYnseXgleoqYXKPCwgBx8eX/Nn44vun
p3RHXOD+gK0YjUQmfqHFS0X33QX0jFharvcm482vsv/81l2gY/oNn5d7Ij4V
q/N7/p8LvKf6xNd6MB6746Av/Qdd4e9Au1+3ZBTeJzr+JEDMFaQeR74YViVh
sUNhOV9IrmA+H6DvkkVC3TSTfINBrlAkH/zmiFQAukQh3FMV5QoMXSqqZ4eD
kf6PqQ9WWa6Alm3ssUUkersgTpQvcgWV+TBP68Ro5PA+nvJYlSvwaHzuvNcU
i8hPzvO/vOkK6tm6XSefJKKd+yk9N3tcYfPv8ITKUDKK653XTB9whbmxp9LF
7ako/3omUWPcFW79XEwdbE5HXJVfKQWmXIGT3eSWalIGaihQyN3/0RW+16qO
j1lnot74Hz33VlwhyPTSh6ylLHQ5XFmrbNMVmvTWhs5UZ6NR/+Lp4L1uIIXm
64i6OciQsEo0o3MDct0Gt+RaDvrgdIXqArMbrKx+4/gvORc5W1Xksh91g4fS
r6vpjuahn4Yb/Kun3UB88rRGY2EeCtDS7n3G7wYBm+ekXh/KR3uVa7VuiLlB
/drmJaugfJQo/2866YIbXJ18cPXwVD5ilTTwcVVwg3XPwK+zZwtQkVAjlaqa
G3wQTH9XSSpAZ3j25Z3RcYPaazWJ8jcKUPMxU4F9Jm6Q5ShKKtvVVymW1t5p
azeYmnSJHdgpQJiO5mqfsxuUaf6+W8xWiFT3Ws0UEtyg+x6Rhf9kIXq20eET
4O8Gw+UPoz04C5HpMgO1UZgbnJWoueJ3oBDNfrbLk4hzg5JQ/QLdlQLkNt0t
wJzmBv2ZNQSmxwVodfLQnR+5bkAn8lz/aW4BCnrqfPVJqRt4fNoRbDEuQFSD
eKahdpe/bODP8QMFKKWPnRR3ww0MOx9Z2t7KR4c7Pagdb7lB4de3L1MM8lFZ
0/08RewGEpHm75M/5yG+6mOCpwfd4FfNuEYWIQ+1FhHv/Bt1A74EC9MPS7lI
Jmv46tuXbiBJJSzeYZ2L7iWemr393g2otEM8zYdz0ETgKLXvdzeQrudtvhyc
jSyIZ/J113fzjX89JjychRZcggRF/7nBPdexaGGGLPTbWEB78YA7RItpt77x
z0BHz8fk25x1B2f7ydv1P5JRpfA7QSTpDi1bjr4ajElIiFeij1PeHcIqjXei
TycgebbZ2UkNd+DokHI35I9B1r/khbTc3eGZPXe2XOs1dICZYmyC5A6gu2jc
etAPdYve8zELdocqZmMLZQciYvVU7nFOcYfP37sDmnds0NBnLfXIFnfIMv1c
m5Rih333H/pOe9sdqDqkmyPG3TEX73h6Wr87eFE8wOf2+OAgO6PXxc/d4Z0X
WyiZKgiLvrdy7lp1hyKuMGPB9Bj8bvs0A/rrDptjT73uZMfhhGNzNx5QeYD+
aGrjSGICnjN2/v2c3QNoq6/mWamm4HQ/gUKTkx5AKSdeF0Kdhi/mfLs4/Z8H
SNn+46n7kIbzxgkxS9Ie8MHGv/o5KQNfXhEXICl4QCLddssB0Uy8wrT2ZFPN
A4JmdfrTpjNxqcgt73BdD+DVNVfaE5OFNbQC2GjMPOAggZzMfCobb7jL3k6x
8wD56+fSg5uzcU3iX3M2dw94aLHfcUs0B+s1YIoikgfs86921azNwRTD4VVc
wR4QvkCfe+lQLm76pKhaH+0BhdvivNc9c7EpNfU3kRQPuJL5RMME5+L9Z4ZS
O3M8dvtxlSi8Lw+3Kyacky/1AH4zoGeRycM2thqTA7UeoLUuVv/DbndeCGe8
pt7iAcaZA5PtYXm4p3TsxLMuD6BfzmS13Z03nfsy7hn1e4Aa8Uv4n4w8zPZO
3/H9sAes9g7NBMbl4Xtb7HQOzz3guvHG3U1CHvY6+rpp8Y0HbC44ZKZr5GHO
C4U6xI8e4G/y8bPxsTw8bGSx9mfRA7p/5LF4v8vFZPLJ/NBVDzDRKeSjzczF
3NkzctR/PaAyQ0lEVy4Xj92snE6i8gT/sL2GIa9zcPBzhygWRk+Ytz2eNeKa
gwWW/+MrYPeEvIcO45E/s/Hkwa+PT530hF03fWLRNRtHCTd61f7nCRF+z9K1
3mRhMU1PFmFRT6itnz2zH2Xh926it9qlPUHEeXbCKz8TS9e3/+tX8wT3mVn6
R6IZeH6QXKGq6wn4bvr5ZM90nLEgrfzU1BNWBnIkCyrT8DfuO8lv3XbxlOme
3/yajMtLHnD+TvYEmqzI6rn4GFxkLjRpkOMJrAFHHT8WR+G8o5np7SWewD6S
JNpSF4FTcqypiTc8Ieil7p0ezWAcmLL149uYJxwkPWQTSnLBvhq2DVdee4J3
yKfUF4I2u15i2L5hxhOMqsfjXNN1sGNMzmunFU8Q+kLZPvX8KtINERuYZfGC
lmvmZuGuJKQplxeswOkFN769W0au/kh189/5Mh4vmMvesikzDUIXySONFpJe
QDjIK9+0NwJdkDjn1CvvBR7mzrI/30UiiZX808eUvaDMWUWtrSkaCXo65bwy
9ILl1g4H9v/iEa/QqPZ5Ky/ofszuuf9pAuL6KkGf4+QFCSNzrAeckxCH494w
PX8v8JQeOnrONRWx8LjItIV5AUnYTGbVOQ0xzj5dZYr3gn0ffrXNsaQjSsti
l9F8L3hzR/3BgGYG2jlGyXO2wgvy+A/lcb/NQJuvXd8nNniB4JmiKcKu3q3l
Psv72uYFJeKnB73eZKKfBtJ6aj1ecOy80q9vallokaX0QN2AF+h9/ird0bx7
Hz6jGqIe8QKZzeeNeTTZaCbVPcJhwgsG8v/R+xplo7ea43L333qB7kWfJsHC
bDRJL/Oba94LRMbbjpeMZ6Pnw2Wt4UteULAlFNVJkYOexO53n17zguA5j1BX
rhw0dNmTF/3zgrSZ9oAW6Rw0G+76U2sfAbI+ztaGKe7q63SxZsh+AryOfpU4
fSkHvUXPGproCeD0LL1ySioHvSmhpHl3kADPm08FBZ/MQa/+nndgYCWAfdfv
xMntbPTC3O2eLAcBLhkUyNA83eXTU3LSjZMAd4Q/VIvkZKOxo8+DCk4RoNZt
ptFTd1fvA6jeDPMQQPX7uZmf+7LR41fS5zf4COA6kt3/pSELDZ13z+I7S4Cd
SpvtJJUs9DCndNlIjAANzz8QD+3W8/7ac61YSQJoKJkydNtmon596sbOCwR4
9S0idGQmA/UyeziyXSKAze/wEs376ajbu2xASZkAjp5nyZZ86ahrbPwUSZ0A
zIPGew9HpaGbKTJTz3UJUCyesTakkoJsCxmpug0J4CLBWc+9mISY62aFy00J
oHL/2kxMRCIi9CdEeNkSYOlN7TOatDgktPqGn4FIgI9SXXxFFyJQlck1/8vp
BGjyIL+/22mD9ByvVghlE8BS8iCTiqIB2uvDPcKSTwDrY55/CuzlkHXS45Oz
ZQSg/6hUnnfaAHPiY4MhLbt8zguGNJ/ywY8f//jp0E6A7jt/TEihZBz4auCo
ZhcBPms0jn9+FoBfLbt5Hru7Wz8WzRk23jCcxdPL1vWUAIntqokt52Owolga
Kh0nwO/hsxx+FbF4Rd7eJWaSAFuv653v7InH2kYMd/Q/ECDqa8NUUmEi3rGb
XpD9SIAyUXqKrYkk3ExoZ+L+RIC7I6wZtylSMEOCuf3ydwLE0r3/Vcuehnty
RFNerez2Z85lf2lOGnatpOzC6wTYY72o9IYxHR9peTVTs0kAAx9vklBoOh7q
baRP+UeAm95Zt5w/pWO/4TBJ373eIHt+vs9WJQPzvtS3Mqf2huQHrDLrJRn4
xSxfvCKdN/zaujtG+T0DR/3YbhNg9IbCN1RXCbt++9z22NtDzN6gUOlacoyY
iWdpqqk32LyhYrGS+VdNJk5nCxCdPuINtmuqtz89z8TApWk6eNwb/mnsr/+6
lol/CJ+Oaj7tDXYsr+a/H8zCJbJrTdlnvOH19Pfry6eysKbq8GQQvzcc+BiW
+4svC2/rF++xP+sN92vtLq/9l4Wv23gLXhHb5ad38srm8Sxs6nnZQFxyNz5s
D5GJPgvTXjsSeuSCN1A3Kt1U+ZGJu2KX6ijkveHRly6GlkeZ2Cmr//kn8AZO
rqPFFsWZmL08e3tUyRtM07PfeThl4gdNLrydqt5w8lBI2g5fJiZ1y2sXa3jD
yMsnqWKzGbjDdHDva+1dvjRbmCMpA69vanewGnjDXbmJtjihDCxd+MZJ28Qb
6O7YqnUPpOMAWfujSRa7/NcHij7ppOPuqaWRQRtviIjgu6k/mYa3r/mF7nP0
Bv27N2zV9dNwSG/CXKCnN4SE9ed9d0vB2Jw1t5PoDfXWKV0VUsmY4m+x2grZ
G5IOMAssrSTiCPnWZpdQb4hd9djDqBiPY/sm/Y3TvIFrU2Tig2EkHrK0EczK
8oZ11cOOMBCO6Xa+vnuat9ufKyvy/v+F4ST075JKuTfkhQhxvegIwGl3eQ5I
tXkD6fY7i7PHnHHBPe9ylglvMOjrf/KaxgtN2W7pXX3lDTkHeVHBayLi3BdN
nfh29zwpavZrXGRUopjntnfeG6YecO4pjAtCHz6ePnHxy278peCx9IpQdCrq
+ljAkjd85FsMmtIPR5X3+ySX17zh/XGGZy1yUWjOXvWz0KY3SAtH/Q4pjUa8
VM8LnP95Q+Klwvg/azGo7vL8zgdqInTuoX0gdy0efZn3bDtGTwQeNoNfo3UJ
SCDmj73RQSLY81ieSRlMRI0P6R+NHiZCreg/S/uXyWjJMTuIjpMI58BEO+ZB
ChLef1JE+RQRDrTcw5OVqYhQWzcTzkOEUssoAX/pNNSqIp51h48Io7mtc7I5
aWjlU4/yhhARQgNENegX05BE3OUNCTEiKLjlrPdKpSNfvqfXCZJEeLk8vCYe
kI46h4wtGy8QoX7Q8b1uWzr67TzL9FmeCNcopb32zqYjaVr3Ae5LREhbb88U
pslAAfVrvlbKRLBYGqYe5clA3WqhfIXqRDDgIUu/Op+Btr7QTL3UIsKHC0fU
lBUykFxCRjKzHhEIx7gfc+6uQwQ4QcuICD6KHIccduPxo+qVeDMibJ3tDOPb
Pa+NY8w72IoInp2ikQ20GajKcfMnwY4I6ku65fs+paPcdh6CvRMRyK2edWq9
6Shh79UfRm5EyD5GV58Rn46CtAM8r3gRYX5IlnVLKx15lVQuXfQhgtqxS1+r
GdKR7bcn7uJ+RGhne+3XeS8N6cv8WTxzjQjuHYQObe80pBLH5XYklAiX1lhm
SznSkMxLja8MkUQgKl80q/VORSeJ5Z9/JRDhSrH0C93hZMR897HTpxQiTPQx
urvMJCFKxvWFNxlEOLSPmXv5WyL6Wq8+31+w259s0gPh6Xj09jfJvqNkl4+d
4J25oTj09HLpx7oKIngHvDtHVxuL2md+zaQ27PZvoanh8eVoFHqk+L1F9y5e
huNHn+NhiDX+x+TGayJsv+7N7qG0Q9STR4yW3hEhMOfx/WZ1U7TBo/RyeoYI
lUOH2u4f1ETv7+ZNDH4hQpRyzBb5swKu/6PwLHuDCM2xb4KG89xwkbK7dvxf
Iqxd4E16W0LAKVk5T4P2+IDhB+HtMScfTBJdfGJH6wP9oeUmF17544vOWY/E
jviAPi2/1oe4cCzW2ad25rgPrBhMhOv3RGAeyi9DHKd9wFlN6ITLXCSmLZMf
3OHzAe+UQY0Ajhi8veSk/EvIB2QcSjsjuGLxd9mMBwuiPnBgjc9H8XQcnphc
GHgi7QNWL1UpNLbi8cMzhxT75XxAW3JZ8/GLBHzbR/ZeO/gAU1yluXdlIm7s
d1CoU/KBrCEW2e92SbjkYNrdQlUfOHM0cnSVPRmnW3SjVA0fUJ91Oyzdm4yj
rs/1RWjv5rfk1Oyjl4LJG4wXyfo+YOv736L32xTsonLhjouxDxwOEc/7Z5iK
v/MdedBq7gO3/PZ5o8epmEi3MbJh7QMRqa/qGQ+n4d+LryYUHHx2/WCFQA9K
w0FPut7Gu/jAO6eLyVlWaXjPjby5Zx4+sMlxnCuZnIZj0vy/HSH6gIZApkdF
VBqmJxqv2pB9oO33l4yJ+DScpie9XR+4W6/wt4d4YtIwmyQH5UqIDwwYYnJ+
QBouYP9DLxPpA0e4BKUu26fhE38mWSJid/EW5o9IK6fhyte3jj1K9IF2qdyE
6JNpmK8nl5s5zQe+Cr5SzJ1OxY1FfoKmWT5w6iing6F3KhYLMTpXkecDhHMa
zQnLKbjT6rzs1yIfMAmNc4myScGyCocVxct34x2lciv6k/Fdrt/qgdU+MPpi
8ZMSczJWopzUvVfvA8zSthef6iXh4flOU7pmHzjv19F4KyYRaw3m2Oq2+YDN
UYJAwPUE/LyO7FrQ6QM8v1+zpt6Lx2/dpAIFsA/QNi2ovhuOxTaa7BHEAR9Y
HXDLkemJwQvC6/Hdg7vvXaJMz5ZH4x/LHfnqYz5Q4jz30FYzEu/1l7ztOuMD
c79U/Wx8gnCsCVt/2/zu93LKyLHufgBmkF0b2vziA/BF0fwonR9m+9f+KmHF
BxYrmA9G+nljviiJPw37SJDkmva4jtMYNzmwUvzaTwKNbz85orjVsLjK6n5Z
BhJ0hUgYsiYwYTm69sOPWUlQejDvasaiAbqadu784hkS3B29nuvdSEAT3izo
nAAJGrfbTxyy8UHGer+UrwmTgMA8Za5JS0a27DcN6c+TIOq23WlWkWvo0+8M
Sz1ZEjyO5jz3pz4Yub8mOhai3f0TMkdTaMMQuUicLKi6G3/6vkq1QQTaCmYO
8dEgwdP5i2l/3SJRmNVKdI82CTbokrQ5/aJQPFdb9hUTEhwWUjasdYlBjJQZ
xZkWu/Hm9JOs2rEoY967esqGBCPTbIXG/HGoqE6sw82VBEWi0gWDbfFo6LXd
UKknCRx39m5wWiWgVbqcqXEiCXoshYyM/iagU3JD3/f7kWDvicZekeREdMVj
c4/ctV08sREja8YkRC4RYiOEkoBF1/1BW1gSqnhqyVcVSYIhBZ36rY9JaJQi
XfZVLAmIHcZzB6WT0abYgBZDEgm+FnEtDAclI167NRtII0F3vvp/h9uSkW7W
f76kLBLIBvWIf5lMRiEPTOLq8kiAzvw7LP49GTWsJxa+LSLBl2uSaHk1Gb38
r6+ZqZwEKqzvFCS+JaO9Jj/7lap387tBcqGdSEbCCVwv/OtJEGIw7xbRmIxM
evQ/NzaR4NvNYtKAbzKK+hazNd1KAkvlog/rIsmo5fhtRrbOXXy3OTGVqST0
VmvxtFo3CVSNjvR89ktCNGHHJYP7SJDW+UL8JHUSkmi9qtp6jwR7alCDSEwi
sp4NN5t/SIJaQ/5f1n8SUBJLu+eRxyR4Qb2yl9YiAXUpLYRrPiXB53MesdHt
8WjOlyM7fHy3n6p9lyR24hBTrXpdxyQJ7HU6Z/3l45AT7Y3R49MkuOpW2pOU
E4MyZGZmdOZIEOpQxq3UFo363FjWoj+TgFUsZ5/rQBRiH/U79v0nCbQz/40c
HYpAl3bqhbnWSBDwcrSsozcceYq+VTDcIMGn3xztn+vC0MMMcO7b4ws//hPn
eTcRhHyNaDtSmH1Bq+8+1c5lHzQxXaAlIuELQV6r0W+7RDEF8xMbO2lfeGZv
eoZ2UAMLKe6QcuV8QaBhT/zfeGMcWW1XuKPkC6trvwbH1B2xuKvQ56cGvhB9
QGYu6yEJWxZabu0z9QXLI4LJg8x+OGEkjVHa0hds9ux5bKUTgGeF1yTKHH3h
Tfupj5blwTj9151wgp8v3G9eV6u9FYE9n6fZmF/zBfegKcql+Eis0WqnoBrq
C1dbv155oxuF+dOkTktE+kIirdHFE8zRmNqLds+pWF/I82045DwYjec0307T
J/oCzZD9W2diDO4XunH3d4ov6Ej+1/SOORYHfdUPe5rjC4eXxwwEzsVhk+H/
rHsKfIH4kpI3vi0OS9VtotqS3XWCkpQfbzxmjX1yMrPCF3rtVs4/SonHyw5l
OyE1vuBj/2TGaDEejyr5fHBt8IVw53vpW7IJuJFbGRs2+0LDBOlTcVgCjt97
pPRSmy9c8ZF25r+dgB1nFkOEO32B7B16N24+ASvd7bM82u0Ls8UXbjZTJeLT
pekXqft2+essrOcfScT/gu1PrPT7QncXSVr9dCJ+a37+37sHvuAx01yJORPx
bVm698PDvpDGiDspGRJxztF3dzqe+MI9ep3Wsz8SMGnjRnH5M19IHlyUuPow
Aeu8ighOfuELU3lt2yHpCVj4loFFwGtf4PaYyn+vnYAZcvjkHd75wqOifc9y
KBPwF9IWp86ML1Av9IeNNe7qt97otty8L5ha+AV1qsXjKvHyt3xffOHgu8AP
oVNxOPwQqZd1yRcYbw1EONvGYbmnR4K+rfpCc1Lfv3jtWHyk+ZvZqz++8DDS
hVOjKwavJ2HZ+9u+cHb0TRtij8Gt6g5bhZRkWOZZmP3VEYVT+KWnYmnIYMZJ
mWf9JxK709D3+DCQoUnk5H/64pGY92FL4BVWMnAy+A9dTgnHlNWRpuc5yHD7
06cLB1rD8EykoQw3Jxncf/p0j+eH4iKF7Y1NbjIoRNexHf54DR+6oxLQcI4M
yefuRjas+eDvhUdNcs6T4cS+bNia88YjgUvSEbJkkK6mnLhS6IVjpDP/mCiS
IckyKLnzuBPevvnej1aPDBM/80r4rFXwQoMv2ZlIhj6vBaYRfndkePzf+zoy
GVj2pi7pqhDQg9QYlS+BZDi+rbkY40VEVaRcDtdIMnCzyh37UERGrJ9OhjfE
kqEMei/PlvqjSJO6L18TyUA6cotolxWIbC/e7nbL2sVzZz5KpRWCnrcocDfm
7eZzjT+mjCYMKXA/SvxWtFu/E+5Tx2fC0CmaKXOPajIcnZlxPewbgdIC7R40
1ZNBncrg8qBIJNr5tnj2exMZggdDQx59iETvn23/8+wkwzjbBk3oiWikpRTt
dKObDDA8LJTZGI3udB4Y+9FHBok3Hc0jwjFIiD9HWnRgNz+lgfvfq2JQUeGJ
csIgGfgFrZ/3McYiBsZa2tbHu/F0AyqH3GPRtTAR4vJTMhyhyvpxtzcWfV25
9UZsggzrfiZtdRRxyNQBFImvyNC73Np+/XwcejQ5dL3t7S6+gXJJj00cuqCu
w/prmgz6f7bSHofEobre10Hn5smwcfCe41hKHOIQsZ33+UIGFe5PX56kx6HY
8q+a7UtkGNEjZj6NjUPrLD6dq8tkmB2uWp8mxCHHmK0Tkuu79R66XcqqGYde
/ImM9d0kg4eWM00SZxxScmP42fGPDKfWTua6ftj18++yjNf3+sEJ1+yZiexY
xK19vF9qvx94cvM2bqNdPb5Xze9H7wdUN8Z+HXsfg/ZKCmfcOugHEf9eTLoT
Yv5HcXXH1eC18VIpCg0VSRIqhEqS1nmkpSXae++9773d2923kDYNVJRKQlEh
5ST9KiFEoUJbSglJKrz3/fN8znq+43nOeVBUef3iL4kEmPs3WLH3FxsNbkQ+
WhsSID3i3PEb0Wxkndr+hCCbAFIsxrT2CAs1/z2mcU8+AWpaz5ttP8pC+6Le
Xvi9PQG6XrMDWkuZaK395zDSngRw8DiJb+ozUFJHVG+DWgKskVvP20Kho2nt
Rf2lAwmwW6aDvK2Whp5uERYl6yfABzQ3eVAsCelmZRMaDRJAHmlL6x4jo2v8
skPLxgnQkj745iyVhE59VrlFOZYArzS+vD9yPx6Z3raypXomAPksb29uQhhq
Nc7KYzASgNNQ6ffT6DAe87//jMThnr9yH+U3yxqvTB5dEXMqAUyGPNS/Ozli
03bNMJ+sBFAL+vXL6pMPfmrSf9jwcgLEDFxJ9/eMwtMB/Am6ZQnwNFf9GUcx
Bq9N2VOlUZkAllTLB/nDsdi6gyq141YC6Nn77Tl7iIBfmW6fEmhJgPeKcmG5
Vkl4LtBS/u9/CfCuJDR+XTUVrz8Zbzf/mKvH4TqzZRoNH7hadGrmWQIc2//6
18hWOrZ/3IHHXybAzraXl4gNdJzw+dvch54EGL+eKk00Y+C8VZt2vXmXAKqf
OtnlLxm472hYTvtQAkg2fjlzv5WJl4LOPcZjCRAofTZXS5WFZU/hv3c+J0AT
a6BQLouF9Son9ldPJ4Bhss2Bo5Ms7N4pFlTxLQFE1hbNZGuxMXVSu7D4ZwLM
kl6VfCCzcfFq31d5vxNAYvXJ2vV32PjhrjNCmX8SoKDtaei2T2w8bFavd5KX
AETOSq0FEQ7mC/kYTRcgAJSEH0tW5uDtp4UqiKsIECHbtuv5IQ42uqb2PmoN
AfbvLpB5Dhzs/8RZPFiMAIKq+XMcPQ5OnmKaeEsSwOvoFfxvHwdXCF8nO28k
gGqElbcZt797vLu35sRmAvy7YMRPmGfjSfN/42ZbCSDnuqxwvpONhUOVZY/s
IIDMmk+zL3LYWCX1+HGdnQQgndzzn44dG1tWkTj79xCg6r3+vz/CbBz+tOT+
bjUCuBhQinTvsXD6l6ez2w4QQPaMX5iSGwtXi8zvkD3EPb9yx7fZX0z83cI0
Q+QwAcKelKTNiDOxRFjUf/xGBDiX6k3Oz2ZgjTMFi8umBLjNdxSvEWHg+Gdf
fKetCeAoORziNkbDudOSBWO2BNjOd5/5zJiG765Bz987EuDOEdYxewMqXrTM
PNTlSQC+vqTFD0wy3hTeEN7mS4CpgmgtQfFErJs2UvIgkAAat/9zrs0h4qSu
A2tvRhLAV7XSOp4Uj3mP9Q2n07jxXFr3+uK9CNzxwG5bLIsATqqfC5KcQnHG
3pc+jikEID9cYbv+ayCWX9sxKp9BgOR3Fw1TeL0xPKsbrykiAL+0Ed2ZhLCQ
nprSuRICWFh1f1HfsBq/qKoKIJVz95986ft0WAt5ppZMGNwkQFr25Q+S6raI
Zp45+eoBAQ6dfFPaVBuATO+L7L7bQoBPE4JjxH/BSHR3SsiFNu75L54GC+qG
o+LV1C++XQR4tbUz+5RBNAokLaoc7eb6py9cK6Y9BqlOxoXt6SWAyHG7nZkG
caj5cejMz/cEePBI8tavDQSUcmhib98QAaJzOfJrY4jI+qpPxIMxAgiH8TR/
byahwRTnWc40Ac6YaXLWaFJQxUKPasg3Ami/eH5E3zUJRQYejzr2kwD7FK9c
Vo+lIh5T0+/SfwigUGLn0X+fhjruPFJf5iFCWZ2liLYaHWUooZhBfiJQ1sWZ
VxbSkWNuw+1WISJcbeQz5udnIHlBzbkKESJ8zp133OrFQBPxNRpnRIlg7G32
u6+OgarHVeKi1hOBdnB+q+gKJiLYV9TZbSCCQMk98wojJoK2bfOHZIlgWMRb
cZrGREKaRZpy8kRQCB2runyLiV5ckUlYsZ0Ic899Bwf6mShP8tydcSUi+HSI
eaktM5EnW2yhczcRgvJTrudKsJDyz1Stm/uIYJEi/0ZQgYVmfYWI2fuJ8Dzf
yoihxEJ3XzPvJRwkgpRh7LU121mIZvjvt4sOEcz3Xh2tlmYh01qSNiAiCE73
vYpZwUKi2+dJ249wz69JZAWMMtHb7Kj7QiZEEBrUeXapiYmK+aaXvpgRIVeW
la6VxkSBMYG6L62IcNbpk9UReyZSHRkh150gQu9Ls8/Dkky0cMKjKd+eCMXV
uWd0njFQc0vfH4ozEWKIFSFRZAZKUbfX93YnQt1RSZFr2xjI+vLLJGNvIlji
kMfSj+hog7gl3uVPhNi8V2s+O9PRIL3j39pgIpyj+RtZT9FQxbcj8COMCCfW
oy/0WBqK9MK0N1FEcHI7ph47zdX7cD1vMZEIC8ferfLvoiBnw0+dbylEyKn3
wjeyyKjWZEOOGIMIb8XU/1s0TUSBViRF5ikiiNlj4YQ0Anrpom/uf54I5xXt
iS5Z0ehyfFuOShMR5O8/ZfMP2aJl4i83v4dE8OWN+5j3yRzZU5SVCv8jQp7w
/VN+YrpoNevUvXVdRNggdzNH3FwHx2Raffj+gQiOVzluH/964q4cavnuESI0
un3js7fwxcp51ZG+n4iw/j1WfpYagAcKxfl6v3L90n3wiNZgGDas6lW6x0OC
Pd+k6D7dsbjwpuC3b/wkSDI/3796XzxeuKXVsGsVCb5YS+9VpCbgqnsFFhfE
SBBf7da84xcRr2x6ItkjSYKBocT055sTsWfz8oc1MiSIfL7XjHWAjCXb3aOo
CiQYtxyNnTmQhCM707XvKpJg+F3LyM3NVNz5rJnv2y4S/PFj1uXMUfH2l9+e
7txHgr5SveSNbjSc9FrhnPd+Eqyd48HSd2j47Rsbj/MHSbDiQ4uQvBAdq/ez
lF/rkODezJVva6zpOPVD3TcRIMER1DjxgPufHh8abzAyJEFgVV79plY6hjFp
VpIpCdrtPrmLzdJxwYSp5R0LEhw/6bicKs7Ac1NEqVlr7lg0fJS+m4GtvlZ+
VLYjgdKA/Mi0NgNXfO+v8HIiQbZQa+tzYOAV8yLRBW4kCKqoPKmkx8Cuv/V0
XnmR4JTmy5l/+xj4znI4v4g/CWQscu2CNjKwOE/xM8NgEjy09FGN/U3Hodw2
hRJOgicrnE8feEHHbStXeNZHkyBgnmP57CIdy6/ev/NrPAkKpRRmXL3pmLTG
97tSIgmgdpC9Uo6OX4ueve9JJcHE7ar5uRc0vHd9GyufSYIZxMxwSqThFOlf
lt3JJNA3H+7w20zDOR0dIy2nSeCa1+aKyVRcRCwg3k7n4q39O/W5OgnX9+td
ycklgeAt40zmNzJuSV2nwz5PgiuPa0If/03EXXpDL+KKSODmX32IhycRjxWx
lu3LuXhcVq/TGCTgWWv7LJNrJLAO3fZGvTkBL/MqK2vdJIFt3qnGvefi8Xrf
JzYb7/xff7txe8VYbKAsfq2/jQRTl8k9l5+HYat3I/C0kwSsvSkCPKIh2OlU
XW9jFwny/yrJzBkF4sgvjisKe0kgnCB8pTPXGxdVFzl5jv/fj0jVe9AcL2vt
ERoTSISaufLbB3Z7IqHJvxd7ViWC3v6vU+E/vJHE+Rf729YkQtE7RTmVGj+0
60+MR7lkIuRefzZrIRSCNG8Y/czdmAhHdA4cdSkKQwYe0qdTNieCbs9qz/MS
kcjpYUN90I5E4HyIGghnRCPf6FQL552JcLvzqKZZVQyK3OY+bLYnEcwvcDLD
nsaiFDbvWpUDicAXHfwhbzoe5Wi+KpE9lAgDfOE5TdMJqOhT6aE1eolw65yC
psMwAdUfNfWbMUwE4lZHjmU5CbUsblz6YJoIO93cMn/EJ6Jn16YynlskAiac
9c8+REZvXZsUm60TYSUKwv0zZDS6Jr2x2jYRHv+z+J1yjoJmH3ieuOSYCIbF
jRcdVZPQcoT6RKZrInwtC3oi1JiEhLbyJzE8E6Eh99eyzyEqkujukYjxTQT/
jfsJUEFFcszyqz6BiSCad46izU9DuzSIyDY0Ecok2ka+qNCQ5phZj2Ekl+9Y
6uHdVjRkcE425EAsl1/SzNh0AA1ZmczwKBISoa/8zN49JBpyWsDnpMiJMPX+
1MoRFg35Xs1UEaQlgspi9aRYCrfeOvu0/GImwmIpjylm0tDaoslB3ZRESLl2
w+lCPA1VjUT9o6cmgviF6zfuedKQmfLvze0ZiaC2YmO3igENfQql6YqcTYSF
8rYlkU00xKoRdDmenwg7zFNERnupSGE+jXjuYiLcDXJ4suBPRc3aUnn9lxLB
dyg37sp4EnKnXqyXL+PybbIy+6A9l69H23v8Krn8CDhv5qunoAKhqh+VNxJh
5rLIt/CVFKRluV989hZ3PmvGYcyEjHoyG1QP3EmEUpU0wktSIoruPXyMdD8R
BD/+VaoqIiHRTY/DME6ET99fyv6uJyKL0jeVRzsSQYwW5P/3QQKanHB/nPY0
EbwlFcJ7q+NRyp7xT69eJMLYTBDTPTcOPaqf2+7+LhGWnrbFfDeMQdqPxYqi
J7n40euTGUGhSHnGPPu8CBnctTOe7NU1RW3qr2oGRcnAo8TXMR17CPkmOL/Y
IUmGZnKSNl85HyriCVpTvZkMCsVt9fIVRlhKgpPcupcM9g1hTuezPXGtw5qy
VfvJsDOK2+UY++ATF3JarQ6SYavf+H6JaT98ZkcJ7ztEBsbCMxMBbr7yazUn
TluT4Xxsl6umYTS+TDYpULcjw57jtryWzjEYHnbdTXAig/x3Jw8Tv1icaPb+
J683GXLaLyo9dojHG9J915v4c/fPFIa46yfg+ldT6qnBZPj3Slp4TJqAv7su
RkjFkEGG+eur/GUizrhET3NJIIOpyiEFuRMkvHdc6HpxIhlCvo8/PvODhJ/u
yngyRiVDoXD5QSVOIg6OkJ7cxSLDp2MBmddWkbFQbaFQZAoZZL/2bx+gkHHZ
wg6lulQyvC93MGEMk7Gh3nWjxQzufPSkEukgBQ/RNXzRWTKo3BW6eplMwYpS
a9Mi88nAvzlrrVANBQdXfrpz6SIZbFLfbOfvpXB72odD3ZfIIPDbezZ7ioLn
uguE+cvIcDgFKmq/UfChgNgDByrJ8EuJYhQ0QcFJS5Ye/jfIUH5giNH+nIIf
pSudzL1FhnVE5amJcgoW2s57u6OeDJ6HX5/+FEnBlnf7Bn43kGGpiWA4uYuC
syxqV+7GZPCvWvDZ0UvGvYNnVF0fkSG2OKT/WTS3P4gLcD7TToa3buXXN/GS
seeqw6wHT7h8VkW0OtATcelFmRtfn5OBePJN1wsuf5/V5t7IvyaDpv/Dgh5H
Lr9tz3hPvOXiWwlWTdVEHONcvps5QAZK+Zv2L0sEfHeGZlc7SIZdJIndndoE
fFha46rUZzKs/ifyU+tsPOZcW/PKZJoMPX71U3dr4nAn+rRM+EaG2RiDtDuP
YrFtYIF1/29ufCKeB7U6o3H+cgxJ5C8Z9hIyvV/gKPwhw7JUbwUFrlVCp9D1
SBxwj2ehaDUFzmkNLLkMhWLS6oAi300UeKiz/3Gsiw/GhfD47BYKPH2esWQ/
7In598v8aNtGAf8p53cVra74jMsz450qFBBheDc9uHICF1ftn5nWpYCnoGCj
dZEsGoM1G7Yc5u4nr5srYeqgXT3jh62NKNB36da1Y0MmqPZP/tlblhQgChn0
a83aoXYrHr0Edwps7bPSq8jxRSIj7/wrvCmwZH379PpBf2SdcDvjnT8FVmsO
O8nIBaG+Iv9RnQgK5P72rY4NC0NbNGBtWAwFLHdv/F5FjkC+HRu1ChMoYHs4
2E2uKRLNzD49zUOjQLTns1btwmi0n11Wp8aigGmKz2wlNQYRNtI+eqdQIG9n
5lS0fSxqvO60KieVAvo8H4V3KsQhXoP9+//LoMDnB+o+UcNxyLhXxG0+hwKr
irwUvp+LR6eCxzlK+RS4p/5l/wmUgJ7/xdWOFyng5dXcaNifgNZn5/edvEQB
naohweRgAlrdI/Ey+goFnCZdSxNHCYhHOq3d5SoFWjPIZr9PENG8o9ADw+sU
sJiO+vWujoimCxi1e2oocMRH5veSCAmNDixXStVRwLlfoVDPkYT65BIu/btL
gbM1r8PouST0wvNb7kQjBXwDpPGdThJquxyS9rKZAj9Olje8+kZCjaNjrIZW
CkzNrs/uEElEtxQ9E0s6KJAN+nXpmxJRRWBfVOpTCmzsZl/YJ5eIiiptA+Ne
UODqwLqg6vWJ6NyXLnf31xRYMI8PlvlHQql7j9qZvKUA/8C/nUnvSYgR+chc
dYACcPUK9ddNEiLc0jPYOEiBtNKzkiXxJBQ+d0drxSg3PskAqUI1EvLVVN83
9YkCNyTTqOuGiMiZULXj9RRXv2+tSIlNRMcbFGWbvlLAne9vnqQcEZkuF4uX
/aBAm1NKl3AVAenrb1qV/osC38497zLaR0C7WtbNe/6jwImfjsVpUglInv/U
l6N8SdC2Y2J2W2I8kjbmH1EXTIJb2ttI63vjEH/nwnP+dUngSEzjOxEZixaF
Y9qmxZMg/MHnduPqGDRrOd3YK5UEm/JHS75+ikbvXw5drZBLAjH1FM9BFIVe
S7gWZyokQWbDiotfPCNRp13vOZJiElREHhsmzoej+nedTIu9SRDs9/zXbe0Q
lDF0221WLwkiFoljWSY+yOAbW0zLLQm+kK/+K92gjrT28wht9UqCZl4xr2q3
Sf29caS/q/ySoEeiYM3JAFW86Xf4VH9oEtAX3tr8sTyK53gc/6OSk8DevWRi
rYUbnjTovh9I465PqPxvw1VPPMiyuHWcxV0fRTF1L/HGz4QOF21LTYLYzrM7
15L8cZnoLmL7+STg+4Lc9fPDuO+B0wJ/cRLYau/JG/CKwHfun0wwKE2CvF0r
PRxTI3GH/+e4pqokyJnd0t6qGI2tdTf+XKxOgrmTzs28Y9H4ndjRWK26JEjM
Yv1rzYvBk40V0bebksAoX4/D+BiLo7Pefpt9mAQFz80qxqPi8FKAUNTetiR4
fSXHO3chDrP0tGZDOrnxbwn6zz4mHotIBEZc7UoCmCgJ+zYUj3MmcmfGu7nx
/M700jBMwLIP2sO2v0mCC6MpXrP5Cbg0+9cXr/4kWD6gvmLlSALeE6QUWvQx
CXhfImHnLQRcr+8wNTCSBFem3PJfWhGw/vrkYJmJJLB5KufjGkXAbZ/rPzt8
SQIFJ56aeQ4BW+HxwLOz3PtV1TkX0wm4N0dqonsuCTReS9dbnyZgj2DjANHf
SSCnKf52C4mAJ1D8uOWfJBAX9uKRdyXgSMkyv9O8VLDJGgjxVyPghcme0Q4B
KtQ2PFovtpiA6c0CvitXU8HC7LWeeX0CXn3uwMiRtVSgaB8yPuyfgLNC/Lzp
4lS44unovXV1ApY5fHbogRQV0penU5Uux+MSqf88l2Wo8GblDZ5ze+Oxype5
j4e2UEF8qnTNzZtxuPbhdo+EbVRwzMtyvr8jDuvm2n6oVaJCd8yvpnWZsfi/
UJbb991UaNsQGL7iewzulR51CdOgggxpveGuc9HYfVqiv1KLCrIC3/uU+6Lw
eMsR5wldKsR9ldOxkozCv8JKHH2MqOAe9Hjw1Fg4ph159ab4KBVMeTbdEFAJ
w0Ib+Rw+WFLh68WusGDfELyh1dvOyZ4Ki7uIf8ZuBGBtGYUTxwKoMJc6/bst
zQO3fD3+MjWECmv+TQufjnHB5v/RrTsjqHCi4afHRwsH7Bo5ZGVEoMIGcUVP
/aeWOKmt2FznJBVmdb5rb4yVRw+jtxgpXaNCXXlE1O0TXmjx59cM2ZtUUN/X
ez5f2gdpEJsHxG5ToSw71v1Mty+qoHrFLjdQwSHDJZutFIiGV6g3f3tAhdZo
tRPSzUFIlrNC5FMLFWi49mm7OTd/U0tKXnZSobisXPDJoXDUuS72a1sXFQa7
ReMGCyIQf7ahTmM3FQ7wOjGN4iORvpRkck0vFYyCRrfLSEchQv5Yd1kfFQ63
tKdW3YxCt2Tr5S58oILdZlHvBygafSniBGcOc/2RJWgp1h6NPMuUVpAnqZAX
YaVc0BCDCnYuWEbNcPVdZ94cpRiLXld15Pt/p0KoHgc9SolFa1Xzx1zmqeC8
mlnkPxSLTG8HqR1fpMLYs65BPdU4xNDUphj/pYLKtOL33XFx6IMre3QzLw3W
Ae+u9dVxKLEw7NQGPho8Dqo9OTwYhzYM2qlKCNBAKU3P97RgPKrbqt+7RpAG
2vYEb77t8eiEjyJZaBUN5vqiTEAzHn0tXavAJ0wDc6MCloF+PEodn2//I0ID
IZlLp0R149FO5Y9hC2tpcP6pTn/1vnjUFtQu8UOUBv1rkI7Kxnjkfe3mvWlx
GqzUJfFw6wH69yXXY2I9Dfx+KKuu6opDF/bSBEakaJB18teLgvw4pBUZeO39
Bm58nfceBbjEoZ4a6+NvZWhgGNHfd04iDkX/0PrVLUsDf6vvPdYtsWjdga0X
n8nRYEPx+5QHAbGoKn7VkQ557n5fcZu1/LFo/Pe7tKbtNHAXS7qkrhCDmDot
GncVafAnEM0mlEYjeUpl3y1lGvD4V05z5KKRM0+iYoUKl7+w6NyNS5Ho12Gf
p5f30uC/9/k6u9wjUQ7TPPqiKg1C7x3/ZhYbgbpWyj7I0qDBnXKRAJPGUBRi
yu97RpMGCh+79uZZhiChU19WpWjRoPtC5iXPV0HIYE2THUWXBnr+Esaa2B/V
S7hPBxjSYPzP4zu3VTxRoXyxrJ4tDXwlMk0iyKpo7Sm1jj32NMiQ1d33w4cP
UX+0xMg50uCDmJ8m0lTCnm1jnf9caPArZ9jJo/EIVgjdTWzxoYHuTdJvqSgH
nNXTuP22Hw0esTcFr2lwxnzI6kVJAA3OeoseE/3phkfFopTYITQQyXr3/tVm
b1x2p77HJIZ7/7kLweo/ArDUVlO6VhwNbnBsODaWQTj51DuVnQk0yNY+/DTk
fDAOdFtmrk6kwctVp/gtxcLw27Yz+5bINCBkST1frxWOj6pu6Z9KokGP8pFV
T60j8C4+A/VnDO56HdNBmWuRuCD01fsmFg3yA1lxa7dGYeFe35M3ODSoiAp9
vDM9CpPRvEZRCg1U1LNZ+j+j8JeK5MH0U1w9/+PbvMMmGruKb0ylpdLg2eDy
CPdpws8SKw9GpdEg5N2HhLGf0Vh/TGfEK4MGmrThNVTtGHzD6lnaiSwapLky
1kXHx2C5u+7aR3Jo0DRX97nqagxO3zo7tv8cl+/rT1TkXsdgntP0zO15NMi7
uzKm7mcMjpwT15MsoIGrguH5kLWxeNCtdELgAg2GUua89eVi8fH2AznzF2mw
hVWQtXtHLG5RbUefimiwSHYvUt8Wi9ULHKfeXOLyX2fT67ohFl/mmzzXUUKD
te06Mnf4Y7FEWKLBvStc/l/uPGY1EYNZvSIzV8tp8KSg47naoxg8hwrzC67S
AKWV3SWdjcG+V/cZnb5GAw3OqgxDjxjcI/5wNvE6DTp2k95XysdgY/KJC6E3
aRBsKpDw9F00rh8bMXGroYGE39ndL09FY8VjcT8sb9OAfqXJbHh/NM69u7JI
v44GAhab9uzsicJCCnlm++7QwGZL2YFX4VGYcHrn/JZ7NDA5eypKkjcKT8w1
XBK9z83H/EvtO7j/CSd3C0veJhqkuooe0haNxNpqEaXDzVz82k0zD4TCcWUB
j/WrFho46olfHPkcijfxZy09aqXBW+q776txCF7urT1xpYMGVQeGduaZBOEm
8iJP4AsadIlZHZca9sHzN8dnGd3c/CyvWLvO1hurjnQPXnxNgxgs41nW5IlL
j15rfvWWBq3VR//qzDvjU1KuNDREA/F8Lw2PD2a49ahppPMIDdx6/5xiLB3B
f8gannFjNLjZX6SWraiNI0dE4NpnGtBUvloN9P/St69u+if1nQbbRN5cVlhp
gTJGrn5Vm6PBrlnhM4KOx9FjqXMfLeZp4Gk4OJV7yRbpUsIxY5EGSZEM39fC
Lii+2vnmxWWuPxPiLsJOd3RzxLjo7l8afB/YPeNX4IkUzLZQZ1bQ4VDowzbh
FB/kShGOWCVABy1+d13iDLfVrv7lvl2QDlHHFfNXH/VHQtIv9J2F6XDveFDn
+JtAZGDWuDduDR3WKw8W/1odjMiUCrmMdXRIGihQubovBH0dof39T4IO1nxy
axrNw5CydNjMoCQdfO+r1CkYhCNvM6cPS9J02HFF3HubcgS6QDHqkpKhw1Yt
3RjbPxGot1rtgZosHWQv6VdXcf/DoqObb1jI0eFKc/vi5L1IdFR6dWGAPB0a
2qfktVdHIYbZ/BmGAh2Yho9DSMejUCNlmHJxOx00vZsr09Kj0Hx1V9hdRS6+
HMKCU2sU2jfa4PZKmQ5Chn8j279GoUDpcsuZXXR4tvLIj06xaHTZLFtv1R7u
/ZfNXjjuikYDFOqe7fvoIGMiGhlwKBpJ1oRsRmp0KPcmdi7oRyOrUYc1zvvp
sKnS56W4TjRKkTb8E3uADu4vt2bc3xONWsxUp9MP0kHC6Lz9P6lotESRfV95
iA63X/5HnJuPQho1Qs/+06GDnFO8xq1nUSh8dK5xUI8OBfGWs9bno1CF9FDV
EqJDsZLvoR8eUWjI7NkFKQM6iF4ebm7eFIVkku6lqhnSoeWQr/FQVySyrblC
tjCmw8yb4GYaMRKljWaGBpjSoUcs5+PrTZGoXTrJlWHGxfOkzntnaATSTrLX
vWtFhx+hul2ksjAUW2Og8sqaDis8Yo/ZXg9FN0b3ys6c4PI5nPVAoCwEbTUX
XN7mQAeBi35KhyKCkEbPkW4ZJzpk8edM5NkFImMPWoWYCx1qNC92NqgFoOCY
37b/3OkQoh5eEPPMF9Wen7re508HZa+nn1qMPJDxl+cemfF08A75ARLoMHKM
F9FMIdDh+d18Pc2XmiiY56gIlUSHwXVeW9qPKKL09S13Q5PokP/ygUSNmzJ+
q1srZsqhQ8bOt6U6fJZ4sm32k34KHX5mdi5utDyOl633PDhwig5/EnrLP661
xVv9yoK3pdEBSDWrKZFOOPhM3qO/Z+ng4YgiS//zwmTpnvyfuXT4tb/ljeac
N067JBb5JZ8OYSX+umEbffHtulOyfRfpgPdf2TZg5I/bUPv3F0V0SJhTztpq
EYDfPuZ73H6JDo1xIrvVTALx8ntyXN0VOtDGw5UlZYLx2sB75lXldJBfmb5K
/lsw3vr959aSq3S4QSBMRt4PwRpk9YX8a3Q4Y3Gm5Q4hFBuvjOjKuM7Vd9vZ
06XKYdgx41pp8k06EBdPSU13hmFu80FKqqGDLvP1jL1HOCaXbj8ed5sOK1Wi
9Sq5/+n0vV5KoXVcvBHfzG66ReDLdy/+8b5DB47CSaeD7RG41qDvldM9Ovjk
8ZiKiUXitqdSldb36XD9sqD+zoOR+K29Dc2kiatH7o2s13aReHIw3V4f0+Hd
fbBbHRaJ/wQ/VTnwkA5ji9k/28mRWPSnEJ/KIzroHKSpCbMjsQLV6J3Cf3SI
mMHu3dyxxirGzY3tXP8eUduyjRqJjbMfsEUfc/NbTn9ZMCoSO25echF8Qodh
wfPnTrtE4pDyg+p/n9KB7+6Le/f0I3GSWqzQzy46XLTy2VUmE4kz7ld/mHpB
B79MxxUvPnDxGU3XDnfTwcm/6rYKiYvv+c7T717TodB9kJMjGIEztj28sthL
h49OirwjieE4JMGxedM7OtyivxyLHAzDxk++9un200Es8dSJ3ANhWGFL8k+3
99z7pKovNiSG4j/RcqLUj3QQ7D6zaHk7hPv/qNtVPESHzHBO8X8DwTg9fNRj
eIwOx/t+1FsIBuHglkQS3wRX/56S+fBVgdhYSuLs9kk6GE99zjj9zx8vNx3u
9J+hQ3hpTMW6Tl8cvKZIY2qeDq/Rjoy1rz2wsZfmMZHfdDCS3HdwnY4b3lr3
LGjPEpfvtdHVsTnO+K3rcmHEPzosbNE6YLrdDhtVOa2aE2RAVY7T7J5HR7C8
+foPyxsYICca8cTv9lG0XHhtYfMmBlxl+YmlqR1Db74bSKDNDCgtWrkux/IE
SiuIMqVvZUDt+oXgW1kOKGhGyOfyNgY0/3xjbi3vjAwNiimPdjBAUB1VahS6
oqXPXbcEdjHAvnY27N0tT9Sr5/9MUYUBpkvnO2N6vdCtzD+fTPYyIGQRv2v+
6o0CD6lsPqXOAEV5hw9GvH7I8Myjg9c0GKCzfiifsOCHtgw5n3iqyQCxIeMQ
8xF/1JtyMnmtDgNaNfj6N2YFolsD8pf36TGAmKu4ysAuCJ1RvdtojRgwLb50
P5D7HgWyjr2JOsyAIiWeH3o1wcjw7fi3rCMMyBf71hF9NARtUUkSqTVigMFU
n8b97hC0SJVU6jFhwAev1VfeW4Si3ldVh+ePMqCM0dtfficU1SgZukpbcMfx
ezs+iYeh1MT+eC0rBqiLkf7EuYehwOfRmU7WDKj4eMJetyAMHdm2uop0ggFY
VsFAsS0MySVcajtvy4BTdWcubx0OQ4udWkON9gwwzK6U2jcThnrkXiy9d2SA
c27HJ4fJMFQdHSD1z5mLL1yBfqWXe1/bX1V5Ny6fb1/gXbfDEESNq232YMCq
yjdrJplhaG5Tl7qMFwO2rh9a2mEShira6vZL+3DPf1ze/Hc5FLlGXdRY78eA
7w0xCcVXQpGoLPuAWAADdoXHHzh8OBS1toVqrg1iAEezwl36RQgiRNkeFA5h
gPiNlnUuJ0LQHlldLaEwBsibbLt9vCMYDbdtOyQQwYCPnmaDxurB6FyUsPaK
KAa47lU8yMkIQn/b+nSWYxnw1Novf/durl5RLbq/47n7785/Mw8MQP6ylXrz
BAb8+PbEWe68P+qKIqJZMgPWZLzzih7xRQxZL5hOYsCIutLql799kGa76eFJ
Glff6q63mYI+qFB2w5FRFgOccr+GSAl7oYj2euO3qQyw9bZgvKQ6IdHNc5bN
FxhwXOiFqPktbdTa3m/VVMiAWQFh3i//VBEh+tGxhmLu+Ni9IA+1zWiwPet4
bSl3/0RjmsRGZVwTrWZXUcUAxs+u/ST+o9h/80b7Kze4/v/7RTqy1BLLdPA4
XK5mwJkQgfiHG49jxuYXjhdqGXCup/ZK2Gk7fKIj3DWjkcunYvAj1ns3vDLG
3u3MA67+uXRhmy4P3LBZ3/1UMwNEiqeDUt94YoWYNZ6sVgZAyY3/Sgq9ce/m
n570NgZoJF1TPhPrg091DHgldTBAFUnsHwdf/H1zlQ/hKQOk2Pykk/f9cFlH
tm9cFwMuyW04vzfIHzvHJPpFv2AAc9XPx7wiAXitnI9/RDcDHoUdj31QEoBb
OswCQl9z/fUg1XGraiCOj1EPDOplQO+l6rwf1YF4l5xMkP9b7nnSc/ICikH4
QwdvsE8fAwIrNL7uSA/C2TGfgz0HGOBleG3Vzi9BWMaYFGXzgQHe+eW1BJ1g
fHmDMMF4kKvfzyT8JSkY75o6n3RomOunCY5paH0wvtWkwlYZZcCmwAbJkaFg
rJ3RdHrLOAPGb4dkmvGG4IfeVlniEwxw1He5XLg+BJse+JgnMMmAA5WFuv2b
QvALwciihSkGZDdad62QDsGOfTxlU9Pc9Z8GIrevDMGDVZlVH75y/XIssc76
M7dfpCrcfvmNAX3PM73ymoPx1+O377X+4NajnpMx61ODcfx2w+Y7PxkQ1xrX
MmEejP/Ov26r/MUA4RCBkUM8wZjz2O/Zxd/c+baQSZWrQXjthflXGUsM2M36
Tpg1DsLnwpP7mH8YMOSgWX//XSDefHjDUPw/BrxLOyLV5hWISyWufgriZYK1
5qd/Jh8DsMr4oRlXPibYpVctMk8E4Nq7nXPHBJggxnlZ0XLfH+uedlkyEGTC
9NWChxab/LG5KkVopzATVB1jP8Q98MXdK9auk13DhEf96e+aV/hi555CyXXr
mOApc9njir4PDiY1K/wUZ8LdTRvyrxV64ZRWPr2HMkzQDAjd6i3pikVzc47U
yjLBxUSpSm2PM84N2mFWLseE4ZnIVWXajrhsrYnDGQUm3DxxZVlU2xb/53gq
ymkXE3aeDVK98NgEr5gWLft2iAmPjfhNl1ceQKfwpapRHSYc69c8ZZSkh8Sy
1G+/0WPCCYvoB27fDJD8QdvmpsNM6L9c7Guubo4QPbfv5FEmDO44cUGSZIfa
bJSHyOZMeJWj12Lj5ICsFO99irBkQsKi+6tJFSfk/qRvzu44Ez4dXGUic8MV
jV8MWTK1YUL4WvmZ/c7uKCxymVfXjgkxYzWHr/3yQGRJuXUKTkw4oGBZJszw
Qs9qVjkjFy5euvXj3ybeSM7qZ6mrGxOe6sn9+o/PB4VPDn4lejDB8eHo7Y11
PghznmrnejHhCeUYs8jFF4luu8uu9WFChLJyNt8vX+SJS1689GPC5cqzpH8c
P1Tjkr7pawATQi4vGNkI+6MVCyR/kWAmTEYwpDDTH53I8a/ZGcqEbqruwKpZ
f1SiemLZOJwJoGc6JGQdgOae6pn4RjIh+slDyC4JQIZBO7Po0UwQCWhA9MkA
dFZA8n1hLBcPvv7k7vZANH6JR7kxngn+NdI1yicCkab+l+h3BCbEXzcdxdGB
KLnvTdM8iQnnwp90RHMC0dv4R0LrKUygXaDQjc4EImWJmzZqVG78/lqCKDkQ
EW8WFFrRmZCi1vPPPzYQdZpzPocwmWBGc93z0jYQyUxEaZxkc/FI5bSfVw5E
ISw3alkyEwTKD7mPfQ1AjfJHOx+dZIJ4r6LVi8oAJNKkITl0mgkn01atSHMK
QG5O8p5/zzBBI33ygs2yP7rxU/japgwmTF37mmWf7Y/+Zv76qZXFhDzdkMYe
OX90bO8I2OcwgXdp3RWZIj9U3Nl1OuYcE/S39oZGrPdDs/4NvRl5TJi5qBUv
T/VFWUWZoU8uMGGiYrry7wEfNKJDuTNRyPVzn9rsGMMbabwNXLHyEhOIZk/O
F7V5oR5RyIMrTFic0eHX0/BEGxgzj+quc/lstLwtE+SEguT61r66yb1v5smO
yRQH1NDwn9NsDZcvzphO50U75PLjwtdd9UxIsxocGKo8jgp9zTcVP2CCbrm/
cdmgAfrKc9C/qZkJHRKe5uec9BBcVKjpa2GCw/6r+yomNNBQz29jyXZuPjeY
VKh8Woe2m1REn3rOBMUDTrfzOXo4diS7qfwlN19jVb4YfzDA/1GpQv+94t53
wSHG54sx9r9rX/jvDRNMiZ2Vd95Z4as7BTpjB/+/X+tc8qA97pY9vBQ2zPXD
/Mf7iO6Il9dRVAJGmUAXeXz7hqQztpqfS3OaYEJTM9SvknbDhM+qzScmmbDj
XULbFYY7vjQQ+s38CxPsdSpyPT964LmWURv9WSb86DFX/6PhheXq5dkHv3Pz
YZ00j+cTL2xy1bVedY4J+IDyIHLyxpEX8j7tnOfq9/6ilt8Hb1yQ/nrDtgUm
ONXaVuU5++BWhqiZ7CITKsllP0ue+eDpOItEyWUmJBe87nQ+6IulglKq1v7l
+mHl00Pncn0xuLa+F+RhASv7qNu+Ge7/+BjPOt4VLDhUGpHPq+OHsw10YZGP
BaezX7T8oPjhxgOEqB8CLFi90QHN1vvhceXay18EWcBojY8fGvPDorKzr8ZW
seDjtpKJutX++NA6FYGPwixwVzO4HLDDH3uvCNR8u4YFNz8W1H4/4I9Tf5YE
vFzHgl27NUxsdP1x/cTHvE4xFoSlb8entfzxx/5NnY8kWFD/i/SyYpc/Fnru
sNQoyYLWtUW77or7Y/WWbJV6aRZ0uke8aJ/1w651z91ubmTBI0+tb9Otfphd
IZxesYkFmlpbf5im++Eb502aL23mzjv15/065offpjG/FWxhgblgMX2joB9e
wcAKOVtZcJvz4NabWl+8O27J5sw2FrzOaZz3dPLFtoEH2ZwdLBiLdd4zOueD
k1xi6qlKLHj/R38gM9kHV1jd/ETYyYKmvkalUjEf/PLw1Ibo3SzY9jCp0jHb
G29X9kn03ceCqX734EtJXthqU1GVmxoLBgrIHQ8mPHHC2v739vu5+NnWdenm
nrhz7gQcPciCSgOr2rkFNxzx0EBgL2LBwuOHC1t3OuK82iRNpcMssHh64258
gT1uKW8IkD/CgkT/eLmMFXZ4fZp6p7gJCwTXugiKNBzHDc4K6b+sWMB79Pjo
0h0jvHKOd+NDdxZs/uzwJ4x3N1qozksb9WRBwVKZz88dB9BU2D5+IR8WNPQz
pvUadNGLT65frQJY8NlM/Pqf50aooP/OfwMRLAhOeejB++c4Ss2z0uGJ5sbX
O1JrdtUGUe3GqrfFskCA2RLw8qgd8n0ufiGYwIJo7+3Wtr6OyD71qlgaiQV3
Biubbw84oaNHIbmGzILvUxM3lI1d0N5HYdELNBZICUf3cj67IXka/8QmJlfP
lxunpRQ8kITeeTfEZsHEcLRv2nZPtHJR7ZV3MgucN1pq8930RAv1Haack1z9
8OqHCqpeaDLG48HV0ywI+LUnqabcC71Xnd//7AwL9vuWPiBIeqMX06lXZ9NZ
YHvEY/ow0Ru1VG7bsj6LBd6yt0nvu71RbUBDzsEcFjwWZKgpKfig8u3HV7uc
Y0FeucTYkr8PKhj6RE3KY8H0pX2K2pd8UGph0s9LBSwoub/P7NkLH5TkIhny
3wUWXCxqtSv76YOiNlQNThRy/fOrLLB+nS/y7TGwF7nEjU8gNvWnnC+yz3r3
ZF8JCwq9Un8GbPNFpsciD9tcYYEJ+/N6ic2+SEdE8E58OQsSTlwZ/SPsi/Y+
vqhScJUFgTcFnuvM+iB5jsblpmssyAzpNRp/7IPEjzyRHrrOApvvQ91S+T5I
gMf7DH81Cy7VbN0+7eaDFhoXVijfYkFGo0BezgYfNElMJ5jXssAhfqH/0GNv
NKCpOBNez4IHY12vVkd6o+c/Gn2y7rKgKDHdANZw+aq2eVfXwIKK+6ySDZe8
UG3YpNW7RhbwmyVyund7obJd9NblB1z8jsaWNdc9Uf4naW35hywI6rpiu0LJ
EyV5Ge0I+I8FP44r3g5d4Y4i5QYKTrWzYNTu51/af67Ipz9a9MZjFkS1z2yW
I7kgU7vipblnLNCdMFN63+CIxI8uvWT0cutFMkeysPoE4l+ZZVL2lptPsuTe
55LH0a8W5abHfSxISixcLTNuhQZ07StEP7LAYKHUi6FuispVa5IKP3HxC+o/
K7+ngcIlv/2+85lbvzwz4spu7EYai6pxL6dYsMF17LPnk02o+VF1CP8sC0RT
LLpjDm3Cb+2rHYMXWIAP37xa+Alwoc7sK+YiV08bRa2dqobYV1712MVlrt9C
it5Nhpjg2c83jV7wsOHAVi3m+XpLLES5qa65ig3zTZPncuttcZfX1+vHhNlA
nnykNCNmj3OM9+0MWsOGb4o16lOeDlhe9OaWC2Js4G+m8hi+ccLjczMFdRJs
qP354WzEH2dc9W6v1HNJNpiVjzz5sN4Va5XcEFkhwwYLi1nnIEl3/Dd5JnmT
LBuyjX655P9xx62he/kOyLGBKh+8S7nHA586Hp5kJc+G+M0k8V5LT2yteeN3
gAIbTtgfzQ+s8MRSm2Zi6dvZsAEFvt6+6IkH/u2ZLVBkQ/gpLbFRAy98eTQs
pFaZDQbnDA04DC8c+Pj6+LNdbPiyb3l07q4X3ntj2uuTChsOFt7cLzPuheey
9rzn2ceGnOJDXUOrvHFDQpijjBobFrYO6hhs98Y01+uv9u9nw9arTdsOHvDG
xoenrSwPsMFO5552o643FlHc0+l/kA3ytXbK3dreuHt1mBHtEBv+6J7lsPZ5
47yvVc35Olw+Wv/5D8p4Y/fXX3Ru67FBzZp46seyF95+T+XOU8QG9zk1vp4e
Lzx5MVR9/DAbPlzMPX/5iheuZlRd/3eEDbeDZQxJoV44PuCL8kZjNpwtrp0n
7/LCuhYqpeqmbNC40WDU+9ETr1AL3WJhxgY5HRmx2lRP3CFZVeBnwYagkOYE
QzVPnLY4JUm1YkMsT1IO4bwHtv24OzPPmg1r3t0xvdnqjgcrriU/sWVDyPXW
q28/u+KyM1MrxuzZMK1dqPh63AWHRu9O+uvIhoojTPXdvc54QedarJobG1zU
BDegNEf8QH7qq5kHG77uVB7Qc3TALIHdIb5ebHDO+BouKW2PRZ9XeuX6seHV
43XreOJt8E7vSqs/YWx4mD32Yy7fHHdc1K7+HsGGno0sneJeU+z/rlNsIooN
On1nnq1YbYxLraded8ex4cHAu0QxZ8DySMWlgsIG1WSbPtF12zAmNTZepLJh
02f+1jvla7B7vYVcNp0NeS/Ubl3u40Hn94QNUdhsSBSaioi0242kZG8E2Jzh
6rfyaRxbzgDVOeg/Nk1nwxK5tmC4zxDZZnft0s9kA5/A+52CqSYoc/XXaeWz
bFCwdZcV7LBAqsbUY3K5bLCJLz6db30MddHX1Ujks2HFSvv3NaPWSOT3vti/
F9jA8Br51XjEBl3TaO75UciGFxPKBq5+tsgs0vrg52I2HJ8I9FhLsUPJnyIX
X5Vy9Zl4nDqc6oAUt/G6Pi7j6t1AsFJgOaJW98ymBxXc/OthMu5GOKEVvTW0
q1VsuMvbeC5WwQVdEjMYLrzBhvwvjR7DEy4ILLuP5FRz+QnUjzS47Io+pHhf
OXmLDajsiNgxKzdEaf2+klrLhqLGg49avrghWR5mYGw91y9NFj+cKO6oQUei
M+guGyIfJTgP/nNHTgkluz0a2HBD/OaScqwHWri1/4xtIxuqYw3HVvZ5oNyZ
RzNHH7Dhpd1+u4oNnkhzl601amaDz927H+d1PdFrv9EajRY2dG08ajPm5Ili
LsVK7Gplw39Wdd+CIjyR+Hv+uC1tXP+pLPdRKJ6oesPZ3vUdbCjxzLqowPJE
x2x3aK3u5PpJ6NwJF6Ynmkmvy//3hA3s0ojNuxM90ZknRtz6zIZc0zUG+SGe
SEWw13XyORuMLz2oqLX1RJ0G/g8+vuTWh91315zR9ERBSfNbel5x/XvO1F5d
zBMJNXDonT1sGPk6Zh/z2AOV/ZQawW/YsEolVITi7YGM1MoN696xoWFrPuXe
tDsaDT1YVtnPBodseQWvEHfErGgXLH7PhjKLdOrdfjekMOoQdPYjG9K2DGeu
QW7o4ZaJzlND3Pgass7eOOuKPF0IKrQRNhR7mGpPfXRB/84JpcWNsWFd+bvK
LXIuqLA772vwJ269G9Pxv2HtjPqP3rtlN8WtBxa8uwNyHJHBsVLHuGk2OK7q
vvcx0wFV2qb/zfnKBqMOpvZVpj0iefiZvf7BhhqBvpUcY1skEyc2fGKZWx+i
s9Uo9VaIQVpOjv7L1aPvZsjZjRZokvppTxYPB/amDje1RhxF9041EV/yc2Dr
cK/13qUjyLE4SMx6DQcmjkSquUaooeYrtnci1nFA21+gbT5aCSlfQ27pYhx4
8T1MMWjlBrRQJ3m1S5IDbyfHBv2LJXEuty+2lOOArHWub8lzHfz3RdV4qDwH
pveJvF0oBuzfm5uaqsAB9Xf0CddjR7DmUNjbJ4ocOBzmN+LCMcW98xsjzfZx
QKJyKHKP7HGsv8wvFazGATWxksFDOidwGe/s/ZP7OaAf5XX/7TEbHC/SJvj4
IAdSK66GFzrY4Q9iNdcnDnEgbrJ7se2oPTaWvmAjpMuBWYF406R9DlhSIbrI
BDhw07jb7NUrR0xWcjMKMODAkfnFI9cznfCoiukUx5ADGWE8zUmHnbGF+v7M
MmMO7GIvHvs+7IxrD8odbDPlwEofIc9HcS5YVm/V+zEzDtxf98by5m8XzDKY
YwhYcqDou516XLgr/mLyUXnHMQ4koP/cx165YlvLzi7D4xz4qk3g7dvphhtP
1MX62nD52r85bE+kG97uWCzDsuPGz+p+9bDMDae6nW4uceDAiCrLNvWZG57z
jvd/5MSBPqn9b1ijbtg10EuESxys92nklE654dYwi1sr3Dlgkbck+HPYDavE
HHRU8ORA91qV9NOdbjiboPD3sDeXL8N7aZTLbniRsqbUy5cD7/sod8eD3bA3
c+Eo3Z8Dae63S35uc8OdKSNfiwM58I7zPG7gmStWT+s62xzMgeu7vkh1Bbri
gux7OoOhHCjwN7EU/umCV+SXDv0L5+r52Hp+MNoFBxemJ2+J4sCphnr7C1z+
uktIe1AMB644iy6nGTpjcZ76e9pxHPj07sqXsVInbOP6zUgzgQM7G/3fDP12
xK/XB7rvSeSA9f6J8E1Mrn5RJZPKFA5cVnrkKnXXHts/+xC/ncr188OUit0j
dtxUtkvfxOTAm0Kjp4c32+INwxmbpNkcuPexlHfbHhvsqP+0XDyZA0uXhC3f
apzAffMGzatOc+ChcOrp/D3WeCBA9duvLA7Yk7MiW0pNsGxrCOVHDjf++ifn
9rgZYTf58lVfz3HAKDVw0XbNEfzh7WaF8QIO973jveR2SxcPHhW2eX2ZAzLk
54dFFxTw2O7x2upbHFDUH6dmntNFiilbD1fVcsBuysv2WxYg/1HXZ+X1HDjd
ePND4EsDNHHh1VhhAwc2Ox0t6dprgpR/r40uaORA6yurDZ3mR1GQndnfsw+4
+SSVUn/dxRxNrnkodaaFm798Wn7F3PdpV/Dy5ZRWDtjUHmP+yrdGIW0H97Ha
OODk7CplxzyOviTdMEns5Oq5Ssq+SscGqfR/fhX/lMvvxryro6tsUdjBHZ7R
XRzo6dyq79Bli2a+nicEdXNA/OFbmeta9mivxRt+v9cc2NixQ+DHe3sUUSGe
6dnLAaJWoNgRggOq5rfa7PqW69/9mO4l6IhmPU9edejjgKDL+3vipx2RWlPr
AZsBDmxp2eG6mc8JRW/kabH6wIG642n5dtz37lacjpXZINdf3zprcp47oR8v
4/uMhjkw2SL26fY2Z6Sx95b/4VFuvgjtm8kIcUaxp6a/645zQMr09gvpcmdU
N65M1Zrg1itOHPFgrzOaN/AV1pjkwKZtsZ8+LDgjzaKi3H1fOKDhYBPIv84F
JSz1bds9w9VDPCHk2gYXdNdBqlpxluuvZEX8VtIFLdw+rqvwnatPe2pB5koX
JKKl2SUxxwGtoiu86VPOSL5RxlNgngOVt99uv9/KjQ/+fZv/xYGo43+792Y5
I9PWEebEbw6IDvy4ymfrjFxNOyT7lrjn/yOKuq92RpFPq8qf/OGA8JV/0sF1
TohlnXmo6R8Hjh+oXrKxc0L5r+Oe3OBNhgADheNHJx3RDUdnt2K+ZMi3PjLI
iHVELQP6XzMFkqF09b0f+nMOqNdzG50pmAxb4h59vB/kgCZHBSXiViVDS9/d
uUM99uhv4JdSf+Fk2KHOC/wH7ZH49AtNxzXJELfypF9Quh3S/pnvrCOWDHYp
z6MP77BFVsSkLyoSyUDezmPj6WODvP94J8lJJoO8SHR4VP4JdEpA5TLvxmTI
ysnOGJyxRv2SDz63yydD6Mq1r7blmCGy5jDBVjUZ1mcdSJxM0UAZDW2rjdWT
wWR3SpSekSoq1b924aBGMvTqO2xNWFRCT41jm2W0kkFDxzyhSl8YbXZYKTSE
koHoWyQ4Yrwbq/dP5ncfToaHHEvZR6/VsPH/Gq7ycKyXNlynSJFQUXIUSSSy
JTkd8xBvsuVdkSyRI+vxOTql5aSUGaGQNVsvvaWFUKLElBZfJUqWPnsSwkFa
ZP9+f8411zzXfd9zP/cz416n9XQnhidJRmzvqa00yCd1z7VdGCoS+aUuKqa0
8vCmlMA9GLxFMs4VdSxaPyWt6c7GoPfVPFxPZEV7T3594MDFcG1Q4lpkkDWV
Jg87DBwxbBlZWP7qf3ZUVUoYvMEZg4NKmSXn6B5qFHf2FwUXDF6SrdcGzzpQ
t1R79Uk3DGN/1t0TzrFpiJJB2aAHhkKFKq2Z2xwaeVnBut0Tg0HGiGS2I5de
UpturT2AoXi3lbr5Dy4tyOsKfPQHhtk0ge6NaB6t2vxsruggBuFM2YV0BT5t
Krwen+uH4VXA3ILWND4dMDy/PimA0YNVcG6rnIDOlYWURAZheFkb95/wcAFt
Ey+OzgnGUBfZFJYyJKAPeF/2V4ZgyC9a7BFs60hTcnSNW0IZ/tqRpT3ZjjR0
9E/pH39jWPmiLa2x15GyTW/3yIZhSHn2YZuaihPViRl+oH0Mg7T2Ydkyeycq
2aIdv/sEBnW1hlb8pxPt3xjo432S4UsWRcdEONFnh279fuoUhvV5ReP0nBPN
eTK4PDMCg90nm06Ns040XFZroOwshqdffAqbQ5yoq7vfowaMocZyrXw714ma
5F9PHo3C4LZnTs1ew4mumuoPkIrBwFkmY7Zn1JF+t9LYqXEeQ/sF27UStxxp
fbLPaos4DH7fJDsvuzjS2z1XR9wTMPzmer3LZk5AY/R7nx1LxDB5RlyDlSKg
fuEbMlKSMWwNldj2er2A7qo9EHInFcPPPhMtFRGfqildsaq7hGF4VtHtwho+
/cXvo/JgBoYCHofni3n0oZjnK1UhBq21MrP5wKVpXKHQNBfD99fRV9+d59C/
hV2H94owXLqwaaDhHZvq/u6ulnAdQ2uoKF3MwoGKQvedmF+MIc4qT1f14m56
uiqd++tdDGu6Lw+Rkl3UQ6ZVc/s9DA/R4v6vNZZU8ZZzU/ADDFPrBAETHWb0
/EfBlq4qDHKpQvG6vQbUXy9ZbPophqvWiZUDfB1qdbKxVaGa6adxJ9PIoQ10
wRoe2fOK6Rex1hz57QvpEQ77Q+U7DPrPtZb67t+M+JfjSlsaMeiySP8ia32k
P1wX+6OZ4WfkOdwpMEL/Rtmb6LRhsDdctrbJ3BS9bI6Vse7AkCVFON+kzVDe
hte93l1MvXMFy0zGzJHnY5uLmT0YvoU1j21IZiG0LNr3fi+j/3lTMsmzQkqu
L1FjPwalVCODT2LWqOmn1ZDUvxj2ZTVJpprYoTssUqUxwqyVXlysf2iP4hKr
Uy2+YLi3b4fRtLwDstFlWR7/joGV3FevGMhG8xob54eOY3BtEW9unGOje2He
lf4TGLq+i2mKneOgAOXvR72mMOwlqoNBklyk+uTMNpcZpr92q6p0R3DRe58V
3zhzGEYPjEXpfOWi81JXCq3nE2g9Mmqj5sxDFkUGgeYLCPQ3LmxIL+GhSf4T
TRMxAmf8TtkckuCjwklOr94iAl/jzm2MZ/PRH9ndOZqLCdhYvOt4E8dHShYh
7iqSBD4Xxumse85H9f3zlVYvJeAymN4U/IWPSGz8e5llBBQrNW/clRMgU32V
JAlZAvHOtWGdmgL0ramQPW85s7/jfcyokQDdOAbSP1cQkPoasHNwuwB5rHvz
ckSegKmE2ly9vgDJP3PHfasI1G2SIwUqAlTjO7KzU5GAY5q/Upy4AJ2WPjmv
WYnAhEeyV8wHPjK+I11Rq0zAe0eBdFkxHw07ZoU9X0egYbHe4OajfHRlWtuo
UpXAJ732n9LGfLRXWDFWokYg4vcHARFDPCTDsrudr05AR7ol/3YKDz0faPMX
aRCgHxtf0O08dPxCgEbmJgLdYw19ffVcpG843ZO4mUDb7q6b+5h50v8+Whij
Q8CneciUO8hBWSfWuJ3RJbB5uberhD8HLa42af7LkIDn7rZ1ZRw2qvR/edHf
iMDC2YTPxuUOKFRmr4OXMQHRT4OpaCUH1OUc9oKzg4A0GK+vTrJDZUOl5XoW
BDrUqu3vVe5CQfG7jmiyCKhHVam167CQmlGzoYoVgcsnswsXJVuguJM/8mVs
Cejbu8r42pqhg3JbL49wCZSWxdV0txsi5dKn+/r4BKwqbhuGOOuhBhfe6k5H
AiivM0UuWwuB6K+EWhdGD0HG/tXVimiVcfGZfC9Gz1aIH5dRprVtZmYibwK3
ejIVQqTV6ZlTb2cyfAgc79iSdFNMm46+HP07xp/APcvpI3ddt9Jq1y2+/n8R
GHHyeDn4mxmV8zpYnnmIAEtN9nDET3PqdlC49M1hBk/oSNiq6xb0R8jyYsPj
BN4eCC7G3buo+RHbhT7/MHqkxUfd8N1NY0+cFaSFM/Xy5RXtP1hTNTI+OXOG
4V9Xun4iy44Gx+ra6WICsTdjopI+2tPyBN9szyjG75a/JvUscaDiqTlfEqMJ
rNyx7fTxSw6Uk9m6szqWgJHXY1ebdWyalbMieeICg+e/AypLMtj08zW7fq0E
Ajf7k1uOLOVQw/xIE7dEAmedJK95hXJoeDGNiUsmMFDr05DyhkNrSn92VKUS
SBIGy39S4VKFCj2975cImD2W2KR5kEs9q/wiNmYSGLVU/MDKZeZndW6jczaD
b3axt8o7Lp2sadsYIySw4nRbhWicS1n1K49W5hKQqUk3qJHh0YRm+5pREQFN
j1U3Y5V5tL0NK6/PI/CrsWCmdx2PanQ/CubfYPCauOZ/VODR0L6JKnyLQM8a
gysJC3j00ZD+ygcFjH8MohMW9HCp1Ji/z1AhgWiOYxn7PvO/GL9yX/kOgYyV
5VrCCC7NnW6XZJcQeFQgaya/k0uH5yu4RZQS2OhdVt0yzqEmixwKS+4TWPDE
4NCGHOa9IBX1S385gY8Jr9/rmHPoW9kqnmIlARB/26b7nk2VFKau2j4ikDCQ
1hV8gE0PKhlO/FNF4O6U2zyTPgd6VyXQpugp41/f/hPNHg503sarmR+fEzhQ
ERG7NXcPTdFbZW71ikDwyaCbMwZ2tNuInXj0NXOflgWcoh4bqrPjXO+tOgIV
C5YUiCKt6XPW9DnZBgJ7g7iCTOEu+s2l611LG4HEBNG/+rZmFPavVl/ayZx3
Zlm7myIa/QfnCPpAIG/pA5edjb9R1f88VbryifFf3We2qN2QsiPzvAOHGfzl
jdFzFoo0I/pDafYogfbZ5U6v7i6i/XGKS+rHCIQ/fbytxL3HNDw9psBonMD1
oqRjWVprUc3lZ/N8J5h8iZzNDLihjhSuznLSp5j88/t0sOOWNvK8uU30eoaA
3rF/anJt9VFBYfD43ByTX6/aJntLtqL/A1nuGsk=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Gamma]t\"", TraditionalForm], 
    FormBox["\"Excitation\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
     InterpretationBox[
     "\"Decay of localized excitation, \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) square, \
d=\\!\\(\\*FormBox[\\\"0.75`\\\", TraditionalForm]\\)\[Lambda]\"", 
      StringForm[
      "Decay of localized excitation, ``x`` ``, d=``\[Lambda]", 11, 11, 
       "square", 0.75], Editable -> False], FontSize -> 14, 
     GrayLevel[0], StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8095452008725505`*^9, 3.809545361950925*^9, 3.809545402329921*^9, 
   3.8095454606239996`*^9, {3.809545498339122*^9, 3.8095455364801044`*^9}, {
   3.809545631000289*^9, 3.8095456606410065`*^9}, 3.809599083439243*^9, 
   3.8095991160324078`*^9, {3.80960527422325*^9, 3.809605285242796*^9}, 
   3.809606517759519*^9, 3.8096079387255583`*^9, 3.809641181321965*^9, 
   3.8097290344873123`*^9, 3.809729217660472*^9, {3.809729278237445*^9, 
   3.809729286561181*^9}, {3.8097310253893948`*^9, 3.809731050358438*^9}, 
   3.8097712158552103`*^9, 
   3.809774108712022*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
0igffcUOlqm1wy8aJV0t0h34d+2O/wfAbTbr\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_excitation_decay_afmode_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8095991185851345`*^9, 3.80959924850183*^9}, 
   3.80964436073803*^9, {3.8097292305629625`*^9, 3.8097292429309206`*^9}}],

Cell[BoxData["\<\"plot_excitation_decay_afmode_11x11_square.png\"\>"], \
"Output",
 CellChangeTimes->{{3.8095992244007683`*^9, 3.80959925102477*^9}, 
   3.809605290843827*^9, 3.809729233149047*^9}]
}, Open  ]],

Cell["Same as above but varying the atoms of interest", "Text",
 CellChangeTimes->{{3.809641320493924*^9, 3.8096413292697406`*^9}, {
  3.8096414805133643`*^9, 3.809641500650298*^9}, {3.8096416329307384`*^9, 
  3.809641689067629*^9}, {3.809641736369666*^9, 3.8096417592015233`*^9}, {
  3.809641827723316*^9, 3.809641838424391*^9}, {3.809644889757348*^9, 
  3.809644897063801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{
   RowBox[{"-", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8096420661161876`*^9, 3.80964206962634*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8096420701081543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inner25Idcs", " ", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"centerIdx", "+", "i", "+", "j"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], 
           SqrtBox["atomnum"]}], ",", 
          RowBox[{"-", 
           SqrtBox["atomnum"]}], ",", "0", ",", 
          SqrtBox["atomnum"], ",", 
          RowBox[{"2", 
           SqrtBox["atomnum"]}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "]"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outer16Idcs", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{"inner25Idcs", ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"excitedIdcs", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sliceIdcs", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"centerIdx", ",", 
     RowBox[{"centerIdx", "+", 
      FractionBox[
       RowBox[{
        SqrtBox["atomnum"], "-", "1"}], "2"]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"soln", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "sliceIdcs"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", " ", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<Excitation in central row, ``x`` ``, d=``\[Lambda]\>\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}], ",", "Black"}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Gamma]t\>\"", ",", "\"\<Excitation\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"LineLegend", "[", 
      RowBox[{"sliceIdcs", ",", 
       RowBox[{"LegendLabel", "\[Rule]", "\"\<Atom indices\>\""}]}], "]"}]}], 
    ",", " ", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8096418008174095`*^9, 3.809641842698697*^9}, {
   3.8096420077648635`*^9, 3.809642027501035*^9}, {3.809642060080149*^9, 
   3.8096421356353445`*^9}, 3.809642254019083*^9, {3.8096423458157787`*^9, 
   3.8096423548753114`*^9}, {3.8096427155364885`*^9, 
   3.8096427530581374`*^9}, {3.80964281796024*^9, 3.809642835015952*^9}, {
   3.80964408474993*^9, 3.809644087659124*^9}, {3.8096442105544176`*^9, 
   3.809644226555932*^9}, {3.8096442792071085`*^9, 3.8096443178288*^9}, {
   3.809644426421321*^9, 3.8096444294681945`*^9}, {3.809644467262104*^9, 
   3.8096445018600364`*^9}, {3.8096445365273447`*^9, 
   3.8096445391293516`*^9}, {3.809644786268194*^9, 3.809644805021984*^9}, {
   3.80964487057365*^9, 3.809644917087267*^9}, {3.809645106503605*^9, 
   3.8096451459580717`*^9}, {3.809691060102807*^9, 3.8096910993348136`*^9}, {
   3.8096911410756927`*^9, 3.8096911513605375`*^9}, {3.8097292947313557`*^9, 
   3.809729311343926*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
2ozvIbntsaLaQMr6bWVM449P7WbGBRltSMH3jqyTm/Fz2TEppKINPhkKp0gZ
zVhaTLn2oI42nErzk4/za8blh25bbxhqw2P2q5yXLJqxDvfU1JCFNhRlG4U7
CTbj5p0a/hUntcGMasYQ+rsJWzEmb79/VhtGebPLq+ubsONvHWkrT22QEKkf
eWfbhHdx0nX3+2nDEK+9QjtfE66Wr792JlwbBGLixlJGGvFeL2Oye5I2iPE6
/66ybMR1iSznf6RpQ4bRI08lhkbsVdhOH5ClDU2iy3uKKxpw61crs5hibfDb
v6t7kaMB+2/nWGCt0oZd5Ubf+8j1WEis715ynTYk8GVIrDnV4zDn0yP/9WrD
LZfSOKP8Oiz/8bw7aYmGd2h7ORsPFY9tCu5Ef7XhsMJJ7sUzGCcc+PymiUkH
5P5e/RsUU4s/27qv9u7TAYvRp43QTMHpfd4359V1YH2JxBFIm//o2qJeCIXT
/H2NOp1NSvCrLwaE/Bs6EBBAfvVevxjbMzPPySXpwAQbcP4X/BqXGyQo6WTp
gHyv/XylXQF2r02pP12nA0dtQpRnGJ/h7rLnE4lMulBe9XNNR/0iDu+9GMu1
Wxe6HX+o5j89jSR/HhF/tE8XCLujfVPsA1CsbNHV3CO68LUgJtst4jZSzy//
V2eqCzKfUpdc6v9DTzObDq7e0YWC8+TbMzteoydnpYdOpemC0XrXwmTXG5TO
d/9eeaYuMJ3YNurZXIyS0hyZfd/oQsXjV6s7QktRSNKfH3PdulBvzZyfSqlA
/hZOBeYjurT7MblALZaIvHe0uRRM6kLH7hfxyoRK5HozbcTtly4o3XzK9a+R
hI5fV2iY4kJwg80uTSCZjCy108P1DiKwMCuhTqlTEGHjn1q2CIKN7ntvb45R
kG5AR9E5FQTFe+jiTflqkYaykhtFB4HO3nO1x0trkfKvDMEDxgj0754b46S9
n1JebmnDNgi+Ua9dNZanIjHpLmu18wicdHga0q9RkdB3ZbY0NwSKNzaCSmn9
E48rfeSJIAS3SGcZZeXrEJfIJc3SSFo8K5HB+Mt1aPfUuyX2WwjeHh+g/+9Z
HWJ0+O9SVwaCrM3oi5/Y6tHWAUYRmWcIEtgdX+/WqUcbI5c/3i6g7a/817kZ
j3q0/LAn/XspAt4IhSvu6fVo8ZT6CVMyAvGswoGU+no0y5W1K68BwVX9xWTn
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
GnkmaNQb+P883oCuC2unL1rJhLG635benAaUEiltMKXEhMD0FKPBbw2oROIn
d1SZCZSr1cnlio3otXz95xZVJoysUF1Z6NqIJu+mX6xWYxL7qY5KW1wjEloT
IZGvzgQTp16yVVkj0tYg6cdqMsEqm1IWMdOIIM+gMUSLCccODKrsVmxCNJ2V
dC9tJszUntC1NWxCgYbvztP0mCDi319c7dGEbtQ0L7XYwoStU+ec5q82oczd
+clGBkzY+yhAKz2lCVU1xOlsNGTCeSGdI4/KmlCHhS9byZgJ36t+a0u0NaG3
PBZF3IQJBwWXL3rxuglNW+8and/BhJbep/vmxpqQaM/acxO7mJChqeN1da4J
rWYuER1GTNCczProvZSLtrz+crfblAmxa4+sbFDgIosjzzY17WGCVMltH9+1
XHR4pLSu3JwJU3euHL+uxUVnnJNsHlky4QLXjSG0hYvCvgYOJ+1nQpr362fv
jLjoztmjPtcPMuHlv7FVG3ZyUd6UuXDgISb0fbGc7N7NRfX+WokeNkzwF7i8
+BPiou5ZyY1HyEy4JbFN3IWIP4RM1ZCoTFjyZppN28VFfxf3W5nRmfDI1Lb/
yXYukrxW+99WJhNIgn9ELxpwkZp4mud6WyYMfnMTq9rMRYY3rgiusGOC2nPz
Gy7rueiAnNstUQcmsO2prNhVXOSYZK3x15EJ/3mdztwkzUXeylurvjoR/b+7
QN+zmIuupq44MHSMCY8fCDP7p5vQPfW5150nmBC6Pyj+22gTKsx568E+xQRH
56MTV3qaUIM291+xC6GP8/hwJrsJ9RXlxme4EXzWOdYdLGhC/6q8y6+eIfym
MSBtGtKEBpeURKV7MsHPXz3U/UQTqqF9P1rvzYRoqlrPF8sm5Dt5VvLXOSZY
nEyYnBVrQuTdT0ZlLjAh/HFYf+KnRqQTPV6z+SITfLUTq5O5jejTBg/nkyFM
qJnSTP0Z0Ii4fgW7QkOZUGWt3kClNqL0xq/LH1xmwlNhUNDVakQOR9zYLyKY
EB//XMu7pwF133FeufcGE2x/OE51yTWgJ6PZE0cSmFB3IPl49TAHRW/5wL14
iwmZK0fo1o85yLLzhHdpEhMmTaK07wAH1Qofa1dLY0LHvYnrNiw2yvK1D1pU
QsyLrvfE48xaFNZwn7q6jAnv1S9WGinVIifp1xu3VxD3/THu8CPmKVIqsO3z
rGFC00Drka2eNSh2hKH7toEJFevVvvqsrULnKeTh+h4mLAvVPn5uTyk6qGdh
HviTCe9+yOSf6kpDAr29i3x/M0FG9mG32O1UVHHhZL37HyZIpG+PlChNQWqN
4UZ284Sfdll74qa76C+9caOJMAuuXekuUXsZh/IuguSMHAvkt2VU1zw9jZ1U
u3gTCixo3dbe5yh4Hitwj0R8VGQBu0Wk0fTZJRwmGSLwUpkFo5MLMx0O1/Hh
tLof5eosWMp/kPso5Q4WazF56WPAgjPmAgxjn0xc78676W7IAqeuqEen4rKw
r/Rh0nFjFihLVpyOys3Gb20vtFF2ssCt2XVd8MscXDVW+VR/LwsCbtMOeyk+
xi6y21InqCx4P9puRI4vwWsqm+w/0lnw88KzoFfLSvELO9rKN0wWDCtL/ZsM
L8WQ5ZPQaceCYGvxTeXeZVjRuCT88XEW2JqKHfmxowK3OOi6uvuwgN+2YujA
pWose9zl6QM/FlwWc0neOVaNHV3SJLr8WeDZShqfotfgX97LSwwCifwqznSi
2lOsfu333/lwFnSBpP2vh7XYM0bvkF4EC/qcXyQx/tTipwmuD49FsoD1wkpy
H6kOUx683tMSw4K5k13arb/q8KUSHH3jDgv68ZW/D9dj3FE5819DEguw9Of6
MTeMV9Tp6/+8x4JL2FY65THGhS0ZvbYPWXAztCM6Vp6N/3YMbohOY4GH0nbT
71vY2KJbPqA+gwUbGmS6563ZeGgwYs26HBYsei1jIn6ZjTXfsT3peSyIulf/
Wew+G/t+/NMQUcCC58LvNHKL2Zg9tkW+ppAF7pvvD31sJvaDH+7OY0UsaPE4
YdA0wMas35nVa0pZIOsQ927nNzbOmBtaRi5ngdinF6WkBTYeX7TC8XIlCy7M
fvNZkOBgExFSUXk1C7TDb47vVebgq+KRgp+esuC/M8ETahs5+LlMA02pngWH
cpzNEg04WHnFbLYVmwXmq0VLU3dzsIuywZ/gBhbE1ChK7Lbk4LK1HgeLm1hw
chWsPmPNwQIbsh+MNLNAPzJETI/GwVbabybk21gwdgziLrM4OFFf0WxfOwuS
7f5dcLHj4HeG5FsBfBZYamy//Z89B+vsvP6h4BkLfvi5Fbwn4gDTRuM3z1mQ
Pi8VFUTkN1vMXZd5wQIHz+y5LOI8WattQ3v6CL6heR2ORD0H8hndc/2E/pGk
5kfEfXIYj0JzBlggLLKj+hJx32m7tz0DgywYohl9/kzogaMrNSTesODdnx2b
Rwm9Uaco59EwC5TOT53wJHj0uUfxvEYI/5FFPeMIXmpeTcqZ71kgJ7pex0yS
g8+cmz/T95EFvaungyMJ3jUXDTmiX1jQLKdqdoroB/lqzkmPcRaYFhqnjBD9
S44arnw4yYKjcc1zV4j+frqhtLT7Bwue6D8c5hD736X70YWGv1lwNU5CStKV
jTtSuQKuf1iAxHX3qRH+WZG9QLk/S/j30/6Rl/psfCzfKIs/T/AQyuzXk2Pj
wiLP3//+sSA/dImp4xeM/wfv7Rg/
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
x/BTbjJ5LajskLXIHitVWApfilcityAFNmLjtI0q/HLp8MzsbkF4H51ps4sq
2PmERjmPtSD93ZdnUj1Ugfn7C8u4jy1oeLPG65afKrzj0bvA+70FWf9gpD0X
rAq56ilsjJstaHbBPlkuUhUSBPmoL+1qRa7T9SKssaoAPOmi7HSt6Ncblqbv
T1RhxT51QnJ/K/J/6WI6kKkKunq8FyqZWxFNN54peq4Ki/THdqWztqKYZg7v
yHJVCPlRzfGDUnOSrtE6kVWhXOvlYjlLK8oq7UjWwqpwWPfmi0mmViScd0j0
aLcqrN94Re+1rxUR0zyb/g2qQsS79JO3qVuRSmKv6dSYKmw8/62wut2C2h7w
zda9V4W4VY/mqZ8tyCjM1/vJvCqkv4/PUv3Sgl7dHqT1+aYK9g8XC5jftaCL
nseemq+rgiQfdc7Fly1o/oq/qNQ/VTCodbUWbGlB7rajTftp1YD8Ry3VqbwF
bViKmC3tVwPbb+nmQuktKNgsZLbnoBrYVUimOt5vQXT64975vGpQtSAdL+Td
gngU7z21FVcDest7VAo6LShH4p0okleDzalzlZGiLUhMSK75sLoa7PNOjnBk
bkHqB2dn3xirwQflaoXoYoy6GJV9as6ogZINd2eaG0YE6ti9CRco99v97RkV
wcjmp7oYwU0NIitLG3symtF+VqqhV95qEFp+sE6O0Izqpdq8zgeowZsDM2uX
tpoQu7tug0uMGjSm/5Tea9CEehYIhmEVanDzd6PttZYG5LOX5Rt9nRq8u2b1
MNqiAfELjcbFtqpBnHbjlZwv9cjf/txE+ogaJR8msL2hrUdS7y+71P6i+OF9
6+e5I7Xo3fZRRvRXDSzZshtE0sko6tCn8k4adZiofhp+kpuMPlm6bIxwqIPn
n1Ztc3oSSh71uPdVSR2GpsSPh/VVIarekFz+AHVYHZPgk6grRaWftfQL76rD
yzMpX35eLUHWtLTLkjHqoG1hHvuHqxhVa0XJqmeqw6hrrp7L1QLk0hzfdq5V
HVSbxmqFPz9DQ1U509E0J+EY02qyMOkhys7oPLzx8CTQu/hdOf0lE6ddEHtz
NukkWN3i/e+tVTZO5kmIq844SZk4+/ITGp/hmCQbWs/yk9B53X5/y608fDvm
z/floZPAu538in2gCPsY2xUZTZwEqv+2d0VzlWCPfb0ORTMnwc//Cd/45VLs
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4Ym5ebZjqBD9D3zvkWo=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
2NjH4/8BCzBQ+w==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4xpbkgv+H6F2FQ8=
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Gamma]t\"", TraditionalForm], 
       FormBox["\"Excitation\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"Excitation in central row, \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) square, \
d=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\\)\[Lambda]\"", 
         StringForm[
         "Excitation in central row, ``x`` ``, d=``\[Lambda]", 11, 11, 
          "square", 0.4], Editable -> False], FontSize -> 14, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"61", "62", "63", "64", "65", "66"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"Atom indices\"", {
                 Directive[
                  GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, 
                Background -> Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Atom indices\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.809642242584541*^9, 3.809642359146446*^9, {3.80964282893996*^9, 
   3.8096428357161055`*^9}, 3.8096440882754726`*^9, 3.809644227655964*^9, 
   3.8096442914424024`*^9, {3.809644474625911*^9, 3.80964450329021*^9}, 
   3.80964480874702*^9, 3.809645067681473*^9, {3.8096451109876127`*^9, 
   3.8096451471119843`*^9}, 3.8096910371706266`*^9, 3.809691152608757*^9, 
   3.8097290657836065`*^9, 3.809729312226534*^9, 3.809771225316037*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_excitation_decay_afmode_central_row_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8096443813668275`*^9, 3.8096443991672115`*^9}, {
  3.809645252191497*^9, 3.8096452556073303`*^9}, {3.8097293325102835`*^9, 
  3.8097293336412573`*^9}}],

Cell[BoxData["\<\"plot_excitation_decay_afmode_central_row_11x11_square.png\"\
\>"], "Output",
 CellChangeTimes->{3.809644404506936*^9, 3.8096452566445856`*^9, 
  3.8096911626939363`*^9, 3.809729343762185*^9, 3.809771241296883*^9}]
}, Open  ]],

Cell["\<\
Get explicit lists of solution pts for plotting high-res time-domain results \
(specifically for the animations)\
\>", "Text",
 CellChangeTimes->{{3.8095600333873806`*^9, 3.809560038145509*^9}, {
  3.809687643871478*^9, 3.809687679927371*^9}, {3.809728352075573*^9, 
  3.8097283593431635`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "explicit", " ", "points", " ", "for", " ", "the", " ", 
    "solution", " ", "and", " ", "transpose", " ", "to", " ", "get", " ", "a",
     " ", "state", " ", "vector", " ", "at", " ", "each", " ", "timestep"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"savesoln", " ", "=", " ", "True"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ti", "=", "0"}], ";", 
    RowBox[{"numsteps", "=", "800"}], ";", 
    RowBox[{"tf", "=", 
     FractionBox[
      RowBox[{"numsteps", "-", "1"}], "\[Gamma]"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsteps", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"ti", ",", "tf", ",", 
       FractionBox[
        RowBox[{"tf", "-", "ti"}], 
        RowBox[{"numsteps", "-", "1"}]]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"soln", " ", "with", " ", "rows", " ", "i", " ", "having", " ", 
     SubscriptBox["\[Psi]", "i"], " ", "evaluated", " ", "at", " ", "each", 
     " ", "timestep", " ", "t"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tsteps"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fname", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<soln_time_evol_``_``_````x``.txt\>\"", ",", 
         RowBox[{"Floor", "[", "ti", "]"}], ",", 
         RowBox[{"Floor", "[", "tf", "]"}], ",", "gridname", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"savesoln", ",", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"ToString", "[", "solnPts", "]"}]}], "]"}]}], "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "transpose", " ", "soln", " ", "to", " ", "get", " ", "a", " ", "vector", 
     " ", "state", " ", "at", " ", "each", " ", "tstep"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"vecSoln", " ", "=", " ", 
     RowBox[{"Transpose", "@", "solnPts"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
     RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normL", " ", "=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "the", " ", "approximate", " ", "ferromagnetic", " ", 
     "mode"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overlap", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"fmode", ".", 
            RowBox[{"evecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeIdx", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mode", " ", "=", " ", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodePts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "t", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "can", " ", "make", " ", "the", " ", "lines", " ", "below", " ", "more", 
     " ", "efficient", " ", "by", " ", "only", " ", "computing", " ", "the", 
     " ", "sums", " ", "once"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalPts", " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"vecSoln", "[", 
              RowBox[{"[", "t", "]"}], "]"}], ".", 
             RowBox[{"evecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"totalPts", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "-", 
        RowBox[{"fmodePts", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodeTuples", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "fmodePts"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "fmode", " ", "occupation", " ", "at", " ", "each", " ", "time", " ", 
      "step"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"otherTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "otherPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "totalPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"occupation", " ", "in", " ", "all", " ", "other", " ", "modes"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.809537731589987*^9, 3.8095377317493005`*^9}, {
   3.809538818979971*^9, 3.8095388204221125`*^9}, {3.809538877168335*^9, 
   3.8095388806360598`*^9}, 3.809539283946311*^9, {3.8095393466665525`*^9, 
   3.809539372119471*^9}, {3.809539467892342*^9, 3.809539468073819*^9}, {
   3.8095395222788367`*^9, 3.809539522892194*^9}, 3.8095450971210623`*^9, {
   3.8095458315611763`*^9, 3.8095458355654626`*^9}, {3.80955773496976*^9, 
   3.809557757853461*^9}, {3.8095583906833534`*^9, 3.80955839126085*^9}, {
   3.8095597358014803`*^9, 3.809559807414382*^9}, {3.809559964155444*^9, 
   3.809559968153966*^9}, {3.809599552339513*^9, 3.8095995531761265`*^9}, {
   3.809599617330911*^9, 3.8095996220619907`*^9}, {3.8096000584546027`*^9, 
   3.809600116786805*^9}, {3.8096003298751945`*^9, 3.8096003393550863`*^9}, {
   3.8096006351305075`*^9, 3.8096008071453*^9}, {3.8096010934339542`*^9, 
   3.809601093899026*^9}, {3.8096011379469185`*^9, 3.8096011387812004`*^9}, {
   3.8096011727637854`*^9, 3.8096011739468527`*^9}, {3.80960124310413*^9, 
   3.8096012867778454`*^9}, 3.809605305087755*^9, {3.8096054607247677`*^9, 
   3.8096054665152907`*^9}, {3.8096484370062017`*^9, 3.809648442380129*^9}, 
   3.8096486033603587`*^9, {3.8096872387610865`*^9, 3.8096872447717113`*^9}, {
   3.8096873155956926`*^9, 3.809687355940363*^9}, {3.809687553929351*^9, 
   3.8096875833017836`*^9}, {3.809687620226015*^9, 3.8096876209750614`*^9}, {
   3.809694119981163*^9, 3.8096941727791758`*^9}, {3.8097244836682706`*^9, 
   3.8097245504190836`*^9}, {3.8097246239728518`*^9, 3.809724641454688*^9}, 
   3.8097294103660364`*^9, {3.8097295651431766`*^9, 3.8097296089304705`*^9}, {
   3.809729641149293*^9, 3.809729684871345*^9}, {3.8097739518698406`*^9, 
   3.8097739644336743`*^9}, {3.8097742206213493`*^9, 3.8097742290729055`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fmodeTuples", ",", "otherTuples", ",", "totalTuples"}], "}"}], 
    ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Blue", ",", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<\\\"Anti-Ferromagnetic\\\" excitation, ``x`` ``, d=``\[Lambda]\>\
\"", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"], ",", "gridname", ",", "d"}], "]"}], ",", "Black",
        ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<A.F. mode\>\"", ",", "\"\<All other modes\>\"", ",", 
       "\"\<Total excitation\>\""}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Gamma] t\>\"", ",", 
       "\"\<\[LeftBracketingBar]\!\(\*TemplateBox[{RowBox[{\"\[Psi]\", 
RowBox[{\"(\", \"t\", \")\"}]}],SubscriptBox[\"\[Psi]\", \"i\"]},
\"BraKet\"]\)\!\(\*SuperscriptBox[\(\[LeftBracketingBar]\), \(2\)]\)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8095460518368845`*^9, 3.809546069715067*^9}, {
   3.809558541997348*^9, 3.809558545173108*^9}, {3.8095585766687527`*^9, 
   3.809558695379739*^9}, {3.809558795379532*^9, 3.8095588215814395`*^9}, {
   3.8095589269086657`*^9, 3.8095589306195116`*^9}, {3.80955896284052*^9, 
   3.8095590401338406`*^9}, {3.809559130558073*^9, 3.8095591902299385`*^9}, {
   3.809559254932829*^9, 3.8095593215120664`*^9}, {3.8095593953582487`*^9, 
   3.809559588922476*^9}, 3.8095989899906483`*^9, {3.809599331272752*^9, 
   3.809599354457077*^9}, {3.8096011106737213`*^9, 3.8096011172557926`*^9}, {
   3.809605490443336*^9, 3.809605560013387*^9}, {3.809605655235878*^9, 
   3.809605655938001*^9}, {3.809694181749177*^9, 3.8096941960339346`*^9}, {
   3.809694228606848*^9, 3.8096942852120905`*^9}, {3.8096943156043634`*^9, 
   3.809694338623783*^9}, {3.809728264480889*^9, 3.809728302987866*^9}, {
   3.8097291272711134`*^9, 3.8097291416646447`*^9}, {3.8097293553870907`*^9, 
   3.80972936700701*^9}, {3.8097294641172667`*^9, 3.809729470596936*^9}, {
   3.8097299015264482`*^9, 3.809729908719213*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
4+H9rOuSLzvKt/wfyaQUAQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1: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
l7z9V6ueRVbov+TK3rfu/uqD/u+U1mc4xnaDmeSsU3stPHuj/5KfPNjULr4X
+i/ZtjTt4ktL9F+yd6f80X1gnWTNfMcDRj3R/11MFTe1zf6c7ui/ZAvH679F
dkP/JecH/rdY3RX9l2x/pmrG0C7ov+SqNT2mdemM/ks2mr1tpZkF+i85XBU5
v10n9D9O6vfwe8O6d0T/JXuN9+8yvAP6L9nqdvcEz/bov+RBu90mrf8d/Zds
+Uf9r+fN0X/J6sSUzl/bof+7marUzjBwAGwtOTw7YfIaM/RfsrdJt4eH2qL/
kqNm5hyY0gb9l+zrPrdjy9bov2SzkNq5/7VE//cwVZKvTdtLpui/ZN+7vQ8l
tkD/JUfp0h9uM0H/JYcPmfh6izH6Lzkv6sDZnc3Rf8mGjl9bHGmG/ku2fq12
v9YU/f+bqbR95lW8bYL+Sza5f39nC9hbsnv/2HKnxui/5CTdsu2RjdB/Xo8P
bXrfCP3nz+sd1+l3WD9e+p6az8s/NMR5ktXhxq+SG5C7SY5fPTvDrz7Ol5w2
y3vmiHpkV+5WF/w71MX7SNbUrT21UR1ykOQoZ6MwQ0O8H19fvndF3drkBMl5
SQamxgZ4X277tx+61yLnSi7/MWW2oz7eX7KR+dtagTXJn/n69f0DkvXwe94r
eVa428sa5FaSVf/6jrKALSWrh3T76K8i20nWZq4fF/FriGx3yZqM1urB1WQf
vn530eDqKrJGMktY2iP3BzmG+1lycuJ3chL3r1F9Nn4jn+fPMzS2W1VJzuPP
q5E1I+gr+QVfv7TdkJAKcqXk+NK8kNgv5Pr7mEq3+cDx9M9kM8navbdtCj+R
rXjd4leqAWy/j89X6rnBH8kekjUDiwxWfCD78vV3cgdeKSeHSFY/LWjWBN4u
menanrz7nnyE72+3df7Gd2Qtr189FTahlJzP6+3zJnZ5Sy7h7zfSY1a9N+Qq
7mA9VllCNtovrR/U36f8P3J7yaxQvfrTK7K1ZK3r6A41YAfJqthfb0xektV8
vbrCzuYFOYDXnYameT0nh3Pfiby3rZgcx73SzeveM3Iaf76FW0Nj+Ap/ntPN
YE8duZC/X2RR5dyn5FLud/fUbZ+QVQmS63xa+ayI3FSyauvCTWmPyRa8futr
3Q2PyIO4j0yO+ush2ZmvH1OYPKuQ7MXr43688npADuROffl4fgF5A3eaddvV
98nx3BP9LPfkk0/w54UOD75yj5zD60tnH/l0l1zE7RewoCtczm3tEDjvDln/
gOQ9IxYfzyObcM8wN60Jd5Osuniu+4lbZMbdxraz702yK/ePx9MH5JK9ue+X
9/rtH3IQt1HvUR+uk6O4Zyzt/TSHnMCdk7q88Bo5g3v8mNSibHIud2SFx9ur
ZB139NG6+vBn7ismPTpeIRsmSjYJdhp3mdyK+9O7nqFZZEvuVn1CL10i23Gr
H3yrBbtzd7Ie4KLF/HPH7ir+4yLmn3ua2/YaFzD/3CMf37tyHvPPbZ7wMuYc
5p97QUs/v7OYf+6iT0aTz2D+5fdROzhmYP6582ySxp7G/B+UPCv7yMRTmH/u
xrlP553E/HNX/Dy37gTmn3tn58tpxzH/3HHT03TpmH/uDZsGt4BDuLffbTb5
GOafO+d33b40zD+3hSbiVSrmn7to7OOtKZh/7spxlS5HMf/c1ok9Wh/B/HN7
3TX+nIz5T5Kssh334BDmn1v/7YzsJMw/d+Hz29qDmH/uhBHNsxMx/9zqvmfu
H8D8c+ft6FuWgPnnfpHboDEcx+01tWLwfsw/d/zdJP99mH/5+XvvpO7F/HPr
Zjf7Eo/553btaGILqw5J9u1V3e1vzD83q3r0fDfmn9uypXFSHOaf2/mk3dJd
mH9uC91Pt52Yf27N01y2A/PPrTrWs992zD+39cK9/bZh/rlNfu4ZFov55y6Z
n+C2FfPPnebff1EM5p87p8hw9xbMv1zX3LoZjflPluxdaVUbNuHO0NPZb8b8
cxvq+UZHYf65VavqX9uE+efW1Vm3JBLzL9v7cN+NmH9u7Xi9Ghsw/9zsQLuH
EZh/7qjw6Mx1mH/utI53j4Zj/rnzFkw8tBbzz61J3JEahvnnds5rpA3F/B+W
149+FIL559a9LPu5BvPPHbXoVBfYjlvb0F4djPmX198btWc15l+u541/ocH8
c7PVdXrDMXL9228NV2H+5f0e366uwPxzxxd4rA/C/Ms2yJm6HPPPrc7UDlqG
+ZfrJVmdlmL+j/B6nm2bQMw/t/ZWetslmH/ZO9Z2XYz55zYrGDtsEeafW7Xt
hDoA8y+vbzxn3V+Yf7nu0eScP+ZftsuEL36Yf3n9nH/6w1puZmAU7Iv5l222
8uBCzL/sFb9NWoD559ak/mkyH/N/lNeH/3wxD/PPrd0w48JczD+3yqRhwhzM
P7em0cKt3ph/2dWfN8/G/Mvr2xrtmIX5l13DKXkm5l9+fqr6qhfmXz5/SNnr
GZh/+XkBfxvDhXLdtJGjJ+Zfrps+3fAn5j+FPy9w7z015p9b0/ZDO9hC9oKq
99Mw/9yqp22SpmL+ZVvfWuCB+ZfX91hrOwXzL9cfXzSfjPmX63VKGk7C/Mse
Ms/AHfMvu+Ck4UTMv+yBE5u5Yf5ld6juOgHzL7u/i4Mr5j+Vu+6XReMx/9yq
U2uSXDD/ct122/NxmH+5fvZqR9hV9qYDfs6Yf9l7bq11wvzL9ttn44j5l21q
/8MB8y9bz/r6H5h/2dYv9o/B/MvecCZiNOZf9jWzFfaYf9mWa5aNwn3SuPf5
Bo8kN5RdFBszAveT7bkrzY5sLvt9q4LhuK/shJP6cD/ZA6oG2uL+srUhy4eR
x8i+/DyL4XvINr/RCJ4m2/H77SH4PrJZYMRgsr/s2GCXQfhesnuv7TSQHCbb
pczQBt+P7mNWYU3eKTs9+H1/fE/ZIw986EdOkZ1o9asvvq9s6/zmcJbsxmbW
Vvje9H1SPfuQC2QPah7bG99fdvCrO73Ib2QPOd4M/iy7oPufluRq2V5W3j3x
9/kYt5lPqx7kxrLT/nrSDX+vZetOHO1K7ii7/tZ1XfD3W/aVxX6dyTaym170
ssDfc9muvzw7kR1lez2b1xF/32XbG6zqQPaUHVU7rj3+3suOW5r1O3kx+d0H
c/z9p/f51BmOkJ3Qcm475IHsjBbpZuQ9dH5qDThJtnOvY23I6bLdTea3Rl7Q
91jarxU5W3b4qfotkR+yVT3KWpAf0X2G/2uCPCGvKzAmv6fvffBRc+QLnT/w
dTOyXjp3XlENuL5sy9btm5Kbyy6McGqC/JGtSV/TmNyF6u21jZBHstlWfXiI
7PLLzkbIJzrvvv1vZBfZqpXVDZBXsp2LL9Unz6L906PrIb/o/VwW1iUvkx1v
6l4HeSZbO9bBkBwp2yzqj9rIN9q/YoIBeR+976E5tZB3dP7+tfrkU7KjKlJq
Iv9offeneuQbsnUFxnA+nZfkXoP8hM6bvleFfKT3m/3812DZH2l9enQ1uYrq
P5x+kg2Oy8/fbVpFNpLNyj58J5vKjne+/43cXraZ+5VKcg/ZqoMXvpKtqV5w
uYJsK1u7+N4XsgPVm737THaj+gAjWE2eN+gTeS6tt/H7SA6QrZ6c8oG8kt4v
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
nil4ruCFggMELxW8UvCa//f/AZOafgg=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0.5, 0, 0.5], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
l25LwfGTqo86jGjJVLw5qvU1cxstm4p9kuW3T2+m5VPRNnW8yur1tHIqGtTX
dR+oTU9IxZWYS6fvLKdnpCL4Zd3Wk4voBalor9BrG61Ja6Wiq31rl2ez6A2p
MNi5TzZiKm2QimXern4n1Oi9qcjTv7Fo7TjaLBWpd33/UxlJW6WiT+sf1SYl
+mwqHltKHA4cTHum4uBZjUe6/Wn/VHx7ufi6Qm86PBVy8Z4hb3vQCalomu8n
KpGkM1NhWXosPOGXmPdfKp7vtunn3kaXpiK37uTLLV/pylRMemBurdhCP0/F
7yJzv7pmurmzH1uu6Sa/oL+kopfn4Vcez+mOznxzEuwtntDd03DNWsXGuJKW
S8MMBR/ntfdpxTTMG3Dlw5hSenQadlY0FH29TqunQSl71anrRbRGGmbtfvch
JJdenIYjZ+SVXDNo7TTUzsgYYCugN6fhe1tHT8t42igNI9TW+JlE0QfToGf9
8/SaMNo8DZHjZCzHBtG2aTBY9zhL0o92ScP+Mu2yNxdp7zSErS05/dyDDkpD
zX8vM54701FpmD3uj8cLB1qQhmK9htMNp+ncNBzecufhXUv6ehpsVAX1Kcfp
e2nYW7XV68oRujoNC8Z9neRxgG5Mw/a141Z57KHfp+GS0vMoP0P6exrujTuD
aH1aIh0+8l9PJW+ie6bjpuudyVE69MB0DA3Wmnd5NT08HT1PDVjqspxWTUdt
/4wN5xbR09IxTLGj6KImrZkOh+rlY2Nm08vTUdzVxFg8jdZJR6JJt7LKSbR+
Omas03/4SJXek47H1/eV3h9FH0nH7irRwHvDact0FM2PsH48hHZIR+HjESot
A2mPdFS7rbToK0f7piP/ze8FM3rRoelomrU/U6c7HZeOi6qaf7Z1odPTsU9O
+p5Rh+ivC9Ph8W780oM/6JJ0mH369M72C/0gHSryPwShH+jadKxZ4FpT1ky/
SkfqgH1yHS/oT+kIlxt9emQd3Z6OjwpubbNraKkM2KqFeax4RPfJgMaQ3MEG
5bRCBpYp1722vkOPzMAY21FpMTdptQyszvP1rRPRszIgN3/v8CEFNDJg/qjG
eGU2vSoDU3/ESx1Io3UzcGCr0mrHJHpHBqQl1R6Fx9L7M5AmbZlxN5I+loEZ
SvWHu4XSNhmIKzn7eXkgfS4DZ1qzkt18aa8MiG/4Zl2/SAd0xiMEB1o86MgM
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
ph2L0dLPT+FlRcbC/wNgwRlh
         "]]}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 9990.}, {0, 0.9999999999999999}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"\[LeftBracketingBar]\\!\\(\\*TemplateBox[{RowBox[{\\\"\[Psi]\\\", \
RowBox[{\\\"(\\\", \\\"t\\\", \\\")\\\"}]}],SubscriptBox[\\\"\[Psi]\\\", \
\\\"i\\\"]},\\n\\\"BraKet\\\"]\\)\\!\\(\\*SuperscriptBox[\\(\
\[LeftBracketingBar]\\), \\(2\\)]\\)\"", TraditionalForm], None}, {
        FormBox["\"\[Gamma] t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
        InterpretationBox[
        "\"\\\"Anti-Ferromagnetic\\\" excitation, \
\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\) square, d=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\
\\)\[Lambda]\"", 
         StringForm[
         "\"Anti-Ferromagnetic\" excitation, ``x`` ``, d=``\[Lambda]", 11, 11,
           "square", 0.4], Editable -> False], 
        GrayLevel[0], FontSize -> 14, StripOnInput -> False], 
       TraditionalForm], PlotRange -> {{0, 9990.}, {0, 0.9999999999999999}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"A.F. mode\"", "\"All other modes\"", "\"Total excitation\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.033], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8095460621223803`*^9, 3.809546070440121*^9}, 
   3.8095577264004574`*^9, 3.809557965549145*^9, 3.8095583265746727`*^9, {
   3.8095585383354445`*^9, 3.809558545717123*^9}, {3.8095595072837915`*^9, 
   3.809559515697239*^9}, {3.809559548031593*^9, 3.809559589545771*^9}, 
   3.80959899117149*^9, 3.8095995367441998`*^9, 3.809599567630124*^9, 
   3.8095996409250784`*^9, 3.809601118404739*^9, {3.8096011545845704`*^9, 
   3.8096011801785655`*^9}, {3.8096012517100906`*^9, 3.8096012906745753`*^9}, 
   3.809605478657835*^9, 3.8096055658926744`*^9, 3.809605657038061*^9, 
   3.8096411995653505`*^9, 3.809648470616344*^9, {3.809694210395522*^9, 
   3.809694237105081*^9}, {3.80969427119757*^9, 3.8096942858463874`*^9}, 
   3.8096943403950295`*^9, {3.8097282936927276`*^9, 3.8097283038356175`*^9}, 
   3.8097291423447914`*^9, 3.809729390870182*^9, {3.809729454381341*^9, 
   3.80972947120431*^9}, {3.809729882205124*^9, 3.8097299096656747`*^9}, 
   3.8097306491115704`*^9, 3.8097307108783565`*^9, 3.80977132485797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_afmode_decay_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809605603384469*^9, 3.8096056057680955`*^9}, 
   3.8097290897035933`*^9}],

Cell[BoxData["\<\"plot_afmode_decay_11x11_square.png\"\>"], "Output",
 CellChangeTimes->{{3.8096056329993114`*^9, 3.809605659778735*^9}, 
   3.8096484864876037`*^9, 3.8096943517037687`*^9, 3.809728329295531*^9, 
   3.809730715831089*^9, 3.8097713346098337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Re", "[", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8097299296013517`*^9, 3.8097299546004906`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdVVtIVFEUHUTJTEqsILGPikrTEjMfZY9ZvsbnzNx5vycQ9MOUEjENIi9l
Bj0UtNdHahGUEEWalaXFVcvsI5CpPqyRQoSkLLK0NEIyOsHeDgzDmsXea511
9t13beF+Y1GASqU6NP/9+/vv81VdvViT3Pm9VC3+gH/mdWBhU53AwdDpfW/M
7xsFDsPAhFz2dvSiwCugOlBzuffUJYFXYVb3ZLj/UbPAqxHB+DWoYvXrcEtH
+69H90+qvxEtgdRfNLzMXwz8y1OaQ1+1CLwZGV2fSqYftgkch2H9uMcaclvg
eDRojhb7tR0Cb0WW98ZU+9I7AiegiPHbcIHVJ+LYfdo/CaPhVD8ZZcx/CnrZ
+bZjA/O3A8WdUddj2//rp6K+NXzubOUDgXei1u6/+mOuR+BdGPHtLW2IeSzw
buQwfg8iWL0akaw/0Ej9y8A55i8NJ+n9yGkYY+dPRzXtL6ej4njb9KIKRfAZ
UBLdKVNdfYLPQPtQiO5wVb/gM9HH+Ew4WX0W0ln/LAwyfQ3mmD8Noth8ZaOe
3p+cjSaWTw5eMP0cfJwJjvRpnwo+F7H2yt+t0QOCz8Uk4/MwxOrzcJr1z8cJ
pp+PhHLqr2B+nsjzIRfAzuZPi9CX5H5lLZ6z/HRIYv50cJSEldeEPBO8HvmM
12OM1UtQ0/6QcIbqyxLGJOJPkTDI8jWgjp4PBtTT88sG+Gk+igEBszQ/IyzU
H4zYRHnZiGVJtN6IDyxfE3xM34QWmq9swpbPZD4UEybY/Jixj84XzCil8yeb
8Y75N+Mby8+CSOoPFvSwegumaH/FgkyJ6luR9oX4gxVxdL/KVgTR/aBYF+wH
G4qZfxuusPxtSKT3q9gwzvKzY5LVz2PaX7bjLtO3I1Wi+8GBCrp/4YCJ7l/Z
gXhW78AMy9+Jm+z+nDjP5s+JccorzgX5uTBC+8OFwJVU34XuWeJPceFeEH1/
uBHN/LuhZ/m7cZDNjxu17Pn1IMBAng94cI3Nnwdeer+KB1aWnxdHflF9LzqW
/PP3B5NcW5Q=
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 121.}, {0, 0.1800078680106079}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8097299472262115`*^9, 3.80972995514406*^9}, 
   3.809771338583639*^9, 3.8097742005281878`*^9, 3.8097742672356067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[Psi]0", "]"}]], "Input",
 CellChangeTimes->{{3.809771346512965*^9, 3.8097713765559163`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd0zlKBFEUhtGLkaGBgYGBioiIiPOsXc7t2HZrO2sgGBub3aW9TbgPl+AI
UudBURx+PuolNfz82nnpiYi3r+f7/Xs+GlE/VZ29uA/34wE8iIfwCB7FY3gc
T+BJPIWn8QyexXN4Hi/gRbyEl/EKXsVreB1v4E3cwFXdiWOLHcc2O44ddhy7
7Dj22HHss+M4YMfRZG9W3Z/z/vcfHNadOI7ocRyz4zhhx3HKjuOM++Fosbfo
z+uucOKCo02PE5c29+vUXeHs0OO44Ps4ccFxSY8TFxxdepy44Liix4kLjmt6
nLjguKHHiQuOW3qcuOC4o8eJC457epy44Higx4kLjkd6nLjgeKL/9yef9Hvg

      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 121.}, {0, 0.3333333333333333}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.809771377540568*^9, 3.8097742758700104`*^9}]
}, Open  ]],

Cell["Scatter plot the eigenvalues vs mode occupation", "Text",
 CellChangeTimes->{{3.809691190788318*^9, 3.8096912038157063`*^9}, {
  3.8096912947707624`*^9, 3.809691299476632*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fmodeEvalTuple", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log10", "[", 
       RowBox[{"Im", "[", 
        RowBox[{"evals", "[", 
         RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], "]"}], ",", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
       "normL"}]}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"otherEvalTuples", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Log10", "[", 
        RowBox[{"Im", "[", 
         RowBox[{"evals", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ".", 
           RowBox[{"evecs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], "/", "normL"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"Range", "[", "atomnum", "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "\[NotEqual]", "modeIdx"}], ")"}], "&"}]}], "]"}]}], 
      "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8096913633326225`*^9, 3.8096913947786117`*^9}, {
   3.809691425632874*^9, 3.8096915071742573`*^9}, {3.8096915416427755`*^9, 
   3.809691611107605*^9}, 3.809691777363924*^9, {3.8096919138452992`*^9, 
   3.80969195452117*^9}, {3.809692146215351*^9, 3.80969214909266*^9}, {
   3.809692190275172*^9, 3.8096922081644588`*^9}, {3.809693398228677*^9, 
   3.8096934265828915`*^9}, {3.809774181458193*^9, 3.8097741834002056`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fmodeEvalTuple", ",", "otherEvalTuples"}], "}"}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "7"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Ferro. mode\>\"", ",", "\"\<Other modes\>\""}], "}"}]}], 
    ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", " ", "\"\<Mode overlap vs linewidth, t=0\>\""}], 
    ",", 
    RowBox[{"Frame", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)(\!\(\*SubscriptBox[\(v\), \
\(i\)]\)/\[Gamma])\>\"", ",", "\"\<Mode overlap\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809691958689979*^9, 3.809691971685286*^9}, {
   3.809692112615225*^9, 3.809692178646309*^9}, {3.809692220848303*^9, 
   3.8096923418434916`*^9}, {3.809692375115229*^9, 3.809692470015396*^9}, {
   3.809692506597993*^9, 3.8096925194076967`*^9}, {3.8096925807902546`*^9, 
   3.8096927195305843`*^9}, 3.809692861580454*^9, {3.809693440549517*^9, 
   3.8096935473419003`*^9}, {3.8096935817997713`*^9, 3.809693696077877*^9}, {
   3.809730061495578*^9, 3.8097300653612366`*^9}, {3.809774032259774*^9, 
   3.8097740406808577`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             FontSize -> 7, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], {{{-2.2680366687780786`, 
         0.28840810081004953`}}, {{-2.2680366687780786`, 
         0.28840810081004953`}}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             FontSize -> 7, StripOnInput -> False], TraditionalForm]], {0., 
          0.}], CompressedData["
1:eJw9x3k81HkfAPCR2KJhdaCmi8ciu7GM5PMrvqrHVTlSXo4kUnIs6yqzcuRY
dyX37NDLMIUoxxiJZr/jmCwKk6M00qSELjRSPMXT62We54/3H2+1U787nJEm
kUi076S+W/Hd+IDHiuDbY+iIdVpCg5EHGqJybW+0i1D5EbmJnwto0CO5H3t9
tTuYgvUxg3ftXiLUTlI96ZDmBHZeFG7EsxGUcCZn8l3pLvSu365Sw3gEvXJa
TCXRE+CR5J97ThQYaCVClGv+xhdjT9HGxpODIssLsMARXbpOHUSLKxkeYfLh
0CG5kK790TaNBsrFjN5tJwToqPcHcdDbX5HG13CP7H/1oabFiCTfJEdkqD4g
ddNCgEh50T985P0JacT8Jn/DTqR7XTt8jVYskCUvaOQMDBaHwhxP9jQjphv5
fom1TBs5BRdKzhhH2nUhs47JNtO70f//sSlztDXdGYTkQ4F2ifdRstuLuZ00
Q3h7KIG83yYLvyuZM+6TcoC4c/3k+HstyFU1wsVJyQHlWMTLuO9sRefV4+Zb
vmjBUxeKuRGrBf3VczKj1pYBn1aC2PA9D1mMDHZ4HfBCd0x59tX3a3G/Qnnl
H4Uh8Cda/rklm6H6DdUQMzWWNVXARfHm+lt7/goBOckFPnqRsreDIXdU5248
tQl99YhqfukeDIeze1bQhY1odJaV78+IA5XPDk/28OqR4nTX9tPHu6F+bvl+
EZnTbjdLYVeOpZPZRBGeiVlRkEathvgv905p0e6gwOYMtXlmFLKw2aq7UqMO
Zfc2CeMmzIms+U6j45/ZSKjR8u3RlSvIcm5x+NVEPTKy4GpSV5WC5X5r08m8
YlybWXswoykIkhTy//6ywEbnhJTxVH02xEqu4W3N2XH5Hzj7eWs2ZZsvYpst
qV9fUwYZL5fPDOJ2tlxIgc7WuxV56xjIVDCR46mZAI8DDXLl7EuQbknSy2At
FtQGLD89Jen+5FUdIBnNmjyryUNTe/R2S2cchTM0uq2RfzXSnQ9uUoyxh32S
B1jtJm645EL36ulu/ag8FJCvPcyhp8DxLKZOQfE1NBm6Ocgynw6eKqNXpnck
47z5Xk7zaBZ83Lh84wB5K+nYVLjs77xKA+egPhXyAvvTOZCTnCZYZ4N7YqEi
0D6661IJpnwQldASrkGg6uPt9ZksrP2a1x0WnQ85Oe4hVUcqccND4ltE8UXg
SD5cnuggu2kzDBO7jBz8L6PkBv+ZWF9PaDVevldY7uRB2wywsG0Ql71h4tCA
gXCfG07Ity7FgOZTih3fEImBEAsEdUjEn6jHe2UbdtB0zkKN5JemXytpy1TD
uv5xtVfXMS6LGlJaUAlF7PXHP0xq8DCfV1fl8aIfEivNnMOprXiLvh3jwC8i
aJP8SfMal/iycDC1f82XUeVjQ29O/sUfo9E24/443jY+tnNad4UfokbQ6izU
3RWe4oM9s4rpA2HocUUEK5JWhTVu17Q0H4wE6/Pcxtz8GrxX2cuv2D8QFjuK
ZCjaZVhcNrOF022CapsWI0N0Mf73R8092aZ7YEzy2ofNL02jL0Kr/R9d8kEV
uJZ56Y2imzVs/tR+a/AHPmZPvpr+6h4BqlfzG8uO8fHKtnBvY594eF13W+G3
oA5ssp/rQ1QHQbvkA3pKMvQNAkhLNRDLBz/AzJ3i3cfezULivLLZ2osPsIOl
lt7z+lR4O/3o0YND3fiZ24zYCrFAdmb5I6f7mEauJEJldyZlSx0XM6Kqesij
MfC/xw2VRgocSsB+n8C3t02AC9Uc6QoelchXXmQYwhdgumv6XveaUsLsP1XR
baJe7CgsdUl93QgWkseljJtkM6WIs22XhlTbu7E4mmMg51yMHrZb63GO8vHV
Lq+f3iukoFo7JY+k/m5MDrvRmb7+H9B5yVSm1Hfi2Ag0Wyc2ByfJLWwMG1eH
98HmfYcvVCfzcfGPvjqF98fhpNT4M5MLIvyWJXuAlDIIkZKTWeH65MouCO3x
wz+LR/CtZ+qehFCTOJduYvdA6jn2PtFxbfv6cvTTLc2i8wFD2MqT05EWRSc+
J7+XbfYewjHf2J7+lmykaX+z73KREBOKfofKN60lKJJ/5TDtYikrCJPESbfC
sTe4VnjwaWjDMChx2vZsp33Apc1GipksFmyU/MnYBrKvygvo1KJ20vWn8N4D
FaKtjrmwdrPlsJ3qFHYTK1NLPJ9DZvKpVTe/fcDDUpW/rrn7CpIkd3XsXao7
PQh5NmelGGFivFpONsv6SwNaCsp24FZ8wjllVvS/r+oSusHLPy9ccvZQeAQl
U3qufffm8HPlVAbM9hM8xouizjtzOLmOFBiXO4Ce7//lSaHWApb27HU1WZIm
vpa9MeLafMOlC0cKg4MH4FD58tUyD8dMnaES/wUoSMsM
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2.2680366687780786`, 0.6775441214037387}, {
       0, 0.3373113703008319}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox["\"Mode overlap\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)(\\!\\(\\*SubscriptBox[\\(v\\), \\(i\\)]\\)/\[Gamma])\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Mode overlap vs linewidth, t=0\"", TraditionalForm], 
     PlotRange -> {{-2.2680366687780786`, 0.6775441214037387}, {
       0, 0.3373113703008319}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Ferro. mode\"", "\"Other modes\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], FontSize -> 7, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.33000000000000007`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], FontSize -> 7, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 7}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.032857142857142835`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", "7"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", "7"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8096919731533256`*^9, {3.809692117144107*^9, 3.809692168948248*^9}, {
   3.8096922130872874`*^9, 3.809692246846362*^9}, {3.809692296383086*^9, 
   3.809692342561574*^9}, {3.809692389134718*^9, 3.809692421744496*^9}, {
   3.809692471084536*^9, 3.8096925203352137`*^9}, 3.809692605496172*^9, {
   3.8096934326166983`*^9, 3.809693446479619*^9}, 3.809693548262438*^9, {
   3.8096936707266045`*^9, 3.8096936814968767`*^9}, 3.8096940964071894`*^9, 
   3.8097300751391125`*^9, 3.80977143454315*^9, {3.809774046329821*^9, 
   3.809774059532552*^9}, {3.8097741606882553`*^9, 3.80977416426289*^9}, 
   3.8097742802114973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<plot_overlap_v_linewidth_t0_fmode_``x``_``_9excited.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.809693854721695*^9, 3.809693904449662*^9}, {
   3.8097300912161093`*^9, 3.809730092852703*^9}, 3.8097742850817165`*^9}],

Cell[BoxData["\<\"plot_overlap_v_linewidth_t0_fmode_11x11_square_9excited.png\
\"\>"], "Output",
 CellChangeTimes->{{3.809693884032281*^9, 3.809693905842928*^9}, 
   3.8097300946289835`*^9, 3.8097714580079093`*^9, 3.8097742878437557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Range", "[", "atomnum", "]"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "\[NotEqual]", "modeIdx"}], ")"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8096916135217147`*^9, 3.8096916348225775`*^9}, {
  3.8096916749274163`*^9, 3.809691768770897*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", 
   ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8096916355193167`*^9, {3.809691702113702*^9, 3.8096917497084007`*^9}}]
}, Open  ]],

Cell["\<\
Make a movie of the excitation spreading. First redefine tsteps to get the \
desired resolution\
\>", "Text",
 CellChangeTimes->{{3.809605573765632*^9, 3.8096055804148593`*^9}, {
  3.809645311349017*^9, 3.8096453187702*^9}, {3.809730160837861*^9, 
  3.8097301746559057`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "explicit", " ", "points", " ", "for", " ", "the", " ", 
    "solution", " ", "and", " ", "transpose", " ", "to", " ", "get", " ", "a",
     " ", "state", " ", "vector", " ", "at", " ", "each", " ", "timestep"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"savesoln", " ", "=", " ", "True"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ti", "=", "0"}], ";", 
    RowBox[{"numsteps", "=", "100"}], ";", 
    RowBox[{"tf", "=", 
     FractionBox[
      RowBox[{"numsteps", "-", "1"}], "\[Gamma]"]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tsteps", " ", "=", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"ti", ",", "tf", ",", 
       FractionBox[
        RowBox[{"tf", "-", "ti"}], 
        RowBox[{"numsteps", "-", "1"}]]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"soln", " ", "with", " ", "rows", " ", "i", " ", "having", " ", 
     SubscriptBox["\[Psi]", "i"], " ", "evaluated", " ", "at", " ", "each", 
     " ", "timestep", " ", "t"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "tsteps"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"fname", " ", "=", " ", 
      RowBox[{"ToString", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{"\"\<soln_time_evol_``_``_````x``.txt\>\"", ",", 
         RowBox[{"Floor", "[", "ti", "]"}], ",", 
         RowBox[{"Floor", "[", "tf", "]"}], ",", "gridname", ",", 
         SqrtBox["atomnum"], ",", 
         SqrtBox["atomnum"]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"savesoln", ",", 
       RowBox[{"Export", "[", 
        RowBox[{"fname", ",", 
         RowBox[{"ToString", "[", "solnPts", "]"}]}], "]"}]}], "]"}], ";"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "transpose", " ", "soln", " ", "to", " ", "get", " ", "a", " ", "vector", 
     " ", "state", " ", "at", " ", "each", " ", "tstep"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vecSoln", " ", "=", " ", 
     RowBox[{"Transpose", "@", "solnPts"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"evals", ",", "evecs"}], "}"}], " ", "=", " ", 
     RowBox[{"Eigensystem", "[", "Hfull", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normL", " ", "=", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ".", 
          RowBox[{"vecSoln", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "find", " ", "the", " ", "approximate", " ", "ferromagnetic", " ", 
     "mode"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overlap", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"afmode", ".", 
            RowBox[{"evecs", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeIdx", "=", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"overlap", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mode", " ", "=", " ", 
     RowBox[{"evecs", "[", 
      RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodePts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"vecSoln", "[", 
            RowBox[{"[", "t", "]"}], "]"}], ".", "mode"}], "]"}], "2"], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "can", " ", "make", " ", "the", " ", "lines", " ", "below", " ", "more", 
     " ", "efficient", " ", "by", " ", "only", " ", "computing", " ", "the", 
     " ", "sums", " ", "once"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalPts", " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"vecSoln", "[", 
              RowBox[{"[", "t", "]"}], "]"}], ".", 
             RowBox[{"evecs", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Range", "[", "atomnum", "]"}]}], "}"}]}], "]"}], "/", 
        "normL"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherPts", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"totalPts", "[", 
         RowBox[{"[", "t", "]"}], "]"}], "-", 
        RowBox[{"fmodePts", "[", 
         RowBox[{"[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"Range", "[", "numsteps", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fmodeTuples", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "fmodePts"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "fmode", " ", "occupation", " ", "at", " ", "each", " ", "time", " ", 
      "step"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"otherTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "otherPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalTuples", " ", "=", " ", 
     RowBox[{"StepsTable", "[", 
      RowBox[{"tsteps", ",", "totalPts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"occupation", " ", "in", " ", "all", " ", "other", " ", "modes"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.809537731589987*^9, 3.8095377317493005`*^9}, {
   3.809538818979971*^9, 3.8095388204221125`*^9}, {3.809538877168335*^9, 
   3.8095388806360598`*^9}, 3.809539283946311*^9, {3.8095393466665525`*^9, 
   3.809539372119471*^9}, {3.809539467892342*^9, 3.809539468073819*^9}, {
   3.8095395222788367`*^9, 3.809539522892194*^9}, 3.8095450971210623`*^9, {
   3.8095458315611763`*^9, 3.8095458355654626`*^9}, {3.80955773496976*^9, 
   3.809557757853461*^9}, {3.8095583906833534`*^9, 3.80955839126085*^9}, {
   3.8095597358014803`*^9, 3.809559807414382*^9}, {3.809559964155444*^9, 
   3.809559968153966*^9}, {3.809599552339513*^9, 3.8095995531761265`*^9}, {
   3.809599617330911*^9, 3.8095996220619907`*^9}, {3.8096000584546027`*^9, 
   3.809600116786805*^9}, {3.8096003298751945`*^9, 3.8096003393550863`*^9}, {
   3.8096006351305075`*^9, 3.8096008071453*^9}, {3.8096010934339542`*^9, 
   3.809601093899026*^9}, {3.8096011379469185`*^9, 3.8096011387812004`*^9}, {
   3.8096011727637854`*^9, 3.8096011739468527`*^9}, {3.80960124310413*^9, 
   3.8096012867778454`*^9}, 3.809605305087755*^9, {3.8096054607247677`*^9, 
   3.8096054665152907`*^9}, {3.8096484370062017`*^9, 3.809648442380129*^9}, 
   3.8096486033603587`*^9, {3.8096872387610865`*^9, 3.8096872447717113`*^9}, {
   3.8096873155956926`*^9, 3.809687355940363*^9}, {3.809687553929351*^9, 
   3.8096875833017836`*^9}, {3.809687620226015*^9, 3.8096876209750614`*^9}, {
   3.809694119981163*^9, 3.8096941727791758`*^9}, {3.8097244836682706`*^9, 
   3.8097245504190836`*^9}, {3.8097246239728518`*^9, 3.809724641454688*^9}, 
   3.8097294103660364`*^9, {3.8097295651431766`*^9, 3.8097296089304705`*^9}, {
   3.809729641149293*^9, 3.809729684871345*^9}, 3.809730180781518*^9, 
   3.809730246959879*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gifSteps", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"normVecSoln", " ", "=", " ", 
   RowBox[{"vecSoln", "*", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cf", " ", "[", "z_", "]"}], ":=", " ", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Purple", ",", "Black", ",", "Green"}], "}"}], ",", "z"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"colors", "=", "\"\<AvocadoColors\>\""}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.809723578017413*^9, 3.8097237124476476`*^9}, {
   3.809723787728565*^9, 3.809724169141937*^9}, {3.809724201228233*^9, 
   3.8097242725032277`*^9}, {3.8097243341735168`*^9, 
   3.8097243397114596`*^9}, {3.8097243704071174`*^9, 
   3.8097244436651106`*^9}, {3.8097247701208606`*^9, 3.809724770293457*^9}, {
   3.809724838574437*^9, 3.8097248609312625`*^9}, {3.809724919511783*^9, 
   3.8097249198884673`*^9}, {3.809724997509455*^9, 3.8097250176025133`*^9}, {
   3.809725320759549*^9, 3.8097253226388206`*^9}, {3.8097254793479247`*^9, 
   3.80972552522919*^9}, {3.8097260071736283`*^9, 3.809726007884187*^9}, {
   3.809726556144826*^9, 3.809726560318365*^9}, 3.8097266686627755`*^9, {
   3.809726715357799*^9, 3.8097267252488627`*^9}, {3.8097269530930076`*^9, 
   3.80972699097888*^9}, {3.809727072379707*^9, 3.809727084995942*^9}, {
   3.8097275036949587`*^9, 3.8097275093308525`*^9}, {3.8097303504251375`*^9, 
   3.809730385153163*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cfData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"cf", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "1", ",", "0.1"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.80972728232745*^9, 3.80972730795916*^9}, {
  3.8097274667194357`*^9, 3.809727491287115*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 0., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 0., 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0., 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0., 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 0., 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2666666666666667, 0., 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4, 0., 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 0., 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 0., 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3, 0., 0.3], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2, 0., 0.2],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3, 0., 0.3]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.3, 0., 0.3]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3, 0., 0.3],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.1333333333333333, 0., 0.1333333333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666665, 0., 0.06666666666666665],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.09999999999999998, 0., 0.09999999999999998],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0., 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.20000000000000018`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.13333333333333347`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.20000000000000018, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.20000000000000018`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.20000000000000018`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.40000000000000013`, 0.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.2666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.40000000000000013, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.40000000000000013`, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.40000000000000013`, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.6000000000000001, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.6000000000000001, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.6000000000000001, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.6000000000000001, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.8, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.8, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0.8, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.8, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 1., 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1., 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 1., 0.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8097272964649034`*^9, 3.809727308573516*^9}, {
   3.8097274770099106`*^9, 3.809727510972458*^9}, 3.8097303540406947`*^9}]
}, Open  ]],

Cell["Make single frame plot of f,af eigenmodes:", "Text",
 CellChangeTimes->{{3.8097307307881117`*^9, 3.8097307525820665`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"overlap", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{
      RowBox[{"Length", "[", "evecs", "]"}], "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"fmode", ".", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modeIdx", "=", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"overlap", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ">", 
        RowBox[{"#2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mode", " ", "=", " ", 
   RowBox[{"evecs", "[", 
    RowBox[{"[", "modeIdx", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8097310909858055`*^9, 3.8097310996062193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Legended", "[", 
    RowBox[{
     RowBox[{"MatrixPlot", "[", 
      RowBox[{
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"evecs", "[", 
           RowBox[{"[", "modeIdx", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SqrtBox["atomnum"], ",", 
           SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<Ferro. Eigenmode, ``x`` ``\>\"", ",", 
            SqrtBox["atomnum"], ",", 
            SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
       RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
       RowBox[{"Mesh", "->", "True"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", 
            SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"BarLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cfData", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809730797213892*^9, 3.8097308159322433`*^9}, {
  3.809730902211009*^9, 3.8097309215935144`*^9}, {3.8097311107544336`*^9, 
  3.8097311138321967`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{RasterBox[CompressedData["
1:eJx1lnlM03cYxhsgBS2MirB0tXJMQWCFAWImlgBCx1DKBKvoKoaEVYbApAoK
A6IsIHbDCZpuCs5xzVoFpGOsHENhTloFgUIIVoprCVAKFKiTo5xblh1/7IFf
0qT55M2b933e6+sQk3TwhDGBQCD98/vr/79fC2/LKdvaIn/C/74A6fxFf5uf
gO/OrNzleeMX4GQfFdk3XwZcFPYddZXdAbypvDBWckEOXM3ILdQxngFXOMny
XVOlwD3Ehlia/CHy89c/X6gVA8/a/vNJBfsbtFdYmka4SYCbuPYKP/6yBzh3
xEB95fYcuNlE+mW/UiVwrVAqy0tTAbdK3lZUWqEGXn9rj2m27jfgaYNT7bts
0L/9c6fFoWN9WC/7EA1ntRu4OL/aiNTxA3DKxd1zPtsfAX8y5pcxm4z5ikNa
5eykQeDfT6Tuk68MYb55XL7JAQ32m9+d2aqsUeCcXFtnwga0l2g8x9rr0L8g
6ALvgAvGU6BM5GhLUR/yI7LWTduM9dqb0M3c8gR45nSLLnAU9bfVP7jbGzQM
vOSj9D67Z1qsI/V0pLXxBPbnPe8KVxcd8B6bd+YsH4zjXEQeEW69u4b/4Tca
ngpQH7OXogTPrn7g+q2MLoeJ1jX8uyqJapxfcYW5c8FD7Gf+V5fqiWewXlZ2
dRLKPsyXPH7/ZuzCJPBlb7tMFWka9RzNS+D2ob1gs5nUogj1oeUsza+MjAAP
L5wRnhfifBm8FhVD1e3AU0QqaWMr7quys8Ft5Z04v3MBbY7icuxnetURJZ2F
9Y15L7By0B3z/fvTA3/stRz6UjsFnCXalOFMRP/mvjmtFccxHgWPEF/Mx/hD
itnEGh/MtyRactMysRM4k8NKYTmiHw+BPsRCif1wyqFfQ03EfmiamlmK98e8
hD4nBoYiUJ8AXXd7HA3tmZQPnazU2A8D/L1HjegYT1xZ1ieXvLCfRUwrzqwM
71EBO/tg5M6nwHkGVlVo8gDwc7+rX/TF4n4gRt0ivj2N87uePtzqdNK7SVhf
NU2Q+6YT2q+3f1LGDr3V2Y/74YbGm77nGO43sgc7fKcx3nfy9fDUUN9fgX87
laNcaMB7YRuqJURew/0smjHe+OIL1GfmageFVI/1ogdNHq6RYj835d/Tmn2N
9uOTRZ/12KP/c8FlJREsjEevrmnUjeK9KIkX1NpltaD+S/4bUo7XA+91p5rG
yfH9QHjdxlj9A/XRL1+zCG/A/rE+6sLcb4Tz1Zt6cvH2K+Tr2Q+/JoZ94Ib+
17vvlx2vBEczMX5xrcrEfeVH4C2rnzION5biHhjfwY95vw75lceSQDG+N9Ki
LDdHN68xX3GBURQD7p/hSscdzSR85wSc7qQ55HRhvvvnr4bdwfvOS7Y/62yO
71uPclk2baQG/ddlnOFaF//H/wQNmeYo
         "], {{0, 0}, {11, 11}}, {0, 1}], {
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 
            9}}, {{0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0,
             5}, {11, 5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11,
             2}}, {{0, 1}, {11, 1}}, {{0, 0}, {11, 0}}}],
           Antialiasing->False]}, 
         {GrayLevel[
           NCache[-1 + GoldenRatio, 0.6180339887498949]], 
          
          StyleBox[
           LineBox[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 
            11}}, {{3, 0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{
            6, 0}, {6, 11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {
            9, 11}}, {{10, 0}, {10, 11}}, {{11, 0}, {11, 11}}}],
           Antialiasing->False]}}}, {}},
      Axes->False,
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{None, None},
      FrameStyle->Opacity[0],
      FrameTicks->{{{{10.5, 
           FormBox["1", TraditionalForm]}, {9.5, 
           FormBox["2", TraditionalForm]}, {8.5, 
           FormBox["3", TraditionalForm]}, {7.5, 
           FormBox["4", TraditionalForm]}, {6.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {4.5, 
           FormBox["7", TraditionalForm]}, {3.5, 
           FormBox["8", TraditionalForm]}, {2.5, 
           FormBox["9", TraditionalForm]}, {1.5, 
           FormBox["10", TraditionalForm]}, {0.5, 
           FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
           FormBox["1", TraditionalForm]}, {1.5, 
           FormBox["2", TraditionalForm]}, {2.5, 
           FormBox["3", TraditionalForm]}, {3.5, 
           FormBox["4", TraditionalForm]}, {4.5, 
           FormBox["5", TraditionalForm]}, {5.5, 
           FormBox["6", TraditionalForm]}, {6.5, 
           FormBox["7", TraditionalForm]}, {7.5, 
           FormBox["8", TraditionalForm]}, {8.5, 
           FormBox["9", TraditionalForm]}, {9.5, 
           FormBox["10", TraditionalForm]}, {10.5, 
           FormBox["11", TraditionalForm]}}, None}},
      FrameTicksStyle->Opacity[1],
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]},
      PlotLabel->None], Scaled[{0.5, 0.5}], Center, Scaled[{1, 1}]], InsetBox[
     TemplateBox[{FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJx1l01slGUUhaeBhWGDMRVXoiTGVNlocKEJ7birCxeCGxKJCyO6IYLRBSIx
DQHZ0S66sC4MhJJKUiclVPsThGlRgcrPaGc6RSu2tWqlRVlQ2Jhov3vfc2++
czMnmabn6XTeee893/uz6Y0923etKRQKl1dfTauv7HfVbLGQ02yx1D63v7n0
q3H4nZ3jKy07ncOvq5/Y27rOOfzwxsNL24ZvGod/S+Qc/mEZyDn8hdVROsd/
MQ7/bms2knP4x7JhNjqHv3ol04xx+A+bs4Gcwz8lE3QOL9Or/2wcXoY57Bz+
uS2ZnMPP788G+sk4fFdW1k7n8G1SWOfwy9kwSzeMw3/ak8k5/EtZO9udw9/L
yroybRy+N5veCefw26WhzvN+mnI1nXJVp1zVU67qlKt6ylWdclUvjkiOpozD
vy05cg6vOZqiXE2lXNUoV7WUqxrlqpZyVaNc1VKuqpSraspVlXJVTbmqUq6q
KVeTlKvJlKtJytVkUWK0xTm8tHPuR+PwUtZO5/AyvVbn8DLM0g/G4SVGPc7h
pZ3tzuGlrCsV4/CaowrlqpJyVaFcVYr/ia4bh39NJuIc/ivJxTXj8A9J/53D
vyMTv2ocfkL6ecU4/JPSN+fwB6VQ3xuHn5U+TBiH3yr1dg7/idT1snH4u1K/
S8bhX5E6OYfvl0ZcNA7/gATMOfyb8tx8Zxx+TBr3rXH4RyWQzuE/kLx/Yxy+
Jrm+YBz+Wcmvc3jN6Tjldjzlc4zyOZbWN+fwmq8y5a2ccnWecnW+OCR5OWcc
fo/k4mvj8NKGlrPG4bXPo9T30dTfEervSOrjMPVxOPVriPo1VCxLOb40Dn9A
6j1oHF73nzO0H51J+8hp2kdOp7oNUN0G0v5eov29lOrQT3XoT/M9RfM9lebV
R/PqK+6T79trHH5Rvtdx4/ADMv5nxuG7dIHy/TT5Dvm8buPwZfm/o17P5PXv
h+j9hxJ/n7j7RvqYPi/PuwOfoPnl398b+OdU7/znlAK/R/3Pf/5g4I9QHvPj
jgT+Aj0f+e9zLvAv6HnNf8+xwNto/YA+onUIukjrGbSe1kVoB62v0DFap6FF
Wu+hZ2jfgPbR/gOVaR+D1srPSqw/7avQy7Q/Q3don4e66bwAPU/nDmiGzi9Q
B52DoCfoPAVdonMZtJvOd9CDdE6EBum8Ce2gcyv0L51/oWN0joZepPM4tEDn
eugI3Q+gzXTPgK7TfQV6j+490Aa6P0GjdA+DXqf7HNQkP/leWCi8KnWL/KTk
LfL7Us/IdT+eC1zvJ5HrPhS53n/mA9f7UuR6v4pc97/f4ron/Yp8WuIW+dPS
x4XAdd+N/Jr0N/LH5bn4PXAp897I9TgUuQzb/Efget+OXPfvyPXe9Wfgek+L
XO91kasWA9fzfeR6zohc76WRa67+apCryDVXkWuubjXIVeSaq8g1V0sNchW5
5ipyzdVyg1xFrrmKXHN1u0GuItdcRa65+rtBriLXXEWuufqnQa4i11xFrrpj
/H8tDLSm
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -67.5}, 
                    Offset[{2.5, 0.}, {7.5, -67.5}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -22.5}, 
                    Offset[{2.5, 0.}, {7.5, -22.5}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 11.25}, 
                    Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 22.5}, 
                    Offset[{2.5, 0.}, {7.5, 22.5}]}, {{7.5, 33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 67.5}, 
                    Offset[{2.5, 0.}, {7.5, 67.5}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-1.0\"", -1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"-0.5\"", -0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.0\"", 1., AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]], 
                    Directive[
                    Opacity[1], 
                    GrayLevel[0.3]]}, StripOnInput -> False], "GraphicsLabel",
                   StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]},
      "BarLegend",
      DisplayFunction->(#& ),
      InterpretationFunction:>(RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0., 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5, 0., 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0., 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0., 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4, 0., 0.4], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.2666666666666667, 0., 0.2666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4, 0., 0.4]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4, 0., 0.4]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4, 0., 0.4], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3, 0., 0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.2, 0., 0.2], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.3, 0., 0.3]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3, 0., 0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.3, 0., 0.3], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.1333333333333333, 0., 0.1333333333333333], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19999999999999996, 0., 0.19999999999999996]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.06666666666666665, 0., 0.06666666666666665], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.09999999999999998, 0., 0.09999999999999998]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
                    Editable -> False, Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.20000000000000018`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.13333333333333347`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.20000000000000018, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.20000000000000018`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.20000000000000018`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.40000000000000013`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.2666666666666668, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.40000000000000013, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.40000000000000013`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.40000000000000013`, 0.], Editable -> False,
                     Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.6000000000000001, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4000000000000001, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.6000000000000001, 0.]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.6000000000000001, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.6000000000000001, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0.8, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.5333333333333334, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0.8, 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0.8, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0.8, 0.], Editable -> False, Selectable -> 
                    False], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 1., 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666667, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 1., 0.]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 1., 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 1., 0.], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1.01, 0.5}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   Axes->False,
   Frame->False,
   FrameLabel->{None, None},
   FrameStyle->Opacity[0],
   FrameTicks->{{{{10.5, 
        FormBox["1", TraditionalForm]}, {9.5, 
        FormBox["2", TraditionalForm]}, {8.5, 
        FormBox["3", TraditionalForm]}, {7.5, 
        FormBox["4", TraditionalForm]}, {6.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {4.5, 
        FormBox["7", TraditionalForm]}, {3.5, 
        FormBox["8", TraditionalForm]}, {2.5, 
        FormBox["9", TraditionalForm]}, {1.5, 
        FormBox["10", TraditionalForm]}, {0.5, 
        FormBox["11", TraditionalForm]}}, None}, {{{0.5, 
        FormBox["1", TraditionalForm]}, {1.5, 
        FormBox["2", TraditionalForm]}, {2.5, 
        FormBox["3", TraditionalForm]}, {3.5, 
        FormBox["4", TraditionalForm]}, {4.5, 
        FormBox["5", TraditionalForm]}, {5.5, 
        FormBox["6", TraditionalForm]}, {6.5, 
        FormBox["7", TraditionalForm]}, {7.5, 
        FormBox["8", TraditionalForm]}, {8.5, 
        FormBox["9", TraditionalForm]}, {9.5, 
        FormBox["10", TraditionalForm]}, {10.5, 
        FormBox["11", TraditionalForm]}}, None}},
   FrameTicksStyle->Opacity[1],
   ImagePadding->All,
   Method->{
    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
     "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
     "RangePadding" -> Scaled[0.05]},
   PlotLabel->FormBox[
     StyleBox[
      InterpretationBox[
      "\"Ferro. Eigenmode, \\!\\(\\*FormBox[\\\"11\\\", \
TraditionalForm]\\)x\\!\\(\\*FormBox[\\\"11\\\", TraditionalForm]\\) \
square\"", 
       StringForm["Ferro. Eigenmode, ``x`` ``", 11, 11, "square"], Editable -> 
       False], 
      GrayLevel[0], FontSize -> 14, StripOnInput -> False], TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False],
  InterpretTemplate[Legended[
    Graphics[{
      Raster[CompressedData["
1:eJx1lnlM03cYxhsgBS2MirB0tXJMQWCFAWImlgBCx1DKBKvoKoaEVYbApAoK
A6IsIHbDCZpuCs5xzVoFpGOsHENhTloFgUIIVoprCVAKFKiTo5xblh1/7IFf
0qT55M2b933e6+sQk3TwhDGBQCD98/vr/79fC2/LKdvaIn/C/74A6fxFf5uf
gO/OrNzleeMX4GQfFdk3XwZcFPYddZXdAbypvDBWckEOXM3ILdQxngFXOMny
XVOlwD3Ehlia/CHy89c/X6gVA8/a/vNJBfsbtFdYmka4SYCbuPYKP/6yBzh3
xEB95fYcuNlE+mW/UiVwrVAqy0tTAbdK3lZUWqEGXn9rj2m27jfgaYNT7bts
0L/9c6fFoWN9WC/7EA1ntRu4OL/aiNTxA3DKxd1zPtsfAX8y5pcxm4z5ikNa
5eykQeDfT6Tuk68MYb55XL7JAQ32m9+d2aqsUeCcXFtnwga0l2g8x9rr0L8g
6ALvgAvGU6BM5GhLUR/yI7LWTduM9dqb0M3c8gR45nSLLnAU9bfVP7jbGzQM
vOSj9D67Z1qsI/V0pLXxBPbnPe8KVxcd8B6bd+YsH4zjXEQeEW69u4b/4Tca
ngpQH7OXogTPrn7g+q2MLoeJ1jX8uyqJapxfcYW5c8FD7Gf+V5fqiWewXlZ2
dRLKPsyXPH7/ZuzCJPBlb7tMFWka9RzNS+D2ob1gs5nUogj1oeUsza+MjAAP
L5wRnhfifBm8FhVD1e3AU0QqaWMr7quys8Ft5Z04v3MBbY7icuxnetURJZ2F
9Y15L7By0B3z/fvTA3/stRz6UjsFnCXalOFMRP/mvjmtFccxHgWPEF/Mx/hD
itnEGh/MtyRactMysRM4k8NKYTmiHw+BPsRCif1wyqFfQ03EfmiamlmK98e8
hD4nBoYiUJ8AXXd7HA3tmZQPnazU2A8D/L1HjegYT1xZ1ieXvLCfRUwrzqwM
71EBO/tg5M6nwHkGVlVo8gDwc7+rX/TF4n4gRt0ivj2N87uePtzqdNK7SVhf
NU2Q+6YT2q+3f1LGDr3V2Y/74YbGm77nGO43sgc7fKcx3nfy9fDUUN9fgX87
laNcaMB7YRuqJURew/0smjHe+OIL1GfmageFVI/1ogdNHq6RYj835d/Tmn2N
9uOTRZ/12KP/c8FlJREsjEevrmnUjeK9KIkX1NpltaD+S/4bUo7XA+91p5rG
yfH9QHjdxlj9A/XRL1+zCG/A/rE+6sLcb4Tz1Zt6cvH2K+Tr2Q+/JoZ94Ib+
17vvlx2vBEczMX5xrcrEfeVH4C2rnzION5biHhjfwY95vw75lceSQDG+N9Ki
LDdHN68xX3GBURQD7p/hSscdzSR85wSc7qQ55HRhvvvnr4bdwfvOS7Y/62yO
71uPclk2baQG/ddlnOFaF//H/wQNmeYo
       "], {{0, 0}, {11, 11}}, {0, 1}], {{Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 11}, {11, 11}}, {{0, 10}, {11, 10}}, {{0, 9}, {11, 9}}, {{
         0, 8}, {11, 8}}, {{0, 7}, {11, 7}}, {{0, 6}, {11, 6}}, {{0, 5}, {11, 
         5}}, {{0, 4}, {11, 4}}, {{0, 3}, {11, 3}}, {{0, 2}, {11, 2}}, {{0, 
         1}, {11, 1}}, {{0, 0}, {11, 0}}}]}, {Antialiasing -> False, 
        GrayLevel[-1 + GoldenRatio], 
        Line[{{{0, 0}, {0, 11}}, {{1, 0}, {1, 11}}, {{2, 0}, {2, 11}}, {{3, 
         0}, {3, 11}}, {{4, 0}, {4, 11}}, {{5, 0}, {5, 11}}, {{6, 0}, {6, 
         11}}, {{7, 0}, {7, 11}}, {{8, 0}, {8, 11}}, {{9, 0}, {9, 11}}, {{10, 
         0}, {10, 11}}, {{11, 0}, {11, 11}}}]}}}, {
     Axes -> False, Frame -> True, FrameLabel -> {None, None}, FrameStyle -> 
      Opacity[0], 
      FrameTicks -> {{{{10.5, 1}, {9.5, 2}, {8.5, 3}, {7.5, 4}, {6.5, 5}, {
          5.5, 6}, {4.5, 7}, {3.5, 8}, {2.5, 9}, {1.5, 10}, {0.5, 11}}, 
         None}, {{{0.5, 1}, {1.5, 2}, {2.5, 3}, {3.5, 4}, {4.5, 5}, {
          5.5, 6}, {6.5, 7}, {7.5, 8}, {8.5, 9}, {9.5, 10}, {10.5, 11}}, 
         None}}, FrameTicksStyle -> Opacity[1], GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
        "RangePadding" -> Scaled[0.05]}, PlotLabel -> Style[
        StringForm["Ferro. Eigenmode, ``x`` ``", 11, 11, "square"], 
        GrayLevel[0], FontSize -> 14]}], 
    Placed[
     Unevaluated[
      BarLegend[{{
         RGBColor[0.5, 0., 0.5], 
         RGBColor[0.4, 0., 0.4], 
         RGBColor[0.3, 0., 0.3], 
         RGBColor[0.19999999999999996`, 0., 0.19999999999999996`], 
         RGBColor[0.09999999999999998, 0., 0.09999999999999998], 
         RGBColor[0., 0., 0.], 
         RGBColor[0., 0.20000000000000018`, 0.], 
         RGBColor[0., 0.40000000000000013`, 0.], 
         RGBColor[0., 0.6000000000000001, 0.], 
         RGBColor[0., 0.8, 0.], 
         RGBColor[0., 1., 0.]}, {-1, 1}}, LegendLayout -> "Column"]], {
     After, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.8097308877257247`*^9, 3.8097309259059772`*^9}, 
   3.809731130324153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<plot_ferro_eigmode_``x``_``.png\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "plt"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8097309437352915`*^9, 3.8097309883430033`*^9}, {
  3.8097311388343973`*^9, 3.809731140923805*^9}}],

Cell[BoxData["\<\"plot_ferro_eigmode_11x11_square.png\"\>"], "Output",
 CellChangeTimes->{{3.8097309828805857`*^9, 3.809730989209656*^9}, 
   3.8097311421016645`*^9}]
}, Open  ]],

Cell["Make gifs", "Text",
 CellChangeTimes->{{3.8097307824464235`*^9, 3.8097307856089373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"MatrixPlot", "[", 
        RowBox[{
         RowBox[{"ArrayReshape", "[", 
          RowBox[{
           RowBox[{"Re", "[", 
            RowBox[{"normVecSoln", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             SqrtBox["atomnum"], ",", 
             SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{
             "\"\<Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) spreading, \
``x`` ``\>\"", ",", 
              SqrtBox["atomnum"], ",", 
              SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", ",", 
            RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
         RowBox[{"Mesh", "->", "True"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
         RowBox[{"FrameTicksStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              SqrtBox["atomnum"]}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"BarLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"cfData", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<t=``/\[Gamma]\>\"", ",", 
             RowBox[{"Floor", "[", 
              RowBox[{"tsteps", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
          "White", ",", "Bold", ",", 
          RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "gifSteps"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809723578017413*^9, 3.8097237124476476`*^9}, {
   3.809723787728565*^9, 3.809724169141937*^9}, {3.809724201228233*^9, 
   3.8097242725032277`*^9}, {3.8097243341735168`*^9, 
   3.8097243397114596`*^9}, {3.8097243704071174`*^9, 3.8097244294187202`*^9}, 
   3.8097270617434883`*^9, {3.8097270918393097`*^9, 3.809727092040349*^9}, {
   3.8097271415353003`*^9, 3.8097271800790462`*^9}, {3.8097272519297533`*^9, 
   3.8097272755216503`*^9}, {3.809727520198784*^9, 3.8097275223510237`*^9}, {
   3.8097302771411552`*^9, 3.809730289097172*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 97, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 
      33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
      51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
      69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
      87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}}}, 
    Typeset`size$$ = {450., {195., 201.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$1351386$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$1351386$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        Legended[
         MatrixPlot[
          ArrayReshape[
           Re[
            Part[$CellContext`normVecSoln, $CellContext`i$$]], {
            Sqrt[$CellContext`atomnum], 
            Sqrt[$CellContext`atomnum]}], PlotLabel -> Style[
            StringForm[
            "Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) spreading, ``x`` \
``", 
             Sqrt[$CellContext`atomnum], 
             Sqrt[$CellContext`atomnum], $CellContext`gridname], Black, 
            FontSize -> 14], Axes -> False, Mesh -> True, Frame -> True, 
          FrameStyle -> Opacity[0], FrameTicksStyle -> Opacity[1], FrameTicks -> {
            Range[1, 
             Sqrt[$CellContext`atomnum]], 
            Range[1, 
             Sqrt[$CellContext`atomnum]]}, ColorFunction -> $CellContext`cf, 
          ColorFunctionScaling -> True], 
         Placed[
          
          BarLegend[{$CellContext`cfData, {-1, 1}}, LegendLayout -> 
           "Column"], {After, Center}]], 
        Graphics[
         Text[
          Style[
           ToString[
            StringForm["t=``/\[Gamma]", 
             Floor[
              Part[$CellContext`tsteps, $CellContext`i$$]]]], White, Bold, 
           FontSize -> 13], {10, 0.5}]]], 
      "Specifications" :> {{$CellContext`i$$, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
         28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
         45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
         62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
         79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 
         96, 97, 98, 99, 100}, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{511., {242., 249.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.8097235110675144`*^9, {3.80972364655206*^9, 3.8097236820060062`*^9}, 
   3.8097237135643225`*^9, 3.80972379352612*^9, {3.8097238455077243`*^9, 
   3.8097238613515215`*^9}, {3.809723922747713*^9, 3.809723927303635*^9}, {
   3.8097239799573483`*^9, 3.8097240193874283`*^9}, 3.809724061456005*^9, {
   3.8097241076478243`*^9, 3.8097241699030933`*^9}, {3.8097242555368395`*^9, 
   3.809724274071827*^9}, 3.80972434166551*^9, 3.809724456464079*^9, 
   3.809724660782507*^9, {3.8097248424270363`*^9, 3.809724865230003*^9}, 
   3.80972492272374*^9, {3.8097250030958214`*^9, 3.809725019481451*^9}, 
   3.809727006222603*^9, 3.809727095482311*^9, {3.8097271291183424`*^9, 
   3.809727159140645*^9}, 3.809727239663418*^9, 3.8097275229015536`*^9, 
   3.8097302897953386`*^9, 3.8097303565280666`*^9, 3.8097715035135775`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", 
    SqrtBox["atomnum"]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4",
    ",", "3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8097240342430215`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<t=\!\(\*FractionBox[\(``\), \(\[Gamma]\)]\)\>\"", ",", "100"}], 
     "]"}], "]"}], ",", "White"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"gif", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"MatrixPlot", "[", 
         RowBox[{
          RowBox[{"ArrayReshape", "[", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"Re", "[", 
              RowBox[{"normVecSoln", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              SqrtBox["atomnum"], ",", 
              SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{
              "\"\<Excitation (|\!\(\*SubscriptBox[\(P\), \(x\)]\)|) \
spreading, ``x`` ``\>\"", ",", 
               SqrtBox["atomnum"], ",", 
               SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", 
             ",", 
             RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
          RowBox[{"Mesh", "->", "True"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
          RowBox[{"FrameTicksStyle", "\[Rule]", 
           RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               SqrtBox["atomnum"]}], "]"}], ",", 
             RowBox[{"Range", "[", 
              RowBox[{"1", ",", 
               SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"ColorData", "[", "cf", "]"}]}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"BarLegend", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cf", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", "100", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.809687806940313*^9, 3.809687838075184*^9}, {
   3.8096882066645327`*^9, 3.809688208094444*^9}, 3.8096885281488504`*^9, {
   3.8097250769512467`*^9, 3.809725082178584*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gif", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Legended", "[", 
        RowBox[{
         RowBox[{"MatrixPlot", "[", 
          RowBox[{
           RowBox[{"ArrayReshape", "[", 
            RowBox[{
             RowBox[{"Re", "[", 
              RowBox[{"normVecSoln", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               SqrtBox["atomnum"], ",", 
               SqrtBox["atomnum"]}], "}"}]}], "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Excitation (\!\(\*SubscriptBox[\(P\), \(x\)]\)) \
spreading, ``x`` ``\>\"", ",", 
                SqrtBox["atomnum"], ",", 
                SqrtBox["atomnum"], ",", "gridname"}], "]"}], ",", "Black", 
              ",", 
              RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}]}], ",", 
           RowBox[{"Axes", "\[Rule]", " ", "False"}], ",", 
           RowBox[{"Mesh", "->", "True"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", "0", "]"}]}], ",", 
           RowBox[{"FrameTicksStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", "1", "]"}]}], ",", 
           RowBox[{"FrameTicks", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                SqrtBox["atomnum"]}], "]"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", 
                SqrtBox["atomnum"]}], "]"}]}], "}"}]}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "cf"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}], ",", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"BarLegend", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"cfData", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"After", ",", "Center"}], "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"StringForm", "[", 
              RowBox[{"\"\<t=``/\[Gamma]\>\"", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{"tsteps", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
            "White", ",", "Bold", ",", 
            RowBox[{"FontSize", "\[Rule]", "13"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"10", ",", "0.5"}], "}"}]}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "gifSteps"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.809725090252293*^9, 3.8097251220828*^9}, 
   3.809725310034401*^9, {3.8097276148536043`*^9, 3.809727629451586*^9}, {
   3.8097277426662025`*^9, 3.8097277445112658`*^9}, {3.8097304015532956`*^9, 
   3.8097304209962997`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", 
   RowBox[{"ToString", "[", 
    RowBox[{"StringForm", "[", 
     RowBox[{"\"\<excitation_spreading_af_``x``_``.gif\>\"", ",", 
      SqrtBox["atomnum"], ",", 
      SqrtBox["atomnum"], ",", "gridname"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"fname", ",", "gif", ",", 
   RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", "0.3"}]}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.809688180309969*^9, 3.8096882227679663`*^9}, {
   3.809688302760231*^9, 3.80968832832456*^9}, {3.8096883585526776`*^9, 
   3.8096883862690573`*^9}, {3.809725065430794*^9, 3.809725070094314*^9}, {
   3.809725735291532*^9, 3.8097258223769217`*^9}, {3.809727612165797*^9, 
   3.809727612260545*^9}, {3.809730424555784*^9, 3.8097304297190204`*^9}, 
   3.8097305667899957`*^9}],

Cell[BoxData["\<\"excitation_spreading_af_11x11_square.gif\"\>"], "Output",
 CellChangeTimes->{{3.809688354195727*^9, 3.809688363875207*^9}, 
   3.809688451140368*^9, 3.8096885888905993`*^9, 3.809725215541307*^9, 
   3.8097252507641115`*^9, 3.809725398833313*^9, 3.809725876930114*^9, 
   3.809727670252263*^9, 3.8097278193787513`*^9, 3.809730434263815*^9, 
   3.8097304793931026`*^9, 3.8097716225840006`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["misc physics analysis", "Section",
 CellChangeTimes->{{3.8090163619501247`*^9, 3.8090163665089817`*^9}, {
   3.809209471963997*^9, 3.8092094760770473`*^9}, 3.809209607406805*^9}],

Cell[CellGroupData[{

Cell["Hamiltonian algebra", "Subsubsection",
 CellChangeTimes->{{3.809209576436367*^9, 3.8092096042035294`*^9}}],

Cell["\<\
Try to get approximate analytical expressions for eigenvalues of square grid\
\>", "Text",
 CellChangeTimes->{{3.8092096198550777`*^9, 3.809209655266404*^9}, {
  3.8092098717740297`*^9, 3.809209875227496*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "\[Lambda]", ",", "\[Gamma]", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.809209852918344*^9, 3.809209862901392*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", " ", "=", " ", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vector", " ", "between", " ", "atoms", " ", "i"}], ",", 
    RowBox[{"j", " ", "in", " ", "units", " ", "lattice", " ", "spacing"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atomnum", " ", "=", "4"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"square", " ", "grid"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", "n"}], "]"}], "-", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"i", "-", "1"}], ",", "n"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"j", "-", "1"}], ")"}], "/", "n"}], "]"}], "-", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "n"}], "]"}]}]}], "}"}], "/.", 
    RowBox[{"n", "\[Rule]", 
     SqrtBox["atomnum"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", "i_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{"x", "-", "polarized"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Hfull", " ", "=", " ", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       SubscriptBox["H", "##"], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"atomnum", ",", "atomnum"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"atomnum", "+", "1"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{"atomnum", "+", "1"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{"d", " ", "\[Lambda]", " ", 
          SubscriptBox["r", 
           RowBox[{"i", ",", "j"}]]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"\[CapitalOmega]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "0", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " "}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Re", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
        RowBox[{"\[Gamma]ij", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "\[Gamma]", ",", 
           RowBox[{"FullSimplify", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
              RowBox[{"ComplexExpand", "[", 
               RowBox[{"Im", "[", 
                RowBox[{
                 RowBox[{"e", "[", "i", "]"}], ".", 
                 RowBox[{"GdotP", "[", 
                  RowBox[{"u", ",", 
                   RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], 
             ",", 
             RowBox[{"Assumptions", "\[Rule]", " ", 
              RowBox[{
               RowBox[{"d", "\[Element]", "Reals"}], "&&", 
               RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Hfull", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", " ", 
         RowBox[{"\[CapitalOmega]ij", "+", 
          RowBox[{"\[ImaginaryI]", " ", "\[Gamma]ij"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.809209697932802*^9, 3.809209786734555*^9}, 
   3.809209868898496*^9, {3.8092099347496405`*^9, 3.8092099681704016`*^9}, {
   3.809210277886074*^9, 3.809210301304186*^9}, {3.809210465428677*^9, 
   3.809210474762639*^9}, {3.8092108165400534`*^9, 3.8092108184094815`*^9}, {
   3.809211094207759*^9, 3.80921125260073*^9}, {3.8092116815864315`*^9, 
   3.8092117012239575`*^9}, {3.8092118113112974`*^9, 3.8092118192785807`*^9}, 
   3.809211869435025*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8092634453105717`*^9, 3.8092634569095693`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}]},
     {
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"3", " ", "\[ImaginaryI]", " ", "\[Gamma]", " ", 
         RowBox[{"Sign", "[", "d", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"64", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{
       FractionBox[
        RowBox[{"3", " ", 
         SqrtBox[
          FractionBox["1", 
           SuperscriptBox["k", "2"]]], " ", "k", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "-", 
           RowBox[{"2", " ", "d", " ", "\[Pi]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["\[Pi]", "3"], " ", 
         SuperscriptBox[
          RowBox[{"Abs", "[", "d", "]"}], "3"]}]], "+", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["d", "2"], " ", 
               SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], ")"}]}], 
        RowBox[{"16", " ", 
         SuperscriptBox["d", "3"], " ", 
         SuperscriptBox["\[Pi]", "3"]}]]}], 
      RowBox[{"\[ImaginaryI]", " ", "\[Gamma]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8092634476183767`*^9, 3.809263457288557*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";", 
  RowBox[{"j", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{"d", " ", "\[Lambda]", " ", 
    SubscriptBox["r", 
     RowBox[{"i", ",", "j"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   FractionBox[
    RowBox[{"2", "\[Pi]"}], "k"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.809211618884531*^9, 3.809211639909103*^9}, {
  3.8092117107498627`*^9, 3.809211711471368*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211643414005*^9, 3.8092117137178254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]"}], "k"], 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"e", "[", "i", "]"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{"u", ",", 
         RowBox[{"e", "[", "j", "]"}]}], "]"}]}], "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"d", "\[Element]", "Reals"}], "&&", 
     RowBox[{"\[Lambda]", "\[Element]", "Reals"}]}]}]}], " ", "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"6", " ", "d", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}], "+", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", "\[Gamma]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "d", " ", "\[Pi]"}], "]"}]}]}], 
  RowBox[{"16", " ", 
   SuperscriptBox["d", "3"], " ", 
   SuperscriptBox["\[Pi]", "3"]}]]], "Output",
 CellChangeTimes->{3.809211761139476*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hfull", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8092102082236176`*^9, 3.8092102669801235`*^9}, {
  3.8092107810396194`*^9, 3.8092107906814437`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"6", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]], "-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]]}], ")"}]}], "k"], "+", 
  FractionBox[
   RowBox[{"6", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", "\[Gamma]", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "2"], " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         SqrtBox[
          SuperscriptBox["d", "2"]], " ", "k", " ", 
         SqrtBox[
          SuperscriptBox["\[Lambda]", "2"]]}], "]"}], 
       RowBox[{"4", " ", 
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", "\[Pi]", " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]]}]], "-", 
      FractionBox[
       RowBox[{
        SqrtBox[
         SuperscriptBox["d", "2"]], " ", 
        SqrtBox[
         SuperscriptBox["\[Lambda]", "2"]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox[
           SuperscriptBox["d", "2"]], " ", "k", " ", 
          SqrtBox[
           SuperscriptBox["\[Lambda]", "2"]]}], "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["d", "4"], " ", 
        SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox["\[Lambda]", "4"]}]]}], ")"}]}], "k"]}]], "Output",
 CellChangeTimes->{{3.809210212527547*^9, 3.809210268359639*^9}, 
   3.809210326636525*^9, 3.809210791337959*^9, 3.8092108391044807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.809210808924116*^9, 3.8092108100342226`*^9}}],

Cell[BoxData[
 RowBox[{"e", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.8092108101126695`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nearest neighbor terms", "Subsubsection",
 CellChangeTimes->{{3.8092101799460707`*^9, 3.809210187857538*^9}}],

Cell["\<\
Why do the out-of-plane modes become very subradiant near \[Lambda] = 0.7? \
\>", "Text",
 CellChangeTimes->{{3.8090163717964873`*^9, 3.809016405509801*^9}, {
  3.809210174024474*^9, 3.8092101763590636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.809111096728337*^9, 3.8091111044177866`*^9}}],

Cell["Nearest- and next-to-nearest coupling terms:", "Text",
 CellChangeTimes->{{3.809112029430625*^9, 3.8091120427181067`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "k", "]"}], "\[IndentingNewLine]", 
 RowBox[{"nn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "r"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8091084493923798`*^9, 3.8091084596836033`*^9}, {
  3.809111913701956*^9, 3.809111953093664*^9}, {3.8091120055235224`*^9, 
  3.8091120230815935`*^9}, {3.809112080125112*^9, 3.8091121685730877`*^9}, {
  3.8091240359275904`*^9, 3.809124039288148*^9}, {3.8091240986721497`*^9, 
  3.8091240998471107`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"Cos", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{" ", 
      SqrtBox["2"], " "}]], "-", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", 
        SqrtBox[
         SuperscriptBox["r", "2"]]}], "]"}]}], 
     RowBox[{"8", " ", 
      SqrtBox["2"], " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["r", "2"]}]], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{
       SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
     RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.809112172389885*^9, 3.809112182624524*^9}, {
  3.8091122215859585`*^9, 3.809112256766919*^9}}],

Cell[BoxData[
 RowBox[{"nnn", "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
     RowBox[{"GdotP", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "r", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.809112199488027*^9, 3.809112199978717*^9}, {
  3.8091240820834923`*^9, 3.8091240925447235`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox["1", 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"k", " ", "r"}], "]"}], 
     RowBox[{"k", " ", "r"}]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8091122177472734`*^9, 3.809112217819027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["1", 
           RowBox[{
            SuperscriptBox["k", "2"], 
            SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"k", " ", "r"}], "]"}], 
        RowBox[{"k", " ", "r"}]]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{" ", 
         SqrtBox["2"], " "}]], "-", 
       FractionBox[
        RowBox[{" ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SqrtBox["2"], " ", "k", " ", "r"}], "]"}]}], 
        RowBox[{"8", " ", 
         SqrtBox["2"], " ", 
         SuperscriptBox["k", "2"], " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
        RowBox[{"2", " ", "k", " ", "\[Pi]", " ", "r"}]]}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", "\[Pi]"}]], ",", 
     FractionBox["1", 
      SuperscriptBox["r", "2"]], ",", 
     FractionBox["1", "r"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091122906347466`*^9, 3.809112304948306*^9}, 
   3.809124077553565*^9, 3.8091241845745373`*^9, {3.8091242400000844`*^9, 
   3.809124257370179*^9}, {3.809124336900578*^9, 3.8091243706520433`*^9}, {
   3.8091245132357197`*^9, 3.8091245221096497`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k", " ", "r"}], "]"}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      SqrtBox["2"]]}], "r"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"k", " ", "r"}], "]"}], 
       SuperscriptBox["k", "2"]]}], "-", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"8", " ", 
       SqrtBox["2"], " ", 
       SuperscriptBox["k", "2"]}]]}], 
    SuperscriptBox["r", "3"]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", "r"}], "]"}], "k"]}], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
      RowBox[{"2", " ", "k", " ", "\[Pi]"}]]}], 
    SuperscriptBox["r", "2"]]}], 
  RowBox[{"4", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8091247248776445`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"2", 
    RowBox[{"\[Pi]", "/", "\[Lambda]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "\[Pi]"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          SqrtBox["2"]]}], "r"], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"+", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", "r"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"2", " ", "\[Pi]"}]]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["r", "2"]}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], "-", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["2"], " ", "k", " ", "r"}], "]"}], 
          RowBox[{"8", " ", 
           SqrtBox["2"]}]]}], 
        RowBox[{
         SuperscriptBox["k", "2"], 
         SuperscriptBox["r", "3"]}]]}], ")"}]}], "/.", 
    RowBox[{"r", "\[Rule]", " ", 
     RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "*)"}], 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["10", "6"]}], ",", "200000"}], "}"}]}]}], "]"}]}], \
"Input",
 CellChangeTimes->{{3.8091245307580967`*^9, 3.8091245402471695`*^9}, {
  3.8091246326837187`*^9, 3.8091246554452*^9}, {3.8091247065265865`*^9, 
  3.80912474984779*^9}, {3.8091252494226317`*^9, 3.809125372617504*^9}, {
  3.8091254211009035`*^9, 3.8091254694513535`*^9}, {3.809125532403105*^9, 
  3.809125599088233*^9}, {3.809125796202443*^9, 3.8091258194962254`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 0.999999981632653}, {-1000000, 200000}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8091257220486727`*^9, {3.8091257976605463`*^9, 3.8091258209403515`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plt", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"ComplexExpand", "[", 
        RowBox[{"Im", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
          RowBox[{"GdotP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
        "]"}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "+", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}], "-", 
        RowBox[{"ComplexExpand", "[", 
         RowBox[{"Im", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
           RowBox[{"GdotP", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
               RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
         "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "0.3", ",", "1.1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thin"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "200000"}], "}"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "5000"}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Lattice period [\[Lambda]]\>\"", ",", 
       "\"\<|Re[\!\(\*SubscriptBox[\(P\), \
\(i\)]\).G.\!\(\*SubscriptBox[\(P\), \(j\)]\)]|\>\""}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", " ", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<N.N.\>\"", ",", "\"\<N.N.+N.N.N.\>\"", ",", " ", 
       "\"\<N.N.-N.N.N.\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Linblad Terms, Out-of-Plane Polarization\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.80912563767312*^9, 3.8091256386155987`*^9}, {
   3.8091256742883368`*^9, 3.8091257033477015`*^9}, {3.809125743972067*^9, 
   3.809125744924512*^9}, 3.8091257830246687`*^9, {3.8091258825104265`*^9, 
   3.809125949767537*^9}, {3.8091269875159197`*^9, 3.8091269908921394`*^9}, {
   3.809127203747385*^9, 3.809127301955798*^9}, {3.809127336476527*^9, 
   3.8091275306314206`*^9}, {3.8091276036351166`*^9, 3.809127634106783*^9}, {
   3.8091276943322644`*^9, 3.8091277096308575`*^9}, {3.8091277434098577`*^9, 
   3.809127806779765*^9}, {3.80912796682623*^9, 3.809127990772332*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1:eJwVl3lcTV8XxlNJkzTP8733nCIyC2UtJWlCGZKpiaiUokyF/EpkCEVIplRC
UZIMRUqKRt353iZNmiWUTL37/et+vp97zj57r/WsZ61t4rvbfbukhITEOykJ
if//7p3pNWfOHDbs2G61fNjcDH/dL3C0IfxukU7zF8L/sRS9HQj3SoxGDBBO
1H1+ZtP/n/e6l9FNOFdarSuG8IVtPdIthPsF765wCNuc4pVWEfY/NuNfxFw2
NGptt84gvLHhb+WzeWxY1+5GbSD88tLs7HArNlh1zhTkmplhpazsDMnFbJhp
NWuXOuFQN1bzfzZs0LcpaD1Em+GFlwLxQmRDAtzX5VBmuJVrcaDUlg03zhra
WhHOUNbyPWbPhs6xFuY5lhmeMHE8NGcFGzw0etu7mWao3qY3q9CJDdrlU1Nd
Ceu9jZ0X5sqGqKBfkhkMM6xdlyD4s4oN1krfd04irF/cci/SnQ3jPfqFu0zN
sN2+onLmOjb8tF57962JGa4/siqu0IMNS7UWp9GE7QTBF8I3ku/bdM89bGyG
VZM4H5hb2ODefvAB18gMx7tEaZle5Plj16wWEs7+vL9yqy8bjJ0vrz5naIYT
rxSc6d7GhmnO044PGZihICD+RtYOcv54s0XLCC9XyWjeFMiGMx4z+Cn6Zui9
06e4dRcbqqyFqX/0zPBba37Ptd1s6Hpcw11NeLbc3Sdme8h60nE2ubpmqDip
LScrnA26rNirqoS9qPzvW/ez4Yh236YdOiSeP5iiroNsuLhtaEOFthnyOy0m
Z0Sx4a5VRZ4O4b4HUSHrj7IhrD/iV4iWGT4wCQ4RHmPDTYff8XWaZtjx7NvL
xFhyvo4JO00Jvx/XzTI4QfLdrZYUrWGGjvqnSq/Fs6FGYseLT+okXhvPTV19
hg3U6FTGPMI9DvNm8RLY4JMy3pGkZoayHmHHEy+wofRwXFOHqhmyNVYeML7I
BsefAfOWEl54f8/V28ls6HPuOHtLxQx1vKfLel4l+nhUNWVY2QzTy09qtF1j
w6UM278rCd9zORR6+wYbmmus5W5MIfu5lz+25jYbLGUXqwwpmeGlgrMmgjts
OPVo8wVXwhvb/yYnZrIhu2CF6fXJJJ8lSg8M77GhdfnLWT8VSXz27hi4/oAN
BvxRx/WEt6xYf3jNQzZsm3Fie6aCGZ6r7nwgymXD/oV/FSQJL9qjYHYln+jh
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
7zCNYYMeDfFXuFAv5ZKkRtjERf6d/TXyve44b/MoGg97btnAvs4Fq4v3162M
pDHc+qf22ltcyDLxgf2HSH7QnFa4w4XzLdfPnD1I44Qfv9hJGVzoTSjRyD9A
4+UPvrXuWUTPM02GyvfTWBmhOir9gAv/rpoXNu4j/ane99XJHC4MPHxTK0n4
t4sj2zaX6Pvyf8aaEaQ/HKiPq33MhURZ1xqrcNJfDt3c6VrAhesujyO99hK/
vi59RfIZFyr3nXLdu4fsL1TeP/4FF75/5SYkhxG/25Z5bHkxWX9CZ2tmKI0n
ZpyqGnlN1hsIt3i5m0b5LKUnB0q5kGaa9Kc5hPi7nXnvzHJSHzGN5V+CSfzO
drx6UcGFatsdhsqEP47N+3ToAxdKEuS3GOwi8+TiulkzariwkW+SOiOIzM8W
cib5dVzQkPl3dFUgmbdAuCWkgQsG5eJZWwKIXiWdFv7mcGHvUv+kQztpPJ8i
aRfJ54LZwzkKqTtonLPWLWWWiPjZGteF9/1p/K8Yzz9v5MKab+stKrfT6LTi
HXt/C9GP27TShm005mQl2Zu3ceHN3nfbP/mRee7ZhPXZHVzYc2Jlx7gvmad6
Jz7Z/pkLE7X/9ssTPlR1P3eohwuhlcVilg9Z77/L4pB+LvD4CYPLvEl/36i7
lvGFnKfYfu9qL+LPbTZB975yIeLmh29BW8n5To/Wbf9O9NyNDXu30KjS6cb+
NsKF8uhPhac30/hO7bt0xBgXpryUf393E40//CxiLf5wYcjT2yh3I431fhPT
Cv5xQVdBPqnSk/Sv4+GTIybw4K/+0QU1G8j9IWraXVqaB/tfXP7H9SD+YBrT
8kCGB7cnfR0bXE9jWW/odn85HjhtW6v4fR3xM9/x+GEFHqhdTN4qR7j1Ebcx
TIn8X1nYa7qWxgJD28O0Cg+w50S42RrSD21WFT1U48Gp6W1rl7jTOOvw8Ipd
mjzIOqhkiG7EjxObpAx0eDC/5rfW8tU0ym0I2HJTjweNcp+Pbl5F/H3JaekN
hjwQji97unUljdO4rk5txjyosY3xD3OlUeFsZlMagwdLwtvqdrsQvek63FxP
8UCJkRa2x5mcx+PkuNiMBy3KMzOOO5F+9NQr5/I0Hvh49+6LdaQx9S1/jDmD
B0+7E7uSVpDzZV0Oz5hJ9i8jzrzrQOotZ8B68xwerK0v681cTvqRb8edjnk8
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
AYyzeBw=
         "]], 
        LineBox[CompressedData["
1:eJwU13c8lW8bAHCjkOxk73POc0JGQprXXWSHbA1ERotS/IoyUioqitISJZUV
SqSorPZEFGcfpcgsTfRe718+3885znOPaz36IdGeYWIiIiKb5ERE/v/3xN6B
8ANjPdBeG/BW+f0I3FKLVj6FfjnX46LpDBHSlCavkI8Wf2xrTU8XI23fK2YW
o++WfPHL3TGNCEI8JG+h6Yt2MWb8nU5G34yINaDfi/nWDttJEhE4MfUIXdBJ
dKaCpYhC+bw/b9CPg1+WR6yZQfQ028a70Rr56eE1NtLE7EjMaC96dRH32mLR
mWTZT6XBIXSMikVdT+1M4hZ26/MvdOhUd+XBIBkS2O7VK/atB6KEHe/3/ZEh
25Z/58qg23eKdB1LlyVHta269NCZ0w3SojLlyIWMd21GaAvK8OQGCXlS+jv2
lSXarubSfy/i5MmzdzWtjuhWzgtLb5oC+WDr1+iJfqnanHzaS4F8rvpZvw69
Z7rc2bIUBSJ53KZ6O1rH0OS77HsFojLxviIe/e1K7rzrIoqE2ryn9ABatlPv
422mIrGzv3v5DNon3MUwb4ci2T+1+MRD9PV3Yl3aPxXJya2so8/QrIEzISOz
lcil7r2HO9D9/rddWPOVyMOahqTP6NmdBmnztymRqSiIUvjeA4tT/WkKXUpE
js3dpIE+LuX899OwEtF2SQ6jo+0X7DJlSs0iS5iN62zQ5dd2KPyznkXiuStc
gtE706U2Vh+fRcbd7edUotNfK7SvNVIm6Srak3fRqxvzPzcuVSZ67G9vW9Fr
S8byn3soE+fNlxJ60CZzaLZdscqk4MDEK4nxHhjkz5al1ePndTdj16P1nduK
axfPJrykI86RaPYBY4tzzrNJrH2w7k70S3qIhn3AbFLQLvv0MBriT1MicbPJ
+GCkVjVazCTzEL0cPzfQbZb+0QOvFi/rWzpLhVh/Gc+djV7aLzNrta4KeV7x
Yqse+lvPEgtirEJ+LIlXsUZ7pTmfvr1Chbj4vdu0AT1K8pKVtuPnGRkKd9Bd
qovCTFrx8/Gf68N+9kDIg2l11etUScEypz3RaKtWRwnhRlXy/dC5nD3ogJdR
NSLbVMkFjaXPj6FNtfc6zdynSr7Cfpsa9Iif3dyNF1TJ0XSZWZK/ML7/Ozrg
916VvNDVf3IdfcXo8MhlezWitylGeBNtFv8kiVqlRnbdbJ6qR2c2XEzJ91Ij
WivDrd6ix4RLNsYEq5Gtm0sv/0aHirywzN+jRmRuW+1z/o3rMQvLMytRI6uc
nS2+ouvDdzh9mqZOqK9vqZ/o6qIPCc3S6kTkeICm2J8e+LJcRfeMgjqpfhs5
TQ391G1UY46WOtEKONRpi3ZUiT340UKdfI1oiT+P/q5069WXQHWSfnBZs/Pf
HmioG+cUVqmTjcxHtT7oUM9qpzM16mTZ01VlweiveutPp91TJ2My60/FoW+0
uCqublUna3ISIi6j62YO0fPfqxPDwjsz/6DP/jneaTylTp48tPAunuiBCyMS
JYErNcivlJ2zq9Gie4/czXHSIIa21Z330VW+VwIfrdIg6a1WAR3ol5v2p2n5
ahCXZzaB/9DbZ7d6nArXIK/al0X6TPbAbs5fn4dpGqT9k/Ne0akeONLzw2N+
iwbhyIReCfjXA4LdM7eLW2mSlx46ZaFoVfc/Wro2mqQ+58OtbWipbarBNos1
yTktj+YU9NzjjbWhyzWJ79ylgmL0EdfFsy6u0iSvXFT1/qBn3hTPvhKmSR6k
Pz9/ToQFrkd4n+RzNEmBlGV2jygLgmQf5ogPaBIW4/zr7GksaFoofybhhBZp
Hrtcoi3Jgm+h1nMKVbUJnU/a2TNY8PXwVZ3EXG2iV0QZnZBhwTnfS0r6kjrk
iVq5roo8C+QgqNspTId8KX8a8laRBTvdfHU3NemQmrE0u0BlFsTe/7PaUUmX
6Mge9eaosGDj3t6C4TW6RMSJeTNHnQUN/znGuFzRJcctQ29oabFgnsc8Oade
XXJqudWvbh0WeJCcXRVKemQB3X37UX0WXEr3e1JnrkcO1sw4JE9nQW5j9JZF
Lnpk1eY1A08oFtis9yN7w/XIw5cuQ16GLKA0Dk4rS9QjryUO6rYZs2CVFKff
/ZQe8dvgfTHNlAWn/dfrPy3TIxlbWu7JzGNB/9H/HB406hGb3GfU0/kscDZe
332oS4+ciNlh7mfNAnOfMr7cAD6fFhz53oYFP9TN1iRN6pFv472DmYtZkP3N
W6ZFQZ/I7pZWUl/GgimJxVOaBvqkQPNR6nvCAoVOF+ZyS33yKucpLcOWBR93
tN3etVKfXG/YFiJvz4JHl5aGTnrrkwnJ60NPHfFzEq3rHoYWTVX3dWGBrer2
v8q79Enu26KYd6tY0Hbaoo25X5+UNgWqZ3iwwD9n2Z/JLH2yJfROoJIXC75M
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
0A9jNR4LIN/T78t5N8iGykEJ+5AHTPLDn926dgj9fV3/rI/3mWTuN9v/jr9D
va7K3uuO/PLc8XcDw6i/WWrjjfeY5EjU7w7lETYs0zTX1Uf+tD3H2fsDG3a0
EMHyu0wiYbNQ4MFHNuhSHsPSyNIXnobP/ox+aFwad6YB6+Wr83LvL+gn4y+0
x+uZxEt1ltvdrxjPLINd25CbHs/s/MtiQ69G/96uOib5uL81ZSsH9XJFf88a
5IHA4eSrXDzf9gPry2qxfjwUmMM87PdXFKsVkBW2Uh8MR9FP0u7Mj61hkuBb
JwIjxthQEfDdeuoO9gvpPNrbcaz3/Nv+nsi+vl/36X3DfpipLd1azSTyolGx
R7+jfk6crV+LnNw20vJiEuPfJ6N29Tbm5/XFV0t+Yn4rdbLEkN/+llwUMoXz
94mx9sNV6BciNQPPf2E/axJNfVOJfre/9JjUb5yX0pV32yA/HNltdOgPG750
27MrKpjk963gzrq/bBD+ZxytiDzHv2hqagb7qzrjXsotJnmqlb/JRYADPstZ
mZM38byOo3suz+LAor60DB/kh9HClT9nc+DCNj/t1huYjxzzZIc5HPgr5+K7
Cvm9RLfxBSEOnJtf05ZVjv5wSUV8dC4HYtTj7sxcZ5KVh7uqdUU4sNy14tVe
5BijrNHgeRx4rFif/+Yak+RI6jh2zufA+u2P2CbI58yXRYsv5ICN7pHD5WVM
svb0s9eBiziwQ2DTgUXId+U7BWoXc0Cn9XFFSCnq/+r3Bz9FOfBl07f8zyVM
IqP7ucBZHPefzPxhgTyluMLtsgQHAq/uv3q7mEksm3sesyU58GfHsealyJfk
9VZPIbcsuJ4rgSw4x7fIUZoDx7PSNx0uwvnK/MvnVBkOxP/JdB0uxPpNXW0/
voQD7X8+XgfkZUbdsWuWcUD359a9ZQV4vo6UzcdkOdArXfRBGlk2SN76hRzG
a8Qt9Ug+k9jvmxKVUeBAqTjn7rs8JjENyf19eDkHVoTfFF2HLBAYENGhyIHf
EauWXLnKJBfvx3QvVuaA2rySImHkL/L7Nu2lccBpwU/73blMItqTf76CzoFL
6oHxHTmY36N/D44yOJD+ZCraALlmBf3YJibmz3FjQvoVJjFZnWGTqMKB8cU5
6v+ycd62G7Bkr+BAmuDm51uRcx7tldJW5UDOv21LH2WhnhWVjwWpceDf7xCm
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
hgiW6Us5CR28z8LiEh9Z9RL/B+4vOTA=
         "]], 
        LineBox[CompressedData["
1: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
l5GwBTToWBo3GWcxpNQ+TT51IQ2bsi8PDaP7heUSqxbR8OHz+fYL2QzRtuWN
HxCiwXbrCtXVF/H8JKjWOClMg8pmE8Hv6FcqEsGqojT0HPy+9WQOPn/Hl7DV
YjTMPqcZvPQSvp+Pu8ysxGmIM26V60KLLD1pvk+CBu4iee2oXOzv94Q+xErS
UOnb0qGVxxDHb+KHi6RoYB6Irn+Pvvqt4UOTNA2LdGdUDl3G+XmnduadDA0n
DOxTNa5gPtxV4J2Wxe/z2ejdhJZLsRoQlKeh+kQnr/9VrN8ym3JxBRq+GzYY
yVxjyN3GFWt1FfH+RLzay9Gvh/e9NVai4cA+zzl++QyRedM546JMQ+cM/4WF
13Hel1+x8VOhISdm3dQt9P0Y7uVgFg1PUj5xtxdgPMtLXZLZNLx+qmH7D30l
NSowg6JhbdwbcrsQzxszubV3aRqkV0hMOd9gSOilxyINqjS8k5lSmkInZI73
N6nRMBGzvvNGEfaPU01t/ep4f9LG49Y3GXJU7+WO7xo0hFx+0juMPvSQT/S7
Jn7//WLXrFs4L3Lvl80spmFqdJ2p8W3cn8Jc6FlaNIj/Z1z5A62/86qH1FLM
hwMNs84XY38x/Valpk3DtNv0rRV38H2Pe4rROjQ8e3lmeAAt/GvDAsNlNIQH
vM04cZchFgtSxQyW05A+U8SneY8hygfV/LR1aRCU7V/Yie7VDjc21qMhyL3u
UHgJ7lu/Vlka6dOwTHvhYbVSPH8KipdYGGB+aEz1v0CLCVD+poY0/JQ5LLvn
Pp63NIUTVxnR4J3u9Um6jCHJjbPema+g4bHBT5H/0OzyhKtkJQ2RXl/b/R4w
ZFfP7zirVfg+jvl7ST1kSF5pdNXm1TQUvb6w7SHawNnn4npjGqRuLP288xE+
j4uMn70JDQE3/dr5yxky/V7spwWhQfOqUVohunf6zz8joMGc8u9z/I8hEg4T
r43X0GD90uL8BNpWbV6Kzloa7vEe/3K9AvftHUs4ButoiFq6Y3JzJeZHbHWT
oSkN+nGdEWPojbbnHqia0WDp+TDpchXOh4LHtIY52n/NXLNq7N/cDWUyFjQU
/NMW/YWe459XpLAe7y/+zlBeDZ5X4jW15TfQoLDynea6xwwx78uenm9Jw5Kw
Xf+46DVz7gjyb6SB7rm4IrMWf08/MOI3+tiqnaD/hCEnBb/k9FrRYKqS8f4T
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
o2NmBMLH0f8D/RYr8w==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1: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
1Ns=
         "]], 
        LineBox[CompressedData["
1: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
8TaYotV00rpGlzEhSLFSoU0a66dCttd6BSZUUH7q+6FXyB5fen05E6Ksc/2n
pejk5bSP2/AKJrSycqLi0bC+LFhPkQmyvI/YquigqLqnyUpMMB3q3PufJNYn
TUr9l1VMeLFstaI12q2qxE9OhQnZMuyGfgnsv66zhsdVmZApEn72BNp3d3bb
IwoT7JVm4hahr3mIpknTmHCgaSAjXRzn112Zg350JjicmbxMR++9Hb6sdDUT
jm7/21+9BOcJPnXfRepMsDPu0N6GtnxKi7bTYELIeE1/vxideIf//XBfkwnb
J5QvHUPvWNNVLLyGCfX5rhLzi+lExlBup402E4I/PRBNQV/dvlKtWIcJ7++z
f61Cs+sC3w/qMuGGnpPJY1E6EVYcEtDRY0JuVm+sDZoTZ+AVr88Ei9//7n0V
oZNM+6aUj+uYUCWpYn8ULUbV/rXGkAkBkc6vJhfRiS3r0dfo9Uz44W5Nj0K7
z8WlNm5gwn+7AmSWo/Vommdom5hgO8LTWCCM/bpgpeYRIyYwRDmiG9H2UnpB
dzcz4ePO75YfhejkXKI0R5Aw4dfTr6Z70bEeZnQrY4zXVRKf/y6kk21bjRML
TZhwkvN6+Rk050LC67+mTNjMZPGIou3vzl7RNmPClOm3vmxBOglkGEbFmzPB
YKztqBr62MlXVp8s8HmRunnPBbCeyijo61gyoe3U+Ckz9N2clMexVhiPFhTz
j/x0svDCgYUfrDE+UsbeuKMVT4+Hq9ky4dvqQ90DC7Cfvvr2+tg23I/U47uh
6LdTrFtldkzw9e84uwRNTJ4XimxnQrOf/I90Puz3vb2hdg6Yr5H686vR15Nb
gkp3MOHzuca8B7xYDzTYwgudmODi/tZiI1pR0ebwVmcmuBUyn7znwfNQDh3J
38mER0fu5zii34XNWP3chfdr1bqbMU8jX1/mrF/twoSl9u0rT6Hz5cXtzu9h
gpn+6Pa5ORoxa2he+2YvE6qPnna9jL4V7QKq+5kg8uhQizT6S7a+/GFXJjww
FqLcmqWRjly9+JIDTHD23Bm1Fp3635zqQncmSO7z21I5QyNqissSrD2Y0PPT
dmArOiRjTqHkIBPeuOoyPkzTyHUeIRN+L4ynv7ZcR3RClZuBuTcTFo7e7Ouf
opHNCZd23PJhwrqYGWVf9OuH05u5vrifxs6945M0suz1tVr6YSZcCrl07yJa
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
iivIhjWSGwocCY2Y3GrnMRNiQ9IzvkPJQCNOvK8vxQizgTM4/qtzM41Qjp1d
y13EhgObSn5Io+sa9gWZiLLh4oKGVQ5GNKIfEh97YTEb0scb197chOdvdOlV
rxgbbsjE53/eiPPtzo8faOJs0DXQ+r0CDXs3H/WWYMNprbUpPhvwvAKC9Osk
2WDUbxV3az0+7wfPewFpNtz3fOQzYEgju/Y5xRyUYYPwjtBLKmjLNx++P5dl
wy77f7P7DTA+olJ55+TY0DN5369gHY1c3aVm47KMDfXb4xf16GO+Rop5Zcuz
YWViRQEFzff8xZ15BTYs01H22qNHI8yepPDdK9jQ0NJ5/tpazM99/1FurmRD
RAz/g05dnA8H8kYmFdnA5zv0Wxx94GNvElnFBrncCBNHHaxHOVteRyizwVqo
TvCGNo3YRx5X+qbCBj3j/IZPa2hkpmLQSonChnuZvP/JoD0XbLh5lsqGsGjO
ZUstzBeDggsdNDYcX1bYGqFJI0UvD26SX82GjY7r7F9r0MjxA7/lg9TYoHny
RsmkOs5XTm/ePldng+9JeYuN6HC9l4tnNNhwSFNoX4Qa5qNqXLCzFhsWKASQ
R6uxnvjd+u/6Gjbs8Jw/MUHH95nXl2T/aePn5nVeq9FjgZUWoMuGh7cly31o
eP8SkuIRa9nQdPFOWAkV++8LvfkuPTb8N/xx/DsFv19b8EJpHRtkL3zoWIGW
/MzMizBgw5mS/t22qthv2y0UOw3ZkFWn7xShQiN9GlOHlm/A9RquaKxRxvnt
WtD34I1s2Jnx893gKuyfjmaKNZvYoC//yU4LHTO/7t+8ERvWFU3t91eikcnK
kQkXwPMZ0eJmK2L8NPHUZxE28EyNC3SvxPo83PF81pgNXhbyiSJoCd52S2dT
Nly77p65aQXO096r7qRtwf1pbLALWY7vIz8MV4+asaFPa9KlSIFGtpfmhKy3
YMPPfLYkUx7nfR8Nz9Nb2XBSZaObKlp+7fnAFks2KHfumXBYhvOKk5qTjDUb
rMh+q8SlOM/F3Nxzwgbj74DV50o5Glkr7apTacuGKLcvtFFZfP+MNcua2saG
hf/aZHTQfeITOs72uN+HLmr7ZGjk6N9/1zK2Y/y0H5NJk8Z5vPv1yikHNmyg
DsnVSNHI+6ePYYcjG6rbk8t+SdLI058Ta1Kc2NCfZKBDQ7tp8lsMO7OhxdPi
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
n1r60f8B5yNkWA==
         "]], 
        LineBox[CompressedData["
1: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
ocevW3izGsgYpfbW6m6iIceBRav0RjL2X282F7aZhjrZdvPEfCJjp8ex1l1b
aIho3hR3vRn60R2BUAkNGrqpXT8Q3UrGORmeDaGa8D7XeiPT2iGfY0aL27Vo
6A97zdmMDugXdcXuwto0pKT+eE1EFxnPiO3YfnIbDW0IWrM3uoeMH9ao0Mt0
aGjcPTzGrY+MN9lt3TyrS0O79vxu3NYPz/NnzS1rfRoyNI4z0hgk4wvzWz6n
GNDQ1ZJ/ZjxDZOzASdb4aUhDl56fElo1AvXs4+6qgyEfEvXe941Cvrz6oBi2
nYbSQ7yGcsfhfDYsiHQZ0ZD+EUXttO/Qv7vC2iVMaOiUTKqYyw+IX1bd87Ad
NNQqHVVnTYX82r91c8dOGvrSNFGnSSfjCJfZUFFTGjpvWjw1wyDje2ejJgN3
QzzvTR7rmyLjrF+OypVmNNSdF3bw9k8y9t7ruGLBnIbCMuLQ3t/Qv9/J/9u3
h4ZmBidmN86SsWXC9k/plnD+UylVY3Nk7HlUoXrOioZWvDgyVfUfnJ/SFnNr
GxpqDIpkS/wD/XbH5dxrtjQk9drzud4SGcedfCLP2EtD/Y+cHdb8I+OuGcpp
jf1wPl77pyrYCPzL/Y1TgB0N+b8RXzq8ksBNY2TfTwdoyGHCMpa8isBnXvWY
8dlDv9hufLGBg8CT9w9a+TrQ0JOxovxELgKrjiuSSw/R0Mvg/Vc0eQhswL8h
8bcjDQWuf6HauprAqy36ZaydaGjM4FVIAi+BH32lnkt1pqFoQdo6pXUEXhtT
x/37CNRDUP/PcT4C6wq9V9jjSkN+HQ8j0gXgegtColfdaKj4vGO3ihCBl6ZV
VWjuNNRyM4v/qzCBU7an86kfo6F1b444B4oSeDZc/vJJD6jH+B0DS2IEFq2P
VP3kCfkr5N+St57AvN5Kd/m84fs15vs0JAn8ZkOm9onjNHTMhjkzIEVg9Gqr
R50PDfE2pT89K03gtGcyx7hOQH78ED6zQpbA+RWfL7v50ZBITfBijhyBr4n3
nMv3p6H80i8f5ckE1o7Pu80dQEOTYU4LDQSBC0duWbkG0tDlpadRLvIQ79TB
tvtBNKS5hq+9X4HA/x2gh60Mhny8/kUyWInAnQEWv0xPw/mUNvj8VCbw2ZCW
lRdDaGiLw9vkoxsJPJa4QWcslIY4Z3qtZ1UJLLv00lAxnIa+3c+54L2JwOsj
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
R8VhMyGer+D9OhdsRCXpqCHy9Tq71wQ+z1eS6yBFR1+mvvxQr4L6c9gqW7mB
jvyVkJXcGwI/SRrYIiRDR/PP5o6trobvS3cK7pelo3BN2sIIWOj1DYlncnTE
jEj4/qmGwKElhdNzJDpK+RHn8+At9OPUYWdtgo6or0T7w94R+Hbc6O9rFDqa
qrocdKSWwK6tWvad8nTE7XqtV+s9gceV945pKNKRi5MWlqqDePqnciYo0RE9
vjR2CXxorfz8J2WIn0rQp+Z6Ahu+jOZX2khHtfy8408aCDxXvWneV5WOyoq+
rj//gcC+3XmczWoQ39S5/442wvv0GBcpbKajrhSdNuOPBP6wZbOc9xY6QsV+
8wKfCHw34/urenU6suVbzJgCmx9mKqzTpKO+p/8VvGmCeuGRVLbUoqP89TJj
F5sJvFAnsLdgK1yv4oivewuBOfsPmtO16cirzSp5Uyv0kxXHvS106ChbXHV4
dRuBjwpmy+bq0tG1gkXrYXBbmMKDb3p0pBCilpjfDtf7FWJrbEBHr6/yNkR+
hn2sVqI53hDiPVw9sauDwO/PDQ3VIzqyyLI9vKYT+tuekxKk7XSkVzuVMwh+
dNKWfNSIjkbvvvqb0wXv9+Cv7TtjOqrf8YLrdDfsDxp/bFbvgPN58A3p9xA4
7KHkhNlOOgqJ8h5eBM9qcOU+2AXfD9LkaOolsKmw8RaqKeTH/Ku4xD4CH+Aw
GzMzo6M9rSYezl8IrDEcpHbfHPKN5PFApR/OT3hq1zcLOrqlbx7wA7zPfmu8
sSUdbZTdGlA2QOCbM59uXLSiozH9GdFTg5AfERcMP1jTkUF6sNmmr7APCq/l
JWzp6NutxPh5sOyq0XyPvXTU+MIsvWSIwNGrYnzq9tHRnPmVpDPDUN9M03pp
OzriP0ZaazxC4HJ1p2nnA3TEULkXvwAOjTM0enUQvr9G/l31KOxv6n6uKxzo
6CjtrVDoGIGPMbwLXA7R0RHGlxV4nMDxaZcuvHSEev88Fr/yG9RX6oLm38N0
VBOYbFsO1rqvxePoTEd1Dl+Twr4TuHpNTVHOETpyVb6ruHkC6tfJ//uICx1J
9tHjhsFqNZOmhm50VMnlr579g7UPPw+NdofrHxlx2TtJ4Jpd5m3DR+lI/7ls
lRAV9vW/q6p1PSA/flK7WsDRvHxnIzzpqDnpVuZZGuxDKmOuvV505E29elyP
TmDPHB4xmeOQX3uOLk2ChVftdXXygf7g9O70dQaBI4I9Ol74Qvwld7ZZMQlc
iT+JLJ6go8dDueKL4OeSi2cc/OkoeaFNpmyKwHGWEc+zT9LR24xoZbdpAlN8
ZGNGAujo9AeZzbw/IR63roYaBtHR9f0zLW/BT2WtDM+foiPziscZPr+gfsp7
lUaD6UiU480I+TfUq058kX4IHWnESkt2g+mCF/6eDaUjsq52/pkZAustWZ/u
D6OjJp5fl7bMwjxFx9+QIuD/wyy7e8A2PgWZrmfoSE3ng2HEHIHZCp/df32W
jl5di+neOE/gGMQbtuIcHVl6DrC1gd+Pbw4+EkVHF5ITDaL/g98TwaE8FdHQ
/9VXJmxagH3DWdBn4TwdOTNjklvBDvbBM3axkC9LXy6c/QP1WKhseTuOjnS2
BeyWXYTfa99XGn65QEcrFFR3VIHFNR/s07pIR3+rw3m9lmAe9tzUDblERwL7
X7zn+gvPk3hwV9dl6Ge5iaolYEaGB3nDFfi+k26G7T8Cy6feun44Eeq9rnsv
Ayx5J31zxVU6upxumn6djYLHl77dXEqC/Gwv59JYQcE+fmzKh5PpKFH56Lcv
4JqPBjZlKZA/iiu5olZSMC3y4675VDp6orItRIKdgj+bEEf3X6ejQ0Y1WtXg
JJcmm4wbdJQlQDrgsIqCJb1udfalQ358mx6aArtFqZ/TukVHe/8eSkvhoOCo
aYmFkAyo/4ikNmVOCj4U0Hyr+zYdzcblSTWD2Qdz2zdl0tGfCfd6Xy74fnZT
r/9dOnp/2lp6JTcFvzpVzdWURUd58oauOeCmbHYOwRw6ipued9fmoeBbgwJK
Afegv305pNMD1uI0Gft4n45K/PLOnFpNwQ9i606sewD5xf3gPtcaCu4QEZb1
yaOjaM/B8Fxw99LTrGf50P/fKJpu46Xg/NbAFz8L6CgtQLKgHry1lG1uz0M6
Or5y8abrWrgfc2BVchEdPZPYkfMTXKkXpzP9iI4Oe0zJJK6D/w+w5TB7TEfy
fk1K8nwQ7xV+WZefQD279fiWgOlZdq4TT2E/eNjCacFPwSbpib9US+iIN+4N
tRfsGTYp6VsK81U65Jy7AAXv9hU4Xv+cjrBItdkCmO1F/MXV5XSkwr4zOlaQ
goOEPjZ7vqCjYLHUTkkhCn5dd3j0cQXkc8HTvDxwh7vw1alKOioXs9i2WRie
T+i6i8UrmNebS96/A9tKeLJfe01HnaXvf1qIUPCLLRyfpqroqHpYlX0YTNOo
UzGrhnoqnPhwUpSCZ690OyTU0NEJhxs28+DX8yVPfryloyvWQXcuilGww8uh
zk21UO8lFi/5xSm41nNLst97eF67+KepYKr8nlONdXRUJNK1h7yegif0KxTW
NdDRj5rFL3ngHLcpNt8PdDQjGTy3VYKClU6Zn3zfCP08zH70LThucPYJ5yfo
l+LOwyaSFJx10FfMrQniddDXsg2cpKy5J78Z4mtIGtwrRcEGa+sKuFvpaL3b
8dohcHlf+B3XNsiHII+L3hsomIst+khuO/SzJGbSJFh4614z9g6Y9/4b2oKk
KXjuXRC7WScd7f+r6D4DztOv3HupC+aDdsJsgAx8v66xcbybjmg49/4C+ECe
ioByLx2RKpVqQ2TBNw+cvdgH++WJjO9schRMBOdFj3yhoxuTT1bGgesLd9kR
A9AvZZWKV5AoWGHqmXXUIB3ddfTDF8CHr5yQqP9KRzfTmQHsZAo+ImIZzjkM
8Up89yoCLFs8v9JlhI5eKBu0/QOXZf6yvz9KRxwZt++FEhTMk1XRvXKcjiTI
Z5SWwEoJ92gO36B/bVB+c4ZCwTKtA60Z3+koIqxt8wy4nRj9MjcBrsrSCZaH
em3bVqY/CfFUblJlgLMT7ctvU+ko3s8wx0+Bgku3ZlrN0mB+yJRrMMB3tmqU
b2PAedSYNbspUrDxrpQd15kwb0QkmkbAbx4b3+ufgv4kqjd2UImCudnF06V+
0pGicfvWT+B1HuUlp3/RUUH+hXZTZQqeJOVlvvxNR5s6BO69Ap9nujyRmIX9
QubkAx0VCv7xANsHztGR7tTSQAmYUubXVjpPRzIiuz0oGylYusvLX2AB9l0F
Ce4sMH1P6aDdHzoy1QvkEVSl4EtPSGNpi3Rk75XoGAUeJTvyTy3RkbDu+6L/
wILM8TUa/+ioJ8og1EuNgv826qpdY2MgnRRJ1RFw9d+vMj0rGOie4cBx200U
bLWhIF+cnYE8VcK4q8EZFgYHg1Yx0NCeAwFbN0O9fJbrfsHBQJtt46Pvg28f
b4sQ52Kg9h0RZpJbKNiUcb/iJDcD0fwMvK6CGxsa3pfwMNB+dgWzP2Ce0vJ5
/jUMlBYb3uCnDu83N7tgx8tAibs0xfrBKygOqdfXMpClsEbvDg2oD7f4fdPr
GKhuQkbmBVhkgXNMk5+B8hbJ1iRNCt6VbX0rRYCBHE6Qp1JZ1qj6ThVkoOmz
UYurtChYakPEKlVhBirSXMvnCy4W4zC9KMJAH0ZGgwfAot6DDs2icL/Db3/u
2ErBek3RqWriDPTaX+1xGVhV0vxo/HoGUuZuHCW0KXim2o3jowQDnas02HUZ
HHZ61ydFKQYqHG5p+w/cGRvu6reBgSyqp9KPbIN4n/189bE0A0n5P/5VCx6N
nx1dLctA3keYjlt0KDhz0ovLSg7+/0CY1HWw6OF8m2ISA6m1m3et1KVgx8rV
GlwEA1Va8WzwBYf4vR41pcD9j2zqaAFba+m9zJVnILMvjT66enA/Wx5XqgK8
X7HS+TvgsEN/7iorMdCYmMr2v+CSoBerYpUZyFXhTsMxfZif4++3NagwkFjl
2Ld6cIJHZoq8KgOFn/5audkA3n97/WtfNYj/uUn1ZPBtDuHI4k3wfBbBh6fB
9X0qHqu3wPNlTVAOGlJwA1eqtJU6Az0lGz0sB8ftqF8s1mCgZObPSmkE+XhC
OoBbi4FEVuQGnwcHMd6XmW2F/98dxD0MTo7cRsrXZqBW/lu8OzH8v+cfR8Y2
BtLaV/PrHthUf0RNTZeBrjmVZP0D18umKlzUYyDt/W/yXbfDeR++zvykz0BT
puxFVWDVQrdBFUMG4t1pOidnRMG8I/vcYxC8P1pYcR5cc/J6xXvMQI9XhsoO
gNUF72mRjBgo4dAFP0NjCg5dzRblYcxAHFO/BtPBifRzbg9MGGiX9bT8NPjI
8Ccftp0M5LHmU7y1CfQDVa8dxrsYaN1INqkA7HOx1STblIHO9z56x70D5rlB
vNDEbgZ6YK1c4AIu7ncLVTRnoDhPr5MvwIEJqzljLBiojXZYWXQn9JPUFa4N
e+A8G1WQL/ho0bsxBSsG8srfrP4RfOlxwd9z1vD8Bg0rFHZRcOzqoe9vbRio
1uqvSQTYIHh4TmYvnP+r51Y94EYdje6j+xjI/rN6n6op9JuJ/D25+xnoSM81
+yiwQd6PyX92DDR3JejSF7BKVdgB44PwecZvm027Ib/Huyaz7RloY+r4i4vg
PfN2IgsOEN/MvHUj4AxXBT49RzgPGV1BTTN434G3m24cZiAN99V3E8AXnhTL
9DvBee65MD4IJlKPbtU/wkA+/fvvaZtT8FVXPJbmwkAh1jP2ieDW+OMuPa4M
dEzXaHgQ3PzGhWOrOwNlyw580LKAeWuZHxJxlIEyNSYS48DGDYLnXx2D+HmZ
uXeCs21NS8U8GahAIj9WeQ88v2Zz6SEvBsogp9wMBb9XkOmv9IZ8yvj1vRl8
niP1lpAPA13MqsUkSwoW07NX3O/LQLvzb+b4gT2jfvQ/PcFAJ/Qcld6Br8o0
HpnzYyC95Mxafiv4//zm8K0nIX/f7I5yBGsaZb5OCmCgsotclsXglxpVzZ8D
If5egyYL4H9aBZzqp6A/Ct3XtbCm4PVJY2tDgxkoKf370XQwW6dxUcVpqPfW
3pcj4PvKJ06KhDLQ3hbuRXUb6J89ExwOYQxks5e4cAa8/7paTUU4A1EuhFGb
wPYoXUjoDAO9LKkOkrKlYA1sq7X/LAP9eFzhdBTcaNN95lkkAxWTONeWgrVf
FqXNn4N58ENeYQl8ku+BybZoBpL0C48w2QvvH+QtkXIe+iHvaNQ1sNaWyDdd
MZAvmfzcveA3f50ua8UxUN/lIlX5fdDPyl0ZVy4w0JrxnviTYOP6MtmWeMiX
B0Jh5WDVic5QlUsMFP155+zK/TDfjuzI8b/MQLfMvYR2g70nI6dbExho6dy/
wlRwqdNgt3IiAwVnGUcNgjuUr1zxvcpAg+zX15LtKPgpF5f3xyQG+lO0ls0X
7K7fJiKYDPMp1rnkKXjs0JuDtikMpN8+V/kbLJcQ8vZRKgPtYecWMTgA5yUc
/Wc6jYF2fjUxOQde9cjukM0NBvJ93fS8AZy92cq2MJ2BZLOkg/kOwv7Emy5O
u8lAmkXGsjZgk/mHHLszoF8It8/fAJvp879NvM1AmzTfve8FbzieLtJ8h4Ga
5W7Nrren4EeF1KuKdxlI0SzNyBksZHS193gWA80HfL5+F7x1cml3YzbMx1Tn
2TGw/JkkG9I9Brod6VOq6AD7rUegott9BvpKnUr0APu5ycm/yWUgosjU5SG4
oUzmF3se5LPfcYdJ8KDEj29u+Qz0vC5PT+0Q9D+vrpOvC+B8s9lj/MFh/MKf
/hUykLORLlcxeKpeas/hIojXrLrzFFi/+9Sde48Y6K37rkVVR8i3tp8xo8Xg
r0vC3mCVft0UwycMlKJfziwEdxt+9o9+ykCmm/tJ38H42dZTw88g30YzuBUP
U3AwfxW/binEK7nS3QMcXZcWHv6cge5rfN+YAza/sm1tTxnUJ65MHQZPPlQ5
seEFAwlz3g+QcoL99LnRMccKBiql/e3bDz7XQsSWVTJQyb+s1hRw5PYDgf+9
ZKDfS9iqCaxXuy/+wGsGGmhfZ7HGGX6PZeb4ZFYx0L+k9i8mYFV34YnBNwwk
v074bwR4t67NJd0aBjL0MUqoAOt5Dv45+xbu90Kteho8+WBr6uA7Bqq4wmWj
doSCj7U+e6f9noE6tfT8vMAvbCLfhtYx0HDBjp1Z4PpR0YmueuhvM3UeX8BF
TX/7pT4wUFP0sLmgCwU756z2cmxkIAPX/tZd4OYLw5LlHxloRaNnYhRY6D13
5sInBtr69KdsOVhE6M9O+2YGklhrPzAFHjcXuPC0hYGkz6VoKblS8OX+09d/
tsJ8aIg8dRhMP1PwybId5rujWlMamHJapT3lM7zfnQ2ijWCJqJC/vzqg3n5t
8VzpRsEDp37U7OmC/N2x2kkHfOpt4b6kbgYKZK844ANulNFex+iB+a6UZHoP
PNMhdEOzj4HEFV7v7AIzgoTLg74wUHzkoz9c7hR8jzK01NIPjth/3QCsprYo
JDwI++VdXWs/cPCuUevArww0ohA9fB+cYM4gPg3BvlSbSfSCQ/J2N6wdgfo7
oHaT5yj8fhD2T/YeZaBcpfDPBuDMnm8qT8YY6M36i6YnwJMXohyZ4wxE/cUd
fQf8a9f3kt3fIT68yv6t4HbnO30JE7CP5t8o/Af2jZdWpP5gIO6B65fVj0G9
cE+ZqFOh3upJb13AG4LG5wNoDGQ0nVR7Fbx+KvdzMx3qWTzRsQY8+a7sjBAT
6tnr4iEmOCQ/2TJwCub1mvUjsh7Qr04nl32aZqAusYpNNmDOuyP0db8YyPaF
yOwZ8O+uJXOf3zC/N7aqF4NfHPMKfTbDQFx7D073gc2G5w1+zsL17wpd5PSk
4Js+e5X2zMM+ciA8TgtcZfV3NOk/uL5to6gL+K5x0HvmAgMpvVz77yrYkrTO
0HSRgcZ76l6+Bn8+OB97cYmBOtY1SU2ARbIe/R7/y0ChTiO1Il4UvBGVqKuw
MdFtT0UJDBb40M/lvYKJjk083O8FLnFrY69dyUQVlV/q08AqdqItnKuYqPQH
23wV2Nlevsadg4ncFx1sqGCv0rjoh5xMZJ0ddVLYm4K3L6z+QuViIhrn0ll9
cJe1g8MuHib6sNMl14P1+b//8i+vZqIzd9G9q2DPKndp6hom4lbNKaoEH/b8
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
v0dmrOen5/RaFHfYUSQ7fsDtEny+mu8hmz3yRdm6nmPwUZ/fhdfh9rsMMzu4
aYmPv6ED+gXPf8v14FCmRQMFc8ecsZaCpVPfRSY4ol5dXoTMeaFfn6hp37QX
r3955QTreXCo1abJIbid3amjEm7Z4RFy0Yki77JknmbDwV3jSRudKfLQrW84
FF6StErkC5zm9Ep+H7zgbe3K//ZRJNNsOIXA7jwUz0YXigTY1h6XhgsPPLPo
guuXn/WaO4T1YzW7MmY/Reb1tCZ3wd9duz3XuVLk7JFFbRVwl7d10CtYJuhf
dCaszq4sdtKNItF7xXxC4KNVRXIy7liv/pf8WM/bl3JfqmiBFf8mpGrDUgYC
jOAD2C/czmmKwvz5quMSHhRZbR48M+HJYDqlPbJthOP4vb68hdMe/JA9fBD9
p8lsuATeWJ/7YJEnnDITksCyy6svj+HgKi9pH3jFykxf+0NYrzzSE+aw39HW
pIVeFJlNnfi4Cr5JFcoWwgbp/yZ4YKazVJDFYYrYNxdc7juIfrKbdpmGyxt3
bKyBZUIO38/0pkjTNh+FbNhlpWW6hQ9F7tr84g6GFzXWmE3B55IPeNrCVy99
dsvwpcgGvzYJdThpyElomx9FlK5tqVwM+/tEKQ7D170jSwc9GMyHfUbcF/3x
+674qTXAdn1ux3UDKDL/pVX6dbhfcJ11F1wwJud0Gn733LEmJhD7b48/hx28
0kd6WusI1otIwzp12N0o8ko7bCPj8VQA5rhm0xp5FOtry3algQPYr1a/9FY6
hnxBTGeew356uZmf4EXi4tmZcKXR0rTIIIqUbmxuOQZPHFszs/I48qXdZ9+d
cIxa7tgHeGR/RvtqmE/i5fbgE9iPBU+UccO/J8OCJYIpohJZrtLjjv7jeEWr
AeZPfupaBnsNOzseCkG+lfshlgxP80SLSJxEXmsMPucFjy41Tq2DI7I+nTWC
327PDfc4RRHL3ZGLZOAlIn4coqHoJx6XDCbcGEx9zp6fj+FF6jd5WH/f86r/
W/qe0+gPXF0e+XCVjflX7jCKLDMo8g6D04YdL+bCcwZ7F9nDb/nbWnadocho
ho+JKhyg2PmJ4yxFIpeJS86HZz1iLG7AFzzvxH91ZTB/qF2z2RGOeUHqYfpD
+ImS87NxOOGnybY4eDjv7Isb55Dn5qTPu8GR0tpJ2yOwXiLNXHRh3qqUhlE4
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
hVPN3hYbwP8DZpcFgg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1:eJwk2nk8lF8XAHAhayp7QhEZSbYkSp2J7ITsKllalKyh0kZZkkJkabX8IolS
kr2QLUKZfVORiiiEUpb3TO9fPt/PPGaee+855577zCj7Bu8+yMvDw3NIkIeH
+/e4zv6NGzeSQEJcS09rnkD8U1xhtQ19My6KwvWFtUu8LdBPqptPaqPTVlZf
2YNO8d79Ugddxi/5+SJa7MFu243oEXprNhntsvbLQUP0oRit+Qh9Evx8sz/L
BO3ZO9detYkEhC8pP13RtRl6JeGGJNgrz5i5gG4XEtLi3UqC61fEfjxEhziu
7buwjQRZoo0TJPS1WjrLiEgCxZnregtoL4rmySYTEpQd7T9CWCAQC5bL+saY
keBCkBx1NzpB2SpqoyUJlpWJ7zqLluqX1620JkH/bbPWe2j55thNoXYkEGk6
erQH3e2STJ+1J0Gyn4nkL7RC/fsHp3eTIGKo/a0ijzpxwKytXceFBJM5MU8s
0K7n7OMr3UjAKQzLCUKb0gOvhXuSwDTs4INsdKcguUN1HwlG3GxaGtELn5n5
hftJcMZW5dcXdMmXE+1eviS4HbHEWHyROnFxdsWVrwdIoLvW89ZmNP1I4t2i
wyTYsiRGwAdtLl7Qt+coCf6I8iQkor39feo/HMP5W1yo8Rj980P50K1gEqw1
W/+OhtYTvv9MPYwER8J35cyhlwj2lxaFk2D+YWXSGl514n618kmvEySw2QNh
1mivKVXm51Mk6PL/dikYTRvUFCs4g/MnGZuWhf728EyQ63m8n9cFlS/QD5UD
gxgxJAi0KJQeQH+q+lmbFksCX2buPhE+deLrhZVFigkk8OQd7ddCWylcbrqV
SIIq0v0ru9GmnikaDldI4G/4n+wp9JDFJl1qMgly24O+3kYLuYXGpV0jgQav
fforNEl610ml6xg/byMvfUEbFYfdyMskQeLg4QIRfnWinPcGIY8buF5hxek6
6Hstl6T7b5FAbWMd2Qn9wDYqJO8uCYzzvr0/hbZ6UD7jlIfxObV2eQ46o+Kq
Mv0/EuzY8O1WI9pzYC4zrZAEU+P0r5/RnQ1LH656QIIe4ZYM4cU4P8cPj955
SILDI/kh69H7LF3POj3C8cuN8jmgU94MPmSWkWB9fcVCKHpLmKh6djkJomLr
SjLR0aMney2fk8A55HdsDTpsRYJ8ZxUJXksf7mah+w6sf3qxlgRFl9c2LKCn
vUO+iL0ggYFjPEFZQJ2YcM7maHcDCTaU8eiYoctDg+QvvCLBh+/LD/ujk6T0
AgRbSaAgEKOQiObQk4RetZPAzVviaAmaaRu/06GTBOPjJ7Z0ocMy2x+97SLB
HpW9JqPo2EV5hxLekkB+Jo+xTFCdaKKwsn4ZiQTT5ttntdGn3Nf5dFNI0Ooq
en832uZo9MZoOgkYxdnx4ejX60/e42ORIG1c7086unGpgF89hwRfly4ZrUAf
zNNvsPyA+Uf1PUlB3xN+aNPWT4IOxz07JtF70ytVzwySQN+TES0tpE5seHPg
Nu9XEgwedfDRR98lFPm8HMb5t1Z+4oIm6F1psRslwdUu78JwtK1ElVvPDxKU
3LzBTkMPS0ZtTpgggXSO/6lytH4Lu2L5FAn4tq5vfof+lUWJefuLBNo/7IMm
0C5EmTMX/5Dg3INSVwlhzJfsX1JCcyQ4YVE1pY0eEA/+27SA+c3Q+maPltya
EG3PS4bY8OZbgeg+oy8be/jJUL7/RPpl9BpPjn6cIBm+3qbTH6AlNMLJS0TI
IOZI+9iKPiOf19ixhAz8S110P6Nj+qU5p5eRYcZMt4VfBPPZY33WvDgZNr/b
t1YZvXecerdSigyOS+VeAfd1IxUzE1kyBAWk6+5F/+daKdcgR4bVfVajJ9DJ
GR+3hiuQ4bk8jZOBVo0tmZ1ZRYYvd27df4LWvy4m+lyZDMaWS3J60GNOy6pM
VclwRkY9/BvaYsg9vVmNDEL6lBsCoupE2VzDutPryED9EPBJBZ0uUH2RX5MM
VS3a0oBOTO7JfqVFhpSBB3570StHNrAjdMnQSJxcOIl2m9F8MbORDMFn1iSl
o8XUm0bLDfD6feLry9DBAr9rwYgMxRTnFx3oYzURVS+2kqF03qroE3ogJZE3
fDsZjqWY3OVZok4UkN7+7Q+RDPl9oqkr0fm1l5SrTMkQlfkg3gDN2Cwf729O
hmdaRu8c0XV+uxKHLckw5GatFICWeyLLzLchw9s4CIhHKz+Kea25C8c7pfIy
B/3fmxiBUQcylJx/JliLbmh4HZrrRAZWe9p9CjrxwNPTa13JsG+/vMd3dOc6
XdIHdzLY3nCeFhJTJ1bfdXgduIcMbyQfPlBGmwxVjo7uI4PDxk31Rmgzl4r9
97zJYFRfUu6EngxxCtH0I8M966b2ALTCo4Tu4YNkaNl/rToO/b6Bb89tfzJ0
VL0TzEHvuqgUvzqADC8fHTz7HL35MGmeHkiGzPN1LT3ozj9qMgdCyLBEhGb0
Bf3Xr2lPfxgZfMRNpebR977//J4ZQYbeqPIqmaXqxBn1ViXFkzh+Mb9rG9Bt
sVq5jCgyeE9/1jRH70jd/OLwWTJci1u9aB/aNfSSyNB5HJ/Z/Pbj6MHjwfdy
L2A8X/pikIRWUvvFXheH63FINCQPTZ6R8htKIEPqGZ691WiV/6Jkb18mg8Ad
6qO36FWz0UeVrpJBxjXf5jM6PVJRlJVChpGHO9Lm0M9yPa0Pp5HhUZgVQXKZ
OjEk933l5+tkSPgpq6mOLmj8E3Y7iwzRNybfbUfHpz1/o3ITx/u0ptsJ/TFW
KPzjbTKc1vQ4eBRNs823SsvB8Wj88Y9Gn2xm10vlk8Guacub6+j0faXnu+7h
etp6NhSjPQtXfXC7j/PVmLjiJfrmcrXkFcVkaB52/0NGRzhEHH1TgvFgHm87
jJ6Fg4OOj8lwNyVWdB495/CtVOwpGSp3K9pILlcnFotLSN96Roa1w7N/1dAT
96OL5SvJwButprYFXb4/7mpvNRk+BSi270IrtWks21NHBpp3/4APWtDhUJ/c
S8yfXMOQSHTioyFWZyN+/iXx45fRlXViJ+2byeAhHPH7NtprpM1HuI0MIt7+
g2XoJ51rhq+/xnju9/B4hc6JbsmVfEOGet0KWwr3/d3m77V3kyF+gnr3K3ol
h2Zh/44MO2tORf9B34+1MFxCJsP50QfVYuLqxJ5FC651VDLscD0brIT+T8tN
ajuDDN2rLtfrosfOmK2eZpHB31/Ncyd6KIrcfr6PDEuDA9Nd0HtvzryEj2TI
XbFIyh99NOXQ4MQArpdMulQUWlU//MGJzxjvgek1l9Fuf2Rr9YbI8Gsb9e5t
tEHI3oCX38iwJ3lesxRdVvvVCr7jeM9J7qxH31MXjZwaw/drzU7tRpuadRPP
/sR4uXM1pY/7+RcJHlunyVCT87TuB3p5VnvOyG+8XudPMI8ExpunSFzwXzLQ
5UL7lqGtoL9SfR7r6VrxMCV0N8kzsZyHAhKPXVq00d+3ySfq8lGAueT+/e3o
S69DqYOLKaCRvLtwF/d6/iNNAUIUuMxWD9yHvuoz/ZcgSgFKvrxVIPp3oCq5
QowClibPxk+j5+1vMg2WU8Dp4WPNy+hzToVa3yXw/QVHjt9AFws4KZ+QpkCB
gnfqfbQ9K8PHYAUFvMy7njxHp8Qpvf26kgJXI3t8W9Cn39twjilS4M7Wd+O9
6I+eYoYEJQocMqk98xE9EResW76GAm/kVw1/R9+Nl/PQW0uB3ONCY3/RzUUe
3V8IFGjdwTskLKlOzIza0h+kQYG6Q3xdMuiPgU9MNTdQoNu++7Yqus0ghMTW
pmD8OvHqoT0e9yzar0eBh8fv7dmOPmjVclZ2EwXUJsuybNCK6Xuy8zZT4B3f
ojdu6F3zCTy+WyiQ7FbHOoBeCbOZ0tsocNwtJTYUnaYt/uYmUKA9PlLrLDp2
R90uVxMKVN8sLU5EK/MJhQzspMD35EjNDLTnzVsv/SwowLiy2yEXvcSpZe9K
awpUyt3aVoI+WpuSnW+L7z+6xKgSvcNsTNnHngI6f29PN6Gf3ctmSOymwJnC
IKdudG/5R+1MZwrQgze30bn//6mBZO9Ggc9rFk8OoB81E2VYHhR4tc7c+Dv6
apRQgsdeCmhuatT8jR50PGS2dD8FBof2d/FKYX7QD+Rf96GAxR2BtCXowzEz
to4HKJBgHbsgg77G0Mp8f4gC8UFXMpTQroIlYj5HKKC8SZ22Dn3d9WXvimMU
UDxcUrURfc7luEF+EMbT3z2dxuj+iPovPqG4XsdvR5qjPwbYt0mFU4C/92aH
PTpJ/ILZjUgKkI1vu7ujH9OtxZ1PUUA0WTjSB33e/tnpD6cpULbq77sj6OFb
B6W8z+H1UyXvQ9HdwqV/pGMocKCLczwK7UXIOH/nIgVun9a1v4D2PyS5e088
BQg/Sh9cRoudZuxekkiBxbzS5Wnc64E4kZyEnxcWvuQmWn3ttvcWyRTYupTB
ykPfrWEe7U2lwHXJ5wtF3Ptb26DqkI7r3XGW9Ri95elWTf5MCkhu3q9aiQ79
7tabmE0BqUSXjnq0sq1Iq9ktCrwOXU5tRp/12OdOukOBlvZDpp3ocOPfK5xz
cb2s+Y69Qw8S1xFE/6PAb8WAcRp60dQfUnoBxkey7EcOOqvDt3t3EQUKx7TU
PqHbIyR+8T+kQN+apyrD6IK3vi8ulVKg65Dn9R/ov7ZWJJMyHK/aNscp9NzJ
t/HdT3H+Ujri/qBvRuX421VQwHCq+/QC+skd/mzeKgrUpEhX8Evj/YWIHEqs
wfE4PQoSRpcdKIwxr8f1KFl3YCk6Qety5/RLCuTF71ghiRYpWvrsZBMFfsVc
dpFFC5quG9ZpocCIU3yLPPrx1U8vatow35YavlqNfjez6WNUBwWCQ3VHVNDJ
W3t0tbooYDKnQSOgf2kKK5f3YH5ntbqvRzOAsS+olwLbHgfMaqEP81ob/SVT
wMZr+1Y9dOpNXtPTNArE7FA324Te6Ox4U5dJgc4qaX9D9IV6Ymo1mwI7hD5p
bUVbW7aSTrzHfFhlI7gdXVqUbraunwIqb4buE9F1VYtcSz5R4FSA85QJ2mx4
8bODXygQ+kXOxgwd1VlcNjZEgeXmBrstuO93IYsVNIL5Jp2rYYVO91zprPID
72fdfl4b9KX+bQEPxjF+3AjXbbnjS/rVc3CSAve0mYq70OKDjqSf0xRY+Ek4
ZI9ulZzkj5ihQIbQ2osO6Ck/zVjNWQpsOf872RE92fZfkQE66Gdy2j+vl+8i
oiOXq2RyPfFTWMYFPb9z5x2uxy5+uX8W3Zd19CHXI//ld3aj13wyb+O6f2CF
ZOgcBZzFt89x/dZvcX7FPAVupan57ka7KJXnNKBfHD58kGsm2/tOJ1rkbIE/
14Muddkf0ZL+csFc/7E4niK2gPUPPpzmeq3mxzMH0TZTQ9e5jpqsc5PmoQIp
ZLSZ64Wyoy5K6EVW1DauYwNXOK1Hb/ap6+A65fPxXTvQlY7Rb7m+R9cwC0QP
6X1hcd1Tl63Xwr1+SmeCa9W4cLGIRVQ4FfZMwQnN48OinUdnuhmt5pptbJJ/
GS2cWavMdfrkss256JFVVWpc8x546N2Jvup9TYfrDyb95cq8VDiU32zK9W0e
B89udI+clj/XJ9nPVRnoLoLXUa6dqxR/DKAXpSQd41o05NvFGfSSI30hXEe9
jy9V5aNCms2BU1y7v6jnOY0+/3oskWvJM+vvE/ipYJS/5AHXj5hLqnTRl3ja
i7m2NPrevhW9bHlMCddnpsuG7dHtJiOPuf4cYqB1Et0xXfic65qDOyra0T7Z
pa+49rZ3e3VkMRWO1C2wuP5Takg+jj5MDOVwnbFk5eBZdFzEhz6uO16zBdLQ
a35WfuRaf6evdQ26cavNF64FjQLfiQhQ4esivol/97vm4vuH6KC9lYud0d2M
m6+fo0mkXwJcf099Wt6IDri+SYhr7YWPCTS0/niRCNdlLKIOnyAVBOSCl3Fd
fn0+2hNNUjq1gmuyjUzAQfScRrIc15O8Wi4haJtzuSu51g/dty4ebc9Tr8D1
c7u6d0/QjFCKEtdVAlFrhIWosFIkVp1rev21JVJo0cLAdVzPhD+YXoVenuSs
wfWWAXqHPnq3zkpNrmtfbj7ujb7xJVab6xcnp15Vot2F6Ju47tMWe9SEFt+U
acD1/GfV7C50d7HjZq7BxfnYANohtMGQ6wbdcqllwvj/R89u5frVcMjBQ+hb
ohFErvNV+TJD0BGr5//5gldGaxT6PCV2B9fE3mpCClpJPcmE67pq3uFKdMzh
0zu5vvXz+somdOuV8X+O2kCweYPe5HzQjGvDPJuSD+grr83MuX526XqQsAjO
x65hC67DZqt6FNFq+x5Zcq0TwtHRQ3dM+lv9W8+BRWnm6AmpldZcl7ip/fRE
Z9Y3/vPRTmvnYHTZ9/02XKtDcMVF9JaiyX++p1Z1ogR98dkiO66Vli7aQkFv
7f/6z7enrGbn0Dq6xbu4XsFJe6EmSgXNPDN7rq83s6Lt0bO6tf98JT1wcR7a
rELfgetY34XECfTRapl/9mzTPL9yCa7v07f/rtfR9Aw3QbeaHvpngWsJR46i
9wbR/n0ea+qZVxo6R1f1n82LbDwK0cdH6v7dX5lnv1MNev9V23+WFzu1qxvt
JUWy5Tr+5TKrfvTRGId/Hg8tNJ1GnyE3/xv/XtVt20XEqJAipvPPeolHN+qh
7+h++ze/d7Yu0jJHJyls/Weh71nqnmif0Zh/69G3u0XxAvohcfLf+lkt3rsi
Ey3xavX/17NyQqIYbbXe5N96JyooCfWiRUoDTP/Fb0TAYjZafN/Yv/iZ7H7O
+xl9qTXsn71i7OZm0HUtIf/iTf9z1ITyUipoRTgC1x8eU9ih6KSsgi3/4s3H
rfwM93W930Zcu0oyEhPQAqst/7krkm1wB+3w4/2/fKjZNpDajtY5+kOf64zO
sZ2rl1HBvP2qFtcOZ8PkNdAv4io2cL1Ee3JcH70ng/kvHy+k/bprjZ4vVljP
dYjH/O8INPlxNIFr6y+ipW/QnFXtq/+t742rF2no9fPNq7hutF7m2Y9O0X6p
+C8fHkkI/kZfu/RQnuu1EXI+Ksux/ksekOWah48gHYUOT3JeynXFKpOzBHGM
x3m9P9z6p+O0/aYuWtZ0/DfXxQlbKreiC/RKf3F9d0xv3B79QHzVFNfxTSoH
T6J1ewZ+cO16aLHda/R1i4VPXE+XtisESGC9I0R2cR3S32wUga59OdTJ9bBM
o+t5NB/vng6u+85Xp6aj18cbtHHd6ljMXyfBzf93DVxnTiWNLJHE+0/LKufa
YJt93SM0T5Rf1j93xDytRo++PJDxz27PiprRby380v85VC6DiQ5TdE/554KB
QAEpKgh+UErgepPYydVe6IxGrch/+wUn94KYNBVmvm/d/c9HSSdXoFNDB+3/
+dfiYBX0301X7P5ZPGCPEdo69p0l1xvNNukfRD802Apc65W+HqxDZ41fXs+1
7tkJy2MyuD9UyfNyfWldn+gJ9An+qAVuP9BHed0dg972kDLL9WWtPOcs9DqR
uF9cf3pv792EPijWPMJ1pknpiRWyVMhWf0XlelbQv7AZPVfcUsR1WxqHT1GO
CheKWDu5ZjeaihHQ0smvd3A9MfZARhf9UK1iO9cK9pHrzNCskDhDrkNEl9kH
og2OiGhyvSKWeLMerTJUIMG1f8R/Ol4rsZ9RUunj9mPC7kf25chjfGw3COK6
eXsSv/sq3O+sOvdw+8P1FDvrfiUquGhf0ef2j6JXCzn5KlTwDufvsEMnrLTI
cVWjQv3A9y3c/vOR26UFljrOb6NIrjXa/vn+0qz1OF+OMVWW3HrbTJtR1cJ8
fdr42pxbP4uywgt0qFDy+97LnejB0lHjvRupEPrmxX5ufzzh++m/T5uoYLcp
eBG3fz5lFOr+nyEVoqJ7zbZx68Gg2VaXrZjP7qMBW9BHdtTW0bdR4V3ovdub
ufXzRWtSGpEKnl1lh/TR/30Lm1E0pULb63HQ5a7v90MZt82osFRInp/b/xtJ
jJ9ztMR8jw9310CPDMoL0q2pMBDd06yGlmOx2dftqPDLilq9Bv2xYPDDTges
dzsYmaukuf1sysXW3VRYXDlwfSXapK77+DkXKhiv2yohw633go95hdxxP8nQ
qxDn7m/ha9+3eWK8Nwz2LOHOT+XAUNQ+3K9O8FEFufn5wCR9YT8VVKspInzo
1/WbL9f4UkFoeLJ0Ds9XljFdqy0OYnxc94/9jfZd+XCg9TBefzfe/id6mrxq
6sxRXM/LtedH0QawsYA/EPevMqWRL+gfHZz8pmDsJ21Enn9Em2q+7T4exl3P
h6Esrrf53ZgOx3yVTQ+joOuDrzx5fIIK27clt3Vzz+OOrv5boqhgaxF8qB2d
L+xvV3WGCuU0S54mNLt/WfSx81jvy+c/1aCbAtwdJ2Kwv5yPVHjGPc/KbA55
FIvjbd6cVYLWDHm+wTiBCjIM3yMF6N6cs3L1iVhvrKaM7kpx45+5O/wK7t92
l3Zmol+M0zXmkqlQyBf6OBnNJxXoUHeNCn1bqm3j0QOiVveCrlMhkhI8eBYd
XN6SOZFJBct7eV8i0BFn6NSSG5g/Q48lAtFqU0kVhrexH+N8fHgAfdw0oany
Lt6/AslqL9qofIViYB7ufz2ugk7oh73WMpP/YT2lDW+1RmdKSu57UojzGxZ0
iYhW1FDp9XlAhRbjSqoB2n6MNDjwkAoLgZsLNnDP07SVFrcfUYFWrHxBBe0U
zGuh9oQKUhdHBuTQqurR1z+X437DDrFdhk59brb85nMqnEvVq+FHF00+1Fhd
jfkVJPr8jyT2k85FacxajK9Ngo9/oE/6md04/IIKv606twyiHS01ur80YP88
pkVhov/bVeBw9xXWdwV3vx50Hn9jqForzv9Oi6vNaDl22IdP7VQIWWf1XxVa
M/HY2cxOKvgfHmrmPm8aHhSoluumgq/JpaQ89JoDm01Ib6nANMrV5z6vEkgT
OupFwvgZ9U/gPs+Ky1BuYFOw/m3Q/8F93nW25q3fNTrGC3GFDvd5mHKKUqEs
C/u9phKVg2iIEzAgc7Bf5Nz7yn2eJrz+6gHfD1SoyhY8yH3eFlS4p3Ggnwqr
Fj7PcJ/H2Zo2BNwaxPz2qHLVRVNTWp6pfsX9jMYXzn2ex5zztvk0jOe7T2cd
uc/7Tu3YuTxrlAryvwJ2CqGb9duPy4/h/qm5ehH3eeElq35V6gQVmh12h49w
n2+K3Qn3naLChiUCz/vQfEU5Ex9/4Xrcvyfzjnu9n+GLrD+438jvUm1CV3WH
qq+ew/nWviz8DO27Z8cH9gLGf4/I9Xvo+/XurVd5abBa8tiWDHR2z3Kb5Ytp
sOFdaWM8mpdvv+JrQRpE3475FIle8dku2UmEBvnVEyOH0UXDvbZSYjQonlNK
dEOTmnOM2pfRQIFevtOC+3x1l1iLnQQNEg6a/NiM/jOz/K6wNA2uebxWIaCn
nSuks2RpcMpG3FaW+zw3Lq9WdiUNXuyxvCPIfX5KU3ncrUCDcspI0LQ49rcM
8x1uq2nwtujEts/o1NkFJZk1+P93s2LJaJ8pHu12VRpcirw+3oTuu5PPsiHg
54cwDjxFkw8zKYs1aNDqOmyei478+DTomiYNtF1E9FPQ5TqkTcu1aSArleFw
jvs8PS/RukWXBr4n9/YGoLsaP8zZ6NOgOm+Pvyf6AV/3vNBmGhik1O6xQCvJ
82lVG9HglkrYaX3u8/J++t8txjSYmGipWoP+0LFT9ud2GuxPK7Fahl7n5/ju
zA4a3NedmZ1drk78pjBJN95Jg9+XR/9yvz+wLOlbOmZOg9nMVxrc7xccvx0Z
CLfC160i45qWc8+LSYt1bGmgWP9D+RGad69da90uGvQdlP1xE925w63C2JEG
fj2vphLQS61+jU840eDThlT94+i5hc1dUa40sNliWboffZC+dNrQgwbfl+i6
WqP94zfYDe+hQf9UzKZNaNlPIyaBXjT4e9zIXRlN9DOJV/OhwQWfrXmiaOk0
Q/8nfjTQu3JC79cyzLfMyJPah2gQJ/aKbwAdVGdNHfCnQZBg6fgbNF/ay94j
ATTwYkvoVqElEjsU1IJoMF2oEpeH7tKOXPwshAZzX65oX0GrlBxR2HScBjJy
GYon0BNWP6NHIjCeJi/JeKMDsxRjI07SgHRMPdga7SPQR9Y/TQO3nWUdeuhx
689OX87SQPPEk0PyaE1ICQ2IpoFU4o+Axdzvu5y72Wsv4vxulTk6uhT3z5WP
Pj+Jw/fvcadS0dsrKKt0L2F8P+m90rCU+3uC9HufL9OgRT5Er4j7fR1nvD3w
Kg2qLGLsr6GDAz5vWZ9Kgxl6qdNJdEH3GhYrjQb6r4bu7kcnfFyQ88rA+O3V
DrBE90sfL5TJpkHpliQpbfTQTPy73Js0CHHpNZVFH13Qsfa5QwM7DxnLOTHs
r5lrxqVyaaDEx581gLY7WGFwM58GjWvjIzrRyeJ9r10KaCDxYnjVE/TpwPt/
++/TYLShe282mi+nao9fMQ3ubdX7cR7NP7FfeGUpDQ4VZ5scRD+ZvO+S/5gG
bW9GN9qi6Svif3g/pYHPcvU+HfRNiZJKiQoaeEAZQxotVBe2KrOSBskPKGdm
l+D+Ht/Ta19DgyMtL7o/oC8s6lrLqsPrv+l1taLLHCXue7ykwaZLb9VK0e6v
RiOWNtHgc5rN2mvokk9HBq4308AqtZURiT5FOHPXsQ3zOe6vhid6Qk779/vX
NHjYRdgM3O+3+9dF+7yhwciGVfmq6OudNS5yPbj+CaQcQXTXgZHX+e9oUMES
9B0RVSdGr36W5EumgUlL66NudPfjV6elaTTYS5Rye4Ju/3Fc5CaDBhreRV0Z
6K2ONZ+d2Rh/axObT6A9ffN8Pvbh/Kx+mLwHLWX1VsTnIw34ax1ecL/ft3TM
WCT7iQaLLhMPKKPVhf9m3v1MgzsnFz7zi3J/vzB9au8QDc7xdtMGRbAfuLYl
SWyEBq7PP2q0oaXHVm1N/U6DzKG0A8Vo7ZAbhlbjNDjWLMabhJ7KeUYm/cT8
F1ZNCkS7FsjmOE7TYMrwdLQDWufN8srFMzQQZV3r0UE/zy8OTPqL8+lNl5RE
V9xkhlrM0+CuxZ0HE8LqRG+Th1IUHjr4T94wIqMLX74adOGjg+e9C0bP0Ye8
wvjFBOiws+91dAa6t6SxMUOIDqIfxjoj0ZUK9984i9LhzGMVVxf0Zl/yYsGl
dHjkN2Orj/Zzy+dcXk6HwnXZjtJo4SABPjNJOmjY9V3+KaRO3KMv2vZWmg77
ZWaoJLTlW7dq+xV0CKB13XiGfnR1ywy/PB325igncH+v0vCnnpakSIdPVjOp
YdzfsyTS+KyU8PM2TNfZo4+PGnrNrKFDSY733g1o80Vb3U6vpcO+KVgjhk4z
IN3ZqI7X/6EuDAni+Ul+ycV6DTpkOU0IvUb/VWZVnN1AB2FzD+UCtOD8uIyu
Dh0Opn4qi0G/THwg81yPDj11MxHe6HGDX36hm+iQiGd+Y3RP+qD9/GY6bNV2
3bkSbdkqf/TcFjpQA7Q6fgtgv7Ty6zv9bXQoJsVZk9F0RRd6HdBhpa/tsqfo
MRN3zdMmdHB1WtV6Bf3ftv8eaZrRIenC2J/DaN6vyT2PLeiALcY57u+bmOXL
tx+xpkPYpiVDq9Fe2httJm3p8Pn98fuzi7Hfib4TH2aP67kg+52Blvl5Zxlh
Nx0Y6V/En6E9pWFzqTMdHouppaeiV3hElhxxw/s3lBo6gr5gu6vhlwcdSKtv
5pmhE6SDeE/txfE0KHxWRi/mUU3T2U8Haf3Pk3/4MV5vRjVU+9Ch86d2CBVN
cjlsfOoAHT7U6JY+Qkt8ufV5/WE60MPfhCWg5wih2mVH6HDjjuRjX7TPZXbL
0WN0+O3um78FHXr765/pIDqwpy6LS6MVYo29IkPpEOF0X3KMT52446raMs1w
HP9ft6Y2tIT5E6/ySDo0S5Cn89B7lXr/hpyiw3E+u56T3OvfbmlTPkOH2BnH
zQ7oXu2duvfO0WFY1F1bA80uG/i6NwbnPyCngQed9lEFvlykg6zKyi8MXjxP
bPzTfz+eDqmL1t99jL66Z0XFnkQ6nL18/Wscmn8jbe3HJDqo6Z3t9eLlfp+h
+el2Mh1Cawkm+uhUsvIOjWs4/5+SXZeg23bvf1OcToe8/NdCg4uwf57QK/DJ
pENMtrZBDZqy477CcDbGywY/iTT0w6dPPhbdokPuaTGfQ2iFGT6K5106WFJk
rLeijX5MH+rLpUP3N9MRCfRbgWjz7P8wXs4ITn/mwfnpftCsUkgH+7O6L+rR
Y0flQ/OL6FBLhvUZaIt1KgFuD3E+3Eym/NHWWZ18faV08D7amgDoVjWR4Ztl
dJg6Fx0kgeYkpc5bl9NhHU/h9OACgZibW/nkTQUd0gdLHevQHGr409gqjD/t
halkdGtdr+PSWjrcG48KO4BWb27d3l1Ph+/WgdoG6LV5vJ4xDXRw9y+4JsT9
/emG95ICr+gw9uM8lTNPII6zHOUbW+gwkdjh8BjdYHSw0a6dDoIBouUX0RqB
DRldHXTY9tioxR0t1vSk8mIXHbSGlvFqoG+3mp4UfYvzt1ZOd36OQCwYCYh/
3UuHq8qjMd1oq6+spigKHcKHCOdz0NnpI3fmaHQwM5A7dRzt453e+pxJh7nA
xkRTNJXNvLqDg/lDO3VbBv1Z6+jFl+9xPDa2h4ZnCcTg/JTW4/100L3BY1yD
vtfiUjTziQ4f1cVWXUU7iTylVXyhw99bknx70Y/mHxWYDtNBnJ8+s4F7ffvP
vOYROtwdvfOQBy35rPvb6R908HMKcun5SyBq2VuT+SfocMx5r3we+pXoXpHm
SYxXV7e3QeifdyqCIn/RgSn80ngbuuf949A/M3Q4OvCtZyla1ZTY9GyWDtFq
Q+bsPzj/rqFPiAt0qI+VHS5BN24f7n65iAHvfS/bn0PTLGeMIvgZIOD+9qoN
Opv3gemsAAMumZTzKqBJnO83q4UZ4Lvd2+LrDIH4IPmM0tElDEivr7SuQK//
UbxzZCkDRG96p8Sh1UKDn98TZ8C7jZeyHdFd+eRWLSkGKN04/lUJ/X2qR/WH
DAMkvV78/PabQCxeJfkkX44Bi2uLGivREr+mWQQFBlwD1Y/x6J9jIc4DqxhQ
/TKrzBEdfTMpIESZAXVX5Gmr0UVy38vGVBgwqrit8/svAtG65rPpfTUG8Epp
H6hGZ4lER2ivYwCjockrAe115vHk6HoGSEv/nXRAN7xSy8/RYsCtTwQXeXR3
zfbva3QZoJP1TnlomkB0IY0ksDcyYHNT0bmn6Eu3tjYcNmBAztAFu/NoV6Ne
tc+GON6cfeO26Lu/55k3tzLgLklrpQw67fCbDcrbGXB+Ju9l/xSBuPBLu5tD
ZMD9VaQPxegVhvpix0wZoGttFBuJfmMXHTVqxoCkd/d4TNF/Yn03FVgyIOZd
1KgImhwwmKxlw4AzltsPUycJREL4/Kbvdgxw81OwvIOW3r1fNM+Bgf23+fwB
9OP33ufXOjFAlupjq4N+lfyb+MGFARv6J6amfxKIF0Z18o65MyDMd9m2RjRb
+Yn2iCeOf7bkwBV02Yk20fx9DJgN28vejdY5ey5+nTcD9J29ZhXQ6+517vri
y4CsbCm//gkCsT7X2yz7IAPIj68UFqHnbDOZK/0ZkD185E4YunKlbz3pKAO6
95j1bEYrZndv9wrE+NBQr+FBr/p24TsrmAE/FcSvdoxjPO7v+pYSxgBT+4sp
KegXF6sSpCMYsLun18Ud7fXaKPTdCVxfQaKJAvrBiz0zXlEMGPHb8ntgjEBM
TWx5/P4MA26a7L5Zgh6LaCnPPM+AqIFJ1xD0rPgh19UXGLDgKP11Mzqm57Z5
XywD8sKNL//5QSDm+8ofTE1gQEZ3mdQLdFDBljVSl3G8dR/OxaGfCY9pdl9h
QONxne8W6EJFc6pHCgOW9/w0WYreKPiplH6NAVVe4UmU7wSikcQK0tXrDLiQ
G9yVhf72ZiRTKgvj3eD9wj607AO3onc3GGAWZLBmNbrPU+RrzG2cn8/H9T+O
EoiOdfta+XIYwGMbbnIfvQ0sJmrzGLDPylffH00JfVdndo8Bgy9JhA3oLy3j
5MX3GZC7OX5qZIRAvP7DQ776AeaTh1llKXqk3ZdnewkDBn5MxIWhX7xatHHm
EQNOH2hbo4c2DtrBH/+EAY+sPXqnvmE+fG/nE3iGrz/JiKlBf0n57FD3nAE/
7JR/nkKv/XjPeGc1xs+PrAvb0BynmQjeOgZQ1uV1/B3G+LmdwSl/gfF6M2Bp
LVr7eu+AQSO+znv39Dn0/dKCzWOvGBASpZ9hjO6MlNM43cqA1b9E+uaHCMTL
0hTrmXbM77u7tZrQryhq1aWdDPBskFgdjS4yk2vd2M2AzNW7rU3QArQ8pbG3
DGj+aLxk4SuBuHxFp9w5EgO8n15d2oCu0DLesUBhwMvMywoX0ORDps+f0xmQ
eFOtYjv67q5vr4HFAMuvsTcWvhCI/W7r1i9wGOASc3O+Bt1o8LjmyQcGJHfs
DziBtm2hfN00wICL569rG6IdItIOjA3ieFzl/X9+JhB5KD/OnfnKgEhp3vmn
aBuRjLa/wwyodTl1/zh6uc/bfU9GGTBnoFythY45XJJmOMaAI8uyN34fJBAD
UlZJT08w4Kyy+ZIi9NgVekvhFAMMr0RP+qKVt2yUXvcb63enteMa9Bsh1acf
/+D81b9dYH0iENckVIwGzDFg8ucH9ZvoCTVOpCYPE75kZ93Yjd5321brAy8T
kq+sXbUEHd64N/bgYiZQ4hTXdQwQiPxCfOrKQkzY76wYfAFNnLc6+kgE/9/+
2g5Ay3bQmVpiTLB+ObZxrp9A9K+cyx5cxoSWrjnnCvRB51dTgRJM4NmrtDQM
zZJYnaspzQShy+3f1NEjhU0n+2SZ8OKw6eCHj5jPwwJjPiuZ0Hy1/cId9Af7
j8/kFfH6zwqGzuhXB/auuL8a3986NWsZeof96uK1a5jQWbew6s0HAtFwz8lE
pioTlPvfPLmAZsmECfoQmLBTPPjPNvTvn4tIihpMyHyycefP97gfROttK9Fk
AnXjhFUpWmWgmLJBmwl2z5ed8UfzHK6uHdRlgmVATb4iOvGmPzFYnwkzt/Sv
0foIxKQfpRLam5nw/NzAkSS0+sqtkv1GTHBf8+ooER066f/0kDET1ojegT8c
AlF/TDNHGZhgNFg5Xor+79Y1jUc7cH405s4eQpcqbP+0YScT/tqRtiuhdV5G
fxswZ8Iud+O3JDaBuF/8wLUAKyY8OlprcQUtFMeJXWeL8+XtHbcdbdt9t5C5
iwmhw14/x1mYz208h/c5MsHEocKpGF3w8Xe4jDMTNjarBO5F1zy8ppznygQi
a+15SfRRm7DZVR5MoA/+7upkYv1YMqRK2sOEyXCF12fRR87yjLh7MWFomNKu
j65a9ohH2ocJ67r2HR1kEIjljrPl+X5MINm3y9xCWx1Jy1A5xISfIdH8u9Hu
+S+amf5MMC2VS+BFSyYlpfkFMGGzSrVSFZ1AtMz4XromiAkh5dk7D6NXRNz4
RQ5hQtilEwWy6Ov8g+/djzPhtil9XRcN16OiVVoykglbLq5bfwatIWM1fPck
E+abXFx10IdsJUcVTzPB0WZj5yCVQFS4d3wb6SzGz8Dvx9fRZx+Ga3pG43rp
Ujos0e5k0SOyF5nwR7HfepqC/UHvMKktjgm3pC2XF6DHoo9yrC4xIaXQY4UH
OskhWp83iQn8NdonBdC9PQYaV64yYY+xrHI1mUBMD7kYaJuK83Phm8xB9I/P
su8X0piwyee+qwT61xK7H7EZTDilv2GkmUQgnnReYUfMZsKlXyKNIegCm1ir
rptM8MnVmFBGB64wDLe7wwSxdOUoci/u9wIXRvhymfAxX0U/Gn3n3jG+K/lM
yK9976qL5j8weti6gAnbHCtzWe+wPs5U/Pl7nwmyPFPGCehn21Zrni9mwqvl
DbsM0ez/Vj00LGVCf/DPU/1v8f2rX7S/esyExEdGymloxYJCKZOnuP5dYwRT
9OKnqo+mn+H8PC/YMtpDIN4IMv18ppIJ5wR4qLfRhba/A4xqmFA/YR9mht7P
tEttq2PCSyfOnZ/dGC/bvvVbvmSC65NLG/5DxzStusjThPGWmlFmg/47PdGY
2MyEJ9OZPTNd2E/a7ttl1cYE8+Ieai76zMllwrOvmcCUv7XNCv3cydc3+g0T
qk8G2/16g/HsYCO8tYcJnvSzm++iX8+Sd7W9Y0JE9tZ31ujmc4VN5mQmBHbQ
ab87sX6sWRo7S8X4t5ktzkG7R8h8usjAeHXM32KLHh96dm0HmwmHnS8njXdg
/6t/K3CijwkPBGt3ZqMFtNZ8Df/IhKqZnLadaG8rKNvwiQnDgUVzQ68xHqXm
ZKo+M8H+8Er+DPQgj2PnySEmKP2weGqIXmgaKdUcYYJa2LkuTjuB2KK/Tvvp
dyZs9TrRegm9uP3vXOA4EzKOfHDXRI+LBAf8/cmEYiFKD6UN40dFQ/DMNBPk
Xh5ojOZ63+kxvRmMz0q/7apoVYvAk7V/mbAhdHFpVyv2z7un7KLmmRD1OO1W
MFp0Y4uj5iIW2CwS4pFEn3i1afIxHwvMNbL96lpwv4gw/nREgAUBKwoMvdA/
qANhU0Is2NlRICmAVlhK0g4XZcHYBmLY42YCsemQ+5Z1S1kQN7hR3xEtFXxu
4PFyFiiYOwrPvML6nr2FeUySBbXFBIMbaIvs7QsKMiwwVKV/3IL2tBhouruC
Bd9DrB/1N+H5THYV2VWeBaLP+l9dQK/Knrn4QZEFbiNrF61DvzUKiMlVYgH9
W/vptkaM1yeqpU4qLDCuVIs6jJahnztBX8sC3/XjpWLoS0rBKenqeH9J7stL
GjBeV/CYK61nQXWXxmMH9P7PdI3cDSwoXf7s/fRL7O8pFvtcdVjgXu+nk4EO
CXfT6tNjwV7XuQ4jdLv+nO3tTXh9E/0U9QWBWNsxfMPOkAV5slcrwtGey0/F
vd3Cgi/qy6zk0GEn7rxI3MaCwNShjxX1BKJBsm+mFBH/f10ewx2dERV8O82E
BSOuDsfm6rAfvSQxZm6G6xNdO3UD/dPMtf+NBQu2R9/7ZoweV9VZk2jNgmN5
Zm9otQTirfJiHlk7FsRXJSqdQn+QDRTLtmeBK+WNlAI6507LYfvdLEh4/efT
8xoCUZj0wpvujO+3JMvAHT26btf9LDcWjG6dcBuvJhCPua5VsPZkgVDoLqkr
6Cy9O9rde1ng/9TGewN6q87D1Ev7WWAq3nystQrrI8cjVcqXBYdGpZYfQkd6
O7xIP8CCXUGUvYJoFj/HyOowC/jPyu/JrcR+wF3E+e0RFjQrrJsHdGR3V+3V
Y7ieK4PNac9xPHIMx+3BLFAXXbExBH1MKi6+IZQF9lkfepehK3XahE6Fs8Ds
2HGh+xV4Hp99sI7vBAuOEkJ+70SvGl6T/eoUC0wGX4Yyn+F5pnRA/8QZHN/t
lOuh6A+rzUJmz7FAkWgfvQwt/sx4pjKGBSv/ezF4rxzn4xdZySyWBdTU8/I7
0AfEKyJb4lnwMuSi8Pun2C/brl95JpEFOzYP+ISjJwxM9vJfYcFxX2r2crSQ
6Y9vTcks2Pzq8oZ7TwjEatVPD8KvseDrf7sjjNAyz08J/E5nQcyNPcWUMvw8
/4KyJ5ksIEe7bDiCDukMnTG+wYJl6gIFfOhkvviQ2lsskN9X0ZfzGPvxfTqb
Qu6yoDGJ4roR7X/odPZ0LgvOhUr3dj3C16/ttSr/jwUyWoLn96OvBvRl7yhk
gaVdocHvUgLxmnyRzKsiXL/hqxVp6KWjgv1RD1nQyw5xVUVvDhKy5X/EgsnY
G8vrSwhExvIcvuYyHF/Vu/e2aNnEs0OR5SwYj58P6XuI/dOT2cC/FSyQMzyp
cQLt90ec+LwKxx/U8VUAHfazrcyklgUzF5bQ7hRj/WhqsW+qx/H2Xco0QMNT
D+OTDSw4YvLbuvUB3s/u5LaFJpyvMLnt+9Bukh659S0sWCwpL/etCOOvOOB+
UDsLpL6Mv4xCd46tshvvwPheXfpMHE129ycWd7GgPvRDdM597B9Cdvfqv8X8
lX6Sr49m7ItNe9qL8XCyPaezEPuzY7a5hygYnwomBzzQK9ZX2I7QWHCbZHb1
ewGBKCj6zLyIifFJDA2JQuffdHq/iYP5ajbzUgxNX9hS+Pw9C3yebBvLv0cg
JsRX1QT2s2B1vkeHFrq/jho4/YkFv0PHVzf9h/ErlRRU8YUF205Mi9uiCSYJ
dw4PsyDYZv17Wj6BaLpaNeDbCNoweHMAmq7oFl/wgwUNJEv5qTwCUe6NBlF3
Auupj3xaPHrK3ly9bJIF2krjP+XQNlO/9h38hfWTQn/7Xy6BaGdtrTcyw4I6
NwGHTej2Bj3nB7MY7z/LjOtz8Dy6xO+exwILrpi9XGqBzhXST2ctYsOAJjWN
fhf7hbW3etL52UBO3XvcG/1qIr9YUZANi4+Nio3dwf3mI5HEEWaDUZzarwi0
UoGaxrUlbHjs79g5dxs/b0Xpapll+Pqm6CNX0UOlr33fibOh9aOwmST6+UT8
Ti8pNrQsq5jIvYX5K3bFuU+GDZv6r9zSQfNYEZ5el2PDU/+2kOc3MR/0/R4p
KLCh/jeFsBOdsWPTb+YqNkDu7rm2Gxi/qvYhV5Tx/XV12+3Qcc+FE5apsqG8
b1kcKxvn46jnt3Y1Nsjfouzaj27osvnutI4N+/N6Jb5lEYg9AnGre9ezISwj
h30S7ebjfDdeiw0JvWvyZzOx3gU01y7RZYPmh8bQS2jDrA611xvZ8Ij9U0sE
fS0sVMfNgA12QRnz6Rn4+Sre/nRDvL+FLsZq9M+pT6MpW9lwahXhWt51AlHs
pIiE3HY2ODCXBKxH58q3XqQT2fBHrEbiYTr2p9dfqySZsiGcX6BBE11UH+i7
zBxf/3Uy93kagTgrWPT9tSUb5j+VGBtwveiinKsNG8beRkq9uIb1+11BGMWO
DRfW1vNaoh82ecklOeD8lUnfakvF86dflZeEExumL7iet0cXrC0a73Fhg9LN
VQtvUgjEqPr3T6Pd2fC5wDnFFv2Hv0qCbw8bLAd3niEnE4iTgWoNtfvYsC4x
csIRfTN+0xJzb/y8iNEu2lWsfw3MAgE/NiTz96s4oY+/bQusOciGG0JqqW+v
YD6muJDBnw29t1+EuaKrQ05d+nuUDV2/zOvfJRGIZou2sy4FskFiSXe8C/rY
Yeu9wiFsOBT7+wTrMoG45MeIRkMYG+gb+l64ot3VdLItI9iwa2NiBjMR4+m8
sJPgSTYoBk0/dUKfL9Uwro5iw70brePdlwjEK0kjr4zPYvzdKXy3Gy2RtPPG
9Hk2WNmdGOxMIBB3btkmduECGwqGV/9nhxZ/efYxTxwbfhrXpr+Lx8876JxT
kcAGWcLbAmu0dW3nBuPLbBDReBH2Jg7jW48hPHOFDbcHphxN0fXntaQepLBB
1L1tX10s1vszqvUaaWwoCZ7ZtB19+2ZZef91NogP7hOruIjndX+O5bEsNgh9
F67RR7e65a7XvMkGgs5p1wcXsL9WeGj8/jYbnJ1z1iqhba+5jvjlYP6kklk5
MQSiFyF7aFU+GwIWjgRJoRUCo+Ie3mODT9+K8WvRBGLEpXv26+/jeg1crhJH
W7YcOPzxARsq9Jyt4s8TiG1PWhSPlLAhIus5iw/98mWdMuExG/JPtBMizxGI
u//760R/woZzVLGnw2cx/g1YqnueseHw2LS9P9rqm4OpVCUbzPrfpzPP4PnX
/jBPTjUb3N9lTLqgSxJbvinUsWHB6V0B6TTuX4PVqu9esME0qGbIDG09tmvW
tZENwjd09jZGEYhfFaKUJZvZUMkT4qiL1psxG8xtZQPJ7tK54lO4Pz30oCm/
ZoOB8iVeNXTkOT5ZRicbUp8+mso4ieePRbumfLrZoFz5VG8ZenGhlrLyOxz/
vsruMyewnim5nSaR2PBbiVkzEon9r5VSuBuVDVmvg/gOofUzzteIM9hwd648
kxSB16eez7nDwnwSZqZYox97tz1V6GPDbP7fb6/C8fy1u0Cy9wMbaijsc7ro
g5Mqkh4DbHAy+JpYdJxATKk09Jb5zIYfjra1kmhnhwxW61c2pJxssYwJw/NB
dtqU5Tc25M7t9PkdSiCW8artW/SdDf2NUUl+aAsFT7+kMTbcWmFtTQ/BeuWm
Wmnzkw33f68R2YHm9TcwWphiw9KFVM2SYALRQ33II/Y35lvmy2kltIaIXjv8
ZYN12mxJYhCBeP+WPOXNHBsa1pdLzQbievPaLbfj4YDapZCJELRDktQNPj4O
DMnn32ccw/7i1ZmGpMUciHuormyL3ql4epO1EAe2HtT1eRpAIGbaNtL/inBA
5szK5fLo9PVFK8+LcaDU8E3m1aMEoojm2mLD5Ry4UV3S/fMIgbiBbUJ/JcGB
RcWbvvqhv/kU6ZtI4/uJeMVS/QnENcL3+qZlOeCo01xnjF7sTSScXckBX4k/
QyWHCURfeli9kSIHVHj185ejA3jMJ9pWc2CuZqfHuUME4rJ5bxerNRxYr99x
4/tBAlFTUUJg0VoOvOIIOOxGT33zc7lM4EDJ+ZQVDQewvrNtJqw0ONBla22m
jJbJP10/q8mBvuZlk7F+WK9lbQkx2hzYE6n/esIX+4lHT/u26nFgt/DZESf0
7qlq/XZ9DvyxdiG+9MH8FheuttjMwfqTrbEBvd/+++U5Iw4wGC52yd5Y743D
/8YacyBV+8izmf3YL9ikVpsAB0RyVE3c93P778mCnzs4IG7xwqvaC8fX/Fsn
cicHRhakyapoqah0YW0LDhysKvC4uI9APPK+O7raigN6LbtMRvbieA7lmkXZ
cuBUndg6S3R+U7Whlj0HkuZzCwr3EIhV3cc7yh05ELUgcnMZ2mL21YNgZw5o
vn0WEeBJIF5gPCPMuXJgKamW9M4D69+VUdJZDw7kR/7H3oIu8q7r0t/LgVCd
Pc8z3XE+Pq0/VO/FgTKjD2pzbthfXda1PePDgfaeBhdXtPri895aBzgQNPGA
8NSVQPykHSj59BAHLl8+WbACLXdmXPLYEQ60pPh1hLrg/nNCpvxXAAeMnL4W
UJwxv60uRkcGcWDiLsfIGH3MOP7W+lAOOG1c4ZXhhP3k+3UuT49zoOHOc7uZ
3Xge+M9vb3AkB6wC3tbYo98bD15bfQrj4+seepEjgbgjXvBQ3mkOKJo1Upeg
FcdfJnic48A7wvQWPwfcH0XlLAeiOeBw9+vlZns8T1oIuf53kQNfFRI3rECb
eECaazwHimw/JgTtIhAvr5QNZF3C+RDsGOixw/o8F5uRmcSB5CizKBV0dUr6
XpVkDqivOaB4wZZAbPw15PhfKgceae1PHrDBfjCGet0jnQPl7VvXbEaH1vhF
fszgQJYCkZ5hjfMpnVCQk42fX1t057MVnj/NJngdb3Hgaeot9S1oy7Xz86Q7
HFBtGf2WbYn1Qy3X8mouB97wSxUOWRCIzbR+nRX/ccCa8P4/M/Rxr0CLzAKc
7w8vzt4zx/OYQPJD6yIO5JrsMpgyIxCDvewfvS3mQM/vo5aO6Hpa4fyVUg48
+Ou5Nmcn7nc8OaMryzhwomnX4d+m2I8u9IncfsqBW0zRq85oj9UVEU4VmP91
fAfzTQhEyR/rz7MrOcC71qrq7w4C0fyDIfVWDQcCmq4+MEdL3b+6Z1c95lft
WMR1IvZ/ihfP977E+WkrII8CxmPF0vErTRyQdaBVGqLXzG1ZJNfCAfMhQaOU
7QTivpWPIbuNA2Hrykq+bsP926O6066DA1PODUkb0aEWB6bJbzjYf8SuvmyM
9+tWEJTWw4FR2lKR3q3YHxprSZv2csCl36BPAf3xnZtnC5kDStcSzh3fQiCe
viQ7epbGAduR7D21Rrh+30+sEmJy4Fl41fJl6JjIoDvtbIzv3NRRJ0Psp0kl
1mfe4/i6PtTe2ozngw9JmYv6OfDdcHXUDwOsX8sW6dR/wvGNJ5vpo5NHZfyt
v3BgV7WQWNwmPH/mhXd3DGE99tfto+tj/xvpfyFmhAMhWeH5iuiYv7Nk4R8c
ENbeHRW0kUD8kkeIaB/nwBEKSbtMD/dPxZumUZMcKBxtHZzUxf+3Ki2bm8b6
M1zSZoauzXQNqJzhwIX2NccSdLC+p+c2m8xy4IvaJ0uKNubfQT3bxnkOjB1r
266G/ujhqRy5qA9qmNnsw1rYr8ytyZjl6wNzUn1HxQYCMbopxrVaoA/4GF+s
JzWx/myOeW4h3AecxmkCoJNi2ne+Fu2Dk0pxalfXYz0ZLVCKWdoHL15+v9Wp
QSC+FVK9JSLeB26+z+Nl0E1mhn4dkn2gcJWn13EdgWjvft3jrEwfsLXWbEpV
JxAvrbz2fZFcH+zYM6LGIhCIW+ZV3tXJ98EHA/59Mujsa267rVb1AdErS8tL
DfuVP72LXiv1gWRZoe6DtQQif9yn+XMqfXDj7f8qLvN4qr4ujIsykynzfO85
hiIpQrRXJZSiUiEpIYQoQ0kKKdFEIRkbRKZElAwhomSoVCK695zIPP+IJL37
/fP7Offus/Zaz3rWOlsce5lqwKi+ncxNspDnpv0mqzBXyLIjXquzUNywympX
hhqMWfqmBK5koczwKIu7qmrQsure7jktFjp3WU+nX0UNyNXu+4p0WOjs+7eC
Spg16dbZDWtZaEG/7LWLshq88zj/tkyPhcTET1blKalBj+jrvuMGLLR8c3Fs
jyL2U8/cjP+M8PvPttmqY+7rJQuemLBQcwZJHVTA+RE2tTUBFjLpzvdMl8f6
EM7RrtrMQiOczahHDu8Tqx/aBG5lobEnWmVSmP/9Q1KL5izUWP3Syl4W32/q
pPrL7Sx07Hz1iSsyWI9lw+6+O1nozukln6qk8ffSGm6z/6xZqKLY2psDs+67
5ycf72Eh6Zh5/zVS+HtQjNfYcB8LlY5a1/hK4n1J5/66F7YsNKii4lG0Qg3i
T3wIPn6Aha7GFzv9kFCDn4fvHZ4+yEKududeKGMuPMF9q+gwC6UI5VtYieP5
alsydcSZhaaFX2qEiuHv41HOqR5XXG+d4EsvRdXg6cP+januLFTD+2V+SAR/
Twoc1yQ9WeiTR8McgTkpPsqlzxvr4T//WevleJ5MDb9L8mWhxI5/1ueE1aCL
Y+KDoh8LpZap7HwhhP1Y5wrzWwAL6VncWPlDEM/L5fWS7qdZaE7qVaUMZpXX
5uv7z7DQ4S9rXu8VwPM82SkzLYSFLFfNXT/PrwarlWWfEqEstDR4LfmcTw0i
3xwT7A1nobYrlu7dvGoQZLokIeEi/r13mDg3ZsmThpXSl3G8/c25Jjx436nm
WdMWzUJaW+veuXCrwUTlKVPHayy0/aNNb+IyNbCK1YrsusFC4bbLIt8vxXq6
FLwi9iYLxcbmx85wqUGOhscWyXgWitmJijQwZ40PV7XdxvfRLFLewYn746hI
p1MSC72O/1YSsgTvX4UhKj9SWKh914dvhRx4n1MILU1KZ6G7/iarP/0jocxQ
dUT1PguFnDSr58KcetrB50cGC50YkvdVXSRB9mq3YkIWC6mECd41/UuCqdXi
cZkcFtrMf047cIGEft3n/J/zWIj5b0lh3B8S9N8ImzkVsJAPh9a9mnkSlNc8
ecIuZKEvG8rXTf4m4WLlT7eEYqx3B2bycsxxs5WV8s9ZqGj27VXjORLk92o6
fXvBQj08M7q2syRAJHvN1QoW+hUQ6hf4iwQRD70HQlUsdDSFPvhghgR7LxWn
hhoWWvlU/1vlNAlWigWVu+pw/fx+ivb9R8LLqQ9uog34/M6bNQtTJLxJ3YDq
37KQXHSgqBTmc7/Mnm9vYiH24PQGmCQh/+RAMHcrC7HqRcr3T5BwOVWTFfeB
hR7opqmEjJPwN7XEV+ITC60L5bPMHCNhtOqzVdMXFuKP1susGCUhOjah2aaD
hfYEvuahR0hIjxhJFOvC/TDofP6/YRzfjqs3X39nIXUN/Vw+zLmv32lYUNgf
DE4tag+REHbo3nLOHhaa3RO4edMgCUuyJeOv/2ShGyzZaucBEhTefDYTHMD5
N3UXjeonoZhHw/zVEAulETmrk/tImJlV6DMfZaFbrpZZFT9JKOTLaVs6gf/v
69vU2EsC9+TZ0ZIpFnr1SLesq4cE3qjxLP0ZFvKY0lH++wPXB34/HptlIT4d
NxEBzPnZGTZB89gvD5y5ok6TsFO318zgLwu5yKX66lL4vje9PYb/sVD+7Ae8
XJFw8l6C+glONhpIOXXVkUXCpw979VcuY6PSR/Nr3b+TQBWW/CjlYSOz8bE7
Yd34/24HX67nZ6Nzo1NTaV0k5Jkk/xwVZKO7/Nrej76RcOZ1UH7gcjbyeaZQ
V9NJQo33aM1aMTZyO2ku29BBQsZQDtdPCTa6IFVu9/4rCWukeX66S7GRoY9t
4kA7CYbu8+IqsmzU+Wq4YPQLrtfRG3SePButK5fv4MRsbOT5XUOJjSiNMwLy
n0lYqtNNslTYqEpQclL5EwlBX8aEXZlspKd0ml+/jQS31ERTZTU2ys7Z8Fz/
Iwkc4rR0gQYbqXveeWT+gQS9w35yq1exUV/PhYKD70noaU7y6tNmI0lOQtmx
lQSToSMHfNewkcqyHfPHW0gQ1ai5rb2OjUI3X1T0bMb1N3FbQuvj+CKLt3k2
kZC85DH/UUM2cqi8s+TsOxK0+6OPKBmz0RYXzW+nGknwCeGxzdvIRivf1O6O
eEvCtv7mYM1NbPTIemo67g0Jaf7qI+wt+Lylv2NiGjA/YS64mbHRDfHh0ZR6
EqSESu2Z23D8dtKqca9JWAU3f362ZCNr6Q9+N+pwvlQFRWytcH06HuUl15Kg
pqYQtXw3G4WPyMbefEWCUFdrepINzldouG9SDQnHCyW5DuxnI7EW/o6r1SR4
OGQlCNnj+o0WeVyoImH58/aGWw5sZNHgJHvlJQmrddO2Wh1io+jxUxohlST8
cVzq0uXERh9iO7xDK0hwPlxc4ODCRh5j3xcjy0nYcmHOXMyNjUwyVOqCykh4
v5cVmuzBRvZOZ+mzL0j4YnFgmb0XGwV/uSZ8rJSEU2KKZfw+bLQvdEvwgeck
1F29IHDjBBudCQV3x2dYf+S5PHN/NrJcwtbbXoLff0J6qC2Qje7F3k6yKMb9
cfPP/t1BbHRWJtHF8ikJMW0Botxn2WiU+eLH+iISautueF47x0ZDIZ0K+oW4
Hu0bRbeF4fMfBw0qPCGh4U7M/q8X2Ej5mPMlqQLstzrq7+wusZHigFX8isck
kEP7r4pEsdE2Xl7uv3kkbLQhh5OusJGcdK/vr1wSPny/esf+Oht5aU9IduZg
/zExDBCMZSODC7NKNdkktO+8PBZ7i43My09vL3tEgnqo13PLBDaKl3K5kJKF
z3eakO9IZCN/w4KJmEwSqiVfFtkms5H71ZqhqIcktI0pxQulsZGrvGidZwYJ
N08xViTcZaMGo7b5Qw9IaFR62bPnARsdOP9ncMN9PB/S0ymuTKzHI5Y2CvdI
kGtRDol8xEaMLTlmondJkFAwPIpycfx6UjWjafi+8lMjjflsVFiq2NmdSsLv
yakH5k/YKF/KOfFDCglPB6Kz/hSxEdt4Ljc/Gesx5pVFeAkbKXmGR6UkkfBr
f4yBSSkbZdw1jvO7g/uj9W/DuzI2OmS2eO5gIgmZciURlpU43pEcOcvbeD5d
4bjBWY39Jtm7RCUB1yt7VP/qKzbSHbxvJxBPgs3ACa3tr9nIU6agtfsWfv/f
DXsWGtgoebGl9+lNPC9qH60Ia2SjcofAtamxJGzOySGNmvH9w0KVjseQ4I92
tNe3Yj+413lg9w0SUJ5+ielHNnrs2e5idB37p0Ep+/cnNjqlfLid/xoJgYEd
OWHtbDQsKlw/dgX736eYVyadbLTKOHmqLJqEPp4YnrEuNpKZNfkWHUXCnWHt
EV8Wvs/jO97HL2O9TrgqqtNYP7YXeQwisR9kbhgv6mEju6MFrpKXSBg6my3k
18dGSUIh6V0RWA9qjgeIQTZSW7LxXuYF3I8RT7fmDuP+5xeIjwgn4TxH+vmj
Y2z0VzB+lUUYCRu0NPdPTbDR6qc73yuH4nm8etHB7z/sl8GmnovnSHC18Xii
/ouNvgwV+NWGkECT/vcL57C/trBKks+S0CEnQfv8YSMW+VffPpgEz74FK+VF
NqqNc0yVP4PzrVP3eDcHhSb0pr2nT2P/Wmw7ULCEQp2lEVueniKBzVj79T9O
CikPb0q/GEjCoXWlQ7pLKaT+Vkf4YAAJSfu4ievLKLSp7fV2GX88L1sztT9w
U6hfv854+CT2ZzuRw9q8FBq2WNP84ATeH4yaDgXyUcjIMV/T15eE69y5M8/4
KbTZ49tj8CGhosemWFSQQmKernGz3rgfpK1gvxCFztOxwXVe/5+/4tPPhCkk
4+YfF+BJgnDMwsblIhSSHgoo1zxGgp+Uvv1uUQqxw55I/XLH+So0Si4Qw/dh
3vPIciPhyv2Y3GlxCh2U2c/vfZQE63O8e9atoFDuCIzru+J+PrZDOUaSQltG
Ll7pc8Z+WkC9bJOi0OrRudy8I7geXHBhjQyOp8nYep8Tnvdb6r5Hy1JIx1xb
aelh7G/fbvM2yVHo0e1PuW8dsd9H6B1QU6BQ0JqOMycP4ngimGe9FSk0s1lC
WccB6yWeVdushO+/7MqXNnvsT7GV90kVCu+/exuC7UiQ7h2yPqZKoZclXg0G
tiSEWvQy3zAo5KyhH/dtHwmVS7UbhQgKGYonX721F+9PeSlLrUgKndYfmLW2
IeGGy2e3HDUKjWlzj0/sJmGlv+OdUXUKUa+ebsveRcKluKKJHZoUqioZmtts
TcLjdA0qcyWFMloTOXt24nm/ZCq9fxWFJOaEc5N2kHA08NJFU20KfTnb7LTW
Eu8zcMzwymoKlbKL23q2YT3NnrjUqEMhcklLZ5IFvk/VljmGLoX+FF3L0zXH
+vnuZuS+lkLiz277/dhKgoDQvoz6dRQSHKhuCjDF8cbHdQnqU8hsxNtAcQvW
H/ev3J3rKbTiisCOlk0kjEQz7ucYUNifu3MPAZ4vrvfdxgwptMd3uT0PIsF3
19Aeqw0Umpvilb5lQsJ30rb9kTF+n8BeZ1VjElT2SWgMmVDI6fV+o3dGmONT
H5gjXI+BoA4bQxJmNQOHrwN+f0c1Y2Y9CSn5J5taNlEo0Wa1Yao+CQsbDdvU
t1Ao80D5O6YeCWs1dmd7m1LIZ/Uz8/q12M+Z6zKbtlLoyIuPXOa6eP/m22DI
NMf90Ewcb9XB/W1+K/WoBYXOTLdy+qzG/p5QQtZuo1Cw0IPoMS083zaohfFY
UihLKtTx8ioSpppfnjDbQaFbX38rkStJyPJRirq3k0L7DS0jMzVI0PH46NNj
RSH9sKhgE3U8T/2sQjbtolCFWF/bM5KEW5/l7KN2U8h0V+83M4KEEBWhlrd7
KJR6ku79ziCBEdroztxLIY3KIc59qiTcW9f+0WMfhULfRIj/VCahc/6x89v9
FJq01f61Vwn7Y17OFRU7Cq1Ngop3CtiPS2bCXewp1GWT+8JengTbVsF7NQco
FKD+eO1bWTxfUcB17oO4f3av4t8lQwJX6j9RM0es7yE7PpYUnpe8+1/eO0Sh
3SpmupaSJLS0LKzvPUyhocjohY8S+Pshw6dz8xEKOaYF5q0Xx/u0y1KxFGfs
J6XtRzJE8f52dkim24VCfBHHODVEcP8+TLEwOIrP51RefV0Y9xuRZnbOjUK/
Hz33FBAiQaz0mNd3dwpdUqgbchcg4fDaA2rrj1Eo6e7tS+/4SLjAk/L0jCeu
J19CsDkv3m9Gsly/elEo5C3T7gE37kcNrj6F4xT66Ff3TGoZ1seuiEVHHwrd
fjNyJo6LhK6oVpMyXwoddnNoGllCwqS0546/JyjkdmnXgBMHCa/LPoQf9KPQ
qNEO86eLBLhudbB65k8hxN4+wPeXgG/q+kO/Aij0/HxiRsgfAoQUuvNtTlGo
SfcINP8mQPJY28ak0zgeG1ml9XMEjNwdce8IohDzhkRM9i8CQvs/luoGUyhq
LjHs1zQBA5E8XwPPYj+1FeZy+o8A4fW8Cp9DKCR5cKY0c5IAfmSvK3eeQgxm
A8kzQcCnNa0sh1AK5TUdMvEdI8BeT/hpaRiuf9hD1eIRAp7Fpu9dCKeQcFOS
uPgwAa0LvxUORlDIMuhfmNUgASU2Z84/u4jfH9h+PLafgBOc2wpmL1FIqqK5
YuwnAYOvepbuu0yhc3xR8uq9BBh0tmqmRFFo3suG7/wPAvZ2fe//Fk2hxePe
Td8oArTGSpv0ruJ81ZHrxdgEdNv9OH/mGoXiVGsvun0nwOLzV7uO61jfSdZE
QhcB4UaTjToxFGLRx0+86yQgdu4Av18shVauZs7KdxBw8E3MydabFKq1231k
WzsBi6MS2eJxFHoXp74u7jMBjsTRZQHxFLLIY8Q+byMg2rzzd0sCnhd73udT
Hwi4+irtpUgihRZsdGLU3xOwfYdWts8dCtUV+UduayGArS3k/CyJQgrvGH5R
TQRsWhApnkmmUN+m0bOtjQQ4fWNr7k7F/f7xHTn6hoB9Iv9OJqTh+Xm0kKHZ
QACP7SB7Oh3H56bpjF4TEBk127vzHp5ne+VjHGoJ6BLdXxZzn0LLzgucuF1D
wGheaMnIAxyPQ6RUThUBX9J+n9d9SKFWNvnwWyUBV4ITqZOZ+H410eHiFQQs
uHMca87C+n/4NZdRRoDp47Ka5dkUivg9ImdTSsA2ro3IJwfHV/3G3/4ZAXKm
fXsbcnH/sbMG3YoJqOtmGfLkU2hw/rZwfBEB6pEPtro8plD1+q7ExCcEuFx+
rpxdQCFO1UWuiscEOCQlqPIW4v1i/oVnSR4ByrfvVBwpotD6lEs8z3IIqBga
Zjx8ivv56e2pL48IEN/FX7ykBM/j7XXWzZk4f0JnRC2eUYiw5V3Tk0GA8TMB
nqjnFBoY+Fe85AEB08ePMXpKKVQS26U8c5eAC+ellquVUUhkkHmeL52Alrux
KpHl2E8qxvdOpRDwM0+riVVBoR1/rOJ/JGG9L5czVX6J/ZmjUG86kYDzFz/1
hFRRKLB1f3VnAgH/dnXvqa2mUPbSnh4qjgArXj77Ja/w+6XqfozfxP3xgSPS
oRbrQ/67QVsMAUYTFhfS67DeTl9Jbb9OQIfywcyF1xSK1apiP75KwI6c6sQt
Dbhel4q8HkUTcEPeXOXiGwq16KiPZ18m4Nq9pI/st9jvP3GVh1zCegkx3s18
h+9/RWGrfwQBkx65sxFNWP8+wskbwgnYBcZ635txfaeaMwVCCbjoq7hZqZVC
P3WMxhdDCAh80hQY8p5CBk+ow3XBOH/mjUG1H3A/T0zuyAsi4GPjkBhnG4W0
5pFPyikCVB2/fjr4iULd/xQkDgZgPVhIuN77jP3AeM8z8MP9aCov9+8LhY5n
tuyd8cV617Q4ZvuVQuMcLT+KjhPgfux15J0OClVahEze8iIg74VA03QnhTbk
b9+15RgB9YczWIZdFEp/6+Un7U5AqhS3THI3hdLsHG0rXXG9y68N/fedQl56
M1s9nLE+Slyu6rPxPlO1McLQiYCp6mU28RSFkqW/N3U44vqozg1+oyl0taMm
O80B++cJYWm5HgptV/WQ9bIn4OT7ce9TvbgfzaPZy2wJYF1SuVn+E/tXo1lD
w14CeHcqdsv0U6jIJctj7x4COP5trPIboNAn3zzrIWvsb7yFviWDWA9vuUez
dhJgxxgxFx3G+8W9G2GrLQl4kRA0vn+EQrxXkiTYFgT0Talr3x6lkPG2O+GJ
Zji/Tg/jJsbwfQyfK8qZEnCLPPF27QT2S11Hm4ZNBCz/y828NYn7seeChDEi
wHnlmFXnFIVyGqrLO40JiDD9LSI7jfeNeIGDYUYEHPF5/ztwBu/jriEvJtYT
IDExU1T+C8enZXknWg/X/0J/rOwc9vOHWyKHdQmo/bfAHfAbz4fzHmL7dQho
/+y84/k83k8Dq98OahGQVR73QnyBQv6ed/O2rsT6nJOYtv9LoVX5JQJN6gTU
KJc3JC1S6HXn+BN7EuvPXrNm+h/eX5YNpz1hEDA3NBRlsIRG/UZzT1er4Hpd
OxWUyEmj1ZJW+08p4vNkyH/jXDQy6SY76uUIKP5L7FuzjEaujF3rQIaAr1MT
H69z0+jCr0aNMEkCPiBBxU88NApQe7RnWJyAxNOWS8T4aPRkUFHQSRT7Uc0+
AW9+Gp076uSRJIz17VTYWyBAI8kb7wsWBbA/i7b3CgrRKCxcrVmNj4DTsjtK
bIRppD26cs05bgLWCPfJxi+nUYXZV8tuLgKyxSyzx0Vo1LRs/fpFDgJmfDiW
rROj0cngx5o7F5mw2BUWFSdOo4XamRWH/jDhy1oiY0SCRgWWPzYGzTHhQo/M
dW1JGmWy7DfUzDBhJKMz7aoUjVK4tMUbp5iwqnLw3EdpGvn9tWNwTDDBsFph
RkSWRoPBT4w2jTKB65N8nJccjapMHYU3DzEhY6M3xxN5Gl2/cHnoZD8TOCoi
44UUaXQn/XyCUy8TNFXrq48q0ei/6txaOxozbVOepUyj9PjSz2EsJvQXPu7i
VKWRZsPOc25dTAjusG02Z9BIvv7V6ZAOJjSKtPQ8YtLort5jfusvTOhb63Zr
CUmjz/dyN6xsY0JngbWIqRqNbkqlPTJ4z4Roo6XP7qvj5zxOjkuambBckU9j
QINGUddVX/15y8T70Zp16itplKb+O5ujgQl+TYRbxCoaCTKHL1fXMsGO09P9
jRaNhvbqLi2qZsKfbWdiyNU08s3hPOxQyQSvkHyrUB0azY4vpC4vY0IRt873
mjU0Mlhhf2r2GRNK7p+/pbCWRpwaRRW3nzLheryClMs6GuWZRMh4PmHCWj9K
94EejYzSk/da5DPhtpNP4II+/j3fWER3NhPeZ+24jAxoVM+j+TEzkwn1f2eq
0wxptE+O7GI8YMLN/PE3vUY0EvU5cvlrOs6nmZA7YUyjBCvT9bdTmBA2MbMq
3IRGXUSWMO8dJuRPadfWb8T6XOBPL4xnQsKytecJoNHSgq6lAjeZYMnl8PH8
JhrtfWKW43udCV/tPv1Xs5lGpTtdtQSvMEG5WtJE0ZRGLy2y39lFMgGdy93n
upVGcWu9O75fYMJK0nnZQzOcr/YdW31CmfCZ3du1aE6jNW3zSx+fZYLNZGn4
5m004pp660YEMSFGfL/V/e00Kuvd/GB7ABPuKEs//W1JI/6ufweCTzDh9CXN
n0Y7cX9e7fjT680E8T88KNGKRtZKraHzHky49FbPo9uaRr+6Jq9YHsX5ztJ+
YbybRpv2j7C2HmFCoa/l3dt7aMTj7Fi53RHrPfbFvk4bXL/u2+eu2TNBtHZC
d/0+Gq2L2OkSuI8JpyzPsM/tx/pIs2hP2c2E7GqCUWVLI9nrt4nWnUxINE27
LmOP65d5xCNzGxMOqhx943iARkpaiQ8qtjKBJTyn9tKBRvSJr38DNjFBq79A
SdKRRl8z4iUMTZiwR+p5n+0hGtl8P5ZlYsiEdXZRn0sO00iCU7v/xzrcfxO5
N+ed8P38kw416jDhZMDkT0NnGn00usBbuYoJxbxcR+JdcL4VXrJ2qDOhado1
76srjXS2ZocqM5lwb/KmvL4bjcpjWHqxSkzY3PmDecOdRoTJ6WZ+OSaUS19c
aPWg0a439uxGSSaMe0zMa3ri/N+n9FTFmDAv8vitrxf2pxsGndVCTKhtXPfy
vTfu9x1LT07zMsH2OGWh4UMjhX9xbWuX4uce3RlevjTeF9r2lv9jwFBABtF4
gkan0npyP88zYKCj/NRyPxqpTFgsWf+LASVqvw5Z+9Po981UKnOSAcaXF47n
BmD/0LS1yxxhQPJGmx1jgTSauCpQMdbPgGfcgbt3nsZ6rXfjavjBgPSy8tHM
IKx3aT+h7O8MOPh6l33/GRo9vRYk3t7BgK/souEtZ2nknjK9+8YnBqjbuOyM
DsF62iR0Oa6VAeZFBmZvz9Hoh8ycX2YjA1SVO4+qhtKoO36h3uQ1Az71Ne49
GkYjvuJ4Y6KaAZuqLnnWhdPollHcQEwZAy6N3rTmj6DRkpjI+u0lDEjkqW3a
fpFGb5ZLrRd7woCjui99si7RyHhCMdYuhwF8z3jpoUga3RdsPT2ZwQBPC6Xg
7VG4f88k5y1LZ0BSg31uRjSN3tf0TjPuMCAttTfn5xUa+cs4OSbeYsChCKMP
m6/RKPdgtFT4NQbMvKLqo67j+Ps6lF9FMuDAcO6etzdw/S6dvisUzoCzBHAz
YnG+R730m4IZ4FdKRLvdpFGrTelnOoAB5IF23fpb2N9PbFY76sOA7P5cf4V4
3F//3jRNujOAo+V9xKEEGm3ZwHH82xEGSNRVl5ffphF6f/ihhgMDFkU4Xv1L
xPr6vUenfS8DMn0Fxg4n0ejV9Cj07mSAbJnR07JkGpntro+bN8P5OFC+dSGF
RmcC/gSfBAZ4Cy7jOJCG/aNaqHGzIQO2Sd6LvpdOI4ZIosIpXQZM8x/Ope5i
fWvF3SlZiesrMji54T6eF5of+7Yycb6O1/GGPaBRx5ttxcYKDIjr8jBjZ+B6
WxgNhq5ggMM6XTmDTDzfUvmcGoUY8LvXsvpMFo1SgwOVQ7gZYJOlc6X9EY1e
3/un6beoChHVR5nyOTR69GCj0qdfqhBeV7XPIZdGRxjV8SbjqmDc8ePxszwa
bbyfGk73qUKLqe2XuXw8X1xI92mWKsjW3mbYFtDI46WJm0G7KpgkkpvSn+D8
bHRaMdqiCtq232ZYhbif9z1VyalXhW41+49GT2n08/Vd9yuVqnB4l3pIaDGN
5nMSP1HFqnA3unYnuwTXK3DUak+uKjx+HPbc4DmNHHLVK2vvqcJNjZix4FJc
XxHpdY8TVWHNc4+dHS9o9ODM5JeM66rwKPnWWcVyGlUvK9sveVEVho9RcKgC
5yurwe9qsCqMbPu9qqySRpZZ7sYLvqpQF+48sPCSRpWjS8XHjqrC/ne33zlU
06juyZBNywFVKP07tqWkhkZaGzTyH1irwlhU4rWZV/h53I/SRVNV+MEUWNhd
h89Pu1Ola6gK+dLvjRJf4/r9Yq0e11KFLbPPRdrrsd86X1PPVFWFxL5jQjpv
aGR1iKNFVlIVXmkd7/R7i/27PeSBIr8qZF/a0PyhkUZ6u/wamhdUwFXvwA2p
JhoFVq22459QgbH3qf22zTTSXd6eoN+jAnpnc92LW2jkonU5YuSzCuw5z1s6
20oj6ar9F9e/UYGVt9Zo2X6gUeFHK6XxUhVoiz1vVPiRRhZqjtFB2Spg3S8n
NdVGo+jowYTUJBWItrooa/2ZRt7LGq4uRqlAkpDJaPwXGl3kDZeeD1KBU6Uy
tp/babQtR9+p3kMFRPxe9Wt30CiotaMlYb8KhF0sM/frpNHImekfnFtV4PGj
kNYP32i0I2F5EaxRgUfPXEbUu/F82vH9n4SCCpyWS+k89p1Gq/jHN0fyqcDS
W2mj9Sy8T6y6wOPznzK4O0184KfwPtq3af/Ad2WIRMJdnjTOz9OTIxH1yuDP
tyvk9Q+cz721DU75yqC/8scIdy+erzZB3a/ilOG5I7ro+pNG1/gVsrJOK4Pg
wMhQbh+N3vY05Y87KMNqx6qBoX58vzmdY4ZIGZb3HBAyG8R++z6Wl6GoDPU1
5kuuDOH8K0Snus0rgcGTf3KDw3gexN1Q+f5YCYKiulo2jdIIEltOlhxUghtl
PNYRY3j+c++VKuNXgiN/Fn+xx2lU/M9ErjhHEfgTzHyISbyPnIwZ/LtVEcJk
noa4TtEotnFFbUunAhQXDBRV/Uejw7ecj7ftU4DKFN/nS2ZodPrwsXaiUR6K
e+RX82Cu805WSGyQh9yV7x4JYn4gP1rD/Voe7lQwk6QwN3tdFKer5CGwq/Os
1v//H+qbH14iD9pyppvsMQ8/HKg6cVce7iZLNxdiriLeL/vlLw8Xkl7Rh3/R
yPzgalE+KXnoUM3/64o5/OE6tzUS8rA6/7aM5/+fB4SU2IrKQ3eV1+4AzNwB
69ekC8iDfu+KV1GYBbNL7MQ45GFQ2/NeEebVFSufxQ/Iwa7XYoe5Zmn0YnkG
a6hUDhTHXbqzMKu3X+MStJYDZd48Vh5mxW2V/tmWcqCiMkUVYl5OrufcbCEH
TJuwn+WYexzs3Lw3ycHK0tSxVsynVpyrSlsrBwahXzhmMT//JCfvIyUHe5ab
E+ZzNNoQZbuY1i0Le9VvqO3A7CxW8eBThyzs2/RFYzdm/ryBvGVfZMHO30Xb
AXPMZs6Ph1pk4fDX0PW+mPcwve71vpQF77svtiViXv7uGbU+XRYur9b06ces
26R7+bWDLDQHCH4fwcxhY7dD1lYWRMrHLKcwP43mSPbcIwvJpsUafzHHX9VJ
mbeQhXx7459iv/H+2WH2ql1PFj5EWB3ciJnjyISDv7AsyHb4bU/AbGU1afuh
XAYOKewrS8asOhUMB57JQIbzevV7mJ8PXszpfiIDq0b/LMvDPBD+O+fdQxlA
nJde1WBu6NgosO2GDLiuSjQYwexb3mpdcVgGHodVkFvmaZRc+iS8+o807OLp
MrDALBojdyx5Rhqmr89v34n53C72B69xaTBOMfS1xTx8vSx38oc0ND8rLfXC
PMv/RCOyURpGhoot4uf/71+8Xs/ipSH25KcDSZg/tZ/XG7wuDevmprzTMbeE
HjwkelkaQpbp3szGrCq+XnPjGWkQVC7srMT8QHhSfJmjNKzcl+/58//P9fTP
KqtKQ2tXU8gQ5t/vJ3wvyUqDn/PwjXHMNxws27rEpKHcV7P4N+ZR5fi/DlzS
sP1K9h+hP3i+Se8LyOiRAs/qh9f0Mefm12yVvC8FORppBZcx1y8pkPQQkoLY
blut65jzNM6LJnJKwakYsfxbmHPMy85mz0qC6czlnDTML1fmCZygJYGq8XtY
jPlqlfz388WSIG1nkczGHG0vozGySxL+8XPJ/MQ8HSvW379FEvpevkwcwly7
kFb5Ql8SShhrE2Yw7/FoUf8iJwnW4wqxAgs00rfLr2rvWQGRkf9dWo95U97p
OxXHVsBxw4KlJpjzv/0KcrVfAXtHPCI2Y86NOHih0WIFqO5hhe3EbHatnKOa
XAEvFRrPumDmyMu6IMqWgIcfIuY9MPNdVNfc3ywBVyI2nvHB7L/5TcCmMgmw
Gyw+deb///94R2vxpgRMl6SfjMF84yffx4yNEtDlbj8Rj9nridiep+oSUCsr
4ZuMeSXXi+atYhIQGxbtnYk5UsnN9GePOKzcEeBegblpzHjpnjBxEPun3VeD
OVx2u2L7UXGYKxp0bcC8wVRTN2u7ODRIHXb+iHlPf5Ump5g4OPdsc+zHfHNy
y42Dt8VgmjhSO4L5VrLR74RAMYj0CFKbwvxzUnmozEYMckezJhcw15js8/YX
FANjnar9nH+xn3uZFnT3iUKr35cKHsxO29Car9Wi8N8sV6QYZs21Lgq8x0Uh
0khuWApzeYbz/ByIgvQ53V0KmJn+jLtjYqJgzHlEVh1zwu+1IqqFItBqGhSq
hbnBihU/GCwCTpdjenUxq3UXztZvFoGLglUFJpgF2i98fxi7HCStv4hvwTx8
tOriJv7lkH1zJMgCc50CKXE8WBiMPnOxdmKWljonVs4WgmZJuS02mDudBa2O
GAjBIXvdbDvMmTxKXSoXBGEiZZvQIczyDhyuouUCcIHl5OeC+drrNTF7uvlB
QiXoqwdmf6u3Yek9fJDlEmPsg9nOO3/+7FteMMjKuu+POWW3hcLnUB54N/CS
+wxmVtlPW/W5ZXBw5Rev85gfKIbY+IovhbHjIx8iMJ+TuNy9NnEJhBVy6Udj
XnL9Z+/9sT8o45XFkeuY1322ETh2awr9D/EcfJc=
         "]], 
        LineBox[CompressedData["
1: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
ezcwLNTU2EBFy0dz9jPsZ7TmoPZGCmToLy8zPDB6yuYw+iP3JNNRtPb1Sk8j
9IjuD2aGud7cyLBBR00WsjGcspVtkzta1t5oI8MNw5zDcehnPjNCDAv6898a
Rd+psD3A8HXeK8+o6IMb5lUZ/pn7tWQcvaEmQZ3h/MGEyXmG/T9rrn6+rsDx
jZvw/VO8egy7bxJR2I9+skvanOGSDELnLTTnR2dXhptafnZGoXcy5box3P83
9es9NGvr+FmG/xkIdT9BSy1f8mBY8zd37yt0T6rtJYbL9y1872G8vpIfwHDb
yY9DA+ih9JarDA/d8v4xjD7TRvuP4TV9v4fp6PYCkev/X6+RUSZuCqi0utxg
uLquiSaN1uYNusNw58Rtujz6E79f5OrzCxweU0azPT0fxTCrR8Xvg+hlTfNo
hg9xf5g0Q9+rX7jHcL1t8l8/tPNU1yOGe4Lt566hy8wzHzNMzhGYD0HT9l1J
ZJjjX9xCJPrlPY6nDBum3vqXgp6O5k9huJlyiaUBHZr6NoNhMfjs2YIujT73
nGHvePHBL+gXcSKZq/sJXwoG0an917IYdolXuTCN/ntZIJfhQkpk3zy6ZWPh
qrlgVH8Ffazc+gXDbyn3d3LyUCD6dHgew0zwt0cU7fW6+iXDlvGmhyTRkwtG
rxh+Tsl8K4uWPNaxauN427t70fl2na8Zfkwp1DmCNjjx/i3DxPhzIjboE6fi
3zFM0tw+74g2LnF9z7BK/H/5PuhaH9oHhns15W8Ho826Ej8yHEwZcI5EF0cS
CxiWjr+r+QDN/vjbqls0QeAZ+sCyS+Hq+lDG/7xAGxWSV709PqXlI/pQo0MR
w5Wa5tmVaCmVhlW7UdaENqN//yEUM8wcX/17Dq1iq1DCcKLmTTsJXgoc3RWw
asXpPYNG6JPPtq26OnvI6Qr66lP+1fffXbs/4zYaq+Pq9W1PRpGeoslCF1bv
51NkAXsW2leAtnr/4kUjMm/QZr9PrHqMX82jFj0iJrn6/BbaZ6La0CmB/qvr
U3AxJr8XnfOuanX9Qj7/mvjNcLbq/9f3Lw/vPPqZ25nV9TeS1NjDwkcB+kr4
G4a3BMVd2Yr2/Zi7un/1W2TChdB3IxVWfTWvNGEHuqg7f3X/h3opH3ehLdoy
8xnO2UtcAHS44dXV+AEaPdANze+ctRqPKvnCS+fRTI+mV+NV9pKJvxc6/ovG
qrf8fekViH5jU5fOMJ3Zyy0e/Tn+QyrDDwXnzcvRNydYV/Pl7oBMaw36r6f4
aj7dSDlm1IjmmVVfzbcLUiWHutDEjS4PGNZVvq5ORyf4JMQxPGHAKrmNnwJA
cFvN919c+54Jo49OWUUw3NfqIroTLVipeZvhWut6AQV0xkWOmww/OXVnoy66
iflqCMP6/jxzF9FhHK1+q/U2S7ixDv3okZozw1qLOQrN6FPVLacYHjY+cK8D
7b3J0ZHhnX8s7AbQPmwBJ1bzSeMWaQo943vnKMMvOqZYRDZTYNFN4gjDH5fq
DnqjN4QqKK7Gk6l1ij/auMBFgeG51GGW6+h+ridyDKsd/vf5Nnp4y7L0aj2O
VbZLRj/JT96xGv9ST698Rn+j2/Ku5o/Z5XyxLVi/MtImGf2m5efB95Lo863p
46v2W1ciiz7jnza26pQnDSpoEeNHlFVP1P7UR7//4/KD4daY7dsvoaM1ItoY
bmurvlmBTq+eeLHq09F3a9FR9NScVc/Z3W9Eu8SbZa1abPzZVzTd+Xnaqj0F
SilobWaVxwy3c1+Y5tlKgd0Hu8MZ7jDbesoJXZKh4cDwZp5rna7otk0uxxm2
bR8+fB6tcfuO7eq8YJ6v4IeWymm2YJhqobcUhVZJVzjMMLO114NC9DF/590M
K9u1NnNvw3kk6+E/xvwSd+qmWhm6YIdSLMP7nGXNq9EPj/VGMdxzutm1Af2A
JThidX5y47v/BT2WUXuD4ecXksdJaFa5PT4MF1z9mM4tgPVfI/bY6nx1n7TR
CX3J/9QOhmU/Hx5ZK4j90NIikzGvRQvL7dTdTgG1YZ3HjPnwVXDf7SQhnH/W
Vxsw5sdMjb6yH8K4Ph5zo4z58jjncyGiKAXWFOfvY8yfowoV+jfFKNBqst2f
MZ8e1GTiqt+B9SlT4AljfjVz4JzduZMCjTFVZxnzrVrX6ZduErh/r98pH0b/
cIiIrpekgNIJ9STGfGzd8YVNnIDXK9AgMebn5KfnjU9LY33osdjLmK+f+3cU
VchQIPL87+2M+ftG3s2/63ZRYCnrMZcqWqHJsfGwHMb78dKfjPn9/uLa2mfy
FBjveXiEMd93hMxH/1LA/qe4oZYx/zcJFgbpKVKgq4RQxzgfxD99wp6kRAE9
zowXjPODkl/bye/KFJDYGfSScb6449w6oK5Cge2NcwqM80fxc5FdwXtxfXc1
tDHOJ4WdsZvK91Fgv8yEI+P84sXXJih4APfPnubMON+w5DjM2KtSIEi8/B7j
/GNmXjBbpEaBzVkn5BjnIy8zp7o1BynAd7hzlnF+Oq2muFtbA9ePePLtIp6v
ePY2fHqqSQG3/wbaGOev+Jtvtg8DBSbeVUhPMM7DVJcULS18vu4b3xjnt+ED
UPJYG+e3HG1/xvmudtA1s18H+5317hMDaJf7xwtV9bAfrFCjGefD/rTkx9cP
4fVc2ta3ocWeruMrO0yB14dzghrQOzLV3ggY4Hxz/IZaJfove6nYCUMKXLfk
OlyMjrjK9aH4CAWSKm/EvEXTegKH+Ywp8Jj3WyvjfCt+V2vQygTzKyrZPR29
2aqV6bUpxsOKodoT9OClvKkZM5x/eR3PxaNPp9ist7HA88hOqGGcrwsKdxa/
tKSA9f1yAcb5e1hWS23KCuvpZb9vjPN5/QuZIVMbChhy/CxknN9Dw52sE47i
+91DOc+iNx4pO9Vli/PO7yoHR8Z5WowUr3QM+03f9wYb9GXjkw+uHKeAHVtJ
vjH6yJ1n5Z32OG8Unnimg556yxEs70ABIa/QBMbvHy6qVHBfPInnMz3ljYro
rBqdukZHCnwRjo9g/P7iY/4WYx4njBdLv+jtjP0K2XDOzBnPB1t7knjQCq6t
eTmnKWClLZDNhk5K+1E+doYClCAnvSV1aeLnidKFI64UqOMK6JxAN92ns8S5
USCGK3FhFP1EUjP9y1mc97/9UehDy9Qec9/tToHMLepGrejI0ro13h64vqHC
nNXo3LqV0i/nKTAQ3Jb1Ef2w+Dif/EUKlB97apGLPr6Off9FT4zXzo7nyeg+
5+vBTZdwHjAobb+HVtx2OJHXC+PzL/eLcLTlR2UjC2+cF/MCEgPQe1wpO/Ou
UGBrbOnR82jKhYnPEz74vEdmmxwZ179Z+dDUD/c/bozNEp0YUfAv0x/PU+GD
Fnro16PLSpQAnHc675w6gA41547S+w/nw94fsrJo+c2XP0Zco0Cz+kSxEPoe
JYmdFkiBs5HBKxvQNVnjE7pBOF8KtdmuqGE/KYvJuhmMzy/84sYkOp60FD4a
gvF/6JfNMFrRtVBFLhTPT+avmDrRj9of+XuEYX8PPvi5Bl1mpDdaF471oIyo
/AFdLKolxnUL+92FswGZaG8W9hD32/jzoiTbB+iF9qmA6ggK9MmyWt1E28zJ
67BF4jzmvU3VD31xt4qycxTW9/Unc1zRDqURE1l3sb7wJHLaMn6/eoD1EDka
63Orb6w+Oq7SsFI7FuOzNf3xfvRw+tCG8HsU2PHi6BMC+vcDraCfcRTYI6u2
bQu67krt7YP3cd7vT/y4Fu2Tm+h0LQHruYWZ3bQqvn9S3enbA8wP983uw2iJ
GDklkUcU4HLdFdqO3glkqcDHOL9mSLKWocd76t52J1Kgl9sp7wU69vPfTYJP
KeAU2OCSiJ5omrrnm0SBwyGka7fQkgTN0U/JFKj03JvrgyZ45LX8S6HA8aOt
HGfQvypIg7bPcL4pUywxR1+9eLn0SRr2i632d4Hx+3P5+urFdHweH4kXu9D0
Li0nq+cU0DfinduK/tG9vvV+JvaLyZTzrOg4SorTVBbOG/MpEpMHcD63DK/Z
n0OBp4u6nINoz8zoMp9c7Bd1/NKN6BCu00NtL/C8SXW79gF9ruFWG18+BYLH
/nKmoTc98CNdeonzyunhuih0RElBc8ErfP8QT6U/uqNJ6Mj8azwPKu6aO4Pu
HjsybvUW86UuzdIM/cal0enROzw/MLHNqqMNJzb/m3uP/enQvfeS6JenQxUs
PmI/u9OftwlNVdTZHV+A86j51OzCftyfDc02k4V4vqqZs/iJfqWdaby/GNff
78vaVvQRp4w+nxIK1CRdmy9Ep927ENP+iQIb04X/PkO3C97i31yG8we7ilUU
uuStR5lXOQXqxbjeXEF777+ypqkC9y/upqkDmpmvhXdDFQUcOO1s9NHGK5OG
Z6spoPjlraUi+oKOi0V+DZ6PpTzKBNBGDzOCNtZRwG/AQ2AN+m83+yG3epyX
Dbs/kPdJE/0ulvTmNOB+6EQ1taM/bFVPYG+kQMchndoC9OetnDtMmzCfCiw1
UtG5zP+0o5sp8OEJbU0E2mC56A61BefLOv8UT/Qn84Y0hTYKCHzlrrVF/37/
bDiqnQJyhSc+aaLpa1MKfnVgPVrDtCLB+Pe53LET0p24Pk8etHOhzZ3ZZMO+
UqCK+an71F7sH5cv1nzuwp8vzUj8hh7zWPrL0YP15ZuoWAV60NfK/PQ37Jdm
y6eeozN6l/wzeynguDVKJwotY+LZwNqP8/0/6L2EviGgQjYawPNJZcFmW3Ru
6/akqEEKXHR1ydZERye0BFC+Y7zZiJDF0Qbv26UUflDgxuzRr+zo8p/J81HD
eH7RNjlDV5Emrl2JdSaNYL/i1DJsQ4tc6nwiM4r9v/Ul6T165s+PpfBf+Lpr
iPAj9LMWkGsmUUCc5Rd3IFo4vmKKi4L3J+rp7Iy2OrdxyJVKAYVBHd1D6FMP
c5/k0jC/U5zpsuhd3XxBnGM4j3JeF9yArmJKWXD6TYF/5TfTx/fg/BPyn276
OAVCdLpWvqCP80u8Z5rE+bqxtus9w8vbZ/SmKJDcwhP6CC3zZX9T6B8KLHh5
PbiGflcg8nlwmgKd++yFTqL5Z60f7JjF6zMdC9ZmXF/X9s71vzhfE2NMd6Il
qDkmtXP4fvE5Zjb0aMCObLYFCjSEaIhRlKWJTkLOsk6LFFivFv2kAf1+80zA
8yWch/P7171A14haTLEuYz2p/9ZwB53G/4Xp5Ar2l33eU+7oo6fSB1OYqCDV
xsdvgq4rJY78W0MF8tvZYHn0Bm/5jzosVPjkuDi2Eb2DX1P8xloqlMZ2fZ5Q
wv5fLfBugJUKrsF1lFb0o2a9zTvWUUEyKp37NXrp18Gn19mp4HFa9VI0Wp52
tKSbgwouF53hAlrlcFXOtvVUCI+9IWqKnns7X+bNRYVfWmMK8uhYv6D0wg1U
kOg9a70BTTLueCmwiQoKN6qeURWlies36lt4cVOh417IqXo0q9TG6vc8VHjf
e0ErC11skmzPx4f3W/lRIwx9uDWo2o6fCnkbLR1Po1PVwqsebabCow1Jyzro
gg82lOktVOAlrH0phs6I8B08sI0K22YfRK/sliaaXHReeCBAhR83e/z70DWa
XnkTglT403G9/yOa1+XLbmUhKhxx8fRPQAslLffcFabC5uyIzZfRi/IB5p0i
VPgwzjdpis7KEjjFJ0aFPcdNTRUY71cJfXB+B96vm+czDrTFVnj6SpwKAnwD
miQF/Pz1NQ0bJaigM1haV4EWO5pYYy1JheexgslJ6PKo+7YJUlQo2D2/dBUt
/PUY7xQBf15j9qAN2szbM3GfDBXinhz7qowGCfMjCbJUqHt74jAXeqnU+t74
LipkZ987+Ese8/V1TpaSPBVYNU7EV6K/v/s8eleBCjHO8sWJaFZu9anO3VQY
caw08EXPWbfe51eiQuMz0hlLdNYLBceLylR4EFhwSA6tcHxw/s0eKkwnaDxa
h74kaFfEs5cKfxtomd/lpInB1X95zu3DePHuJhagXWt/HcjdTwVv1izrODTn
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
jV7pxo/9/j+/R89U5jqMo/8Ad49iHA==
         "]], 
        LineBox[CompressedData["
1:eJwV13c8VW8cB/CUUUn23u49p1AoJTLOl4yyotCSFZJsiaQhmZGRUcqWiIxI
FBKlEikqkoxoh3tEKdLv+/uH1/t1zz33Oc/5Pp/n+8i7+O5wW7xo0aIr+Of/
/3U75pTYVFiUbE9BQ95emtLRG/v0v2u+V35z2jFDVa7dkseO/pftbevSvUAR
0vl7udB+B9apzzoshswVbELL0esTjDf0RbHDynnHzhX/36/saq+8FidEfGuK
4kVLL/uZrJfDBbP90iCAfml2R3emayl4tYf9FkJPXfU4Tb5ZBiP1b2+Kotcs
FLJ9bl0OdiWbvSTQ3/x2nj+Vzg3tFy8R0ujVYwYZfrYrgIqZHZT9fzwNA2Yi
7DxQE7zrogJatDN9etFVHlh9sNaaQB8rLlRft3klZNkJc69Gv73jIEk9XAlR
G3tOrEW/WPd7w8h9XvjDXL9JDa2wvLngpgQf+Aols9aj1S5YzzlY88HuH5YH
NNHJuVO7S2v5oOP9DSlttLxf/1j7Bz7Q717xWhed0r3zYq8APyhVtW/dgk6f
OrTC/SA/ZOcqLjZGb57fNrAukR8Ek2LubkXzrtkTevoWP8z7GKtYotdpjAL/
Aj88W9MiuAd9wyXll3O4ABhIyXfuQx/XVFFvzBGA29ynoxzQSeaJRZqNApD7
Vff3AXSe67jp/RkBCCyuH/RB71k4GKfrIAgXNW8f8kcrjwk1KAYJQsPjmulA
dHa6qFfaOUFg/1Kx/Bi6t1f856LbgpCqWKQR8f/8KS5KL18qBHX1Bfcj0QX5
1Q6yUkIwsC3PPAYtM8Ttqa4qBITnFZcEdKifRtkOGyGovZ5yPgP9eaMId0um
EPRvThLPROeO8pzNLxWChfaEwitoAwn17zoNQmDyLeZOHjr1WK9T8YAQ9Cmf
+lj6//t6W6KSIiEMf8oO6zX/P75ke3nVeGGQ0T30pOX/8Vjdex97SRgMOt1t
HqIf9SZl1xUJw7lxZ892tI1z85H0ZmGQUtmd/hI9n027+00Jg16F4cRntLC4
ZZ/7dhFwoQyOfUNvM4rZErhXBKK6KPYJdENt3nFnNxHomtws8QNtdfNq/4dQ
EXBSW2f8F+26UexPdqEInKmSzuZXZVEjS7rvb/shAmGx26SE0DLdYW5R8yJw
1DkoUwR9Xqtn9AaHKHjyd6ZLosWyWsebREXB2j8skUCvHa2R+LFZFOTWvT2t
hd65Zu7xtxOi0Fh58YAz+ofBVNG/X6JQG/Ng5AC6dEY1VOmfKFQ6sRzd0TVW
lue2copBId9W+8PoY88KJRyFxCDe75dNEHrA1a/gj6oY7FWzM45Fb41k37nS
TQxmKwQVq9AJ7PplmY/EQFAm4V01+iIz6+F0pxioxHOm1KIbXx/uNXwpBm4e
v//cRZ+qqXB+NCwG3XJDHW3o+YcxDnt+i8GN5Ot+A+jF/SY3n6wWB5dA/Tou
NRY1vuTFi9hwcTgxcsdrObpGrDn0dZQ4XNy+QZ4HLXErnJSKF4cu5VVxAug1
xLmulHRx0BlbYS+NvmRxZ5dqqTiI2vb9W4/e00V8Vu8Rhw4NXxMH9B82IcOX
MhKQYRTd6YQWuztnIsCQABebnJ0H0NpnBZ6brZKAWf8uRw+0sY93SpWqBDBv
qIYEoKW9e4e3ggSEMVjFUWgHMty63EkC1vD5L69ATzHK7sdnS8C5LwGd/9DC
z1cxhfkkIeR8X+zidSxqbFuH121BSXBV1zPmQDNLEjztRCVB58Sye8vRb92k
suJkJGGCL7dSGH2r/MvpjjWSsEOz84IyuiYqj7i7VRIkolft3YXWY9eQ8jgp
CSXMgY/l/38+tiNzbkQSjD2Hj1Shy06M+N8bk4T3FWOLa9CstZNO4Z/w+9rj
MvXotXcWJ/37Lglx1gt2rWgNf+3QD78kweuk3KNe9NynyIo9PFKg0ud6bdF6
zK/s24xpDSm4eW784A70IFv5noORUiD/OalmCn3Oak9PJa80THZcSs1VZ1HD
pdeDFS9IQ/E70wGDDZjHZWI1hotk4N5R59tTaNl+yeQyTxnQ5VjukLORRS2z
t1S1fyIDRff2eoEGiyoaDNzlKSEL3ov5V06iOyLvDWYclgVZf1/RlE2Yj+Ph
639VyYLmK8fv6zRZlJt5/eFzU7JQcf+WzRA65cbQdoaEHPD3VzPDtViUv4Vm
K9smOegOFY1R24zv09LB57yNHPzm47k9gPbjKDnz11cOuHuuW5zQxuc7LHRj
e4wchEmXByvrsCgTx/ojfnly0Hdhz7Jn6C8c7pd7bstBSoqnykldzFex06Uc
XXJQHcUjq6zHojbyX/vWNSYH94p2B3egZxvPONvOyoHi9mUHjlMsqu/kLFSs
kIeTDJdaGWBRCy4b8v7IyMPmcfNXTegVZ9z0zNXkwYbKivbSZ1EiqSf/+RnI
w57GtLyVBpjvFjUKXTvkobH1h2UTOlLH8v3sAXmIuTf6yHML5gvs6zI+Ig+6
n44XcxuyKIJf6x9nhDxYZxyTuoO2g51XElLkwSpQdtbeiEW91y05nZcrD7WG
u3Lm0W/+pPLxlctDaPb0mxJjXD+Tw6N6DfKgyNwcZmaC68NfL17+iTxorP9Q
9QctpFov1vhaHq5vVKgu2or5bRC1t3lUHpa5cUmZbGNRzby8vRmT8tAmtUNs
Bu3Ee6BJfl4efBYZhWWYYv2EPq1N5FKAIK+sQBMzzNNa4VMlggow2hmtMY3e
P7Eh3FBWAbT3STinmWO/sDuSfUBRAab8BGQNLViUV8HW9eIbFSD15k3DT+gB
HpGfDpQCZH0Z2xhtyaLu89jp6G1TAPaSsDsbtrOoo6eydzXuVAC71Iai1+hF
9yujd+1XAM6lLmSUFYtqdTwsFn9QAaT9L/mvt8b6a3W+7OCvALKcx5g96Mea
eVfsQxXgFKPJM3wHi6pjt8qYjFCAdq9SMeZOFnVYm8+kNl4BwkqVUlrRb+7+
cVdOU4CEAN4cPxsW9Yw/IUQtWwFi3a4ICtiyKJ07qWpHi/B5h89L3kdL/PFw
MKlQgNUxiudc7XA8lOmk420FeMm0a2PfxaLyT31fonZPAQa3fU69ib72Sowj
+pEC9GQqPLXZjb9XcV5JrUsByCMtqex7MA+72fTtexVg2GBasQq9q7+5UH9I
ASJ1n5E79rKotPb1HBEfFSCmmef2on24f4nUKG+ZUICjvjPlBegisQemrjMK
8FTQN2CLPYva0r+8dus8Pj9YPmGh2XsNuYuXMEDm0qvolP0s6t6OW0F+yxkg
GdryRt+BRZ24phdcyc+AU1b6v8bRhTVVHTViDHi2wyPsvCOLCqqbaVKUZcDx
d9OpOk4sSv+5ar0AyQDBVEXhIfQ7dTam3xoGLOtpXZ3ojPv90/lLeuoMcOdi
cem4YH5sqk1/rcWA8oMPLN+hT5tWxX6hGGBjtbA6/gCL0p1rMPc0ZsAH12FP
VVcWtTIndPchcwa887EJ6UIXFp67oLmDARvYVMRPuOH6T+DOCdjNgKP3KuRl
3XG+P2YfV3NggAhnRuMz9InaU9l2rgyQNuAjjh/E/m0608HCkwG819dNS3qw
qJyCllWdvgxwzKyza0efydnofTOIAZm1n+S8D7GopeF1bozjDNB5XFy7wpNF
hXEI7vA8jXbpGqpHz3JfVxCKYsCq1dl++w6zKPO/IQzLcwzwP9qdutwL+8cn
X958TmLAVVa5XDlaa2+arEg6A8BJOsTSG/Ov9TQpdZkBm3fTLvPotN2vT5/O
ZYBsmPetbB8cb3+Vz/GrDHBZvf2ypS/u7+5vK7qvM2BFe4v5HPpgQvibxZUM
yMsYdLvix6JsmT2HO2sYkDruKGDmj/u926zQVD0DAnxjyQk050eWVHUTA25/
NOQ8H4D1wr51zqqVAXs/uh3TDsR6Y1/Sb/yYAZ/5VW3eoe1u//If6GDAq4f7
W+KPsKiQKzfMHr9gwGpfmXnNIBYVLcW5LPk1vl/D6Kw36PSulNvz/QxYkm/b
HX0U81qbrmgYYsA55Q4fpWDcv4czKfkxnB/d4ux+dHWoVljfZwY0GYpkRodg
v17tmuMzzoCfwWv+rj7GouIti03KaAbEqxf/6EWvjVnzZPNPBvBIdlgfD8X1
rc6wCvjDgJlf4cclj+P63+l479wCA7T3Z2k+QadeL7eeXswErwmn/YfDWNQS
t+VnlnIxYZ4rTljyBIsKb3jh4cnNhCkRo0uP0MyfH1TKeZnQY1181uMkvn/O
ZuFcQSYICvsvET2Fef5kQmBQlAl67O+/1KOVzc+EPpVkQtfnsct7TuP+8/2w
bZYsE+7ZWoxwhmO/IyXYXM9gQubE/vPFaMNTd7qjV+H9eV8+23WGRe2++FAt
R5kJgeRA/5IIFnWBK5aVqcqEBY94y0J0caRFpKk6Ez6p59vuOIvnG4qb1t/E
hLtKTg+m0R9mYrZPbGbCRElEW2Eki2qBJNsRPSZEy2ilWkexKMcrQsvuGDCB
+176kyn0VBpX9TZjvP7TnpS8aNzPrq67JmPKhAadhy2GMTi/D/wzSy2YwIpq
aRpDy/musJCzZkLEHsIyJZZFrQqfX/TGhglsu9WMNsSxqNcT9mfNdjPh3WBu
1yj6TGrK7CJ7JsjtKyCSzmF/9fuGYLYjEyyXWI6qxbOoLNdjrT9dmNCv7rBh
CF0q2r462Z0J1kki4+EJuL+l+XB/PsQE1fdO/vLnsf50a9xXezPhcANf7DN0
z9dVliV+TEhp8Vjql4h5bsJr8TmQCWLWpKRsEouK6hZ+7x7MhFju+LQWtKcq
p0dhKBOc7ka8dUlmUWcfOph2nGBC+o/hGr4UFhUn/qZkfTgTbu/6OHMTffeT
R+ies0zQMLRud7mA/U/ptaHGaCZIkZaevKn4/X8DkSvOMWFc/Yd/Jfpr4R1h
6fP4efvfFY5p+DwnM5U9k/H78ZW8i9PxfH029PuxVLz/lpl3eejwNjv/oAz8
/YgcansGzv/AnrCyTBzfJL2URrdFWsdey8Lxj5a45V7E+3nMbX2XywTxzh8J
5pdYVOBNnsqFAiZceP9Behzd6CXh+aEI6/u0rv7lTBZl9vnGEMd1JqiZ6nbo
Xsb87TCw/V7GhB1X8r+Oo4Wnuxu5K5nwdvTSy8wr2L/U98aJVjNh+y4tUicL
n+duUtrXW0yQ36nH/Q0dNneyeKaOCYOh33adz2ZRVx4ZXXl8lwmLLyr5qeSw
qColbu3YJiac1e2SHEC3J+ctCb/PBHqllOrJXNzPnP926T9gQqPHs1dr87A/
UolfqfUI6+u2wNZ+tCwceyvdzoSV6v/kj+djf+I/197RwYQ4DetExQKs5zNc
tlVdeD83M9cOdDb1PdWpG9dXXC+7VyH2Hy/GYxdeMuHbpiea4ldxf2X8MH/R
i+PjP/DyDtqQMu707WdCcIDLEs8iFlVe3B9g8I4Jvf+WZfJcw/Vzxsd5ZIgJ
2We2zN9AZx2pTvJ9z4TWhPf0vmIWlRz4WX7dB1yvDxS3L6CVvBx+3vvEBIOz
r6nyEjzf8eaeC/+K9aclPL/3Oov661potH6cCW/E52Xn0TpPLDZXTTJh9szW
3uul2E/o1K9zmcLxien+tChjUcEVz9+PTOP6z28dHkdvPTRWa/0L73+rwuHy
DRYV4KP2Zuo35tWPLYa65SyKLc7h0oF5Jgjd1W38jvZe+0GA4x/WQ/ATtksV
2M9HTF5IZyPgr+PfG1qVOH+MN6mzSwh4+Dx9/BP6ZqpQThwnASHefalxVXj+
ZqlnjS8lIOVfKZfSTewPeDnP6XMTwC3xgaf3fze39T/gIcDXqe14SDWLSiTd
J8X5CFinynNiVQ3mUfbc2ywBAgYV5z+0o/exNs3/ECJgSvyExOFbOF/dOiHa
ogS4phx4L1aL583KROUqcQLua0zx30X/em/e/1uSgLADH1963mZRE9YT2n4y
BGRHeh0QrcN8kZYd6pUjoLQnc08d2lDx9xZBBgGi11VG3euxP3W+2nScIMC7
zPPlsjvYn5o0O9WtIkCpUDO5BH1kkRDfJ0UCjJleI3Z3sV/Yd5UyWEOAxXOT
S7Po+6kZlgEqBNxkjx271oD1/zXW5ZkaASdV7Od2NmK/Sa73lFInYOPZ3mPT
6Mcfli2FjQSYutSdy2/Ceml1FkvchPbS5zC6h/vplwapGi0CihdUBWbQZ47y
SrPr4PiiKr/mNbMoeYWbfsZ6BEhvfqO05T7mm3/hQUcgYM3Rgws0utvhXGe+
AQHEYJZWWgt+ztek1mhIQKS2O2xsxefV2HG53ZgAQ/nU/vfoWkHXCbZtBEys
9xw4+wDfd8THET4zAn52XPXf8JBFZeqv2r7NggA3+8DuYfSpgOLSI9sJuCf6
JTO8DeuphMMsxJqA4H0Pfqo+wvw8KT9cuJMAiacmd7rR9yqPcF+3JYCptn9b
wGMWxbHxVUf+LgLipfsOyz7B/kV6gePBHgKGNOZmmtEPRJ56Ne0jILkvQtCv
HddrbvHo8H4CVIpqLgo+xfPwoFvfgCPWz6HgL9Xo9sWiFR3OBFyoyel07mBR
6xLWSo0dIGBY2U+cvRP76feLLr1yI7B/KJqtRmuc4N46cZCALDmfAqdnLOqp
vn7Ln0MEZOoP3mLrYlGVslffjRwmYOZr9b5K9Brp5OpJbwK0m9cd2vkc93Nr
y6A+XwI+x+kb/ECvCEnMuOVPwI93teW5L1jUUA/b4vpAAr7Yvzxj0M2ipl03
DGcEEaDnuusrjdZdG1J8JZiA305e0tk9LOqQsubdtGME5MQq1um9xP3IwuOJ
53ECCjebf/yOvq+z1NrtBAGpoqJhia+w/xOuFdc5RcD7MJOr1GsWNSPzYJFm
OAEZvcsyv6Ntvi8NXh1BwCaHIz8TerH/PbO3auYs1p+34UedPtxPlnFlfYoi
QKa4QXcYnfLiV2JtDAE+fW1Op9/g+XY262JoHAFSyRqiKv14vYf9V5d4Am4F
WW58jg6cEWxafZ6AG++ffjz1Fs+3gUKRAkm43o3eHlgzgPnBw2lBJxNg05Oy
tRP9oi2Nv/wCAfNfKpqPv2NREcLxLufTCEhcE5QrM4j1nsY9aZ5BQIxrh1kT
+oGX059Fl/D9MWPjDg9h3u4rUe3LJIDBP6HGM4z3f3ZW8PwVAh5E1nk2oAW1
rZ+7ZxPQMSnk5zHColwGRn9tyMX6jBR/t/Q9i3pyX0b/fR4BfIUR72rRJ25y
Lr5ZQID5RJrRnlE8T/zLknW+SsCnZh79ZWMsqkHU2H39NXy/MaJLa9F23n+t
fhcT8DLsicauD7jfTg9x5V4nQPb38CzHR+xnow7GepQRYJuXq1CC1hQy5eMv
J4DWmxLd9gnz+sy1GxUVBHx3Lcn9iS4s177rW0VAd+3S5IufsX49JjX4qgkQ
Se4U2vqFRR33Cuh7UYP55sR0nUbf/Hz2RGwtAbvsGZJpX/H5zxX+lq8jwGw4
2m3LN5x/QszgbT3mVVKq6Ee03Q+PjKC7BPhtVE+L/I7zazC9j7ORAKEDm4rW
j+P5Pkc443YTAQUNozIv0c1KHfqmzbjesmeUIibw97QSpf7eJ8CzrCKbnMT8
i1W6nNxKQEnF3Ls2dETuhTqphwSYaN+oPMLC8/lwxs1HbQQ8n+L8JkKzKNGD
TpU2jwm4vb6trg297KWMMVs7ARweojsCp/D9Bnd4FD7F9fCEb6fQD8z/ix6T
ip0EvLrp+6kFveeX2d1nz/B5Hx8ddZvGfn+lj5TdcwKw4S3lmMH3bano/fIF
AdHuKzmr0SFlI9X+PQTUE7ce2/zEvJUJ+Uq/xDz1vi/D/gv7l/HuV0mvCTC4
7giVaNHTZ3LIPsxHwaInVrN4fmycq855Q4A7+46PC+g0lVSVTW9xP5Mv8sz7
jf3A5QsKNwdwPTxyPGP9h0Vd5V+tazZIAI9LqdsC+qWokcvbIVzvq3Mqc+ZY
lOpq2LN9BOs1ZPa85Tzmkf0apZH3BGz98fsljZbs2fHHbgzr6UDCx+S/LIpK
blF98IGAJvuoc9QC5u+V9BnLT5hn4asujqBTFRgrmz4T8EhFRTP5H4tS2Z8W
avqVAJcXbQW6i2jqCte89rNvWK85XMGDaHXTqQKNcVwPP2+8i2ejKS+/VpGG
CQIuH5svVV1MUxKE7D6SRcALesCoC+331Ms0hsZ8n1IIDFtCUz4hQQucPwgY
k+FfKsNOU4+rtXs8p7Eee1zVOtFV3/jUv80QEFvj1OzHQVOhwvHvrH4RUBc3
IcnPSVPeK312l88SYPRlZPk99KOVY+Kr/xDQGHjC2ZmLptaPQ2D0HOZZ1Ekz
/qU0FT831L/4L66H8/xsTeiK215Lji4QMNdiLuO4jKZ+mUbwd/0j4Myp8Wc8
y2lqzL3tyxY2EqYPanyqRG9VdOzKXkxCpxH/UytumtryMeIhvYQE9jJrgwX0
yUovQycOEki9zfK5K2hq4wsJiVucJBTtjrmwnYemDv9rMSCWkpDg4fFiDp0M
C14Jy0hwLGQdvbKSpvhTezcNLCchyWOwwpSXpoSpNCHjFSSU7j5iNY6WzHhy
O52HhLV6Vxri+Wjqq+PW4qGVJKwsU2zQ4qepNmtZry18JPQbOTLeogu+2uic
58fxefyRjhOgqYH7gWU/BEgQr9U9vVaQpkyWf7cAIRLSfguUd6JTfrnujxQm
wfehhe9xIZpqWZPWNSZCwoZGtYvSwvj5usDbymIk7NI9ZtOJPmJR2xUvTsLI
zZ0Dx0Ro6ll6i8lHCRLsbF4/lRClqTdLqdBVUiQonWyyfIIe3r8m94w0CZ97
LLW8xGhqfHVbwUMZEnhk/Se5xWkqdcM1CzY5EpKnZjXr0UFm9pV28iQsmlr9
da8ETb2P/LwuVQHn/1iTynJJmrr9U0TnG4MEtl8f9GrRWvaPBjcTJMjl3qq1
k6IpoZ/fRgJIErJefL3PLo31UGWk/mAVCRyqjzdcQ2uUVnEurCbhqRC39i4Z
mqp9pPDbSomE2cmhFeyyNBX8ZSH/ijIJfL/sja+imZoyvC/WkBAdRQnayNHU
b29uZxkVEr7ot5v8QjOF5dJtVEmomvpokiFPU5bK3g8i1EjoUz701lCBpvxT
juc9XUfC16QLrz+i5+YuZs+vJ2HvSYZbOoOmirM3SBtvIGGds9E9AyZNrWWb
jI7ZSMIPX97wUfS3VCGrGg0SBLmo18kErp/Jpy6zm0iQaRe5sIGkqV3f908R
Wlg/Z05LvkQfFJwqM99MglPr9k3hq3A863ROnNMmQVLt0R2F1TR1PiyfvUaH
xBax8MULdMjmbUendUnYbKxoFaRIU6/73jTKUCRctYdMYSWaIr9uMzMArI+5
huBWND9TPvGEPgnMtpEGN2WaEtg2P5JvQMImca804TU05VqS1Ty0BefDOUar
BV3jm98nbESCyGtzowNraYqe3KylYUzCm+6jY/wqNLX3eA/tbYLzO7f1Ww3a
zD2ML2krCVfEbzTaqNKUr1BUQek2EnibjzIWq2F9ut+yHzQlwTvlM6sA/cKo
5OacGdbb+D3rnetoSsmqjUPNggQLXcWT/9Bed8n7+y1J2Fe/WSB3PU3duBRs
dXQ7CY8bq7Qs1WkqRkm+9KoV1s/E88csdJ3E35l71iS8LrL9lrsB5zfg1yhr
B74PG683FhtpaoavfaekDQlzKsqqk+jrX75/UbMlwTl5u1i2Bk1dY5lM2duR
cFNW6pD+JppaFlSqc2QXCZ4FoZEj6Cn/fRC5m4TTFXobEzUxT+ZWRZftISH8
03XzdVo0FW4TvOXeXlxf18J+DaO1vq+W+ryPhGv7h70TNqPfpuUv30/Cbuq7
mYo2Tal4B3eLOZDgUbK/cQAddz9nUseRhANUcPopHVxfbL3PzZ1IeNCuoC2r
S1M9GWxpds4knB1UD+xA28asFD/qQoKqzLiAjx5NPcjKTAk/QILmR25jaQrX
s1xdUb4rCWv6u4eb0eHaR9sr3PB9tSqbOANNPaRLPtW6kwAbvwKvPk39vNYV
0HOQhLFuq/wqdFjFar0BDxI+zUplOBvgfLU92PHnEAlWQsd3rdxCUw0xbbYC
h0ko3Bd+qgIdKcnRLuKFeaM8vtnBEH+fGtqr5k3CDMnmwGZEU6qdAkc1fEj4
LXrNPA99xvpzlYYvCfbJN59ZGmO+rLcYMvMj4bqGex0LHeZ2/6GFP+aT66mN
uSY43kbnUNcAEg5FK50034rzwzlqGBRIwsHXJ1TG0fOTub8CjpDQekMj4PI2
zJ9UP4vIIBKWV2VI65livV4oLDh7lIS6krjUd+gNg9xwMhjnV2k0O84Mx7tl
xjY+hIS7vaN8a8xpKnFM81L0MRL4eUxF3qJNj75UzwglYYfP7oiTFpifh+IF
U4+T8OfB7F0ZS5rS/vXY4lwY5l/hQnQH+qp+UG36CRLo8rK7Pttpqt30WFLi
SZxvg+YzMlY09jfmwVdOkfCz3U34KVqUy6684DQJGaeqeb2saeptkkfExXAS
0hvcsyR20NTICwudvDNYf0RLSiP61qD09YwIEl5EVOzcvxPvL/I1LeYsfu65
uHi5DU19qvqnmxBJgsSJvwfK0M3WuQ9PRWEeiTlU77OlqVOBy79ERpMQWGz1
jMsO54f90OmoGBKaXL9ZFaOlJj0UgmJxfku+udvtwvkYTNQMjsP1I546NovW
O+vue/AcCeMC+TPFuzH/jx344xlPgjGbQbftHhz/u8EVhxJIiJOME/mF/vMz
wNP2PNZj06aJq3sxr0WIGZtEEurjE9Zu20dTfMuLhg2SSLhhFaT5BW0nJnRK
OZmEf1daXqfb4/jTZpirUkjQEa4b0NyPeeElZ8N/AfNaWPDoZ7TTuceHV6aS
8JZ70dtUB8zD6w1rONNIeLI27dpGR8y7yc8539HCfYlcY+hA6fZXH9JJMC9f
3xXlRFMc0r3dnRmY98cOupDONOXeJF5QeZGEj51ssT3ou48u8Rddwv3MwlA0
yAX3j+37fOIySRCw+67JPEBTx7KdzMIvk2AQp9PyCH3rnbnywSuYl9Uyoh6u
NPVu45dJkywSutzc/wm70VRU5Us+7WwSKrbYba9DL2lfs086h4SJktL1Hu40
Jb7ceIw/l4RUjgsjQgdpStCscytbHglEgsLsLTStWv93CC2UJZrv6kFTnd+2
dz7Px+/31VRzHcLnMdVlqyrAfFg+lnQNXdB0UjO+kIRnrSFstp40laZ24eCx
q5hHJbfe/ESLWW2WsyvC+hTdbVR0GOstm6/G8BoJiaHxYTu8aKopZYOBSjHO
57JDkj/QRZsuneIqIcFFvtQizxv7y01qQVPoD65pn7b44PfBam3ndRIeqX0Q
mkYHtLuE15fi/jzVxpPni/1lYdFwbhkJhkNWPgZ+NDWblbkq5Abmtw240Ojd
D/5+cionYefP3sZUf8zHFqECrQrcrxLYPmwIwOt93BN5Kkk4VpaU8x599uSL
nil00a9H988G0tRqiaMaj6twf37qGrzhCE3da+18VX6TBEbqhdlhdIVSRVZS
Na7XWM+R8CDMi+v3rrnUYH1xXtuvdpSmXOI5Oo1uYR5XnNPvQaupjhiL15LA
slhMBwT/v76EV35GDxwZVJcLoanF24jnj26TUP3IZfA+2nOX6rKLddg/5ZtL
+R+jqdKPYQrH6jG/Ax8T0qE435rFp23vkMDt9z29Ef2XLT9E4S7efzro8uHj
NOUWtldtUQMJzVevca0Mo6nnW6ovPENPDOpxNaHXB8ReudFIQgSPR7fnCZpa
ubTpd3QTCUs8tDhWnMS8Ev7B3HmPhPemfk/voN0ex75SaSahbM/23/tP4Xx8
uO02hx7Y3zz1F12/EOjdep+Ew1/TT5WexvtVxr293ILvM1/4iEU4zm+fjKlb
KwmNo7/n5tFjf+I5qAckzIv7bS85g/1PxF41oYfYT4edX24ageuneDasH13u
LrBnFv1dSPdXZRsJ8if0eC+fxeufOhSGPMI8iZlP2hxJU6N9f95rPyZBXVqu
6BOaaSe8jvcJ5v+7bwqxUTT1ce/0ix50HyGtrhmN9V4ac6i4nQSjzJ/X36Ln
8+tdfZ6SIMbuMnE8Bvuf8oB/qh0kmP5c/1AxlqYyXwkEsnVingmVLelAP333
6tAD9Ps7ca+Ox9GUUdEi+YxnuB/YzQWsPkdTEZIdvm5d2N/KCIU8QQdkljoT
z0lo8EnhC4nH+dL9OTON7v5axyeZgP21QZlu7QsSttv7D9xBW0tX6wZ2Y39j
l6jtcR77h8urWqkefL/HbRcvT8R625QrsYAWVgq3r0dvLLg59PQlCbmdemfc
kvD+3va2aa+w/8oq5OVMxv3bjKfB6jUJ36Z91WrQihuUAiV78bwRMlpnl0JT
LCll5T70k7MNLzkvYP+juUyqsI8Ey6hVDdXotdWKTw+/wXyv3sxtm0pT/9a/
ukT0kxB/qHp8SRqe18zOnp1AG5m93HQNHVHolV3ylgQ3hWgLk3Tcb9fPpDkN
kDAanvNzGv2S/XIC+Q7zk8eJKyODpvYX978YRAvJR5UaX6QpbpNt/64OYh4q
6Un+QMcoDC0+NETCYq9Nt2bQIyfZfxxGt9xQ2z6LPsGrMOqDNljHiPiL/thp
1HoEvUVz6TeuSzTFaFGNOI02NO6+I4VOzEpgu4g2dnHfa4y+0u4/24bmLHSc
3oquH8z69ATd9mH3eTM0odTyuuP/6w+ZtVihLQ7+qOlGm/ipKe1DR56Y9RtE
bz3557cvukcl4dMMemnzjwsBaLNWndez6Mds42uD0OlJYw/m/r8+csg5FL3i
tVQ+2zAJ2+IfPDmLFuJVs+dBL3/WeCAa/corz5QP3c57+28sWpmdW0sQbXqh
ZF0i+s9Qm7D4/9e/yn+ajL7KFGeX+v96kStuqWijggNTMui43Wn/0tE/9xUN
y////czzly6hn1mOPGOi/wO42ZJo
         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, Ticks -> {Automatic, Quiet[
        Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& }, 
     AxesOrigin -> {0.300000000160032, 0.}, FrameTicks -> {{Quiet[
         Charting`ScaledTicks[{Log, Exp}][#, #2, {6, 6}]]& , 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}, 
       "ClippingRange" -> {{{0.300000000160032, 1.099999999839968}, {
        0.4568884820647407, 12.313592446197097`}}, {{0.300000000160032, 
        1.099999999839968}, {0.4568884820647407, 12.206072645530174`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.300000000160032, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, False}, {True, False}}, FrameLabel -> {{
        FormBox[
        "\"|Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]|\"", 
         TraditionalForm], None}, {
        FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       GrayLevel[0], FontSize -> 12], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Linblad Terms, Out-of-Plane Polarization\"", FontSize -> 12, 
        StripOnInput -> False], TraditionalForm], PlotRange -> 
     NCache[{{0.300000000160032, 1.099999999839968}, {0, 
         Log[200000]}}, {{0.300000000160032, 1.099999999839968}, {
        0, 12.206072645530174`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"N.N.\"", "\"N.N.+N.N.N.\"", "\"N.N.-N.N.N.\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], FontSize -> 12], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.809125901001849*^9, 3.8091259162631435`*^9}, 
   3.8091259535374255`*^9, 3.80912699363379*^9, 3.8091272290126657`*^9, 
   3.8091273464210105`*^9, {3.8091273824496427`*^9, 3.8091273971366963`*^9}, 
   3.8091274673445*^9, 3.809127539114722*^9, 3.8091276432821884`*^9, 
   3.8091277170661225`*^9, {3.8091277501006975`*^9, 3.8091278138668156`*^9}, {
   3.80912797918826*^9, 3.809128003663431*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<plot_nn_nnn_sqgrid_coupling.png\>\"", ",", "plt"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8091276397565823`*^9, 3.809127686600933*^9}}],

Cell[BoxData["\<\"plot_nn_nnn_sqgrid_coupling.png\"\>"], "Output",
 CellChangeTimes->{3.809127672359028*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091271572814693`*^9, 3.8091271589988317`*^9}, 
   3.809127194993588*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"ComplexExpand", "[", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
       RowBox[{"GdotP", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<Re[\!\(\*SubscriptBox[\(P\), \(i\)]\).G.\!\(\*SubscriptBox[\(P\), \
\(j\)]\)]\>\""}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.808919203650082*^9, 3.8089192366372766`*^9}, {
  3.8089192957696066`*^9, 3.80891933003343*^9}, {3.808919478028981*^9, 
  3.8089195807046213`*^9}, {3.808919627325328*^9, 3.8089196445152817`*^9}, {
  3.8089197441859903`*^9, 3.8089197679996195`*^9}, {3.8089199813401203`*^9, 
  3.808920315407258*^9}, {3.8089203790375905`*^9, 3.808920462318551*^9}, {
  3.8089205004960394`*^9, 3.8089205027151155`*^9}, {3.8089206609352984`*^9, 
  3.8089206764697356`*^9}, {3.809108750050517*^9, 3.8091087910983624`*^9}, {
  3.809127027911147*^9, 3.809127063347514*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
pX002hT+3HBfpxkWC3k3syyPSa3z+6jVd9TnhUNlEvCDVPEkLsx8tXVm0D3c
N+sscZvkkI9a2VLDuegHZ4M3/oZfqS9yMoA/fIiMCP2B+Vs2ZkdBDu5HXl5R
4ieH8HdZOAjB33+OL82Ej6ZF6R/OZlLb9kYX5Sn0m/OPn72+i/g5s2ZWNRz8
xtlbDfbYmDmp94tDNliubEi5w6Tvo3dvboZnlR39zAufKY5qs5hGfzjrvtrm
NpMKDL6sHoR3nrRgNGYhf9k3p4//5pDzK5QVGLDVmbxovj8cYna0dTo4E/V/
Rb1XJDxaFxUzfItJb95wy5b+yyHllmJMfVhXbsnGDDj1ctepnJtM+nbzbOkV
/7CPOlUXicPXVAJMSmHzwzHsoxmof4x/r7V5uMR3UfLbrhuYVz4J57XClgHJ
zWrwyyql/v0zuERrpVDkpes4P6XTNv2wfITGin/XUN+O2Kh7zOSSQJ7t2ebw
suId1pPwM/pVoCYd3/eyqTucl0tW17voL4LHowJvS/Jxyf3qOqtjV5FfhlrP
r8KNMSssu9KYNLc/YsvqWVxyYXpYcQ0c7sMWKoWXB8wdungFz8s9vkprNpcE
X80Km07F+ZTFpz2H5xg6jpvBuo1VdmZzuCQj5ZlR2WXMm/e8TwzBs76LO4jA
/6k5cL35uaS++9ch1xQm3VZukzkND4izDrYk4/cWjTyInsslZgYX5ynAln7B
sgsFuCR0eW5NxCXMv/dudmbCYituLn6bhPkt9B97/Twu+STz1kIDzrZ00q+C
7yrF3LuciH4pYDllKsglNjHbr3y+yKRfK61mdsISfN+u7YLnCF+ythTiEjux
9qTiBCbVWWclNAYfO8mSEYTtDq4WPS7MJQa6sx+5x+P3reIcZs/nkg9vmz89
vID5b1pBOAkW1ambKwXLXH0mKCPCJbV7NXeejGPSI+J/LXLhbPtLIq2xTHon
bvMMdVEuWWs+m3c1/O7u/V9lcKrS07H4GCbVvly81XAB7n84Tf/DecTr+Sec
VrhJck+vAfxpr+1rWzEuqeZz70iNxnkvE5QZgdvfCIj9imLSi+fHSjwX4vc2
tRtZwAIvLG7MEOcSNRO+vnuRmH8XdLLDYfHX9yqE4DGlt97SElxyWob94WAE
3pez1DIbFq9aJFwYzqRd19yS1yzikmlXiegFsJOaHvMRHNS/ztg+DPFdr8Rv
JMkluwzeuD48x6R7fm8nrfC7mD/R8vDYrO9PD0lxybLHwlyvs8hPsdyb7+Ee
8WeZL88w6aLJL23+i/H3fY9elIcrfI/snSvNJaxde4OPh2L++/NjVSzsY2jP
bgth0l/7hPfJyXCJrU6l/XI4sWRNRxb8d4u4TVAw9pfhd7c2LeESJdMzx56f
xv5V1djYBNs6yIcthUsTqnV3LeUSuv3IspNBTBpKqDAb1jb99aTxFJNqfHqh
4ibLJRUbGJPL4Q9aiRmf4Wrh/erBgUxabfPBOViOS47cVPFsDcD+FWFwhl+e
S5hPmbpKsM059c+X4RLLQ3P8TmKeXnYgX3EZ4olNOupPoB7WRT3Nh682ym1f
Dk+vN1y1ZTmXnBVef83Tn0lf5YkPN8K9DLPrjX5MmlUvOW3K4JLRcmYZE75e
dNvyLRynvP+2ly/e/5beQkcm8s13m8lzH/QLNw+Zn7Bqh0CNJBzT2uoXxsL3
c/h1nbyZ9ORGoiSkgPP/2Rn+8DjmLd9NKlfhXge1GCE4vGxLGHMFlwgYBlk4
eGH/bO1cXQrfdErtu3cM/fncTRWDlTg/flGf6aOYP+ipkBdwpnft4B54soXD
OqTIJfm25ZNpnog/u/3yH+AUr5Xcbx5MKp3I6+muhHyxcp40hndd0Zz/F14j
dff6pSOo/1mn+c4qc8lwx4m14+5MWhS223DRKi6JXGxrth7+PtuSkwlnBHon
BB/G/BV5rF1ZhUt0Tyc+6XJD/A6Ki1fD9loC/vJwpvbTbD1VLglzG2T6uKIe
bLyX1ATPmnHxz3MXzGcCy9sOrMb350lsXwT79N+0ewdnaRtfPuyM/SKsUM9r
DZesXKZuVujEpKvUWwKn4d9HtyyeDZ8IXiYQrMYl6nln51s6MunojZnvRddy
yfeRcusMB9S3hk9SKTDrXXLDpD3mrzqXNKV1XPI1SDJYE95qKe1dAafr/LEL
tWPSu1PdN3TUUS/ifQ532mI+OMyUfwWrjO4skYHvDAZ+P7Ae9+tpqnzEBvPE
T6GlA3Dy2PPuukOYDwYVL3lqcIlQdG45P6z60szxB2y1w739gDXi6+K8cxEb
UE9d+SWuHsR88GNqSnIjl/zL04rkWGH/tfr+6Cp8csh/qwacmxLYr7qJS+R2
CkuetMT7di/Y8QCeveS/Dc0WTDpjfJ2IoSbi8ZGmoyBccT2G2QMrSKxu3nkA
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
kCvFSLRUxXwJp+M5ArH/lBZp9aGlyi49sL5IwstRzxUOajR1vknhR6kfCQGz
L5yn0Rcl99IjPiTI8axm9V5DU94SkQr63iR8/iY5ulSdpipep7YdP09CVLeo
cjxaveH5aJknCdr2Ro8l12K/UqzQ4fEggb2GK+0uWnJXYIKWG8Zb/k3PWg3c
b1mHYv+z2C8tVzvWo3O3ekRlnCHh5OrqzXs1aaphLM7r1SkSVLlsvXrRoQab
TomfJGFZWcjCCS2asuSMqNM5TsKAU3X3NHpnvoXZBWfc/6rV3Be0aSpv9Zzm
02PY7/pXXl6yDv+/hqrkgCPGa6nGwavo7erlgUwHEs4vbQom1tNUzIeJxA2H
SXC/e33xPlq+lf+L9SESbMxc29br0NTWEQ7OxIMkODR0Tzah99LpJwtsSbA0
MHW22EBTxe68nQM2mM+xZupf0KUFr9QmrbBegkJN3XRpSsCLfs1hSUKgZ0vN
b7Q0m0eLzl4SMqnUwAg9mipw6TLZuhv7N9/Fm8s20tTX4jXmZyywHs4ncCeh
p6Q+Tqabk0BX6TYo62M9cevfyzclYWFx7F0xeiS33aBzB4n3t1X6WzbRlKj9
eEKnMYnzdOrPDnRE+stDH7eRcDWG4LChaIqUUbfjNCShi6nhMIpuGdfKY99C
Amel+fJzgPsbcc2KMCBh7bcM5ixao8mi05jC82E22OeyAebLkxWqhvokPOY8
pyKwmaZ+ee7aekQP63NkXCUN7Tkm2b13A8ar3T1o5RasJ/tGa+f1mI+WWqqF
aHhi+yxYG8+fkoCV1FaMZ0nvGndNEo4K915oRD8f7x0LWYv5bvhE2saQpoYC
eLafXEPCbsk+4RG0da3Ggf2qGK9JHrsz22hqklWIOK6C9ZTyZJ7FiKZecNxZ
Yq6M+28W8i0M7dLB6NqjRAJ3SqCWgDHmyyx79WFFPM+e8rbcRjuqHd22hSRh
6WhaleJ27M+vX0gaMUnIHqqbrUAv86haISeP9XhJ7orRDozX3/zlf2VIqFUI
PfcKXbEyp2ZRCr//pne+nQlNBepeFn+znISZZb66NPp93hWrF+JYX6vLZE+Y
0pQY95OhZlGMr5TPrj9oNg3HjGQRrMel5u8DzfD7JvXvXxUi4UpHQdkyc5oy
VKz2thIgQSNFik5GX80oaTPgw/mGq/Y4cyfm30uJGC1eEtINJ6kSdGazsM8c
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
       "]], LineBox[CompressedData["
1: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
KyXl3/ucVl4ogP8PgDShwA==
       "]]}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"Re[\\!\\(\\*SubscriptBox[\\(P\\), \
\\(i\\)]\\).G.\\!\\(\\*SubscriptBox[\\(P\\), \\(j\\)]\\)]\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{
  3.808919237352329*^9, {3.8089193109358196`*^9, 3.808919330548684*^9}, {
   3.8089194917158737`*^9, 3.808919581306847*^9}, {3.8089196286138535`*^9, 
   3.808919645304185*^9}, 3.808919768875477*^9, {3.8089199918659987`*^9, 
   3.8089200376462717`*^9}, {3.8089200692750797`*^9, 3.8089200932250504`*^9}, 
   3.8089201691841216`*^9, 3.8089202008216887`*^9, 3.8089202338773336`*^9, {
   3.8089202757319865`*^9, 3.8089203167548923`*^9}, {3.8089204448168306`*^9, 
   3.808920463748728*^9}, 3.808920504677824*^9, {3.8089206625335703`*^9, 
   3.8089206779272723`*^9}, {3.8091087655526385`*^9, 3.8091087927988853`*^9}, 
   3.8091112860477877`*^9, 3.809127066867016*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", "\[Pi]", " ", "r"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["1", 
            RowBox[{
             SuperscriptBox["k", "2"], 
             SuperscriptBox["r", "2"]}]]}], ")"}]}], "-", 
        FractionBox[
         RowBox[{"Sin", "[", 
          RowBox[{"k", " ", "r"}], "]"}], 
         RowBox[{"k", " ", "r"}]]}], ")"}]}], "/.", 
     RowBox[{"r", "\[Rule]", " ", 
      RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.6", ",", ".8"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "100000"}], "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "3000"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091110649692273`*^9, 3.809111275475924*^9}, {
   3.809111349324535*^9, 3.809111350169325*^9}, 3.8091117238314176`*^9, {
   3.8091117552494106`*^9, 3.8091117757927375`*^9}, 3.809111812474568*^9, {
   3.809111843142795*^9, 3.8091118603924522`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
DPNtrSAZhtsCdR8sgQeTv2h4HuSSyzzPnjosxbxh6ODLY4N6I/XV5pIikxZN
ceeGwtwho5AOFhzy7beULep7rYD8DPjKHBGd6/CxIoXtukwmDV5/8CXLjkvm
O1wWC2Kgv60nZfdhpwu9pGAJ6ouO8ncdey4pVtsvOroY++T8zKAX8JUtzA3S
cEGMua2NA+KRV/SboQKT5s+el/wetnK8euCcPOqnpaW8vyOeJ7RSrEgO+VJY
9IfHCee5q+rM6CIm/Xhjo9o5ODVHME4ZlvI4UCjpzCWnOHYdexeiHm8IDU+F
7QIG38fLMqlb/4a7ai7I37LbCtUy2CfklNRqYPk3zz8PL8C+bc+Yru+K8/Z+
naoICwfmMDvgTzyBB3dIM6l2KkmzcuMSSU7YrEgpJo2LPejyGb6zWazs7nwm
5SwuCz19CP26MIK3XxL9smzRb353LjHw9NOfDwcy5j5Igitmvz5OJJi0IV60
V/4wl3yp21/gLY74Sd9snAXrnBSPyxdjUv+zs2ev8eASY8tz5l3zmPTZoV75
athwy2fFObDBsvWh2zwx7+jefLpqLpNWnmnRfQtvODQqeUAU9YBzZIfjEfRr
cikkYQ6TpkldL/oBd0lJ36kQwXy0vc818CiX8Gq+4v0szKTeS7f78Hlxydol
jaJLYb5X29suwuwMjwYzIcwzZ63PyBzjEunFoZUhs1GvZ/86lwcX58QaZwsi
Pi5ef6PpjfjbNVu+exaTLqo6HVUBc94WForAj8tHwk18uOTRutomDQHMj5UO
fS9h76mm9Q4zMb/EuwU5+mL/slRafI4f3yNwy38CPpBUXnN7BpPuCf5Wf9KP
SzyGXZ/08eH5L5ocRfy5JDd/sfo/XtSPJfkWibBMpoqQGuwo0Zwpcxz9UaC5
wHY6k67o9dLJhW97+2Semcak3KxlqitP4P6sbGTv8WDeNDh0+DEslvix7eU/
Br14dnD6rpOYNz3eGU38ZdCdDe6jPbDf+fR9ivCat0FLDwVg3hfWiTP4w6C8
v9PLvsELwwXcjv1m0KclU1f9TnHJgIewVNYUg1YYvGsXCER/MTvV8/gXg8b1
vDwYA8tWeG4dn2TQaL2d2gqnuWR9/r8GUdir4I3HLXiHUeZfrZ8MnFfGhGoQ
5utXL0TcfjCoZer4sxqYzqwRCZtgUJPgHVMGwdgfqjz7ir4zqM0Gbf9ueM+c
0ohn4/i9BGtjlxDky4DQ7OFvDHr4a7TXJ5hPyt99PhzNMB45fYZLnPObklZ8
ZdBL+8UrBM5ySdjo3/z9Xxg0VU2i/zz8J6wjL/QzgzZ0p29fdA77jPJ66/RP
DNobqi1zA35+K2XO0zEGlZjtoLkmFPHr8dOGPcqgxssfZTyBLULM4v+OMKjr
TnVnkzDc7wbHzqXwHbNlAX3w6AaDbDrMoD2mah/sw1FP1ozEOw0xqMriuowf
cEmQ868THxn0eEJUUWgE3t9lq8HFDwxaKGQvLRKJ+mXCeljxnkGF9zW0pMEt
EYyM1kEG3XFrXa9iFOp3jlH1OBf3mzSwIQ+uOmH0UhaespQa0z7PJUK/ZTQ1
OHhfpsX3R7DYwZmDu9kMWlunZLonGvu8lP0L5wEG1fi3YnIQNj0Uc+fUOwY9
TwymDsUgn277fsp4i+fvem/6F96ckbCz5A2D+hxOmDgbi3kglsvs6sd5sU58
E7yA/nNo9O+fPgZ1Kh6lKfCcm0YcUfi1vjtHIY5LmoU3mazsZdBjuf5dRbC2
QG3extcMOiEZv3hDPM5TIeSKTQ+Destzah/Ac8h40pluBpX+9yB/x0UuCRg6
63uxi0FvvMsd74ZzXFf9LOpk0D3JjIhDCag/Rk8213Yw6IzPL71+w+u946+0
vmLQK0axRcGJXNK9WvjW53YG3Xu8W0/8EpfUMyQO/XnJoH/y1JSuwGvVSr5I
w2mnq+wVkrBv1LnGrW9jUMelXZ8K4TTpkhebXzCoZPu/1rXJ6EdGXz7YtzLo
sHnx9GZ4pE0w8nALg1Yduxa2/zLmv6tR5ORzBvVLSrZ/C39PFh9IfobnX5C7
cCSFS95eCJvIeMqgCtF3xSbhSc2VfNXNDDrnYNtg5BXMO8+vejxqYtBfrctE
ZFO5xPVK9PjzRgZ9rh8dmQ5vE9YL/9jAoPUxgftWXcX+ULXS9nM9g97qCwio
hHW6d+2eCYc2FX3XTeOS1r7244ufMGhklE91G6zV59a07DGD+u4w6Nt3DefL
CjfWfcSg4aPpJiOwiJ0Ie9ND5I/iGtGT17nk8YHW6yZ1yC+HrmXT07Ff7Ftz
y/4Bg972478YD+/ndOY61zJofoyuuUwGl8QZveQLqEE86xc7X4PTDXxSEqoZ
tKu16Jl6Jua9WaHil6sY9IN1bdh9OCm88+edSgZd+GjfxS03MI9FW9zOr2DQ
rfVK412wzXLFC8XlyLfnArcPZGGfOvv+V2MZnn/bq+AT/C35t2RzKYO+jBgW
8s3GPLZYoK73Ps6Xfi6bdRPz6OCdWT0lDHrookpFMrz3o2r063sMzCPe8+Rv
If4v9ZeNFjPopLRJeSFcK3zTcbiIQbWM1UrX3eaSohDuk8m7DOovYyRYA4d9
DjkpBPfVfsndmsMl7vPkkwQLGXSZa9aNDtimRi1QuoBBL394P+acyyWW4mP3
xPIZVIDfJuonvJ2zbO28Owxqrfg+8FQelyz2L76qkId8Wfjr4Zw76H8meWtl
cxmUSi04cAk+8DfioWIOg6YXHjGRzeeSEPu5RWtu43nyuyNz4c9Gy8s1bjFo
ctxm+ZUFXNL+83mTzk0GVe15POMxrO8i06uZzaC5zO26poVckv+okVcni0EV
RcVftMHa7jZJRjcQTy12hXZ30Y/S5eZuzGTQbfG174fgc62HyowyGPSv8u3D
AUXoT3NcVHXSEW92zVuEizHPXeybsfo6g2qnTR6Ph8sNJ1jkGvI7v/g34x72
3ZvTf2ikMWjSo5PtufDihPcL115l0NV+J3k0StCP/XIf6KYi3nlmBdTBD9TE
f2heYdCs8+lbt9zH+7aopWqlIF4/NRx9DZ8fflapfJlB9T+zhlxLYeEoM/lk
Bv09fuH+ZzhmX6MbKwnx9jz8VVAZl7hxv7MlL6H+50ZvmVWOeG5d8V0qEflh
LS9yBfZkZxjOSEA/KfzIUqngEsHj1yUn4hlUZ2Ztwl1YX3B+8s84Bl2psWTX
pkrkJ9tNh3uBQefaxLs+hYmEVBY7lkFHVLXat1dhH3YQzhyMgV94RA/Ahek/
b7yMZtBXfoVXXaqRz3ddz7adZ1D2eOC/KXic13ZrRRSDjs05VxxZg/n+Oc28
GcmgA6rJNXNruTjK9q/ZEajvi9fJZMCJc3JmXwjH9y4YfKr0AM839VeJCsP5
FTa15cN7HYrGI0MZdNGiDctoHb7XzdrJ+xyDKkWXv3oC53+f+ON5lkEtXj5u
2/uQS0qFWxm7z6D+yvYz38G+s5RPmYYwaBSf6jPHR/iebLWwLcHolw8EH/+A
7z1on6YWxKCjwePzAh9zyYI7l5pYpzFPSLsVzn3CJbpO8h9mBjLoKTPpzOuw
ovjG26MB6I+h7SOK9ZiXjJS7uScxbyTKniuDjT43rK8/waC6N4946zbgvHTU
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
      "]], LineBox[CompressedData["
1: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
Jd4Gm0RNFrWBJz1/LYk4klGrco6NSTHk27n6hhzwwYgUu15wgevNDkknMup5
yP/M+QkVP8Obef8p2LLroQ0V3GjCM7P3JBmtv31lEfIUzsvE+WcdOK5zLo+u
BPI/8UEIfgrmgzNH9GPBR3576zaD30yoHhJ6BvN47Of2I87Qj22UY3LBayuN
XV1g0sOXBOVS6N/Ni1F2p2EeSrrE1Qq+TXkTMgWOjtCzMSqD87nxnNbNBfqX
Yfb8CHic7oH8EpiOm2Hk9HOox9t8S4GuZFQekidMBXu/4NxaAl+veffkYjns
S9biBSFuZKS3QZf8DxwWMze3AZbm6uhMqoB4OJLeHu0O8dTRYk14AfOsOh2F
3QPm1fB3qoVgwyOpFTfBTbucvVUrob/v/s3M70lGd/PpfzWBkftHjrvgOzuV
uyyrYP/uc06V9IL+wpWx8RVc94rXowjsK8px1auaii+ey1mROkNGwVsclpvg
7yn9a6Vg1y+ioZE1VNyPS+blPm8ysnA5vcFcS8UvJ2j0PwW71O1/mw5OoOid
2O9DRk4CvAuSL2E+euD1uBx81TDcpQLcFhjrdMiXjO4LYvI6dZBvDoXur8C5
PwZM3oJ3KDLpaPpBf0vlbrCrp+IOogkh7eBxbcfIr+ClqZh4HX8ymr/9Ocuj
Ac57c2y9EUwsW2D+Az47MlSrGwD9dXBn59VG2MemmB1fgSO7K0Y5m+A849mM
DQMh3jxTtHLBvvSNSe/BPxgjtsnNsB/8Sn5tcBb65cUtlmpwzkTmoS5w4EKk
j+Yr6H+eE/lGQVCP1dIkesEBere0e8BS2JSUcwsVd/GS1LIKhvmCWyOKAr4w
+P5QN7h7kKh0qRW+78pxN6tzZCSRxadC2wbzVzl9Yg/Yhx7djgE70ZSSjM+T
0YTmbxWBdojv8cWxLrDa1boD2WDe5yO5hhfIqPYOW7TCayp+NbUuogusop8q
3Qw+krreefQinO+2DFG/A+L5T8Lut2DyDVOfT+DEz7VpJpdgnhC+wnbyDXxf
4V5SB5jZeIpmCiz0floMDyGjLLMhveC3VPzDDD/2CixiM/xlAyzLQjFRvwz5
vN/j/c1OKv62rOpSA9iYn46D7x0Vv5HP+eFgKMyzdwcKMsAvjfPuloKv/VC+
IfueiqfHke0Ur8D+oJ/7uhwcWxZiVgweCE4/ptdFxS0PWanIX4X+pt25fxBc
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
nPzvfc4oLxbA/weNpKDf
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.6000000000666889, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, {{{{0., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox["100", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox["1000", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{0., 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {6.907755278982137, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {9.210340371976184, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {11.512925464970229`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6931471805599453, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.791759469228055, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {2.995732273553991, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {3.912023005428146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.0943445622221, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.248495242049359, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.382026634673881, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.499809670330265, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.298317366548036, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.703782474656201, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {5.991464547107982, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.214608098422191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.396929655216146, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.551080335043404, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.684611727667927, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {6.802394763324311, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {7.600902459542082, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.006367567650246, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.294049640102028, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.517193191416238, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.699514748210191, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.85366542803745, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {8.987196820661973, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.104979856318357, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {9.903487552536127, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.308952660644293`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.596634733096073`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {10.819778284410283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.002099841204238`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.156250521031495`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.289781913656018`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {11.407564949312402`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.206072645530174`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.611537753638338`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {12.89921982609012, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.122363377404328`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.304684934198283`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.458835614025542`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.592367006650065`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.710150042306449`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {13.815510557964274`, 
        FormBox[
         InterpretationBox[
          StyleBox[
           
           GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
            Baseline], "CacheGraphics" -> False], 
          Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Log, Exp}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Log, Exp}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Coupling, Out-of-Plane Polarization\"", FontSize -> 
     12, StripOnInput -> False], TraditionalForm],
  PlotRange->NCache[{{0.6000000000666889, 0.7999999999333112}, {0, 
      Log[100000]}}, {{0.6000000000666889, 0.7999999999333112}, {
     0, 11.512925464970229`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.809111210285564*^9, 3.8091112393119793`*^9}, 
   3.8091112812266083`*^9, {3.809111350940213*^9, 3.809111365360668*^9}, 
   3.8091117082699456`*^9, 3.809111744216976*^9, 3.8091117775020027`*^9, 
   3.809111813431001*^9, 3.8091118622864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "100000"}], "}"}]}], ","}], "*)"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"PlotPoints", "\[Rule]", "3000"}], ","}], "*)"}], 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[CapitalOmega]\), \(i, i + 1\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\>\"", 
      ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.809109399106987*^9, 3.80910942179234*^9}, {
  3.80910951873341*^9, 3.8091095194804177`*^9}, {3.809109549569007*^9, 
  3.8091095688333664`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1:eJwVlnk8VO8Xx1VEmLEvCVmiSCVUkjrXWiEVKbT7VpSSbAmF7IUkIZUlIluI
sjOPfd+VLevM2GfsZor87u+v+3q/nvuc5zzn8znnXmmrhya3N7OwsHRvYmH5
/3P3D4+Jd+8KIU6Vm1eOJo80c3JGs9MLgS3oRzoqk0cmGdSB2tJCMJsbGlh5
JY88Pp1rXx4pBIxH3EpGTR51hO4qOq9YBC6qF+N1fOTQM+uml9uKi8D+7uLU
qsYuFGG1yV+quQjkuOn79gnuQqlXD3sdGSqCvNV2y4FZWdRlGu90e0sxDEqq
tCV8kkWKmNNVZFgM8ZX39n/gk0XdouIHngwUg2TqE7u/W2TQlMB5hTBaMXxv
jHgiRJZGLDz+siksJdA47/P9dZU0UmSbE+neVQJkzvjIdH9p5DVfyXLwQQmI
JMCiFo80Umqw7ZhYLwGWn1cU55SlkHZ1fNMGTymErDWd/iAshS6RumuEZUpB
PhuTVmbuRM9/QLGufimw+LZzL4fvRD2fBJLiQ0vhxdv7bHHNksjHvdjZfGcZ
JL3S/d1+VQIdHjNlLKmUwWW5qfW3+yXQhMGM22v9MvjSEdi5sCGOjMUkvBoe
lMEEbfcjuyRxJFb47IVmSRkkjlUwDi3tQNkrWnFSFuXwdm9Xp1WmGPrvWp90
6f1ySAw6UtLkL4aEaxySLLzK4dHW8k3fbogh97eJqeEp5aA/Ia8xISSG9NXY
8lhXyoF3j0HdL7/tiKZ+65bTaRIEXl9VeOImiuruZ3/WNiXBzkMKF8mWoigh
fo3Ke5UEhjx3UO4xUXSB4+3dTHsSqFU3YG7/RFDhr2o7ahQJ/P0OmvkEiiBf
l91PzKkkcCa7R3tmCqNraY5F8nMkYP1Saxv3RhgdGSz/u8QkgcoJmiSfmzCa
0jN/9pqAIGYhS5h6UhidFQryaVBDwHLryFeNcSEkljcVoumDQOCMYmCJqhAS
NvR3vhWMQKpw683ZnUKIb1T6avBbBLZRyx3m3EKIg9dCaSAFgVsMe+8ARRCt
2NY2uDchOM4k6QS8F0QdsknsxUIVoDzv3NTHK4haioA+KlkBswsTEXdZBFH9
+f6fnHsqQGm47YjCnAAiefInW2pUwDe2gN/qbQLoa7+X7p9rFcAsvVP4IlwA
vXxz1fvolwpgyGQ5+O8UQP6KTJubORUwdPtACplPAD1HEeeCiiogTdshy5ZV
ALnRG3f2NlXA2u25+wuT/MjGUKPMdR4/f+CO9s8f/Eh3i8jffI1KIIJfWfQl
foTFfBsd0qmEqUeSWeeM+NGxg8YN7GcqYWzes1lRix+pXPd7d+l6JdT9fiag
u5cfSRUvHln1qYQ7z7Z5sWziR2sObU6HmythWNNewuQbH9ozuNVK+WclMM56
hSqn8iGz08fPKg5Vwr0f+YGK8Xzo6840Bcn5Sigq1Zh6GMqHbjT5DLIJVYH5
PUMD9ft8qEruyKnuK1XgjGZMvJX40FzYg0Ott6vguT0hcGUXH5JYS5Spt6sC
9Yuh1OcSfMilg3e9xKsKtnhvlx4m4ud7TuUkJVWBppVL8ecFXhTc83GH00wV
HElRElUo40UFOl0cdstV4OR46NZSPi+ifOVcsf5XBfY1rAqdObzohN/jtsu8
1aDvnq3X8JkXzR0876ejVg3qp3jY34XyogsvWen8HtWQudipG/wfL/Ja0Rjg
9qsGqZer6y7XeFHmzUf1W0Px9bBCHgcLXrRVfTDxT1w1TCaZ+Uefxc8n55uP
VlZDjvH2vgRNXiRxwrYih6sGPj7luea1nRdFX+90tBOqAV7despmIV4k6H1M
bu/OGohgrPq+5eVFnFVcgUkqNdAboaozxc6LVk5nnImyqAH29qXf0TQe1GY2
2+ORUgPfr5298DaHBxk+NntxNKcGCno2T9in8aCa6NJjK0U1kG/RNnUnkQeV
9IfEPmypgcW2FFr8Wx6UenP/LavlGhgvO7Gi486Dnj94SD+pUwva9p8YLIY8
aD30VzzrmVowXY5bvarHg1yzwQRdrIXhpEdBbcCDHi7yfNe4VwuO1B+nl9V4
0JUn2W77XtfCxfPrCYekeNCvGFGlqZha6GuPjTqygweZlHj9Tk6qhd19dX+M
hHnQqY1zmFRBLcTNiLPmcPOgQ37zbAJDtcD/UFPq0h8iyk62yG+dqAWR7wNu
s8tEpFSHbIIXauHh/vhTb+eJSIYrvJFtax2Y1Z40Ep0kIuJrldcMpTqYdInx
oPQQ0cQHR/FBtzr4tEUn7V4xEflJ73Va8qmD5szjekcK8P3Jo42cIXXgQLnC
zvudiK5mnXc/ElcH99o+WlC+ElEHOtAXVlkHsVte54slEpG9/vjBlKY6SFI2
59SNJyJCY2xQaXcd8G0cAdePRHSqi3B0arwOvP7m5LJEE1EpdTpKh7seEk3O
xoSEEJGlbSLdQqgeQnkEWra9JCIG3fKkvWQ9KHL1fH8VSEQqzPqVD8r1UBFY
w1vgQ0RfuL6YrVyohzJdVv7HbkQUrnxLIPVjPTwxvq8edpeIlL/vsC1Profi
5443o6yJqPloZ0V3Vj1c33FcKvk2EXHoaDtsrqiHOtmJkd6bRPTUTKr9MrUe
vtn/Eo2yJCIbt4FQ4oEGyJRMP2d8hojYNt5Qd6k3gG5zRyHJkIg++RieOKbV
ABs/N0bVDYjod3DRrLVpA7SSf3NonCQik7hoI/S4AWQ55As8tIjoeNUFTidS
A3CovOefPUxEezaOy59paABtndDOiENEJKixW1u+qwFq2kydtNSIaCaL+aRn
HI9XH/D7y0Ei+vA+dlKTpxHCevJEMpWI+LyZqGO71gjB+3wsHGRxPTPbyYPW
jTB7QDPOUoaIuiaKWAoeNUJT7zY2fWkiyrgWon7PrxHcGCv1cjuJ6IqBypeW
jEb4c1fCZesOIiqR9giI+tsISfz1W44I4PW9cjvRnq0Jjt4tz9fjJ6KIKOPy
0zxNMEli5brIR0T3CdKrf2Wa4K/55iPuPEQkzqy+c8OgCRwyN+l1cxGRRxuP
vsI7fD/r9rHvrESk6ZnIWny4GVyPa9+JXyEgi9Dd8newZpDi2byFtExALh/T
T/IZNEMQn/3Q4BIBZRfnvrC+2gyPOly3iy0S0C5GJa+gbzOwbChN+tIJiPsR
WfxBezOcMLKQ3TlBQApeNidE+5uhaEaueu84Aem/mrleSW6GeztVyw9TCcgr
c+nTdkYzWPl3+J8kE9DSJKtCjWQL/AlzXDEZJqB+K7lDO++3wImX189u7SEg
xqPUiw3OLTDs/9V14ScBnz/7XJ09W+Cbsq7qQDcBGccdKm4MbwHbiuD9XzoJ
qKJfT8u1sAXqTqVukW4loLQLd860b20Fbd+MnOBqAnLTT7ntk9AKLtv++8aW
TUCFBW77AtNawbrsD2/qV/w8RePl4NxWEPGknjidideDZ9k3sroVFPvjZz3T
CMixRzspdbIVqPOeA9VJBHT40MP5cdE2mNcQ+O9rNAFdpJmb3ZNoA9unQuk7
ogjIOUW7cEa6DbI01K76vSWgvO3C3vOKbfA1KXTiTDgBqfwr4f2r2QblA5fW
vr0koAO1nMrEm21wUafGsO4pfj+vpTdht9vgu4RzDNOdgOyODq7y32uDql1V
a/JuBPQ1PadcxLENlrw8J5xdCEgpzPystF8bhNtNdY3ZEdAei2Q7tdQ28GNI
0P9eIyDpaa1My/k2aFlVENg4RkA2nrqOJ1bwfKy54h4fxeMJnDwq87cNtuqx
0KcOE5CmplH1JGs7PCc51aODBGQecvG3q2g7tJ4YpR/YTUBhB2wJUdAOHlb1
tpx8BPTPMeJBZ0g7RJJF98YOcyM9jijV/PB2EJd2ybD+zY2CP7xjxkS1w6cB
pWd7+7iRWHWsn1VCO+xWdmX/1MmNDgmnfpzPawdRi+rbBjXc6H5BaTPPQDt0
OR4W9U/jRn1r1H1Gih1w6Xdr1Ts7bvRNm692YH8HPH0+vDB9jxu9CDx244Fq
BxhYPZ5Tt+ZGGoJh4aGaHVAVdtWs8jo3itl7dLXNuAOGPyV8fneOG1laviSZ
OXaA6+NIR8OD3Kg3/4Dp9ZIOyEiyryilcaHsdYsZOqkDrJeaOGymuFCgjq+f
V3UH8E/mshKoXEi9tSc/oaUDMnVf7Dj5mwtFU73FycMd0HD1WbF7IxcyF+qi
2LB1wtnhzEBqMhfqcXB1dTDuhP3t1FhkwYXqZOwFZ0w6Ye2/Dqf+C1yosMM6
+/alToiW51OdO8uFYlQuTZjf6ISyqMi7nPpc6MrCIXNw6ATVzF21m1S40NCj
xSPckZ0w2Lw9co2DC1Ht7VY//+6EvDq1ZblcTrRsd8ul934XPNyz+s6esQ1x
/3FyynvUBX2/SOKV89vQLj8/h1cuXeDT/bmPZ3obuvA+2U7Pqwu8JYSJ0b+3
obzaiTs5b7rA1rHf67+KbchB6sGloKIusDagECdebEO0dmf1oxzdkOEV7Jwn
sg2NqwX8iU7sBq2L7/qbpDiQ5PXIUyHVP2H78IJJv/hWpGg6IN638QsGKr85
dH/egi42eyRZq/XC/QHzCrYNFlSbvm1F4UIfsH7YVXGiZI1EuNDcrBvcDz7m
ExZ/WldI0TeePozIGoC7Cd+PKyrPkxiHb0VpTv+Glj+PEx00qKTHbz47yEkP
wZuf/OzpSt0kybTJl9LSw+A1Jb9Zd58ryZb+PmGgdBi6dsZ/HC3vwvru6Iqr
nBuB0YwyVfM7Y5iFdMxcytAIeCXy+TeZTGM/KauuwqMjEHvUNH7dYRq7kGa2
yY88Apw79cx3vJnGzqny8VtNjoD3ykFv8c5pTF8vUFV8cQTWu+p61ExmMLW7
Li5hW0eh9Q2z5ofRLEbMMVlz3TcKp2Y+Rjao0LEKjIvDwH0UQrwi8jtuzGMc
g2vM0KejMKct4+P2YB4zdqdNd3qOQoRo4o7tbvNY//f21qu+o1CWNJ2q8WYe
W1KMjnoUMgrOzLNMYvU8Jickt/td3Cj4Z89f/iO/gAVOntCfqByFAW+zT01j
C1iLv7L6vppRKLn9NeU0fQET3CWj6FA3ClPp31RL/yxgCdfYiGtNo6AV0PEr
gG8RK+ps7Ob5iefzr3R7+olFbLrU/PaRiVFw25HSuztqETMOd/D15x4D71cC
SbPYErbno/3uNeIYeF57qiVotIRt/mLX8IhvDJQtKW4HLi1hP0rv8V4VHoOc
B2WFOg+WMIlJqw+qUmPwZvc/5bHoJWwGTPOGVceAJqR0Y212CQuaVSVrXB6D
0pAdgS9fLWNWjIMB2VfHQCamSVb73TKmuUVZUf7GGOj0V+6a/bSMzYkq2fPd
HoND18nnpH4sY+a6u9bG7caANzp479/+ZUz+vaDg2+dj8I0zucZbbgWrOrWs
Q08dA3FnW5uGrBUsjcPSxiJjDD5/Z3aQ81ewsLqy4MqvYyAvd3d6sXwFu3Iq
sDsqdwze76yTmWtdwZZP7rDGSsdA0/JZ5A36CiZ/UuvF67Yx+CEdtSqltIoF
6IW0qa6OQZjvsawdH1cxO7aFpY9MPL7Bm4SGxFXsQvXF7RxrYyAZ9FPZLm0V
k9KTshpgIYOGvKTcm/xVrEA3d9GXkwymNpHXLrSvYhM6vcI/JcjQdP3QQu5m
BmagLXfVVZcM/PXaVuNXGBijT2K6QJ8MowPvX7beZGApjsJPmKfIYBQ73ZR5
h4GxfmZ/63aGDIOmJtFG9gysnH2qyeMiGeoTZC0EfBiYWvNXTW8bMpxctq6q
TmZgo7dTGtA9MvxSMg3lSWdgr//FmW9+QIZbLgecz2YxMNqB104+j8gQ2Wf9
PiefgaWGO2b4uZFhix1c3KhlYJLm6uIvgsmQ1sm2SKIysKY55bSGUDKsZuVV
3Z9iYO5BCupcr8mgfOxRMZHGwHqKxC4EvyWD/r0AsUPLDOyNxPrL0FgyqExs
yuHawsQ4xtDf8GwyyNpL9QyLM7Ef7kVBnd/IoLmQakDfycRuC+aKCH4nw2TA
49lFGSZWoZek+rYQj7dPtHZoDxN7+sXfNqoCr8fD9BEtNSa28MCw/30XGSIS
1h8rn2Ziak7nxAi/yOBOf1f205CJubiZWTzrJYNbkVrwI2Mm9tf/+q8bg2RY
GvVAvqZMjDXesVNuggyX10cLpK8yMf1kV/6oKTLE3h65fP86EwvKeHqeY5YM
mZOuYek3mRixMKB1ap4Ms1E8eex3mJhIx/vGrL9k2FqyjXDEjolZ9sRzSv/D
9ZAYvSVvz8Q+DH4+Hc5CAfGWVQtOByYmNZ1V68RGgcWIv9LZzkxMkbWq8igP
BThE95s5ejCx+5z1m9P5KLDZ8WMF+zMm9pW3RUtckAIPi5Z7wzyZmKpET/k/
UQp8eMtK8H7OxDQPzxRXylCAqsLI7Q1gYs805/+oyVHAhEiPEwhiYiTtlaPJ
uynAE+epo/2CiemdZSkIVKLAgNGbgqfBTCzQjG2VuZ8Cauq5IS9CmFjDZc7D
tgcpIOKYLB0cysSMbQTzzhymwNmq+yEPwphYmN32xTJ1Coj9XrM585qJdThJ
qigfowDjZB+nTDgTE3SXfZRwnALxwbNO0zhf8t6TzY9R4KiqbGrqGyYWE7CP
7qNNAUKlbeqVCCY2EKKyf1mXAoao+DHrWyZ2I0Yz49dpCnzhMvdXiWRin+K1
pk8ZUeCkUUJDAc7kZH3FImMKlI5Mk1WjmJh8puHdvedxVsV+JeJ8N/fclw+m
+PvxaYkc0Uwso9BsnHCRAgZux4yscKaVW8p7mlPAjoO9Mxtn5Zrrt+csKVDr
I6exhLND062km1cp4CGc66P0jonlddwd67hOgcd9rTkWOK/22MnoWlFgX09c
jTvOGkOON7/fosBONsOqcJw9KK7x8tYUKNdez4jFuWz66VDUXVyfK9TncTiz
LDyX3HafAnEcGqfe4qzNCLjqZkeB1tEDG544+/0L/jBtT4EGuy1p13EO+y2n
p+pIgYNX5fyO4BxTUjbr5oznM5lcyYbz5/eXIiseUyBtl5V1A55/ttvcCU43
CizzqTn44VxsETR+3oMCjZ/XKIdxrlGXCXv3jALdVbFVg3i92kWK1Ue8cP20
WXif4jywYjqyx4cC10a3NfDhPN49E2TvR4EAk5SlD3j9F/L8VAoCcD0P1L6W
xHntjWT/RhAFnm1YJkbi+rE75vucDKZApdqlvWw485ucU3oVSoFvCrl77+F6
ix+c7PoZhushfTe5GveDCl1M/s5bCrB/6eO/gfvleEtuS2YUBWKPv+OIw/11
KtPo8fI7PP/hfK8u3H/XbJ/V+cZSIHL3MRbZV7jeBiKPmuIpEDFdyKWJ+9VJ
IXu7YCIFev82JRjifg4aH7mXmEKBpKEtLsYvmVhEjZvAdCoFwprMC7Twfoj9
LFCikkGBR4eTQvbi/ZL3nx6hIpsCs7LxzFF/JjY89CVruJACQacuCYx4M7Hp
Mi3zPSUUkF1zUQjyYmIrH/tY7MsokGXeN7Yb70+uK9wmGxUUuPnglPFpvJ8P
9zxckmiigJDmHXVxFyamlc/x8XYLBeCzatYTJyZmFJmgl9lGAU8v/YFmfD5Y
XeiM1OymgFO0g5XlQyYW0nb46OVB/P46f66z2jCx6KzWkU/DFFBOWa4XwefP
p1CbF1OjFLjwY2pN+hYTKzCK6X8yjvvT8Vyt2A28X+rWn0bPUcDW/MXB2Eu4
X1FVRfdmKqj0ZHjRdJnYebOqGT42KjQ+JRh4aDMxm8lKYWN2KiyVnbq2CWNi
kXyV92q4qLBdb9F+XgPX/ybizxekwjp9p89dZSaWvrnMKlqeCquqMj7F2/F5
HVka3LWHCtIc3lLlwkysT7H0B+9eKuzMsFYuEsDnv2kJZ9ABKmTkc3+LJDCx
W4lF356oU0E+7J/vJAvuD938zZcNqMCu8D6XQWFgqj0/lKKMqPBQbTHHaRT/
Xt7/cbHTmAqe3RNGE4MMzDXie5qhKRVkR3z/+/GLgXWTc000r1AhqGHqOq2O
gYX6ZX+SsKOCWNFllrZUBrZRk6o9/JoKDqyGWQ9uM7C0uu8SZyKo4CJibeZ5
g4FdaECMwkgqrIWk+Qdcxtebe7++eU+Fy/Tld+7nGZhZ17YdJz9TYW+hLX1B
k4Glj9xdzCygQpyrQJk0PwO7tKaQ5D5EhfmiS7Xvv69im/8d8pwYoUJ9uLuT
f9YqlrGhZWlGpsJKcZ+STSq+vsWS98AkXl9JYhsv/n+Rue2Fx+gCFarKNS6u
+qxiW0SmLpzeOg664XpiEudWsayDaWwi+8bBoOtE1+TICibDbWBgeWAcVKLE
HI/2r2CR1MnQjwfHAbu1rdy7awXzeK8guuvwOAy3td9fq1nBDNhSFQ/COBTd
NAuISV/ByD0pZw3Pj0OMaDzDw3EFE/X6/M7TeRyKEzcOLq8vY94t8fsmSsch
Fb3hDf63hAUKn5G9QhoHWxe2uYfLS1joNaZoW8U46AxctjCaWcI+0M6zFtSO
A60yZZDWu4QVELf0B7SPg7xVg35/3hI2Z3w7cDdlHO5IhCldvLuE3WhVGLvD
PQE/6LO5zKZF7ETbt2iK5QS83VBQUfBawCRYi22ezk6AYq2MWGkyHeN2tw8/
9HQShA1LSPvHJzHKRa2N7dungN0kedc5/TFs5BZHe3TaFGjIHM9equjFan9N
UXROTYPS/cq7RXG1WGmI2wWesWng8AwzzvjzjtTtzLLH2XEGWgWN5U20Gkk9
FQkn2Hln4ecZpZCPVb2kda2jRaqfZiG094HFA9ZRkgrrs1deB2lgZJXcKO9I
JbX4DjnSVGmgbdXHt+RLJdmyaZlfOUwDcaul2LxIKilpK6u0+jEaHNgk9pin
iEoS3vbiG12XBuWHMO+9LOOkP4TI7mvmNNBNr5FmBI2TKkS+7jjuSQN2Wtq/
0jcTpGvRPCzp3jSo2z4cNpk4Qfor+ogs6ksDj6fl5ex5EyQ1MbXMpUAacOv8
GtrRNUFKFi86kRGO50PSSfgkMEl6IV1zc0cyDU4xQ9bkwiZJJnsHU5hNNCDH
Rq+PPZsi5ft2Lh9vpcGW19PLVsFTJPHBOp3n7TRguTdU2/1uikQNyx3i/EmD
QAX96ci8KZLbSqCI+BANbPmsO/0np0ifkGrAiXkaXB/LMRU7P01avBR0x0eI
DnVJorZ/hGdI5jnP8mpF6GB6LPgxTWaGVMbptJlbjA7Cmj//du+fIQWWXouN
kKRDw8n1G576MyRxWbWfn3fT4cQVMZNjzjMkXdqgXt1ROsSs9/mYtc2QInzV
5AjX6KDL79K46eksaQlznYu4QYfHlhZFbwJnSabrxcXi/9GBJaI/VShilsTv
omOiZEOHtom1Z5Nps6RX1iaehg50EPKVzWn7NUt6YWDfG+RPhy1cv+pj9tNI
3rwZIVuz6GCz/peDu41GGm6im4fm4PFKYmaie2kkLEh1l3AeHf77F+YtNEYj
/dtUXCRXSId7RfH5v5dpJI/F+nHdSjr4nquRTBOjk1x/jmv5/KID/wsD/YM3
6aSe8L0Erj46iMUUWRXcpZOOnH3YEz5Ah8VgJ8EDDnTSSu2K3acROlTVtR2c
fk4nORayfUDTdOjklFOKTaSTOpxPW5+m0WHl85eGhHQ6SUUlRKV9jg6MUdPF
iFw6aS5NsH54mQ6bPWUGT1fSSeeszSNsGHTIK+r9yNVIJ2XJfrg+94cOxeeG
R0s66CTi8JCi6zqul61AxtU+Osnug+zKxgYdPMcvMWZH6KT/AYOKGCg=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.1, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[CapitalOmega]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Next-to-Nearest Neighbor Coupling, Out-of-Plane Polarization\"", 
     FontSize -> 12, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0.1, 1}, {-751378.5313430912, 104857.96945797242`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.80910942353376*^9, 3.809109521025301*^9, {3.809109551168702*^9, 
   3.809109569744877*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"Im", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
      RowBox[{"GdotP", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"\[Alpha]", " ", "\[Lambda]"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Blue", ",", "Thin"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], 
   RowBox[{"(*", 
    RowBox[{"PlotPoints", "\[Rule]", "3000"}], "*)"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Lattice period [\[Lambda]]\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(\[Gamma]\), \(i, i + 1\)]\)|\>\""}], "}"}]}],
    ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", " ", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", 
      RowBox[{"FontSize", "\[Rule]", " ", "12"}]}], "]"}]}], " ", ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Nearest Neighbor Decay, Out-of-Plane Polarization\>\"", ",", 
      RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8091084862634473`*^9, 3.8091085770332623`*^9}, {
  3.8091086207602324`*^9, 3.8091086335169997`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Tiny], Opacity[1.], LineBox[CompressedData["
1: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
sIV+OmPd1OIiF7//JnXnvWmh/z8kpEEZ
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.10000001836734694`, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
     "\"|\\!\\(\\*SubscriptBox[\\(\[Gamma]\\), \\(i, i + 1\\)]\\)|\"", 
      TraditionalForm], None}, {
     FormBox["\"Lattice period [\[Lambda]]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    GrayLevel[0], FontSize -> 12],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Nearest Neighbor Decay, Out-of-Plane Polarization\"", FontSize -> 12, 
     StripOnInput -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.809108483913726*^9, 3.8091084897730637`*^9}, {
  3.809108539897114*^9, 3.809108577939898*^9}, {3.809108625197299*^9, 
  3.809108634511338*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "k", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
   RowBox[{"GdotP", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rx", ",", "ry", ",", "rz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8091088252115297`*^9, 3.809108855647868*^9}, {
  3.809108894600909*^9, 3.809108990369721*^9}, {3.8091090225747766`*^9, 
  3.809109056453086*^9}, {3.8091096542948904`*^9, 3.8091097023074875`*^9}, {
  3.809109992155261*^9, 3.8091100197724724`*^9}, {3.8091100825556245`*^9, 
  3.8091101348670444`*^9}, {3.8091101771248493`*^9, 3.809110191996142*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"5", "/", "2"}]]}]], "-", 
  FractionBox[
   RowBox[{"Cos", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", 
    SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["ry", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["rz", "2"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["rx", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["rx", "2"], "+", 
        SuperscriptBox["ry", "2"], "+", 
        SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"Sin", "[", 
    RowBox[{"k", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["rx", "2"], "+", 
       SuperscriptBox["ry", "2"], "+", 
       SuperscriptBox["rz", "2"]}]]}], "]"}], 
   RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["rx", "2"], "+", 
      SuperscriptBox["ry", "2"], "+", 
      SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["rx", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"k", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["rx", "2"], "+", 
            SuperscriptBox["ry", "2"], "+", 
            SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
       RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}], ")"}], "2"]}]]}], "+", 
     FractionBox[
      RowBox[{"Cos", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", "k", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["rx", "2"], "+", 
         SuperscriptBox["ry", "2"], "+", 
         SuperscriptBox["rz", "2"]}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["rx", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"5", "/", "2"}]]}]], "-", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"k", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}]]}], "]"}], 
      RowBox[{"4", " ", 
       SuperscriptBox["k", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["ry", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["rz", "2"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"k", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["rx", "2"], "+", 
           SuperscriptBox["ry", "2"], "+", 
           SuperscriptBox["rz", "2"]}]]}], "]"}]}], 
      RowBox[{"4", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["rx", "2"], "+", 
          SuperscriptBox["ry", "2"], "+", 
          SuperscriptBox["rz", "2"]}], ")"}], 
        RowBox[{"3", "/", "2"}]]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.809110192434922*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Together", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8091097221196704`*^9, 3.809109725425786*^9}}],

Cell["\<\
Why does the ferromagnetic mode become increasingly subradiant as d becomes \
smaller, whereas the nearest neighbor coupling vanishes very sharply?\
\>", "Text",
 CellChangeTimes->{{3.809016409143978*^9, 3.8090164817003417`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["tests", "Section",
 CellChangeTimes->{{3.8067085522849584`*^9, 3.806708562119661*^9}}],

Cell["\<\
Check my grid mapping. 2D grid, but only one index to specify atoms. \
\>", "Text",
 CellChangeTimes->{{3.8055812128834515`*^9, 3.805581234435918*^9}, {
  3.8090198717970705`*^9, 3.8090198740475454`*^9}}],

Cell[CellGroupData[{

Cell["square grid", "Subsubsection",
 CellChangeTimes->{{3.8090198877837677`*^9, 3.8090198943241434`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnum", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"num", " ", "=", " ", 
    SqrtBox["atomnum"]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atom", "[", 
    RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"excited", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
            "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
            "}"}]}], ",", "0.05"}], "]"}]}], "}"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", "num"}], "]"}], ",", " ", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}], "/", "num"}], "]"}]}], "}"}]}],
          ",", 
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{"j", "-", "1"}], ",", "num"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}], "/", "num"}], "]"}]}], 
           "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gridpts", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"atom", "[", 
       RowBox[{"i", ",", "False"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Range", "[", 
         SuperscriptBox["num", "2"], "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"excited", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"atom", "[", 
        RowBox[{"i", ",", "True"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"atomnum", "-", "1"}], "2"], "+", 
             RowBox[{
              SqrtBox["atomnum"], " ", "i"}], "+", "j", "-", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
           "]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", "[", "pts_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"1", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.805581333965639*^9, 3.8055814341893806`*^9}, {
   3.805581552511201*^9, 3.8055815960303836`*^9}, {3.805581629511797*^9, 
   3.8055816883682003`*^9}, {3.8055817251288686`*^9, 
   3.8055817262478523`*^9}, {3.805581886212476*^9, 3.8055818997023997`*^9}, {
   3.805581939032192*^9, 3.8055820448102236`*^9}, {3.8056697625052896`*^9, 
   3.8056698196551075`*^9}, {3.8065230852646923`*^9, 
   3.8065230871668463`*^9}, {3.806523244000454*^9, 3.8065232904876947`*^9}, {
   3.806523351830069*^9, 3.806523378934533*^9}, {3.806523835979823*^9, 
   3.8065238841500297`*^9}, {3.806523947442684*^9, 3.8065240254449883`*^9}, {
   3.8065240606577477`*^9, 3.8065240730513306`*^9}, {3.806524114790417*^9, 
   3.806524148044992*^9}, {3.808175601187192*^9, 3.808175634705696*^9}, {
   3.8088539626628017`*^9, 3.8088540437169886`*^9}, {3.8088541642627516`*^9, 
   3.8088542064094296`*^9}, {3.8088542562133045`*^9, 3.808854281762638*^9}, {
   3.808854316666351*^9, 3.8088546183816257`*^9}, {3.808854679622679*^9, 
   3.8088547519374275`*^9}, {3.8088549928765655`*^9, 3.8088550254883757`*^9}, 
   3.808862892214314*^9, {3.8090197898333473`*^9, 3.809019885729237*^9}, {
   3.8090213636047497`*^9, 3.809021383906481*^9}, {3.8090217672219486`*^9, 
   3.8090217704323263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"0.7", ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", 
        RowBox[{"a", " ", "num"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3fJsH9OkqDeOGfxu/CD6ULSAHIh+/qNBGUQvSdig
DqJ9TnDrg+iN8kuMwerfHQfTs84ccwfR/FVlniB6B3uiH4iOejszGkSHagcY
7AWZ863EHETHVKy4GRvzxvFc2FMwvYO54S2INprt/xlEv+3/9QtEb3oe+w9E
b4uqN48D0txnW2xBdIVWniuIjrDV8wfRrjxTg0F0wxLFUBAt6R0ZBaInFzTG
geiqv6r7WuLfOApMDTsEoteYhv48n/DGcdLHMuYLQLoso0MIRPNInRUH0SmX
2eRAdEe6hSKI3h80VRVEV59XsAPRCoqSXiDa2ucqmJ7V5RwCohs2RILpa6+z
YkD03X+TwbRY3cFUEB3071Q22FzZ7vArQHqFm1IUiD5zqn2XYuIbx8z97ntA
NABn7shV
  "]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 1}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 2}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 3}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{0, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 4}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 4}, 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 1}}]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 2}}]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->{{-1, 5}, {-1, 5}}]], "Output",
 CellChangeTimes->{{3.805581655114204*^9, 3.8055816888449235`*^9}, 
   3.8055819020959787`*^9, {3.805581941482599*^9, 3.805581976920786*^9}, {
   3.805582038182976*^9, 3.8055820450695515`*^9}, 3.805669582249579*^9, {
   3.805669805938079*^9, 3.805669820223586*^9}, 3.8059998840810094`*^9, 
   3.806523291233897*^9, 3.8065233798524733`*^9, {3.8065238580323625`*^9, 
   3.8065238847552323`*^9}, {3.806524006640272*^9, 3.8065240259317565`*^9}, {
   3.8065240672190237`*^9, 3.8065240738995457`*^9}, 3.806524148572755*^9, 
   3.8081755189332676`*^9, 3.808175636178617*^9, 3.8088536023104763`*^9, {
   3.808854019565382*^9, 3.8088540442714815`*^9}, {3.80885417950504*^9, 
   3.8088542068163023`*^9}, {3.8088542572328033`*^9, 3.808854282126666*^9}, {
   3.8088543483426723`*^9, 3.808854355524477*^9}, 3.8088545068807526`*^9, 
   3.8088546203094683`*^9, {3.8088546828779745`*^9, 3.808854698773489*^9}, 
   3.8088547596048913`*^9, {3.808854831449887*^9, 3.8088548788481965`*^9}, {
   3.8088550018096895`*^9, 3.808855029306165*^9}, {3.8088629004731874`*^9, 
   3.808862929573784*^9}, {3.8090213785567803`*^9, 3.80902141075273*^9}, 
   3.8090217716420937`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["hex grid", "Subsubsection",
 CellChangeTimes->{{3.8090199043830104`*^9, 3.8090199092154503`*^9}, {
  3.809019960759105*^9, 3.80901996974614*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"atomnumx", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atomnumy", " ", "=", 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{
       FractionBox["2", 
        SqrtBox["3"]], "atomnumx"}], "+", "0.5"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", "[", "i_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
    RowBox[{
     FractionBox["a", "2"], 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
       "2"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "i_", "]"}], ":=", 
   RowBox[{
    FractionBox[
     SqrtBox["3"], "2"], 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"atom", "[", 
    RowBox[{"i_", ",", "excited_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"excited", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Disk", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"a", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "i", "]"}], ",", 
             RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", "0.05"}], "]"}]}], 
       "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "i", "]"}], ",", 
            RowBox[{"y", "[", "i", "]"}]}], "}"}]}], ",", 
         RowBox[{"a", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "j", "]"}], ",", 
            RowBox[{"y", "[", "j", "]"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gridpts", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"atom", "[", 
      RowBox[{"i", ",", "False"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"positions", "[", "pts_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"1", ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "pts"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.809021470240757*^9, 3.809021536932454*^9}, 
   3.8090215998981524`*^9, {3.8090217224147024`*^9, 3.809021723896715*^9}, 
   3.8090217604680147`*^9, {3.8090218065617704`*^9, 3.8090218662552247`*^9}, {
   3.8090219217738*^9, 3.8090219218635607`*^9}, {3.8090219572918634`*^9, 
   3.809021971994565*^9}, {3.80902228825834*^9, 3.8090223320751686`*^9}, {
   3.80902239796904*^9, 3.8090224258844547`*^9}, 3.809022473094236*^9, {
   3.8090225162768106`*^9, 3.8090225213073654`*^9}, {3.809022634832921*^9, 
   3.8090226571702123`*^9}, {3.809022692643534*^9, 3.8090227098625097`*^9}, {
   3.809022828261039*^9, 3.8090229389960513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", "2"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"atomnumx", " ", "atomnumy"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8090224764253407`*^9, 3.8090224983517246`*^9}, {
  3.8090225322600927`*^9, 3.8090225476549387`*^9}, {3.8090226040152936`*^9, 
  3.8090226164460683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.809022524857874*^9, 3.8090225480070133`*^9}, {
  3.809022604650595*^9, 3.8090226169108405`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"showpos", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "13", ",", "18"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gridpts", ",", 
   RowBox[{"positions", "[", "showpos", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumx"}], " ", "}"}]}], ",", 
      RowBox[{"a", 
       FractionBox[
        SqrtBox["3"], "2"], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "atomnumy"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.809021552640469*^9, 3.8090215841482496`*^9}, 
   3.80902162020292*^9, {3.8090219343224115`*^9, 3.8090219509837265`*^9}, 
   3.8090224444348397`*^9, {3.8090227244565506`*^9, 3.8090227425072556`*^9}, {
   3.80902278874566*^9, 3.809022806709644*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 1], CircleBox[{0, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{1, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{2, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{3, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], CircleBox[{4, 0}, 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[1, 2] 3^Rational[1, 2]}, {0.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[1, 2] 3^Rational[1, 2]}, {1.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}, {2.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[1, 2] 3^Rational[1, 2]}, {3.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[1, 2] 3^Rational[1, 2]}, {4.5, 
      0.8660254037844386}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 3^Rational[1, 2]}, {0, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 3^Rational[1, 2]}, {1, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 3^Rational[1, 2]}, {2, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 3^Rational[1, 2]}, {3, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 3^Rational[1, 2]}, {4, 1.7320508075688772`}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[3, 2] 3^Rational[1, 2]}, {0.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[3, 2] 3^Rational[1, 2]}, {1.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}, {2.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[3, 2] 3^Rational[1, 2]}, {3.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[3, 2] 3^Rational[1, 2]}, {4.5, 
      2.598076211353316}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{0, 2 3^Rational[1, 2]}, {0, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{1, 2 3^Rational[1, 2]}, {1, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{2, 2 3^Rational[1, 2]}, {2, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{3, 2 3^Rational[1, 2]}, {3, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[NCache[{4, 2 3^Rational[1, 2]}, {4, 3.4641016151377544`}], 
     0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[1, 2], Rational[5, 2] 3^Rational[1, 2]}, {0.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[3, 2], Rational[5, 2] 3^Rational[1, 2]}, {1.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[5, 2], Rational[5, 2] 3^Rational[1, 2]}, {2.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[7, 2], Rational[5, 2] 3^Rational[1, 2]}, {3.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[0, 0, 1], 
    CircleBox[
     NCache[{Rational[9, 2], Rational[5, 2] 3^Rational[1, 2]}, {4.5, 
      4.330127018922193}], 0.05]}, 
   {RGBColor[1, 0, 0], LineBox[{{0, 0}, {2, 0}}]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[1, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       0.8660254037844386}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {2, 3^Rational[1, 2]}}, {{0, 0}, {
       2, 1.7320508075688772`}}]]}, 
   {RGBColor[1, 0, 0], 
    LineBox[NCache[{{0, 0}, {
       Rational[5, 2], Rational[3, 2] 3^Rational[1, 2]}}, {{0, 0}, {2.5, 
       2.598076211353316}}]]}},
  Axes->False,
  Frame->{True, True, False, False},
  PlotRange->
   NCache[{{-1, 5}, {
     Rational[-1, 2] 3^Rational[1, 2], 3 3^Rational[1, 2]}}, {{-1, 
     5}, {-0.8660254037844386, 5.196152422706632}}]]], "Output",
 CellChangeTimes->{{3.809021584732686*^9, 3.8090216213797317`*^9}, 
   3.8090217296214094`*^9, {3.809021850723713*^9, 3.809021869413793*^9}, {
   3.809021923623888*^9, 3.8090219740211487`*^9}, {3.8090224321267376`*^9, 
   3.8090224501006937`*^9}, {3.809022638302681*^9, 3.809022660501314*^9}, {
   3.80902270057234*^9, 3.8090227428902593`*^9}, {3.80902279043915*^9, 
   3.8090228072521925`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["r", 
    RowBox[{"i_", ",", "j_"}]], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "atomnumx"}], "]"}], "-", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "atomnumx"}], "]"}], "+", 
      RowBox[{
       FractionBox["a", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}], "-", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], ",", 
           "2"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       SqrtBox["3"], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"j", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}], "-", 
        RowBox[{"Floor", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "1"}], ")"}], "/", "atomnumx"}], "]"}]}], 
       ")"}]}]}], "}"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 812},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{
 "zunonian", "zunon", "linewidth", "waveplate", "lightbulbs", "unpolarized", 
  "collimated", "atomnums"}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 191, 2, 272, "Chapter"],
Cell[774, 26, 192, 5, 63, "Text"],
Cell[CellGroupData[{
Cell[991, 35, 101, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[1117, 40, 99, 1, 59, "Subsection"],
Cell[1219, 43, 836, 15, 219, "Text"],
Cell[2058, 60, 1680, 40, 143, "Text"],
Cell[3741, 102, 366, 7, 38, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4156, 115, 191, 3, 86, "Section"],
Cell[4350, 120, 321, 5, 113, "Text"],
Cell[4674, 127, 19341, 424, 1829, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24052, 556, 268, 3, 86, "Section"],
Cell[24323, 561, 268, 5, 57, "Text"],
Cell[CellGroupData[{
Cell[24616, 570, 1630, 34, 202, "Input"],
Cell[26249, 606, 589, 10, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26875, 621, 314, 4, 75, "Subsubsection"],
Cell[27192, 627, 4500, 136, 766, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[31729, 768, 272, 3, 62, "Subsubsection"],
Cell[32004, 773, 5279, 155, 976, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[37320, 933, 98, 1, 62, "Subsubsection"],
Cell[37421, 936, 171, 4, 57, "Text"],
Cell[CellGroupData[{
Cell[37617, 944, 9871, 223, 1707, "Input"],
Cell[47491, 1169, 534, 9, 88, "Output"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48074, 1184, 108, 1, 75, "Subsubsection"],
Cell[CellGroupData[{
Cell[48207, 1189, 612, 12, 177, "Input"],
Cell[48822, 1203, 29056, 577, 522, "Output"]
}, Open  ]],
Cell[77893, 1783, 163, 2, 57, "Text"],
Cell[78059, 1787, 1068, 26, 138, "Input"],
Cell[CellGroupData[{
Cell[79152, 1817, 2098, 49, 372, "Input"],
Cell[81253, 1868, 39658, 803, 522, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120948, 2676, 365, 7, 58, "Input"],
Cell[121316, 2685, 193, 2, 58, "Output"]
}, Open  ]],
Cell[121524, 2690, 1131, 32, 216, "Input"],
Cell[CellGroupData[{
Cell[122680, 2726, 615, 19, 100, "Input"],
Cell[123298, 2747, 1839, 37, 633, "Output"],
Cell[125140, 2786, 340, 7, 43, "Message"],
Cell[125483, 2795, 388, 8, 43, "Message"],
Cell[125874, 2805, 388, 8, 43, "Message"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[126323, 2820, 103, 1, 68, "Section"],
Cell[126429, 2823, 1082, 20, 86, "Input"],
Cell[CellGroupData[{
Cell[127536, 2847, 312, 4, 49, "Subsubsection"],
Cell[127851, 2853, 6667, 203, 540, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[134555, 3061, 98, 1, 40, "Subsubsection"],
Cell[CellGroupData[{
Cell[134678, 3066, 844, 22, 182, "Input"],
Cell[135525, 3090, 114, 1, 87, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[135688, 3097, 149, 2, 40, "Subsubsection"],
Cell[135840, 3101, 1542, 44, 217, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[137419, 3150, 94, 1, 40, "Subsubsection"],
Cell[137516, 3153, 8044, 196, 810, "Input"],
Cell[CellGroupData[{
Cell[145585, 3353, 2905, 53, 167, "Input"],
Cell[148493, 3408, 409, 8, 35, "Print"]
}, Open  ]],
Cell[148917, 3419, 477, 12, 61, "Input"],
Cell[149397, 3433, 476, 12, 61, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149910, 3450, 104, 1, 61, "Subsubsection"],
Cell[150017, 3453, 214, 5, 78, "Text"],
Cell[CellGroupData[{
Cell[150256, 3462, 1804, 39, 278, "Input"],
Cell[152063, 3503, 443696, 7302, 391, 425203, 6998, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595796, 10810, 537, 12, 135, "Input"],
Cell[596336, 10824, 197, 3, 46, "Output"]
}, Open  ]],
Cell[596548, 10830, 379, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[596952, 10839, 167, 4, 46, "Input"],
Cell[597122, 10845, 185, 5, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597344, 10855, 3647, 91, 576, "Input"],
Cell[600994, 10948, 235702, 3987, 393, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[836733, 14940, 587, 14, 207, "Input"],
Cell[837323, 14956, 231, 3, 46, "Output"]
}, Open  ]],
Cell[837569, 14962, 304, 6, 78, "Text"],
Cell[837876, 14970, 9242, 230, 1135, "Input"],
Cell[CellGroupData[{
Cell[847143, 15204, 2852, 59, 315, "Input"],
Cell[849998, 15265, 54080, 960, 383, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904115, 16230, 480, 12, 135, "Input"],
Cell[904598, 16244, 261, 3, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904896, 16252, 224, 5, 46, "Input"],
Cell[905123, 16259, 2530, 53, 373, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[907690, 16317, 135, 2, 46, "Input"],
Cell[907828, 16321, 1772, 41, 381, "Output"]
}, Open  ]],
Cell[909615, 16365, 182, 2, 47, "Text"],
Cell[909800, 16369, 1879, 50, 183, "Input"],
Cell[CellGroupData[{
Cell[911704, 16423, 1850, 42, 227, "Input"],
Cell[913557, 16467, 29085, 565, 420, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[942679, 17037, 557, 13, 207, "Input"],
Cell[943239, 17052, 238, 3, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[943514, 17060, 328, 8, 46, "Input"],
Cell[943845, 17070, 246, 6, 46, "Output"]
}, Open  ]],
Cell[944106, 17079, 285, 6, 78, "Text"],
Cell[944394, 17087, 9191, 231, 1135, "Input"],
Cell[953588, 17320, 1609, 34, 137, "Input"],
Cell[CellGroupData[{
Cell[955222, 17358, 397, 11, 46, "Input"],
Cell[955622, 17371, 16923, 453, 46, "Output"]
}, Open  ]],
Cell[972560, 17827, 128, 1, 47, "Text"],
Cell[972691, 17830, 1291, 38, 197, "Input"],
Cell[CellGroupData[{
Cell[974007, 17872, 2247, 57, 483, "Input"],
Cell[976257, 17931, 41422, 802, 517, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017716, 18738, 506, 12, 135, "Input"],
Cell[1018225, 18752, 166, 2, 46, "Output"]
}, Open  ]],
Cell[1018406, 18757, 95, 1, 47, "Text"],
Cell[CellGroupData[{
Cell[1018526, 18762, 3492, 83, 568, "Input"],
Cell[1022021, 18847, 4761, 92, 638, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1026819, 18944, 136, 4, 61, "Input"],
Cell[1026958, 18950, 216, 5, 46, "Output"]
}, Open  ]],
Cell[1027189, 18958, 250, 7, 80, "Input"],
Cell[1027442, 18967, 2678, 67, 466, "Input"],
Cell[1030123, 19036, 3388, 82, 598, "Input"],
Cell[CellGroupData[{
Cell[1033536, 19122, 853, 18, 135, "Input"],
Cell[1034392, 19142, 409, 5, 46, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1034862, 19154, 184, 2, 107, "Section"],
Cell[CellGroupData[{
Cell[1035071, 19160, 112, 1, 118, "Subsubsection"],
Cell[1035186, 19163, 219, 4, 90, "Text"],
Cell[1035408, 19169, 182, 3, 88, "Input"],
Cell[1035593, 19174, 5077, 132, 1688, "Input"],
Cell[CellGroupData[{
Cell[1040695, 19310, 133, 2, 88, "Input"],
Cell[1040831, 19314, 21799, 572, 908, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1062667, 19891, 1096, 30, 487, "Input"],
Cell[1063766, 19923, 657, 18, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1064460, 19946, 574, 16, 237, "Input"],
Cell[1065037, 19964, 633, 18, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065707, 19987, 228, 5, 88, "Input"],
Cell[1065938, 19994, 2934, 87, 481, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1068909, 20086, 122, 2, 88, "Input"],
Cell[1069034, 20090, 99, 2, 88, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1069182, 20098, 115, 1, 118, "Subsubsection"],
Cell[1069300, 20101, 218, 4, 90, "Text"],
Cell[1069521, 20107, 191, 5, 88, "Input"],
Cell[1069715, 20114, 128, 1, 90, "Text"],
Cell[1069846, 20117, 793, 19, 150, "Input"],
Cell[1070642, 20138, 885, 29, 246, "Input"],
Cell[1071530, 20169, 528, 15, 88, "Input"],
Cell[1072061, 20186, 572, 19, 156, "Input"],
Cell[CellGroupData[{
Cell[1072658, 20209, 1862, 57, 493, "Input"],
Cell[1074523, 20268, 1136, 40, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1075696, 20313, 2569, 76, 627, "Input"],
Cell[1078268, 20391, 11314, 197, 688, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1089619, 20593, 4694, 115, 858, "Input"],
Cell[1094316, 20710, 332771, 5548, 783, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1427124, 26263, 219, 5, 88, "Input"],
Cell[1427346, 26270, 108, 1, 88, "Output"]
}, Open  ]],
Cell[1427469, 26274, 1779, 46, 625, "Input"],
Cell[CellGroupData[{
Cell[1429273, 26324, 2255, 52, 625, "Input"],
Cell[1431531, 26378, 96934, 1900, 791, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1528502, 28283, 2165, 56, 657, "Input"],
Cell[1530670, 28341, 96464, 1893, 791, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1627171, 30239, 1938, 52, 625, "Input"],
Cell[1629112, 30293, 11747, 209, 652, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1640896, 30507, 1694, 43, 507, "Input"],
Cell[1642593, 30552, 7398, 138, 733, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1650028, 30695, 784, 17, 150, "Input"],
Cell[1650815, 30714, 6679, 212, 1172, "Output"]
}, Open  ]],
Cell[1657509, 30929, 124, 2, 88, "Input"],
Cell[1657636, 30933, 239, 4, 213, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1657924, 30943, 92, 1, 85, "Section"],
Cell[1658019, 30946, 214, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[1658258, 30954, 106, 1, 61, "Subsubsection"],
Cell[1658367, 30957, 5388, 145, 522, "Input"],
Cell[CellGroupData[{
Cell[1663780, 31106, 1382, 37, 137, "Input"],
Cell[1665165, 31145, 2681, 48, 590, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1667895, 31199, 151, 2, 61, "Subsubsection"],
Cell[1668049, 31203, 5309, 163, 546, "Input"],
Cell[CellGroupData[{
Cell[1673383, 31370, 569, 16, 46, "Input"],
Cell[1673955, 31388, 490, 9, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1674482, 31402, 1110, 29, 120, "Input"],
Cell[1675595, 31433, 4652, 115, 598, "Output"]
}, Open  ]],
Cell[1680262, 31551, 1375, 45, 147, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

